cset: moving following pidspec: 18043
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.151822824 seconds)
loading group "string"... done (took 0.571347933 seconds)
loading group "linalg"... done (took 8.655567398 seconds)
loading group "parallel"... done (took 0.164080208 seconds)
loading group "find"... done (took 2.442105351 seconds)
loading group "tuple"... done (took 2.085638439 seconds)
loading group "dates"... done (took 1.378687505 seconds)
loading group "micro"... done (took 0.626653043 seconds)
loading group "io"... done (took 0.688550822 seconds)
loading group "scalar"... done (took 45.759584743 seconds)
loading group "sparse"... done (took 12.877626865 seconds)
loading group "broadcast"... done (took 1.218784976 seconds)
loading group "union"... done (took 8.87846542 seconds)
loading group "simd"... done (took 2.999957197 seconds)
loading group "random"... done (took 11.372626535 seconds)
loading group "problem"... done (took 2.164167279 seconds)
loading group "array"... done (took 23.358814918 seconds)
loading group "misc"... done (took 1.489785094 seconds)
loading group "sort"... done (took 3.717955183 seconds)
loading group "collection"... done (took 17.929190957 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.891773914 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.173351049 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238308171 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.555105517 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.303250553 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.201693905 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.183672616 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.195012359 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.664153593 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.225433954 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.172434463 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412178296 seconds)
done (took 6.99475186 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.346831142 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.091954402 seconds)
    (2/2) benchmarking "String"...
    done (took 0.230722555 seconds)
  done (took 0.969316157 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.098861757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.139142502 seconds)
  done (took 0.875713962 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.132456689 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.199762959 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.145654989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.130528385 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147559872 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.145419489 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.130558239 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.145113091 seconds)
  done (took 1.680788048 seconds)
done (took 4.64261048 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.518036698 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.967792723 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.573869956 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.21415544 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.337841264 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.40061723 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.324075148 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.262691034 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12797238 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.095999269 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.232668824 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.497194704 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.459067896 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.997647606 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097239136 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.151805068 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.19558865 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.855204297 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.118167857 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155317405 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.524777781 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.249764627 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.154878448 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.148659383 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.223365022 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.163546992 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167719631 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.141685401 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.796871745 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.172363177 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.236524939 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.122524047 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.170230232 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199992691 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.273449673 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148359947 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.787099267 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.241028392 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.123953402 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.139860684 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.775672854 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.161712366 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246667189 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.1445533 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11185383 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183916742 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.14623018 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.119026966 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.151224439 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142386066 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210588653 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.530961016 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.144961131 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.233376207 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.148115827 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.777812643 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.136172601 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.325323342 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.168636762 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.149040146 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.129519094 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.12849455 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.214432707 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.139210726 seconds)
  done (took 23.054898105 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.245455069 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.246825723 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.116812775 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.200740552 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.182591372 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.120818229 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.127111253 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.135040061 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.168596075 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.222121434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.180559362 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.252248606 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.138570623 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.129952311 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.221265294 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.291437512 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.147398181 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.161938108 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.1277974 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.151305538 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.16506681 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.151413214 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.149625638 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.135426033 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.210905044 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.247727717 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.164207214 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.162686975 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.129600026 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.152921227 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.180303478 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.186997108 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.133269118 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.127583958 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.231294987 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.159426677 seconds)
  done (took 6.929566907 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.272344058 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142007598 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.302895532 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.251966006 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.228611665 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.166213466 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.23197015 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.215574868 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.328711086 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.37927102 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22112187 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.166911505 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.136361894 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135561693 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.121481606 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.118766117 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.886729256 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.215539664 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200798781 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.2251266 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149805192 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.121591966 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.770560498 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128611572 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.140794417 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133214039 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.10909005 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.260535491 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132380366 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.512228165 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.141411842 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137105156 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171646756 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.248957427 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.162133875 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.177511255 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132814893 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.140548283 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.248518088 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.12399166 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156448114 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.117116226 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.136280569 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169892841 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.155513123 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.14911991 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160198211 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171792454 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.12580988 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.140666629 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148927698 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.164594003 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.235680122 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.217742214 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.126495853 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.316108706 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.163579214 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.138277153 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.149043409 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.884989086 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162292159 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.137448013 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.118445765 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150546923 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.135863006 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.855873927 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158068309 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.653142901 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.127263328 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.198154881 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148673288 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.140368132 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.143119273 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126265662 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.162977825 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.126044971 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137576614 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.125680847 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.137416187 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.12751874 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.16062087 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125399207 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.137037364 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187263112 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.139609364 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.134643005 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.163225084 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.163956192 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.132162949 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.141248237 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153933276 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.137674317 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.126312188 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.258885069 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137278861 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.160256364 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151948725 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.16986328 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.142213493 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.362016349 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.127363075 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.178916318 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.13998439 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154366597 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.151985928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.120567995 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.142901056 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.118782252 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13924937 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.188660713 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.140839003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120855019 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.145335758 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.133488873 seconds)
  done (took 33.239645475 seconds)
done (took 63.864565301 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.426098651 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108537725 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.1281912 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108589772 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108938215 seconds)
  done (took 1.600951233 seconds)
done (took 2.305366962 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.232204594 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.329294248 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.240455621 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.144276613 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209615435 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205938992 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.194627653 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205243495 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212342357 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.211505756 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.139616096 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.228721124 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.218169051 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.192220368 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.139446587 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.242289647 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.187404025 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210470229 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.239177609 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145321494 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138680357 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.161107371 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.14355325 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146171759 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142275615 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160362184 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147422157 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160908409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136242063 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145151397 seconds)
  done (took 2.339798696 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.167716498 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144811043 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137961159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.151644936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.140694796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.145967749 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.139979702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158213033 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146793326 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159396838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136693204 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.14570292 seconds)
  done (took 2.323534416 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.118964967 seconds)
done (took 9.66561932 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.2309276 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.96041176 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.19635216 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.306843265 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.374016061 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.314925024 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.666211493 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.247697759 seconds)
  done (took 16.123579679 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.159801519 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.243717125 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.156331762 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.138244126 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.155211481 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.133484097 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.148664755 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.140424444 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.13341539 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.153794405 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.13481496 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.149836492 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.133383577 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.149462545 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.139056598 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.149195397 seconds)
  done (took 3.193906936 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.17869996 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.176408403 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.139502336 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.15939135 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.138330894 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.160087989 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.144600031 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.15827607 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.136935583 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156400133 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.145043746 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.157718283 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139927955 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.153553728 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.14142032 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.17694805 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.136808645 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.157154902 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.158379506 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.158765813 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.141339561 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.156011701 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.138896251 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.157467004 seconds)
  done (took 4.453024686 seconds)
done (took 24.486713615 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195304759 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144974479 seconds)
  done (took 1.06483175 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.20765531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.225197497 seconds)
  done (took 1.164177464 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.155657922 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.14990845 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.16547624 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.16290024 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.134040511 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151090582 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157787738 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.151407524 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134318855 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.151715821 seconds)
  done (took 2.250313279 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.13816785 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.136972782 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.165355967 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.219149684 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.15976832 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.137024098 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.15557322 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137480632 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.155689776 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.134211773 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.154894048 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.154715032 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.155780519 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.153215582 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.15468684 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.139064537 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.159985704 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.137561931 seconds)
  done (took 3.483564444 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.135777419 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.135347635 seconds)
  done (took 1.00888165 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.137920874 seconds)
    (2/7) benchmarking "second"...
    done (took 0.133867455 seconds)
    (3/7) benchmarking "month"...
    done (took 0.154453186 seconds)
    (4/7) benchmarking "year"...
    done (took 0.13617882 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.151103486 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.133221864 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.150307859 seconds)
  done (took 1.736270233 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.5542809 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27114458 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.405036674 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108544851 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.158998969 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.380905688 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156934574 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105879354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108457927 seconds)
  done (took 3.018087295 seconds)
done (took 14.456579892 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.135593166 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.325995678 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.650152107 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.173545695 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.13368845 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.211921228 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.39140574 seconds)
done (took 2.77198162 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377113047 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.210483354 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.12122745 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.137681266 seconds)
  done (took 1.586985221 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.125612369 seconds)
    (2/2) benchmarking "read"...
    done (took 0.141901139 seconds)
  done (took 1.019014367 seconds)
done (took 3.354050346 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.154297035 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.151405142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.138223719 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.15355557 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139417678 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.154521998 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.13722243 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.151547302 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.138596537 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.151121315 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137377711 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.155634698 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.135079696 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.277343576 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135596205 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.153995899 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.137829932 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151663997 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135479297 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.153529648 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.137140575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151927131 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.137470866 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158333437 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.13917578 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153819476 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.135729609 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.152596345 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138103641 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.154320005 seconds)
  done (took 5.246826107 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.141259044 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.128901519 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.153099812 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.140295748 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.148245361 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.133671872 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.148413855 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133827968 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.152891158 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.133626964 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.153946655 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.134211822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.150573929 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.135331447 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.133781177 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.154907574 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.140264122 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.153050533 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.133833193 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.153529335 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.137278396 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.15186866 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.133940301 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.151867146 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.133805568 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.149436499 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135327866 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.152217657 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.135669074 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.132731755 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.156757765 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.135920733 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.154220584 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.142902626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.156952594 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.133709564 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.157640666 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.130951015 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.1536907 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.131300459 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.148734584 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.134238347 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.151303984 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.140553953 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.15146978 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.136251556 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.150755116 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.137322611 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.133446195 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.155363474 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.131206756 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.152639762 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.137231367 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.153646613 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.138157144 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.149033403 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.136118649 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149449525 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.136631438 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.151127358 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.132111913 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.131068695 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.158021264 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.133761274 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.168989234 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.139671495 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.154836797 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.135461628 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.154940323 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.139500426 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.156250434 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.143809444 seconds)
  done (took 11.104658521 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136106845 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133921605 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154725872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.134318238 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153463198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.135265955 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.153126682 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134847811 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153230424 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134948459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153388531 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13498856 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133118548 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.154544015 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133799236 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.15409198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135405288 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153772771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.135255539 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.153993103 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136370738 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.152590431 seconds)
  done (took 3.919546206 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.282239537 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.141765993 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.204061414 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.148448188 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172390559 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.166021269 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.141129759 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.159523672 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140373511 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16358305 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.144878566 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158742358 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154407829 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163262649 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.143382009 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.164878451 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.158714112 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.147700237 seconds)
  done (took 3.718398654 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136549992 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.13358436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155132255 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135576112 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.154374363 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.135619662 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153542692 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.136058209 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.153453189 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.136559976 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.15396839 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137452573 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.135089864 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153977441 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136338225 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.154810969 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.136514666 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154730187 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135567173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154531898 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.13591267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153680409 seconds)
  done (took 3.942527206 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151049132 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.156767829 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156380269 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159996397 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13735815 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157249628 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144309735 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.156260577 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.145140541 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.156474582 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140033091 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.136436864 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.173485698 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.137945236 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.164001892 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.137260538 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156670773 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.13781413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157417178 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.136559127 seconds)
  done (took 3.76682397 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.229973245 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175561982 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172290377 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.162563026 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.173798528 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.154802967 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182346509 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.154075953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172271003 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.163813919 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.174100429 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.172013777 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162418855 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.17703426 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.154329143 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182061292 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160431684 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180258029 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.173394029 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.154800923 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.18306278 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1538689 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180664976 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.153870312 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.17465157 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.154454902 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173434632 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.159024874 seconds)
  done (took 5.541882542 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151469628 seconds)
    (2/2) benchmarking "in"...
    done (took 0.164998438 seconds)
  done (took 1.095026132 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.140706102 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138952822 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.159111203 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.137538386 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.158618048 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138511501 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.157937168 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139342042 seconds)
  done (took 1.946228131 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.2478983 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.25400971 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.143084896 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.168600827 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.252725253 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.232380237 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173973801 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.16323219 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.13967488 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.151984517 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.246970451 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.128816213 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.158093057 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.134604606 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.157788244 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142579432 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.158472204 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.147539153 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.163733197 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.140123021 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.171271974 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142225491 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16041036 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.148013132 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.152988989 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.139985751 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.160883541 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.149539004 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.15417067 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.139226012 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.156792473 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.139695214 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.161589181 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.142897373 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.158988514 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.255955954 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.143961157 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.155923884 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.139087783 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16427521 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169295985 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.159451368 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.138641958 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.157037086 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141043811 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.16287758 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.143335632 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.159415632 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.130241981 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.152500419 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.139831187 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.153076768 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.138307267 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.158165327 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.13814038 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.163523558 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.140231423 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.155026746 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.135785611 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.1531255 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.137657706 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.153987258 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.140251532 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.162259227 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.139860716 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.158294831 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138286538 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.158874978 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.139973817 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.158876348 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.138664568 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.172349986 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.139992438 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.162618382 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.14409973 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.15933281 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135753272 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.16311807 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140409343 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.157615829 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.144057204 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.184708537 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.140785331 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.153517616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136269478 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.164370332 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.141757313 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.14162849 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.151951876 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.166240129 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.14240738 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.139106468 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.152590431 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.13613459 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.155264994 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.141365436 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.152240295 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137925 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.15834305 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.143539787 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165447793 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.13766625 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.160175271 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.144496288 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.166147072 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.137497136 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211298396 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.157906444 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.136357024 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.16066993 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.146214279 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.133204093 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.159041397 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.138180853 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.155957981 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.134780471 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.164895514 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.13950115 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.161676918 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.143671168 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.162268912 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.141495279 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.172697309 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.138592163 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.157404171 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.144339711 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168319826 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.141056104 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.164167227 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.141971838 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.161410801 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.13994413 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.165391089 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.136855457 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165066097 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.136987444 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.159934507 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.142242137 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.165049643 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.140357194 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.15724491 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.139336431 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.160294056 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.140020436 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.163780499 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.142389262 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.156630603 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.134051179 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.160726684 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.136502824 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163069237 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148483649 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.156680478 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.143745487 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.155994025 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.149336051 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.156203788 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.146381048 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141749893 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.167525643 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.144271502 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.153548546 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136862473 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.164026957 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.140757083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.158088624 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.141547239 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.161169988 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.146993506 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.155129349 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.143993378 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.155058126 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.137314505 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.167336962 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.141925358 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.164716823 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.137057025 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.197691564 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152258246 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167102266 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.140421584 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.160347124 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.14491039 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.160829738 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.144779155 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.167634877 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.147361509 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.159169687 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.139474735 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.166970003 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.136416244 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.163055425 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.140032578 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161764225 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.133908373 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.16261329 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.134646505 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.144585041 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.164152588 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.145165089 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.167689718 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142509923 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161411383 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.149792894 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.158218803 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.143916105 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.154971708 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.144883529 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.174160592 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.147374525 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.168001949 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.141604303 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.159716479 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.143022766 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.170649811 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142844025 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.162078914 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.142749734 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.155850046 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.135769848 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.167594329 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.14509808 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.158040361 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.141101769 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162191768 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143765729 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.159844691 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.135975707 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.166125033 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144158174 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.157285521 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141921804 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.157855099 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.141514451 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.168384141 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.134382634 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.158085054 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.14451954 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.16701917 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.141317385 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.161315079 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.144850048 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.146077515 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.16698893 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.143439713 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160685223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150300787 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.160953972 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.140562629 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.15902938 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.143339229 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.15633312 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.142753436 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.162533929 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.138487853 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.157930015 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144685988 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.167898403 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.146022614 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.160374514 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.145491192 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.167843353 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.146884201 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.159253207 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.146878554 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.157972016 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.134982007 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.15921987 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.134546701 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.164006833 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.138818457 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.166987151 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.140931555 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160138639 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.146656212 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.164018828 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141160058 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.167643053 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.152909532 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.156530829 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.135233915 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160107704 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14185681 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.157936682 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.140771156 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.163019995 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.143741823 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.145682797 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.165595207 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.137325493 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.163893932 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.150293675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.160180239 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.147229876 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.170277502 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.148353513 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.160556965 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.145972482 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.160518093 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144961188 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.157633209 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.140886144 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.161747813 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141027971 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.160018008 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.140047091 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.160439581 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.135224178 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.15891205 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.148362302 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.162119596 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.146969682 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.161708701 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.140788025 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.161137821 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138726599 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.169069463 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.14187478 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.169246785 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.144092351 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.156193079 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.136192293 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.167760977 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143091101 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.168265046 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.138288449 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.14540778 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.170538153 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.145705175 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.163862063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.151116707 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.172414912 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.147378466 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.16878727 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.135612477 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.161608945 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147511918 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.165465009 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.145086178 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.166633748 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.136187687 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.16653113 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.148926836 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.1661383 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.141220434 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.157801639 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.144262284 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.168879803 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.146590821 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.167090957 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.145060952 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.16463302 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.139164428 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.166585139 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.149692349 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.163391646 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149749955 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163416547 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.147030285 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.139582205 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.169998069 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.143362426 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.159760707 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.136989247 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.16243885 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.149473003 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.159108028 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.14786669 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.169724967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.140704518 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.162651236 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.148218017 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.160058212 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.14509053 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.168115828 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.140793929 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.172996724 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.145457034 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.162584161 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.148429736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.169081772 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.137880923 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.163140967 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143596852 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170115927 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.143280191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.169599838 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143761619 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.168450296 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.148264642 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.146905539 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.17091438 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.148304117 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.159502335 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.150229095 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.168332455 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.144995539 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.162061435 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14157649 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.159701117 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.142714286 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.171869768 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.140498323 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173350164 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.148134763 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.163051203 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.141991731 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.17011424 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.142654792 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.170767371 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.140519641 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.16601142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.138537054 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.167504756 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.143193 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.17148419 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.140757707 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.159707927 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.150215488 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.170746727 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.148636365 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.166892163 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.151292709 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.158629167 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.139031433 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.167607086 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.14299878 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.173476959 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147760762 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.162560232 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143542919 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.145383857 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.168449241 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.14934218 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.160948618 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.139957438 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.166203436 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.145134137 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.164344224 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.138383583 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.170249187 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.142127914 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167351512 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.143122737 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.161504699 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.142694751 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.172455528 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.142266704 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.162580623 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.14072829 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172018116 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.14441203 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.161648125 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.13910115 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171179332 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.146579171 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173241828 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.141836688 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.165943474 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.141830061 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.167420259 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.151111767 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.164510724 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145353917 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.16328127 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150972475 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.171200317 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.13827386 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.163405423 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.155566953 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.170627982 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.14666173 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.16888511 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.144171039 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.172463527 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152412292 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.168081618 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.14043562 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.138133166 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.1663314 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.137738687 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.16877211 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.149007927 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.165384042 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.141751063 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170567606 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.14896748 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.168983272 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.147582484 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.160276963 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152135863 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.162943949 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.147769028 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.16072247 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.139183643 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.169956413 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151935189 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166028638 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.145639237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.168659655 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.148514364 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.160895 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.145181366 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.169488978 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150171978 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.149481926 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.166792595 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.143372699 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.170607291 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15447771 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.168659858 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.143774372 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174285725 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.151557607 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168792456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.144538547 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172302699 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.151073574 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.170379548 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.151617802 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.165170655 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.144126435 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.175455594 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.152458068 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175867992 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143396572 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.162895141 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.149604019 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.165724278 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.139711557 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.170284623 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153474042 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.174551534 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.146453659 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.164312742 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154367458 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.171531322 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146590184 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.165182694 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.14386902 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.171501662 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143171207 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.170165519 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143211655 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.174604779 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.152342203 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172967667 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.154016176 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.161163526 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.15204598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.169455692 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.154852408 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.167930232 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.14149878 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.161190035 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.149212465 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.151915731 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.174901807 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.149733842 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.171393686 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.150498772 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.167821934 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145574918 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.167323624 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.153230505 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.17303151 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.148008095 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.16911609 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.145234048 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168157871 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.147848041 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.173985909 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153194509 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.168725601 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156474332 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.174609192 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.145344786 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.165098638 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147085932 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.170374282 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.147680376 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172045292 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.145633407 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.162648673 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153636911 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.152946367 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.168226556 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15294666 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.176618385 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.14443435 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.170611489 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.153362185 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.172398342 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.148440701 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.170530755 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.150297469 seconds)
  done (took 93.098658071 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196435757 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177574149 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.150727496 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172496605 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166192295 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173823099 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149924658 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.171858714 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.151319414 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181121752 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.150352267 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170626151 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.163927829 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192230258 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188724346 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159981397 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169862725 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151182955 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.148841636 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.172301092 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185313984 seconds)
  done (took 4.420690538 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.149769227 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.149321141 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.171991864 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.150088337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.171786797 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.149423325 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.169787763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149474616 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.171287147 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149785452 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.17109659 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150905823 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.148612859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.171231898 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148662526 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.170895222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.14946494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.171314586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149372081 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.171609596 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.149979839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.170022298 seconds)
  done (took 4.378193106 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.178014164 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.152232382 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170610929 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.149723554 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175200992 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149796876 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.1758527 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.1506511 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.181947827 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.146378406 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.162299767 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145828822 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.170576642 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.151962809 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.167063838 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.150350395 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.17938889 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.153045775 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.175790754 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150242439 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140772317 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.173986125 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.150079939 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.165257375 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.154623057 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.178530402 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.152932994 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.175332566 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.141902835 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.176052698 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.150181562 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.165916407 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.143251968 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.140454258 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.164584269 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.152960915 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.176843666 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.150259447 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.173924549 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.141969756 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.173332214 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.153596812 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.164911629 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.151657823 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.171938747 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144641102 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.176570807 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151312579 seconds)
  done (took 8.571361172 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.179424726 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.210047262 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.153689826 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.20454099 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.187834212 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.161934735 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177805618 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.17969556 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.176317042 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154005753 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190945044 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.164473238 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.180561634 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158002819 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.179124784 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.154296079 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.178740036 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.154009662 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.182378634 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.153454707 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.182519239 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.155055373 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.187808832 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.187931058 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.157081796 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.176551334 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.153957169 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.179991545 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.163770317 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.182634275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.159132361 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181481042 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.164524237 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.179633882 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.153983329 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.181063297 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.164391917 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.179398575 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15648806 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.175610762 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.155649642 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.181058297 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.156676924 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.188744594 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.178347022 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.156657547 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.17663317 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153633715 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.18660178 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.155509306 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.183349266 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.16644993 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.180364785 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.155636618 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.182144995 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.163671964 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.17842489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.154631943 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.179848239 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.162657803 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.177426272 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.158561753 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.188372627 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.178543348 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.160710896 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187443704 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.157788364 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179599008 seconds)
  done (took 12.659341881 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186368787 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.181576368 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16635716 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190265217 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158923864 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182352062 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.159313991 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.441028795 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.160352852 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.187822441 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158493553 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.313271764 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162112006 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.186720655 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159145507 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.182474155 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159834447 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182969763 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.160457433 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182494212 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.159341705 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190197809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.160699568 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189861746 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191823976 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157256335 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182629741 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159856042 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.19055199 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159806187 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.192732059 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.15971872 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.183355134 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.165679407 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.194834742 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.182303435 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.155398893 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182795114 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.159696815 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.18212887 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157261692 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190325538 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159903898 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.179333784 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.159576157 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.181995105 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.168701318 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.192751723 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.164321953 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.187947614 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.182799159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167796545 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182118693 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.159686498 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.190702929 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.174310566 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190987108 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189944621 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.160799862 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.190892921 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168191903 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.197410232 seconds)
  done (took 12.158303274 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.155981401 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.155598719 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.178458644 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154307263 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.177556369 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.154063986 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.179314082 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.154705222 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178841642 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155836142 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.17784263 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15515544 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177119198 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.156397033 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.154672075 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.17858084 seconds)
  done (took 3.54906193 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.17282991 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.194411696 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.258065927 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.157999141 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.178894793 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.162630981 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.17940686 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.15772985 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.153513916 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.18497519 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158395287 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.180996675 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.195263581 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.157694146 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.155056767 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.181260396 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.154137977 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.183700212 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.155206865 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.260906845 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.183685016 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.156801354 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.18128225 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.159867861 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.181959055 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.158842461 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.18833175 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.155023708 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.181725325 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.155646117 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.182920428 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162123248 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.178467469 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159507667 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.180660419 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.157492732 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.18088523 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.15747059 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.182719158 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155482903 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.180934253 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.156877855 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.179439089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.158581528 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.178654128 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157572079 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.176814952 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.161346915 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.181028769 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.157924332 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.179157415 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.162133844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.182783963 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.165821725 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.185283501 seconds)
  done (took 10.456879576 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.167453306 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.180497252 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.167900957 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.177723867 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.15915396 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.157636345 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.18328529 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157943257 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.182095368 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154522244 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.182401413 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.158423041 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.183081299 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157005392 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.181849724 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156936049 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.178783077 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157518933 seconds)
  done (took 3.956316505 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.15497232 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154363671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.178371309 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153988281 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.178642037 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.155191395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.178542293 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155168795 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.177844715 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15473385 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176484802 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.155994111 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153957647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.17884027 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.153693948 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.178733143 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154757159 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.179760794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.154751879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.178594511 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155462045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.178434084 seconds)
  done (took 4.561779457 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.167214164 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.284474545 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.18728832 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.293063174 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.153579129 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.177312572 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162771415 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.17910037 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.191936431 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.153223553 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.174829916 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.154345665 seconds)
  done (took 3.196313523 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184837178 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215586011 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158378345 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180912377 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166077799 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185975871 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161354074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185298404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168937236 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19649469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160820196 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193443872 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193720125 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17040233 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191078672 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165745094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185298452 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161731732 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181256689 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175828284 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185708355 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192878238 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1619822 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183728051 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162988576 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19308542 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168594423 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196358884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161320724 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193169541 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190610918 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162527863 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194001695 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172412066 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182071515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17002957 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186854369 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176846268 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190760306 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193278563 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159699578 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189900635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170240216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191048952 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170752225 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187278631 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167248956 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185448044 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161864281 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205416074 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190605511 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171230715 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191199342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169941029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194184002 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205571624 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173612917 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193704419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166944492 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197701627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195866562 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16745751 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195383475 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172054936 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192329859 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193570802 seconds)
  done (took 12.890722417 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197566177 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.183747337 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163625549 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198676318 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170139741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187592996 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161670352 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187785169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162430378 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183443649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.228962744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163517523 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195176293 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170572104 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188196581 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1634832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.18817329 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171060801 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185393564 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.207552661 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16411503 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195297243 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170782376 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194859456 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196659176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169491879 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187936546 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165148637 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18816287 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164107679 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191438191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164036366 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195676551 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1594063 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195408133 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162659044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187327622 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167312787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188666865 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190609339 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173158367 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201195539 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163755025 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187545618 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174307742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189091509 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162836332 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185539193 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163541619 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184915262 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198660498 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17653533 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199370521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171117158 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188217882 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163393108 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187890923 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163768424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188379486 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166906698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195862055 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187676391 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184316433 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187959871 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164141286 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195785184 seconds)
  done (took 12.896936757 seconds)
done (took 227.828300411 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.320972637 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.350092808 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149055722 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.372937546 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.148560398 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.867165246 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.750251358 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.231020919 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.17584626 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.149485305 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.174466483 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.168013502 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.550847465 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.148632645 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.173113507 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.165083871 seconds)
  done (took 31.82979134 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.354355358 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.399149028 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.165346365 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.181227384 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.154806189 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.180605763 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.152991268 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.181926969 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154662614 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.184876697 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.154475448 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.175340172 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.160250776 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.175185432 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.154030505 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.180564599 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.160098628 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.179173688 seconds)
  done (took 4.40231927 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.176335821 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.228035909 seconds)
  done (took 1.358777789 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.185760374 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.272237893 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.376137665 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.227182736 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.176693115 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.196569159 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.204681126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.193027507 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.268808885 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.166495024 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.193664882 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.152143205 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.205960004 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.183938397 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.172291865 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.176150387 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.184657512 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.193854233 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169434248 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.181228687 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.180332992 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.180036609 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.161493997 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.195274533 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.261918024 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.168383497 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.182984306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.157178374 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.181488341 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.169793815 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.187884068 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.170987171 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.191377796 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.237477603 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.158196554 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.232997426 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.185896021 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.156198819 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.19373125 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.156088415 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.184364516 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.158918832 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.190892944 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.153845704 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.178623223 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.159371069 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.179054065 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.15642569 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.189354957 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.158295153 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.189024831 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.186207037 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.207688045 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.183792042 seconds)
  done (took 11.214785407 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.971265919 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.202769566 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182580648 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.127985796 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.203834212 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171899177 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.988976257 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181394714 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311858614 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.065359506 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169776886 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.192740256 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299029984 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.339249623 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.371518404 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418475939 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.822493887 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194435194 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188179282 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.226403797 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161563433 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198666115 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195679067 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.488501432 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.181492902 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.154839907 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.188772636 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.188132952 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.211697662 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.182761623 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.160242446 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.28220409 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.331408223 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.294838232 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.158071598 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180186717 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.15563972 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.246253241 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327561159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.302706803 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.227287046 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.178939953 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.156353115 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.18722612 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.171485702 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.179448983 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.240799138 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.251555514 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.254200176 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160306904 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.190899203 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.163359538 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.185108368 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.240027278 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.155498611 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.44646427 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.421802539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181174672 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162304902 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.195427897 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327869631 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.182884461 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298549471 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202974551 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.274922451 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.157654351 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.905887304 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.246692945 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.181409753 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.16136761 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.187022814 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.186424386 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161983527 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.242960776 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.492450735 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164363058 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.186395399 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.156694399 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290754343 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182328399 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.157185076 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.240224043 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.182642141 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.163992272 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.191236372 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163719726 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.250849158 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.335580018 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.189356252 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164158114 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.189205026 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.167584096 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.183798573 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.295645229 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.28980465 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.239282372 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.292068687 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.187457083 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.244117932 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.221401215 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188695743 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252505484 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.186554041 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.170918417 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186045592 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.29020206 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.219516035 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159480497 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.188473818 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.163550759 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.221871709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.185563124 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.184212531 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.251464778 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555027779 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.248102432 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.154067219 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187934566 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163458501 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.240463186 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190959658 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327699746 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189646209 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.2482592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163394252 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.180906644 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.164873368 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.245068116 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191851389 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164102457 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.18747829 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166627069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.339288298 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.308148684 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.167552904 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308137655 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.258883933 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.188423543 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.25472798 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165866157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248472682 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192752337 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162056051 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.183854722 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873182425 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.168628867 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189691921 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187538064 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.241553009 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18374184 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.160613019 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183419068 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.15572171 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862176306 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.188783772 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.155397905 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.186547819 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.162539501 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190611187 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163601328 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.190068 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243197407 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.307508253 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.193723425 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163045991 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.184887772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.243736007 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.159322899 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.184820579 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158811147 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.186743891 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.164930365 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.188834646 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.161259381 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.25099551 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.240039369 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.318284125 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.643402157 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158728326 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184502565 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.305331606 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18438142 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.392824074 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189749162 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.299738154 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.247570124 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15578122 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.44633817 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.24792279 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.240005711 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.188775802 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.254664997 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.155855443 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19012721 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.243045649 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.157841538 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191396121 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.242200056 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167779861 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.19273769 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.324579361 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184551262 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.310397701 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.157600952 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252861585 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.184592264 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165244943 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.392480427 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185272736 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.169942137 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.242002975 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.190982694 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.158735181 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.056496238 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.161614623 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19121443 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165085437 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.319606768 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.220037177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.191933236 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.189391169 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.169891073 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.245870639 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.291646709 seconds)
  done (took 61.278757209 seconds)
done (took 111.027397065 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31736953 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225387095 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.417768155 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233180628 seconds)
  done (took 2.239902392 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.342143896 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.198717267 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.299004894 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184123579 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.306845411 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.155726778 seconds)
  done (took 2.486271295 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.227869275 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226432037 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225283814 seconds)
  done (took 1.684675251 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266772898 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267526955 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.407726845 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320664277 seconds)
  done (took 2.326765752 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.334452024 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.174026568 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.21544854 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.286609836 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.302816104 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.267399707 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.181466117 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.234793458 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214151649 seconds)
  done (took 3.246729518 seconds)
done (took 12.985290513 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.397681181 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.486519071 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.490218157 seconds)
    (4/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.374171502 seconds)
    (5/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.260294637 seconds)
    (6/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.410489504 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.325941961 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.321143273 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.182311133 seconds)
    (10/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.284598263 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.198176927 seconds)
    (12/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.384220499 seconds)
    (13/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.21467462 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.189874412 seconds)
    (15/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.221863253 seconds)
    (16/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.200173591 seconds)
    (17/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.245854721 seconds)
    (18/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.330254409 seconds)
    (19/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.223610411 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.307054615 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.209130506 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.31185112 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.189196407 seconds)
    (24/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.228667667 seconds)
    (25/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.134163723 seconds)
    (26/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155525923 seconds)
    (27/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.416699429 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.135831236 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.212604448 seconds)
    (30/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.191591916 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.273282045 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.19145301 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.361884805 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.461357598 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.212147174 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.162634302 seconds)
    (37/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.201923786 seconds)
    (38/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.263277329 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.211786829 seconds)
    (40/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.227938182 seconds)
    (41/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.30662089 seconds)
    (42/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.130677356 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.197720973 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.224078487 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.267749728 seconds)
    (46/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.309191407 seconds)
    (47/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.332231141 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.189599629 seconds)
    (49/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.142916475 seconds)
    (50/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.133347247 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.198592589 seconds)
    (52/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.186319079 seconds)
    (53/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.253752668 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.161911114 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.193107017 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.186202748 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.219747995 seconds)
    (58/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.191432722 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.192863677 seconds)
    (60/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.131542348 seconds)
    (61/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.194145181 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.159904047 seconds)
    (63/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.200647846 seconds)
    (64/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.187181683 seconds)
    (65/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.196485864 seconds)
    (66/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.203328358 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.230420667 seconds)
    (68/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187276829 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.204466195 seconds)
    (70/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.196647591 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.207992982 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.164660888 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.169244371 seconds)
    (74/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.24358706 seconds)
    (75/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.194462942 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.163358626 seconds)
    (77/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.128559712 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.13640903 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.209212955 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.135403899 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.16576516 seconds)
    (82/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.1640477 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.182818939 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.127683495 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.257246899 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.170448971 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.191180968 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.161827079 seconds)
    (89/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.204751763 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.159852147 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.194501492 seconds)
    (92/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.135731012 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.221384942 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.162087896 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.196687015 seconds)
    (96/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.174445767 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.135319222 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.212685987 seconds)
    (99/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.166263859 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.165466003 seconds)
    (101/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.252323072 seconds)
    (102/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.200100368 seconds)
    (103/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.185010481 seconds)
    (104/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.272511632 seconds)
    (105/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.129140668 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.192291194 seconds)
    (107/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.186144873 seconds)
    (108/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.204998624 seconds)
    (109/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.226112408 seconds)
    (110/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.131751985 seconds)
    (111/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.198676471 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.171522772 seconds)
    (113/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.131220997 seconds)
    (114/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.161612441 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.136856168 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.164004989 seconds)
    (117/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.15691773 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.168106111 seconds)
    (119/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.136511271 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.215736609 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.231223746 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159266296 seconds)
    (123/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.2051573 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.135501425 seconds)
    (125/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129922571 seconds)
    (126/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162712666 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.160739667 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.210504612 seconds)
    (129/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.245707541 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.1598049 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.186309846 seconds)
    (132/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.135278104 seconds)
    (133/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.192174977 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.129917611 seconds)
    (135/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.198159976 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.173290013 seconds)
    (137/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.135127184 seconds)
    (138/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.198293495 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.136647009 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.190091668 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.168619297 seconds)
    (142/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.135836633 seconds)
    (143/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.164005576 seconds)
    (144/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.174882817 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.131717199 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.16340748 seconds)
    (147/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.137189671 seconds)
    (148/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.133578052 seconds)
    (149/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.130974177 seconds)
    (150/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.165940847 seconds)
    (151/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185700548 seconds)
    (152/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.19747047 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.165479238 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.13743591 seconds)
    (155/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.132317837 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.191275033 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.137368436 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.191345995 seconds)
    (159/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.138096768 seconds)
    (160/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.13063526 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.196403578 seconds)
    (162/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.131664783 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.163713933 seconds)
    (164/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.196959023 seconds)
    (165/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.13369606 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.184309696 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.189738868 seconds)
    (168/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.137146871 seconds)
    (169/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159076124 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.141119626 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.133270748 seconds)
    (172/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.196654476 seconds)
    (173/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.131300725 seconds)
    (174/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.131390353 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.187392071 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.16670145 seconds)
    (177/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.129923289 seconds)
    (178/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.198325791 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.163268346 seconds)
    (180/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.200550239 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.185041261 seconds)
    (182/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.129864099 seconds)
    (183/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.16308995 seconds)
    (184/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.16572514 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.191708555 seconds)
    (186/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.133037577 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130498604 seconds)
    (188/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.190120182 seconds)
    (189/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.134854445 seconds)
    (190/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146104059 seconds)
    (191/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.131103564 seconds)
    (192/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.201454909 seconds)
  done (took 38.796910772 seconds)
done (took 39.805061447 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.31379627 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.156398608 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.170959529 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.201025005 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.298740985 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179648553 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.218754989 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.172977704 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.211044151 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.17224767 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.189782395 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.184960654 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.200933463 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.30926205 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.174885725 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.194350747 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.162576727 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.21257116 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.188326719 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.217622517 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.298210123 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16552374 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.211747828 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.163547824 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.297848672 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195473919 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.171700918 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.202188298 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.185126336 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.201925981 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.173112187 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.191269035 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.188593505 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.214760565 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162579845 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.200925932 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163083987 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.136863689 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.201973375 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.173420139 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.21335365 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.172895194 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.2017554 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.16424254 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.202169281 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.172497537 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192620017 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.176119088 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.190889964 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.173361535 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.194276071 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.188780622 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.199619234 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.16176545 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.190075154 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.164860796 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.210797566 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163841091 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.213287455 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163935007 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.191789616 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163635541 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.201822178 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164587727 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.199133469 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.164764848 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.200286024 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.176371413 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.198136146 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167452958 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188868635 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.174535732 seconds)
done (took 14.996009901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.17008191 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.234077842 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.314431983 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.318644669 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191158516 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.210014054 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.205178595 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188646448 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.202141459 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182474105 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.227463049 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.197780068 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.317361922 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.210680174 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.179263535 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.206391146 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.175444861 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.200543598 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.317602774 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.216126384 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.189156284 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.209857813 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.191175459 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.209254691 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168483285 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.228917674 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.170741141 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.205651574 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.168154968 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.205029745 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.189086811 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.19740632 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.170889749 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.214034891 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.185514691 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.208169877 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.179655643 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.205391565 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.168680599 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.198452291 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.201925684 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.186478385 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.195392195 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.183514529 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.204663795 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184632631 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.202896402 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.181365981 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.195619802 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.177906494 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.195173275 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.194942722 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.210225933 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1841546 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.20916144 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.18144116 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.215628236 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.182598324 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.199577214 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182391541 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.196577331 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.169369491 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.197123898 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.190515178 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.20061817 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.181310062 seconds)
  done (took 14.393667013 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189644014 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.227981968 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.179667959 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.208283757 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.174971464 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.191456079 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163483559 seconds)
  done (took 2.420893873 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.166668115 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.332073857 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.32089178 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.321709554 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.312203988 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.362823722 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189979514 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194048529 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.202223638 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.205710825 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.333462987 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.388804381 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.206542375 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.180292788 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.355037122 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165956787 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.328270935 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.195167593 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.18066608 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.324744559 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.21395927 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.196913694 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.2090669 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.165262519 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.35592251 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.168854633 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.373908738 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.215529601 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175819434 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.210498644 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.181256735 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.271989887 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.32732029 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211980669 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173865876 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.321078541 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.316035262 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.211775235 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.374493294 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.20297115 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.313944681 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.208320872 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.184187336 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.208883621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183129525 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.31131503 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.214428313 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.183067386 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.210973042 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.339342222 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.176962153 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.327701227 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.208328926 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.17991814 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.206715287 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.181163171 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.218705942 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.206708883 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.337796265 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.184323146 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.322819365 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.324191135 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.317232907 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.355595313 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191641584 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.330399067 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.306948971 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.210621966 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.175792817 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.213053681 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.328504957 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179042197 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.209394223 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.317138516 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.212968528 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.330277635 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.331168843 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178329989 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.210569772 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.16958195 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.209366699 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167475746 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.31537531 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.212455322 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179416083 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.217484161 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.179254351 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.212331458 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.171901951 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.220437503 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.209261209 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.17938502 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.214655016 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.182901619 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213690184 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.332634089 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.17701218 seconds)
  done (took 24.63746538 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170382019 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.168033101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.202756005 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.168312216 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.199027848 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168122641 seconds)
  done (took 2.195816904 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.205340259 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.211641107 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.190792786 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210718609 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.230488405 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.316536659 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.325152992 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209996274 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.201017138 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.226217722 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.320598301 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.322621856 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.321214204 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.214952469 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.326488041 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184931976 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.328555235 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211400015 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.19151339 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211565923 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181352261 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.21772368 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180766925 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.309649632 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.216031493 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184542462 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.206934665 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.193820402 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.221645291 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.175504442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.216276383 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.212059605 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.177286329 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.205630136 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.327301889 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.176336449 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208553014 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.185657419 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.214249863 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.184158594 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.325640851 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.213230935 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.188732822 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.219973305 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.17679442 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.208587956 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.184616997 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.206601417 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.329242242 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.185053168 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.218541146 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.214419881 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.185588398 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.214191157 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.177347311 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206991212 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.187618789 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.328251476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.217279173 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.174952806 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.214872789 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.184127117 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.209609554 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.18698969 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.213523877 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.184962122 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.20660634 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.183318571 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212607354 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.183490639 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.216365716 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.183576939 seconds)
  done (took 17.028432277 seconds)
done (took 61.747564367 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.693745566 seconds)
  done (took 2.81829403 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.262092463 seconds)
  done (took 2.388955588 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.667326232 seconds)
  done (took 20.825696399 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499656954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.419306952 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.09880712 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243579822 seconds)
  done (took 3.391436374 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.168218939 seconds)
  done (took 2.31053337 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.479652543 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346607873 seconds)
  done (took 1.955317222 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.834108456 seconds)
  done (took 1.976341086 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.96968522 seconds)
  done (took 3.101694689 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363541722 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.285225501 seconds)
  done (took 1.792977884 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.723603511 seconds)
  done (took 1.872940657 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.52016964 seconds)
  done (took 17.670359675 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.320437152 seconds)
  done (took 1.47013564 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.357064933 seconds)
  done (took 1.515289111 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.900026255 seconds)
  done (took 5.055762041 seconds)
done (took 69.287562247 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.184724569 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214235183 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188242503 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.213016346 seconds)
  done (took 1.936261181 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.188624843 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.181677475 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.218213578 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.181178017 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.219709704 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.181515547 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.213347414 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.185896567 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.212456145 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.182703268 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.212940383 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181444332 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.21593498 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.181605541 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.212471227 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.184685944 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.216213303 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.18207305 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.215902386 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.183138602 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.213722594 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.184117845 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.216546467 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.187357514 seconds)
  done (took 5.899197132 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.18116032 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174032019 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.206892511 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.172743171 seconds)
  done (took 1.893066457 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.19380567 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.22392109 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.195404789 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219195112 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.196660581 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224572657 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182459289 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.20989586 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183744978 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.220119026 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.197734647 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.226460624 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.194837748 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.215428915 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.193149353 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.209697274 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.184306939 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.226018871 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.189822115 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.222479584 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.184710224 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.221558783 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.188732071 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223276599 seconds)
  done (took 6.086976325 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.259336805 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.2266273 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.21136279 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.261202251 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242089062 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.183850646 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.239415309 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190482928 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.217429218 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.192369054 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.213165601 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.230537321 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.219089677 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.185557271 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.215138397 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.18942469 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.222927899 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.188406753 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.255968691 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.186292986 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.220357998 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225313011 seconds)
  done (took 5.936583905 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.189187389 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203489464 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.175928963 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.201264298 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.188837779 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.206851727 seconds)
  done (took 2.326272157 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175575531 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168715278 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.200022281 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168837842 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.203327254 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169106153 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198751444 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169730448 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198457787 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170071204 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198187567 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.17056693 seconds)
  done (took 3.353223769 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271971926 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219025418 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350919946 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.468274517 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260257899 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254599808 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.356225023 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254520073 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.275994657 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232102201 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248617425 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259864193 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250244743 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253668503 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239602785 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245163374 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239250845 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306575046 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239828706 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309717291 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251455102 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242703004 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.286779761 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245921607 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204883368 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262033449 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.214720941 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194999405 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264943155 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260923175 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271296136 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217038921 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240658086 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283999229 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328368349 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275014802 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.36094334 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22978807 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23290868 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.286158908 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.326265746 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239314505 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288131711 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21883674 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227469625 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290201262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214396057 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.281778759 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.234293544 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210875389 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2791475 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278762938 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.268324503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203311813 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401265808 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231127003 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.238228255 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242932651 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284568588 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29852838 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277515478 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.188302378 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266994449 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258063669 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312451648 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.241996398 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.26101981 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191229292 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262262566 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305619665 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279732228 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224368382 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288741359 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231524104 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271291344 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230996672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253155233 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306811024 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268176914 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.187238397 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249327993 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200454735 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226003703 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.287395369 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190020798 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314962981 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23000584 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.240834593 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274803746 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248986426 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226955151 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258134399 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261632087 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212369466 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.190038766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209610672 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.256906338 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255499371 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194516575 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25064731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205022761 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.225774908 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248888992 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.189264564 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268092784 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191073861 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258010561 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26859665 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.199771522 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277145837 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246358355 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.228407287 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265690348 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292807998 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228706923 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200723991 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318490922 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269820665 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.233837445 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238865587 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294434825 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.238378207 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201938003 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26528743 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293237366 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24111733 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269351901 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236212052 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232240925 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.196801043 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271116498 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256867652 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.227001764 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226620061 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.262059252 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253904478 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.226257534 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236251395 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247968322 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232840832 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189773373 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235319373 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233666961 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.209660215 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.250567763 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.204670282 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253618581 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265769702 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231986013 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256760036 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234213556 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272034528 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198129983 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.26831486 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245059983 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.18729084 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.27325892 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294870791 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196055712 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279264591 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.259103784 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276031496 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239801856 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228863159 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.282406464 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195448512 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.218854539 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226909622 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268477191 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262323511 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.287333594 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272697178 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.262913643 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.230168281 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247150964 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269511607 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.280932307 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225181274 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.238222647 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269583265 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235551377 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.221463222 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.189965634 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.227321019 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203615053 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231599367 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235475891 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24756581 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263785301 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273979725 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266750121 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205013555 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.29094154 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.225961081 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257255388 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.243650195 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239118177 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.287420983 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287505119 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247132708 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239595859 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26236809 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.188380226 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224424911 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.201912573 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.258673122 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203502991 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236250215 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239915222 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292408873 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236467953 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249411674 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285034369 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264069551 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.298720934 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.190030435 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.260995947 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231669396 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268182142 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.288175031 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202926613 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.259786485 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29341933 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209859227 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291607248 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268920362 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281793515 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291436849 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.232856496 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23060373 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21041327 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260038186 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239661852 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226011983 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242799137 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228676784 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215672608 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.237870462 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206908905 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28466065 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245071959 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275744852 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.220132666 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268666764 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225577761 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209533853 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272981441 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24816693 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163774813 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266987629 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29052155 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216708085 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251423769 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268707627 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197533842 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.416893484 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281028908 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269783126 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204594499 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238735168 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269763827 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227116635 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258957197 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.283466519 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209392782 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308177048 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270587877 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.206619748 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231936482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246395387 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218096406 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.227910306 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252312778 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.232008959 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.243417401 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289915582 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203582079 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27109922 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276846847 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.212425106 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.248815222 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237948349 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32536753 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237145486 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272861086 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.265500783 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.229020141 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283350355 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224654984 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196401265 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.233743416 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.284806026 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198750487 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283733339 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262965804 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278105004 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274863705 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231075212 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243251584 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196864815 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268684061 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249473729 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279158405 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205591803 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.237351588 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286678647 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185962563 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231180793 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227035386 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398931135 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248051361 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267290069 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.167502163 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.386284168 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198951159 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233870849 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225268542 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269022703 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.234009575 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.255459514 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274301477 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240571694 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227173252 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236828596 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.273542079 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281492058 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235279501 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275042372 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.246320456 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261118388 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226372095 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271874928 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248903584 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.215805118 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260912911 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296418844 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.243089031 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.233355498 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270641619 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23819487 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27244051 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274101513 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20772845 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284330104 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229173716 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234280017 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242678976 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226218205 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228421716 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.2662282 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231746562 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272390237 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241215183 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234631021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197315638 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249068402 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268652087 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210416447 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.231944419 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290487586 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.19898564 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283413929 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313492317 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198243946 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268582775 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24498483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199932461 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241228907 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213161292 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232989768 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.248888274 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27451469 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.233325484 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274325128 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235410396 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26722532 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256785452 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211741511 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.368723413 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.230502855 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26024376 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25344623 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300385895 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217279413 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278457394 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27440357 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252062173 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235846518 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249467297 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.32380508 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235690703 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.269442111 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234158146 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212700943 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242215528 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.202734657 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255175031 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271687423 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214971767 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.240032483 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.267473931 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215361998 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.251541519 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211342405 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303786763 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253603368 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292301209 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254371304 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241077102 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279316083 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275494389 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198811751 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.267310186 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273755506 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213629673 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257596016 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.203239439 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.240207712 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318513768 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.195136978 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262498621 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279135516 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239495923 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277280982 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.239780765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280154381 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211497031 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281223481 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197604878 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.254509757 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.273859602 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204123377 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.230521259 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273169234 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23184936 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.269366034 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245496946 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.250969937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299436982 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.194792706 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239018456 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392936738 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264410731 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264972103 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227284904 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2087264 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250739656 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261629625 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.236172524 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276195294 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.233052694 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201490519 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.251419986 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.224548344 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.229813236 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239723433 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285072783 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261067367 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287567018 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.205354502 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.360978196 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211836671 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274600356 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.210752841 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.200236307 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243639376 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206306073 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24617308 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279053206 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322580964 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.23370591 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.251271018 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239396681 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.197304785 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23339006 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231550623 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254859834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275686703 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218389142 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.197591267 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213309133 seconds)
  done (took 121.523753427 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25080687 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.247265407 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.263195592 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.313091556 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289260585 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.384745039 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.324455291 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.340053199 seconds)
  done (took 3.711512053 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.195046416 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.23781785 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.246114269 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.188728309 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.215993295 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.592458197 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.236921503 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.225208377 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.23191501 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227853516 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.212784413 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.646944894 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.222003668 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.190260607 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.224346086 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.211424131 seconds)
  done (took 5.596290091 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.570252563 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.776520959 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.723113959 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.430609791 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.381764799 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.297568554 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.995518413 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.293011135 seconds)
  done (took 14.766245522 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.243874567 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.276142109 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.542693291 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.419105921 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.291961831 seconds)
  done (took 3.07505429 seconds)
done (took 177.242883257 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.198647483 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196986696 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.229663839 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.198281434 seconds)
  done (took 2.107172328 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.260969701 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154481077 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.191885965 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.15347402 seconds)
  done (took 2.064859776 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.460069143 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153710285 seconds)
  done (took 1.93719097 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.218456593 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.776019521 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209263051 seconds)
  done (took 2.515243337 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.210092833 seconds)
  done (took 1.516727035 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.193010382 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.189527396 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.387213472 seconds)
  done (took 2.079000279 seconds)
done (took 13.521220889 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.217405054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.036829201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.655428642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.205644427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.826349727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470235713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.531151336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.252921431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.275407073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217120493 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.215234792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.800367448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.514723119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.946615873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.502566974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.953434632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.767604116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.216862998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22108461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185597467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.501829343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182902161 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.183930242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.217864457 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.763370177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.522559359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.182683423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.997457055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214386081 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193940441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.471208569 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.216979023 seconds)
  done (took 23.949690075 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.189270162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.27516212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239496578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.219043991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191367854 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.21905139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193898666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.23037723 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.316892686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184765817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.239112844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183177252 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223190504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184332219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240907197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.184617764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219246784 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184680238 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223828926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186185355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238402843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184014484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218802987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184593639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217378889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.201393887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217640508 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197751738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217396475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194625462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222070387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185567863 seconds)
  done (took 8.127890195 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.229047199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.285378113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239759267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.257472492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272325288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187294702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306171157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.221319297 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.324748478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.219690058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205627577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219647442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.225125037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.220258782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.209036337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.218328461 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.188480872 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.219098095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.191485313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.220149231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237261473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185421791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.186093451 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.220339043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.184143705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.237991878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.184127759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.232266283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217055948 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195105968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.223294521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186251806 seconds)
  done (took 8.477919435 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.202899985 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.199788466 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.242964941 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.20896762 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.229747636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.198701573 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.234231555 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195585678 seconds)
  done (took 3.045393734 seconds)
done (took 44.904521955 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.211903514 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.199901174 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.24184433 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.199690101 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.386451835 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.191935931 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.203619037 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.228264569 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199225818 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.2436715 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.184208695 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.22814766 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.204997387 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.232117444 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.355253324 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.201997309 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.356697779 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.391797888 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.1936727 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.236555509 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.194422776 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.359149229 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.233719707 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.195798876 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.340274969 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.189194481 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.381704945 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.197842786 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.195714169 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.221087883 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.357464152 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.194568462 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.230330274 seconds)
  done (took 9.495396751 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.304668236 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231084224 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.194944872 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229748852 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.196381684 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.229566294 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.340334201 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194451589 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.227841425 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.193640451 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.229501801 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.287604338 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.236180481 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.188957401 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231983203 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175117293 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.342900419 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.194160383 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.223142428 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.159207915 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.226052337 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193703453 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.353968241 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.225215625 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.197403784 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.193546088 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.231626608 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.199807201 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.231707933 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196199071 seconds)
  done (took 8.201023674 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.202194436 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.207364095 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.248692596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.296500287 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.224327879 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.241246616 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.21125856 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.242470779 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216575744 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.223903912 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204322984 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.260471233 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205227381 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.235060775 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.187664383 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.238983368 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204933538 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.222268156 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196378114 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.240774177 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.209156084 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.240204178 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.211149816 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.231271896 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.186474469 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.2319007 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.199761819 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.233188747 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.196537819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.238946277 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190893467 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.226714259 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.190269837 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.259252563 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.189963241 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.236569429 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.209140252 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237211667 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.204196163 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257544142 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.190433764 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.225961824 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.214572423 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.280579497 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.190545108 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.234336727 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.190334407 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.238921212 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.18665102 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.240955124 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.230669789 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.225303487 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.209521094 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.223784495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.186637128 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.231020955 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.18980491 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.228204668 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.20305281 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.224457446 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.211419225 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.231368154 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200799841 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.226052424 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201257754 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.187319612 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.222494929 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193371069 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.251548918 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.197249619 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.26118796 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.188774509 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.236634665 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.201992522 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.235422526 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201094642 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.223780305 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.200704929 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235027878 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.193398558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.237823027 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.191800556 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.228563401 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.205618335 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.244982189 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.203285522 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.235673275 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.200556526 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.225987521 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.191865349 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.241788247 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.190762831 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.228693722 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.202456526 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.225247135 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.193608383 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.23433588 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.198482953 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.222520016 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.216278293 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.228759332 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.191927118 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.250512114 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.194011169 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.229420391 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.198640345 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.265617656 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.189330361 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.234166543 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.200929572 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.224249955 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.198487037 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.224776508 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.19052548 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.205186011 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.240547885 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.197259555 seconds)
  done (took 26.874055717 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.456057812 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.443666804 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.29567778 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.528653668 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.203132109 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.364213829 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.481835337 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.448182507 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.227745393 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.22391176 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.283125245 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.408253535 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.228922879 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.218006422 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.486886393 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.531251426 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.219655131 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.266773663 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.260533983 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204940712 seconds)
  done (took 8.147472729 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.201940527 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260325003 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214711669 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.242410763 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201776862 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242299424 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.190806733 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.247780336 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202469419 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.231912243 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.194689669 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.197523218 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.238343869 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.205371259 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.241181825 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.21392381 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.235341479 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.194586387 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.248509358 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.195721099 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.204381836 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.216025647 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.235728268 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.211534352 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.24356445 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.200712635 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.224417118 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.196186186 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.233726395 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.199512941 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.229398581 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.198916612 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.233293774 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.171655192 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.202094588 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.240374822 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.196642419 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.228621791 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.196540579 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.229705202 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.204521957 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.23773598 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.19899417 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.165431827 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.244453562 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177197531 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.24060847 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.202444044 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.208751363 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.211159736 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.236374703 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.207099841 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.197832395 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.247022209 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.197605854 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.242555038 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.236191346 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.207161965 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.230838436 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.191856339 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.189306202 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.228876909 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.200002795 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.239826208 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.203744878 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.234987746 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.200124614 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.226410334 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.196353135 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.229355584 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.194299101 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.238937068 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.211482921 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.239463286 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.19821911 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.236596606 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.19912734 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162098993 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.236672714 seconds)
  done (took 18.429075783 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.220947365 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236594796 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209863229 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.259347813 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.203786083 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.197266347 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.238562791 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.211741181 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.242120224 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.21101509 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.242608772 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.20541661 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.250182851 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.236220877 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203500628 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.208047891 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.24019426 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.265464541 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.204806584 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.255138085 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.206792332 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.232715272 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205127956 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.238257631 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220873134 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238487428 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.218602673 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.239707639 seconds)
  done (took 7.732344294 seconds)
done (took 80.21421879 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.571402782 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.725801829 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.481323556 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.493991505 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.516156388 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.532311332 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.480649282 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.485964337 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.126517364 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.45762183 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.490778163 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.49955871 seconds)
done (took 32.288918657 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.580488707 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.199817915 seconds)
    (2/2) benchmarking "String"...
    done (took 2.205820627 seconds)
  done (took 5.790967829 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.170151587 seconds)
    (2/2) benchmarking "String"...
    done (took 2.180295972 seconds)
  done (took 5.723089972 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.472506612 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.474405865 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.721940566 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.474760453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.470465959 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.470950995 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.47684754 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.485345006 seconds)
  done (took 17.948978206 seconds)
done (took 35.891362821 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.512726937 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.745932276 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.738016407 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.455519151 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.48866331 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.477021005 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.472963229 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.532932757 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.487528715 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.466893193 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.963575019 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.765247429 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.480450601 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.892055292 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.457519619 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.480162652 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.473050858 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.806301385 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.473375418 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.492265082 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.457542037 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.47030425 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.497453127 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.476668342 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.511305166 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.47320308 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.471062126 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.474125573 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.786542227 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.493350824 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.497452733 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.493263608 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.480622006 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.474226237 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.471630196 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.482999133 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.757027098 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.489762471 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.481853318 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.474762187 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.76482611 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.496350644 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.477272124 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.486046671 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.471383745 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.501131149 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.461661469 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.605081742 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.507365039 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.488726328 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.561755912 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.897292075 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.478549596 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.482170293 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.487856442 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.800356556 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.490468347 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.615194557 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.504886029 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.484545449 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.480266226 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.475996337 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.523009523 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.485178458 seconds)
  done (took 162.280433293 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.48224239 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.481413508 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.482260661 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.486512094 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.48257368 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.480960556 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.480203721 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.483019112 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.480882804 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.487270608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.479811832 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.484234536 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.480508921 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.437746855 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.493426652 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.504121852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.48176897 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.482313638 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.489571745 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.481988594 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.491377596 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.483650218 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.476412801 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.48169969 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.497550247 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.574123754 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.511962387 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.496735496 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.486574222 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.483053452 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.504535553 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.489138554 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.248000115 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.352915615 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.503509342 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.493443991 seconds)
  done (took 90.594315216 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.482802318 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.485619056 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.482607693 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.485845748 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.525620112 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.477560168 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.187575752 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.188472367 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.559314846 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.982654649 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.24447348 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.823767446 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.478618351 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.583787237 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.494046784 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.477980965 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.588845559 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.504784 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.487745673 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.486640661 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.153745562 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.494448943 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.467863253 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.673892576 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.480522544 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.525750078 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.888844947 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.481641967 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.526286287 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.836966846 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.519532142 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.480572851 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905678292 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.279608015 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.602926023 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.483989348 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.526773886 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.485003211 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.782487091 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.479707515 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.48807303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.486164111 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.491731934 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.201182361 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.482260923 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.19041753 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.489577539 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.5487127 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.482021751 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.487652208 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.487865191 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.992163081 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.351884042 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.483051867 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.488350907 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.491577497 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.488305674 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.489220471 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.529859175 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.988503681 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.44933823 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.484401523 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.490175918 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.526392437 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.484549865 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.032481401 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.483852599 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.988441897 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.543162563 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.749235296 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.157042157 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.482244793 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.588165756 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.612382357 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.484817494 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.486722585 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.489814954 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.489182689 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.606722804 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.483787282 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.348817907 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.678013713 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.486799472 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.16536583 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.482929228 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.593531441 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.484588521 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920525403 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.48302018 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.489483086 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.297770675 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.584165375 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.485750535 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.489722186 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.490501126 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.347106705 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.191736373 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.868597817 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.491108036 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.42409481 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.491581661 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.497401389 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.148755572 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.194432487 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.487470522 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.60811852 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.68411395 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.487749598 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.488384871 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.165784873 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.487263829 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.55289625 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.487444119 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.897928924 seconds)
  done (took 415.22317505 seconds)
done (took 669.469626164 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.476976531 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.472633987 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.472461533 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.472969717 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.473971148 seconds)
  done (took 13.754814214 seconds)
done (took 15.1399135 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.49356403 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.488410287 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.489122536 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.270265138 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.488605617 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.489875899 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.491558638 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.489795528 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.488667245 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.488516957 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.230140527 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.490779531 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.491472176 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.415716896 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.223762306 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.490673671 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.342204485 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.489279171 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.488609211 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.815973579 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.500435123 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.557562028 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.783305794 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.536817399 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.801853893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.838487362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.501205891 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.665922257 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.542538517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.520242903 seconds)
  done (took 21.452073694 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.375707328 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.808693266 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.502357596 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.578760483 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.806155863 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.537088222 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.810198764 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.848458975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.502218381 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.669558508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.52284249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.517327971 seconds)
  done (took 21.493241985 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.229312852 seconds)
done (took 95.279222223 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.536266386 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.61018313 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.515192521 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.514651672 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.514264219 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.517276019 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.516843422 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.514910287 seconds)
  done (took 13.626034118 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.510737672 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.512685553 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.51236403 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.512627643 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.513661866 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.513412866 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.513613932 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.515752688 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.513982232 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.511660927 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.514481223 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.512505865 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.512953476 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.514075044 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.510604593 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.51403658 seconds)
  done (took 25.600988717 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.516273835 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.51482362 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.512397247 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.513598078 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.517101488 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.512881111 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.514496489 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.51485233 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.515440692 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.515803378 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.514632602 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.513339507 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.514471787 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.512222654 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.513215154 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.515671058 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.513648461 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.512787368 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.517938647 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.51357216 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.51479555 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.513031758 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.515675734 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.514146844 seconds)
  done (took 37.739420444 seconds)
done (took 78.35615697 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.500902551 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.502773263 seconds)
  done (took 6.395169472 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.573289468 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.571645674 seconds)
  done (took 4.539042361 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.51614033 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.513922639 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.513728104 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.51800778 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.51673309 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.515767518 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.517142378 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.516740058 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.514289694 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.513230014 seconds)
  done (took 16.549546754 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.515283093 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.515390441 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.517168545 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.515679694 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.518002394 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.513847944 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.514213514 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.517156253 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.515805721 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.517561086 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.519319847 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.518376468 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.515303059 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.517386194 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.518352692 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.518522777 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.51718015 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.517953059 seconds)
  done (took 28.697704135 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.528951518 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.533207393 seconds)
  done (took 4.455863086 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.643402417 seconds)
    (2/7) benchmarking "second"...
    done (took 1.558920142 seconds)
    (3/7) benchmarking "month"...
    done (took 1.621043236 seconds)
    (4/7) benchmarking "year"...
    done (took 1.61395083 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.559095044 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.5375902 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.5571119 seconds)
  done (took 12.485155913 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.515058774 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.80024882 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.982791362 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.670556077 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.49652886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.53472057 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.483969378 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.526791898 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.527395605 seconds)
  done (took 16.932543773 seconds)
done (took 91.445933973 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.501866914 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.554030049 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.516809663 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.516830706 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.816792704 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.529410012 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.504430779 seconds)
done (took 18.337531778 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.49865201 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.490495954 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.502894896 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.516121395 seconds)
  done (took 11.404054617 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.503212065 seconds)
    (2/2) benchmarking "read"...
    done (took 1.824350496 seconds)
  done (took 5.721026607 seconds)
done (took 18.520495389 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.520331057 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.519200126 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.520977446 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.519387095 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.51853707 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.521821124 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.521094559 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.521332461 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.520502308 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.52048437 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.519800205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.519112782 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.518386431 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.519103131 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.519871746 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.517510519 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.521137909 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.518613563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.518293461 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.517501557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.520659803 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.515455181 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.520699543 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.521651334 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.517186985 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.521498778 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.518385932 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.519287801 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.521783867 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.522605912 seconds)
  done (took 46.990147998 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.526976682 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.523828187 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.519319216 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.52354798 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.518088027 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.521596898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.5212817 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.520341715 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.520347465 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.51964936 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.522560038 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.52395666 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.519163238 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.522724228 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.52452133 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.523329595 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.52521624 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.522353551 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.519195358 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.52102755 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.52219593 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.521362467 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.521401036 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.522500422 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.522016216 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.521287793 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.520783453 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.523025751 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.521067426 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.522910295 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.523046858 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.520715762 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.51982348 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.520956273 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.523763673 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.525211953 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.527857461 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.529929312 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.523738317 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.522390225 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.52064891 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.520559665 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.524429936 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.521409622 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.521034873 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.523656137 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.525711351 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.525861773 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.525524645 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.523414432 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.524617773 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.52630422 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.525523915 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.5211663 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.52367736 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.520472551 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.52529621 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.523625531 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.526632788 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.525264327 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.526530139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.524206142 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.526916333 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.524923457 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.524037321 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.525686719 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.524035049 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.52365798 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.522948566 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.527221016 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.526878204 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.523790286 seconds)
  done (took 111.07294828 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.526158856 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.522310312 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.524864418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.526065395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.523233178 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.52682842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.528341737 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.527646501 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.526846688 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.52437689 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.524751839 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.525934781 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.526557582 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.528283169 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.526052434 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.526876495 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.529093253 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.529045144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.52910987 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.528366756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.526009426 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.52724667 seconds)
  done (took 34.989399287 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.528976725 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.526190324 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.528898571 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.529604636 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.531455566 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.527328603 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.526809193 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.527170953 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.527161242 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.52675162 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.527817566 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.529342115 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.530012725 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.527713963 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.526720118 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.528965658 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.527063217 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.531227811 seconds)
  done (took 28.91274045 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.531358366 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.52948025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.527534876 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.526404546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.530877307 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.526683706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.529425057 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.528440983 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.530614093 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.530459281 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.527521408 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.52909277 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.531552398 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.528166675 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.531051897 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.530485887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.532505232 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.528918524 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.526923302 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.528959592 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.530854707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.52882827 seconds)
  done (took 35.050079447 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.527531021 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.52915569 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.527768619 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.528607501 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.530490249 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.528724553 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.530497939 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.532049783 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.532212002 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.532641739 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.532846817 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.531663041 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.535153195 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.531112654 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.531200764 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.533314698 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.532731963 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.532216753 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.534396377 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.532812756 seconds)
  done (took 32.034632555 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.535970551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.535528545 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.537537082 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.534876165 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.533695509 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.535851491 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.53657291 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.534314837 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.535036448 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.536534963 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.53650078 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.535283893 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.537445659 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.535913065 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.534299237 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.534233406 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.535203559 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.53462112 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.537770179 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.536355908 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.533284615 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.533392276 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.532999346 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.535515579 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.537015401 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.536971811 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.537144228 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.53786445 seconds)
  done (took 44.406656433 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.552884649 seconds)
    (2/2) benchmarking "in"...
    done (took 1.552001549 seconds)
  done (took 4.512402192 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.534145479 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.5357511 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.536159063 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.535450654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.531317445 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.532161356 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.535906138 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.537851034 seconds)
  done (took 13.689561474 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.527488405 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.534408853 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.534955482 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.537861582 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.53724389 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.528816992 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.534551559 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.538518601 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.528537336 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.529521048 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.533906973 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.530908585 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.529053019 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.531453812 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.528255836 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.531054795 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.536733823 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.539374942 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.538156085 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.537663137 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.539054697 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.531213322 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.533940649 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.538020027 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.530883252 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.537979553 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.535296056 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.539999895 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.529497058 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.533150592 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.531547073 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.538730676 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.535215173 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.535969944 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.538373009 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.536685397 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.538407279 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.534786918 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.537907968 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.540862499 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.540246581 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.541385403 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.534673367 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.536023803 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.532023113 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.541249147 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.542414129 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.539090566 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.531193235 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.535946538 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.546611531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.530830094 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.539517827 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.532241163 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.535480372 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.540775479 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.546089666 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.532090447 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.539336671 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.545089825 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.548159112 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.544811607 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.541022197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.543737888 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.540057449 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.546201613 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.541802843 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.545418343 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.544111857 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.540284124 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.542216839 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.552199132 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.553362866 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.54618649 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.543658491 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.541418111 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.533490338 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.545253874 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.543859982 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.542177734 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.548342949 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.541970952 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.542603751 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.546234775 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.538155253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.546311271 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.545152503 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.543160351 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.537564739 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.54976504 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.550285276 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.544603208 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.535010693 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.536432795 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.536239099 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.545977186 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.53371072 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.540704721 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.548153606 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.541877541 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.542720442 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.538511609 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.542949491 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.544815519 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.543109042 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.545798108 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.549009404 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.538002982 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.546516519 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.54732873 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.542311668 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.537834254 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.543744025 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.550878311 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.538842191 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.544807117 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.546711837 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.540892416 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.549499726 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.546591315 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.546018422 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.554935227 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.548585613 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.544663011 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.539659024 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.552345602 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.543844724 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.542970519 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.553242626 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.550183842 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.547745903 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.541194286 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.549183231 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.54178715 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.550383308 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.538264308 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.547799536 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.547576064 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.549119233 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.54328941 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.546115324 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.543414822 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.545156613 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.546502394 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.551822588 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.539629966 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.554997134 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.542882366 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.545101082 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.547566649 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.552881734 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.547424986 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.542419262 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.55173691 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.539093515 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.553703652 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.541923932 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.551261981 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.548460725 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.549967702 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.547159346 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.538693532 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.542094759 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.553793818 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.548676589 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.546020897 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.550446039 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.550167664 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.547552736 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.539421049 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.5477839 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.542314655 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.546162922 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.557710858 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.550008521 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.546209529 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.544739557 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.553627016 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.547974211 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.552025425 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.540188842 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.549103806 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.551116827 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.550102955 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.555973234 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.550931784 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.551019282 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.544032686 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.546380064 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.553350664 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.545465019 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.560046815 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.554564196 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.560898882 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.543391506 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.552598781 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.540303211 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.554711381 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.549722301 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.554678151 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.55221125 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.551752701 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.546251662 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.556752731 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.548489571 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.556434937 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.543124968 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.556028615 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.555969221 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.551764017 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.553345864 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.545455764 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.553295052 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.559463749 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.55231336 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.555895028 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.547752324 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.553262063 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.542720803 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.546067139 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.558694924 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.555360751 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.555046527 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.560705801 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.545796411 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.553941953 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.549983553 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.54914353 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.557908888 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.548557898 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.551421618 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.558354747 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.555716045 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.553055631 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.562170838 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.556062267 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.551011406 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.55499198 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.562871593 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.558757668 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.545197878 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.559643415 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.557090634 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.552463476 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.553730029 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.548986673 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.55833769 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.55349799 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.562512181 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.548573901 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.557447452 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.547371497 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.561750957 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.554069216 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.558736138 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.555999887 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.556954749 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.563696934 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.557024569 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.550745606 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.56395345 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.559179121 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.560619988 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.550484015 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.566183474 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.560408227 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.556492259 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.555705769 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.555805763 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.562416542 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.550543245 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.561178619 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.552604711 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.571596932 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.579032148 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.562809922 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.562144655 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.565143162 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.561860997 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.558182862 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.554872868 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.555688501 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.56047394 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.554324527 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.554742064 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.564225391 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.553526892 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.565981027 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.557431954 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.558338642 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.564321196 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.562068475 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.550095972 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.5637793 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.560684505 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.561691624 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.549846367 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.563483236 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.557442727 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.561785537 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.556782862 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.554506296 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.567249257 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.562693134 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.558581111 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.559476502 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.556144215 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.55475673 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.559352936 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.566474485 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.555734559 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.567781898 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.554421633 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.561515821 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.555405045 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.564199793 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.565387667 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.556722179 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.563732625 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.563001806 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.553401175 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.554646191 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.564191115 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.565297431 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.570271306 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.555116901 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.567375765 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.562375006 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.562481671 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.56313112 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.564063789 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.565742601 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.563134768 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.568515773 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.563356112 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.561269651 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.565555105 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.571986781 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.563581122 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.564495575 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.555538269 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.566093568 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.573380802 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.559443238 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.563081127 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.561081472 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.566893006 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.564564835 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.565503327 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.566141288 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.563735951 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.566653126 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.568029792 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.570756751 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.567037105 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.568267952 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.574622841 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.568270427 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.57517115 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.560170345 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.572038414 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.568081842 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.559847874 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.560437341 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.562802871 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.57123377 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.55824823 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.571237437 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.569029012 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.561011561 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.567178428 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.574762018 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.557582309 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.566019862 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.578909586 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.556593358 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.567363149 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.567874548 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.557703198 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.570807045 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.568103725 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.559498011 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.561186593 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.566952754 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.569067348 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.561632073 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.573463675 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.56165092 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.571492562 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.565513508 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.570896889 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.569328075 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.572229375 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.561913274 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.572166027 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.566968893 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.577619798 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.561709797 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.565970285 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.565641217 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.57379991 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.578063801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.565951716 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.574507044 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.571837488 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.562574176 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.568113552 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.576351661 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.564353683 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.574067159 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.561143907 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.56696106 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.566459464 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.570959812 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.571448292 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.575557805 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.561666786 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.564501321 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.572690008 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.569376111 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.566411765 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.566466241 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.5779086 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.564952715 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.563125535 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.574844676 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.563070384 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.575836456 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.562726332 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.564802791 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.564663689 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.575095552 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.573206133 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.570321689 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.562484692 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.565658339 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.576730951 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.573519382 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.565942501 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.564134275 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.577460799 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.566716741 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.568783268 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.568835998 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.567639746 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.570411283 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.577885468 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.564756865 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.566190566 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.565554994 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.572739883 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.572726046 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.570945205 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.56372536 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.577437979 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.576547105 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.575559812 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.560935057 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.566963421 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.570568879 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.574107843 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.570815984 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.561481841 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.579466072 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.575124848 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.577521287 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.571268514 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.569800896 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.566331824 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.577376506 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.573997954 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.571663124 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.584275521 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.570775636 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.583103157 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.571742915 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.574571573 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.566934773 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.567414993 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.570635635 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.571842671 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.577031324 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.573907297 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.579174725 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.575306052 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.581803785 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.576766323 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.576775065 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.574962954 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.566838047 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.577375737 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.567063292 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.57678685 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.572880649 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.568773126 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.578818183 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.575780692 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.571110321 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.571015841 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.581104281 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.576825776 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.563687465 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.572610706 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.577403064 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.579334191 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.57781994 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.565975068 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.571141716 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.58010173 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.57495182 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.576794531 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.566967467 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.583203802 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.583929518 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.569308678 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.574190336 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.579150678 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.582266124 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.577413637 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.577120208 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.574424314 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.575605958 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.57692268 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.577956773 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.581326708 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.578941776 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.573626791 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.582580766 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.572266915 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.574809193 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.579495828 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.586922922 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.576469145 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.574495714 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.584856849 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.582732841 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.57782664 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.592943782 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.580336477 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.579332647 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.583630915 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.571070127 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.58029407 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.576355096 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.625681616 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.580423537 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.578688532 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.581392291 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.571963021 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.581336096 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.586759938 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.588970528 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.582398405 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.569639483 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.574148535 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.58221118 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.579082725 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.583182939 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.581175684 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.580573136 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.582135051 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.572663775 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.590242695 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.593921812 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.58221912 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.579844119 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.577719654 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.575785892 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.580049512 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.579649818 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.583905292 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.577366426 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.578172541 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.57738601 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.588534374 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.584254013 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.572881878 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.575065163 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.575962911 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.583682839 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.586160732 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.598418633 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.584958318 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.581782604 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.585276701 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.583171407 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.571596501 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.590152272 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.587092133 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.577064801 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.579491713 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.587419072 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.586189096 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.582625569 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.57879001 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.587152456 seconds)
  done (took 930.923807105 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.585817007 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.583232227 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.582623882 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.586598578 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.583144441 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.582994177 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.584204569 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.581454352 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.581763269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.585193988 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.585300049 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.58324362 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.583147005 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.582870447 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.581570959 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.582009851 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.585035378 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.584082377 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.587476566 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.586918642 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.583175225 seconds)
  done (took 34.71423785 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.585610147 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.587729127 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.582838243 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.586769982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.581036317 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.58429442 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.58252517 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.585617903 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.5824817 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.588078985 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.580547955 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.587726788 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.58375969 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.584228206 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.584550353 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.58474573 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.585595105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.586759881 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.588144658 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.589025139 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.589249515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.586257532 seconds)
  done (took 36.328383587 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.58191206 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.583176442 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.575999967 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.590198879 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.582775854 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.586368817 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.584846279 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.588263814 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.586853168 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.575479299 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.582001482 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.579993358 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.585793949 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.590592159 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.587333576 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.595859301 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.59253389 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.584154611 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.587528383 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.584998383 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.59186675 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.595950808 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.586851122 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.577019301 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.589414587 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.588569704 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.585646138 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.589854521 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.581669947 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.590415152 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.58554337 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.578497724 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.590843473 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.586232218 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.583017219 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.59019582 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.591311163 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.589485192 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.585287605 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.589519543 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.599464515 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.592769055 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.592992612 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.595001774 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.587286735 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.582440674 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.592699233 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.586192698 seconds)
  done (took 77.636157904 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.587742225 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.591152894 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.588783933 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.586783943 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.591832879 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.590112437 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.592116202 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.593352814 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.591765661 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.587928224 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.589573544 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.588857719 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.588904685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.589944533 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.592855918 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.59150544 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.591919794 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.590041922 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.593317602 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.591758523 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.594640304 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.589483355 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.591664911 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.593102297 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.5894186 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.590383965 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.594292604 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.591201006 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.594163387 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.59387948 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.593947846 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.59601172 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.594045255 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.590983189 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.591592993 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.592932252 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.59444488 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.59301334 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.591490068 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.596765768 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.594075026 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.595894263 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.591356281 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.594004755 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.593672591 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.59364668 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.589687376 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.595321653 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.598302853 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.593342298 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.594000842 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.592276634 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.594368067 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.594289199 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.59627211 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.598717126 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.594079359 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.594578393 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.598793681 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.595945632 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.594271547 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.592749686 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.596686476 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.594989064 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.597168082 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.595322509 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.59444499 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.59701559 seconds)
  done (took 109.783352104 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.594449884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.595136429 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.596108206 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.596777651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.594595939 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.595557228 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.597645394 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.595611021 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.593486655 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.596322968 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.593630654 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.598645518 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.593340567 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.5942653 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.592021168 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.59421799 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.595304791 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.598896682 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.597374973 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.598935537 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.600100155 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.599067348 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.597660421 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.599006178 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.596928455 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.598123965 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.597887913 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.599830679 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.599734625 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.598137971 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.598318003 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.600465394 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.599769302 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.600475185 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.599904769 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.596816403 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.599389393 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.600589164 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.598111407 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.595847384 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.599979951 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.602801515 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.598179773 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.602422177 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.601062945 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.600909628 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.59937875 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.598860231 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.600327952 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.599199533 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.599986517 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.603079371 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.601070259 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.602270376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.598004862 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.601163985 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.596534184 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.601792478 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.603617657 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.602586498 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.602842825 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.600656154 seconds)
  done (took 100.568700085 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.598654083 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.600469564 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.597309104 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.59847074 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.59944146 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.600561156 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.603360382 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.598432035 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.598852485 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.600040809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.603431936 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.602643503 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.602452963 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.600066747 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.600959573 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.600322828 seconds)
  done (took 27.070087946 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.603153669 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.602148031 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.60125762 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.601256803 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.601572261 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.603151738 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.601329489 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.600203188 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.599250007 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.603807546 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.600589526 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.605103288 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.599517531 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.599713098 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.603462457 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.601792486 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.600115853 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.601333381 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.600574804 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.601213513 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.599481837 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.600812809 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.602229195 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.599926155 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.601346445 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.605081819 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.606055763 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.600646369 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.601269027 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.606249586 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.601354588 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.600973639 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.604580134 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.606206535 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.60207105 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.607205246 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.606717774 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.605823326 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.606129728 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.606978185 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.605145454 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.608978976 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.606653111 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.608201307 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.607009402 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.604526093 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.603749931 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.600152583 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.602727358 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.60395406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.602322102 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.603470791 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.602711241 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.602599353 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.60550671 seconds)
  done (took 89.638297944 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.601772495 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.606245522 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.605546644 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.604575484 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.605747806 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.603667152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.602547999 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.605936748 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.602891137 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.60714351 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.604341781 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.608843583 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.607952104 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.607176437 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.606945529 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.607883227 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.604343592 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.605657742 seconds)
  done (took 30.369807476 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.60711866 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.608408449 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.608974748 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.60745505 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.605226578 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.603514593 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.608476027 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.610576189 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.610084018 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.608494391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.606116941 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.604849361 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.606041687 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.606479656 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.609145004 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.605365223 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.607649227 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.607428991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.609313284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.610109131 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.60812421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.606067024 seconds)
  done (took 36.837363526 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.597658901 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.596223431 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.59549189 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.615726625 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.607019638 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.595477274 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.593747652 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.595191558 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.614570362 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.619961452 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.618506323 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.604750984 seconds)
  done (took 20.72588363 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.607669702 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.61051871 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.610749567 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.608790357 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608794202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.609069522 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.607405591 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605583433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.608719547 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.609371751 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.608318742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.608179786 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610958264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.610533365 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.612356471 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.612448983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.608922247 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.609170716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.608486322 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.612742069 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60710574 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.609618971 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.609909025 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.61047284 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.609014115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.611105488 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.607735591 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.610930526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.609105012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.609878507 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612641277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.612769776 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.612195243 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.613005403 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.610902083 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.613784929 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.610871125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.614078409 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.613906863 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612896051 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.611343149 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610274115 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.61067958 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.610771885 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.612034028 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.611213083 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.610085453 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.612391254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.611122939 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.610613263 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.612155487 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.615362324 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.615584691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.614090145 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.61335195 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.613277445 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.609246459 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.610887981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.61191703 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618253182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.611343587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.613868296 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.614754406 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.612098454 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.612426306 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.614372913 seconds)
  done (took 107.807164717 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.613514134 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.610873447 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.611492688 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.614755497 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.614502425 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.613301478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.618131331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615476919 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617526933 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.614462478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.620858294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.616777181 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.615377424 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61632801 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.612230875 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.61476048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.61471397 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616115951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.614868853 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.615239696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.61737119 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.615628578 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.614896264 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.614975426 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.618481972 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.615065377 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.618401027 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616567591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.617794039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.612401612 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.616393175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.616244391 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616395679 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.616377648 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617866999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620371156 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.615050504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.616263496 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.614092601 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.614676634 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.617242552 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.615228147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.618514171 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.615743328 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.618952489 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616668584 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615266889 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.615930215 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.616573384 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.614868556 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.619643832 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619156834 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618081451 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.618642795 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.617583393 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.617651342 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.617932375 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616085689 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616747823 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.619245744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617778226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616605901 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.620174384 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.618220225 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.61699234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618693918 seconds)
  done (took 108.159946595 seconds)
done (took 2063.618355259 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.601726123 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.602620171 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.605788599 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.653051894 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.604761175 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.270507944 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.158533726 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.604103834 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.607437764 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.609055499 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.60785641 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.605361221 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 11.592042371 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.601401462 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.605687525 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.603315836 seconds)
  done (took 60.414293157 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.640530316 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.614411882 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.765079788 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.60757986 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.643864923 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.848534583 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.68496795 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.613145039 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.840189559 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.613380153 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.618521591 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.637124689 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.612872764 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.603310357 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.637281334 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.848925069 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.947284527 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.619624656 seconds)
  done (took 34.876864693 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.188289372 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.647433429 seconds)
  done (took 6.317646663 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.634930837 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.613689129 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.613692435 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.611870695 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.613302506 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.60058079 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.610276838 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.608453596 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.609874544 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.771968578 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.615360255 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.626019987 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.613883568 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.613840577 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.618801256 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.666127713 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.763865622 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.621131914 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.62106217 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.620485526 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.613160913 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.825137118 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.665572724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.625830373 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.778381228 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.610323924 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.618049642 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.628348615 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.771671926 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.621595346 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.614882769 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.614145325 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.615266847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.606710872 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.21123707 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.611681933 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.643746987 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.618456433 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.625402684 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.780974616 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.613819481 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.624103194 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.624640853 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.206999339 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.754785722 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.871216555 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.609668946 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.614404408 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.616468048 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.783796046 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.620061234 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.62224084 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.684808188 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.610056484 seconds)
  done (took 101.720283801 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.609860024 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.608399333 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.79824492 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.640491009 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.605970498 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.605151681 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.605502618 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.979965735 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.608638688 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.609688513 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.949585836 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.326435411 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.609817959 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.659927932 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.663233448 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.647892716 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.612356755 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.60933262 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.607313927 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.606446905 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.243256502 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.610221538 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.606630604 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.802688486 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.65516577 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.244955676 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.607514725 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.606808771 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.612724948 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.606377128 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.293175441 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.608724514 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.678830085 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.608671736 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939002591 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.093865136 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.047898558 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.617403222 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.615012942 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.608495396 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.642522555 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242462759 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.068792008 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.608279352 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.608375497 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.267942593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.608165035 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.623181829 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.61506843 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.8932348 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.616196773 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.61997061 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.616580019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.611966121 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.609732808 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.687586767 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.65407414 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.245767985 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.609926185 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.608656915 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.635384424 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.612365185 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.617184056 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.613909291 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.611865867 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.074488154 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.80148129 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.615591582 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.075115706 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.289226572 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.609946382 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.37592519 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.610572996 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.637955749 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.728458591 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.616037416 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.610503242 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23968749 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.613595582 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.608651652 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.057418371 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.612396785 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.957450842 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.630993247 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.614185969 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.265620304 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.629113034 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.691636376 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.614997986 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.613391691 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.612612192 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.622040284 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.946720763 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.63956456 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.62437774 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.609953555 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.651257269 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.612145716 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.615841308 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.616100186 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.387545 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.620278277 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.616521872 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.618815733 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.622462717 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.61416181 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.613807896 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.616486324 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.909307458 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.617518748 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.623903743 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.617638703 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.612537895 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.617708181 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.816791976 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.618673657 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.039912245 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.623614371 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.613195056 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.617053453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.615100153 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.625760671 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.614935937 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.638849115 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.614729289 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.940779394 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.637556772 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.621756246 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.618342564 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.619016765 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.628574333 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.616961129 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.661483084 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.617965269 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.51859007 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.631210348 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.634444989 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.616373515 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.619528401 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.616431796 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.618570557 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.61927956 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.967231283 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957385515 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.877655663 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.620943811 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.623419531 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.525051444 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.661329364 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.806964962 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.642368035 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.617877701 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928284633 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.822741961 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.619157604 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.616974849 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.617199945 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915788664 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.624085645 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.962474025 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.349074466 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.624031322 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.631298025 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.519145197 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.400845873 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.629723361 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.623877251 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.96331471 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.637607243 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.621632675 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.623036726 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.624883873 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.626895367 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.629482906 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.624137395 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.621823023 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.62346668 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.729696284 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.826980011 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.652150186 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.629689981 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.276966595 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.642416901 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.627760559 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.625598706 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.62550318 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.623721536 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.647419439 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.629498589 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.650334055 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.623979986 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.622305864 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.318958753 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.625703889 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.627159629 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.826076938 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.47775197 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.629232143 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.625839849 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.630591514 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.668946639 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.309470804 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.696635443 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.049164332 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.63934628 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.670290445 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.635729094 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.673658722 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.309473056 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.639750644 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.630907502 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.468885066 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.633506487 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.397133563 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.624000026 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.626144411 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.409325098 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.630693374 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.631497807 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.624457219 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.632386352 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953085595 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.63237878 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.657492566 seconds)
  done (took 565.866155553 seconds)
done (took 770.67620304 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.634761022 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.632992717 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.634006432 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.629849474 seconds)
  done (took 12.030923161 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.649019094 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.63064328 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.650595302 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.639969338 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.653702774 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.639531297 seconds)
  done (took 11.366085213 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.63032656 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.637467965 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.63434106 seconds)
  done (took 9.404797535 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.910353791 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.641251218 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.097032281 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.645574426 seconds)
  done (took 10.797350497 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.650596816 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.648925171 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.64962746 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.653807185 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.644269521 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.644618689 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.642766764 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.642353512 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.643759107 seconds)
  done (took 16.322955156 seconds)
done (took 61.419930486 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.675570606 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.611124023 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.610291032 seconds)
    (4/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.88822168 seconds)
    (5/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.616388401 seconds)
    (6/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.61205926 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.72744634 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.710414402 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.930093068 seconds)
    (10/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.615509447 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.667187209 seconds)
    (12/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.612359361 seconds)
    (13/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.674515933 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.733768415 seconds)
    (15/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.486798594 seconds)
    (16/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.666375602 seconds)
    (17/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.719940055 seconds)
    (18/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.884531074 seconds)
    (19/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.985934027 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.805524753 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.81198709 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.769129457 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.811600668 seconds)
    (24/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.615316589 seconds)
    (25/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.615963277 seconds)
    (26/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.617786457 seconds)
    (27/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.611190089 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.610545008 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.717433199 seconds)
    (30/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.723257043 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.612025005 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.924020677 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.534715487 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.615746108 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.651521792 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.759059343 seconds)
    (37/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.6536116 seconds)
    (38/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.619619294 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.708936704 seconds)
    (40/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.502354722 seconds)
    (41/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.608011993 seconds)
    (42/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.615785393 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.710667329 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.306446172 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.613860874 seconds)
    (46/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.551052887 seconds)
    (47/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.787138985 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.801600525 seconds)
    (49/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.614764755 seconds)
    (50/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.611066571 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.684391178 seconds)
    (52/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.701992493 seconds)
    (53/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.614692586 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.632791869 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.704203493 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.637121819 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.88167316 seconds)
    (58/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.746484054 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.8540406 seconds)
    (60/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.60956131 seconds)
    (61/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.675727417 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.438975895 seconds)
    (63/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.745377035 seconds)
    (64/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.704890589 seconds)
    (65/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.669552493 seconds)
    (66/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.599432803 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.800039747 seconds)
    (68/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.612428342 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.740512492 seconds)
    (70/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.370681173 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.724564356 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.806817552 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.665322156 seconds)
    (74/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.613730129 seconds)
    (75/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.737722605 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.983238404 seconds)
    (77/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.612950296 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.622884676 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.717333616 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.517178716 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.76920756 seconds)
    (82/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.61146766 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.710696858 seconds)
    (84/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.629318774 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.613080844 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.665314956 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.631058036 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.779492747 seconds)
    (89/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.643249985 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.69866077 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.765383074 seconds)
    (92/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.503540544 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.80957696 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.773666888 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.665290106 seconds)
    (96/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.792589899 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.036241609 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.711310235 seconds)
    (99/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.725377851 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.619470944 seconds)
    (101/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.712668448 seconds)
    (102/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.668418922 seconds)
    (103/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.543646556 seconds)
    (104/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.618138888 seconds)
    (105/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.619569173 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.933769229 seconds)
    (107/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.614197934 seconds)
    (108/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.639178507 seconds)
    (109/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.614624768 seconds)
    (110/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.920415501 seconds)
    (111/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.718754763 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.6735044 seconds)
    (113/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.611458063 seconds)
    (114/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.440811294 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.615793438 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.654758946 seconds)
    (117/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.748757934 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.763332977 seconds)
    (119/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.063240847 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.924381631 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.631324322 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.820271004 seconds)
    (123/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.936987782 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.616173142 seconds)
    (125/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.630461152 seconds)
    (126/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.844900269 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.77720489 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.767079404 seconds)
    (129/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.615071469 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.878173746 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.72112555 seconds)
    (132/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.091851855 seconds)
    (133/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.653695005 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.616793903 seconds)
    (135/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.67196035 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.702392494 seconds)
    (137/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.504286466 seconds)
    (138/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.669248691 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.199019192 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.742482658 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.762385185 seconds)
    (142/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.381058489 seconds)
    (143/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.623221636 seconds)
    (144/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.727722349 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.637860034 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.617008564 seconds)
    (147/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.366735403 seconds)
    (148/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.632854731 seconds)
    (149/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.639022432 seconds)
    (150/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.620019252 seconds)
    (151/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.835721621 seconds)
    (152/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.576637308 seconds)
    (153/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.112189918 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.614786493 seconds)
    (155/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.620533273 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.70778111 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.619250616 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.647339327 seconds)
    (159/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.374253381 seconds)
    (160/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.627313619 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.676357149 seconds)
    (162/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.619885817 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.760876716 seconds)
    (164/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.68016332 seconds)
    (165/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.789129441 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.747783813 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.76430872 seconds)
    (168/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.621017379 seconds)
    (169/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.314864942 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.884896955 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.49952942 seconds)
    (172/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.675668864 seconds)
    (173/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.751083147 seconds)
    (174/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.689916383 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.737768683 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.816709431 seconds)
    (177/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.622526503 seconds)
    (178/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.67218955 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.864305805 seconds)
    (180/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.712681244 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.8485875 seconds)
    (182/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.622569151 seconds)
    (183/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.516973127 seconds)
    (184/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.680514629 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.773680683 seconds)
    (186/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.626299337 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.758647677 seconds)
    (188/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.777955661 seconds)
    (189/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.850417939 seconds)
    (190/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.619552847 seconds)
    (191/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.622926876 seconds)
    (192/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.677709931 seconds)
  done (took 414.246362668 seconds)
done (took 415.749409443 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.669458249 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.751390726 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.647344806 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.649502839 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.649896711 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.640001564 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.690538039 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.650941824 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.664206921 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.663942179 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.657384955 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.654594562 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.664311198 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.66208868 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.683347909 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.648678958 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.647818792 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.658332424 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.664334245 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.667287995 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.652046518 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.653478789 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.677869607 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.649864873 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.659500639 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.658581008 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.656366077 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.647621087 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.658261135 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.668400982 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.657483588 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.655186378 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.667784304 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.663202972 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.652939302 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.663523302 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.650326886 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.753333571 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.671806521 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.662573338 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.660926143 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.668726742 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.656017799 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.657222344 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.663849803 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.682089324 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.659596512 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.667811892 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.657884202 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.650939732 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.671676019 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.665335753 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.661313855 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.654462163 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.64894603 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.664126314 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.664619404 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.672029194 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.659955119 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.654360184 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.688769803 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.671093748 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.66462975 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.661707121 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.661237375 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.667987489 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.663445987 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.672859096 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.66109474 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.656677512 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.653701196 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.662194739 seconds)
done (took 129.305648811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.779190146 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.649523183 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.815903997 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.660380765 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.824290354 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.77217289 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.660163012 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.662125458 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.661706688 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.459516893 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.660600282 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.660925682 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.648031016 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.660024261 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.771298596 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.660667363 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.660567723 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.361230192 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.661309016 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.789944452 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.654248979 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.662289569 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.663376067 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.45877438 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.650223049 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.645024988 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.791872794 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.661768603 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.355628654 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.645073104 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.649987177 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.356037188 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.794546543 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.679589075 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.670565294 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.668165396 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.826356021 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.667738063 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.782683334 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.78116137 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.814032842 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.701289178 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.648085185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.650348281 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.665770264 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.664315904 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.663359863 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.691020585 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.651766789 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.663706453 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.363882947 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.674937101 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.673013372 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.662757866 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.662776689 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.683995292 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.666635409 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.664027653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.792181839 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.665409442 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.785530869 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.461942591 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.465883564 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.665273406 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.655284311 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.665922111 seconds)
  done (took 130.083416503 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.723923594 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.732130741 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.785667773 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.657084409 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.703533495 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.785344875 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.655471028 seconds)
  done (took 13.563194496 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.661142937 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.665051149 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.702890508 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.704724953 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.667277053 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.832029787 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.66566389 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.667791423 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.666143666 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.708135835 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.669088263 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.667474851 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.677061859 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.656568922 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.704165228 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.669635678 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.773221065 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.658365603 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.667124856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.81504543 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.667897449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.676597915 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.708128493 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.670028172 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.668250563 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.664843248 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.415516823 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.668772977 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.670202395 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.669615081 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.667124108 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.726791103 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.669171569 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.656140298 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.667487248 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.772118811 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.667131339 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.667946715 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.669931892 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.659319871 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.66901669 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.666898563 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.669929686 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.668423295 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.66797135 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.682547485 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.669737708 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.667709393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.668965913 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.668838994 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.70662208 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.670589629 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.669901214 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.670057319 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.715200707 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.681057766 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.670133027 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.672472736 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.668663426 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.668461904 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.814906287 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.706232043 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.66989872 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.707263625 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.671104307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.673347864 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.671481984 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.670472406 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.752776391 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.674163117 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.709063318 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.668419297 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.844716767 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.685595328 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.674260661 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.665031845 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.665441479 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.67073164 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.657942005 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.669491858 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.67058275 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.663564318 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.670328905 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.671719948 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.671087319 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.819958272 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.770561419 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.670572912 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.678563521 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.669970928 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.6719834 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.713241423 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.672118923 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.673293741 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.712838949 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.777977153 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.714694811 seconds)
  done (took 170.033984338 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.673545874 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.677296411 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.669949604 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.690312565 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.665166367 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.663489995 seconds)
  done (took 11.565951674 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.663711078 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.674110475 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.672012179 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.673532738 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.673052945 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.675704947 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.67467373 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.667874567 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.677662309 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.675562682 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.675360347 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.678200534 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.678724455 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.674903565 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.680249869 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.677927509 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.676463744 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.676275348 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.67274433 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.674603276 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.662957051 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.67407812 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.676026904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.667979007 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.678747182 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.677033296 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.688857825 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.674120033 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.67402714 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.671317636 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.677278042 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.679002525 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.670175431 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.671552185 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.679446292 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.668867907 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.680734408 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.678230176 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.674266763 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.677281373 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.67891639 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.675882006 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.677537744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.678969353 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.666956266 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.673569538 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.682962989 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.692808108 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.679617792 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.67878233 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.678031913 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.679195553 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.678797018 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.678476585 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.670945987 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.671106025 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.68441298 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.680120566 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.680213312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.670190784 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.682660368 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.682148618 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.670918715 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.682632014 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.679054603 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.681329717 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.671346415 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.682174957 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.679463939 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.680317341 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.683937682 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.678718085 seconds)
  done (took 123.237133294 seconds)
done (took 449.99932586 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.996310406 seconds)
  done (took 4.528063507 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.880805278 seconds)
  done (took 4.415292672 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.168886307 seconds)
  done (took 27.714886703 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.674221111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.663695647 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.697230679 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.669860312 seconds)
  done (took 12.235947881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.369926813 seconds)
  done (took 4.903366055 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.67771688 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.690708397 seconds)
  done (took 6.90669448 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.115338672 seconds)
  done (took 4.649464574 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.607342399 seconds)
  done (took 5.152925331 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.70300605 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.680031623 seconds)
  done (took 6.927901948 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.648490935 seconds)
  done (took 4.181041703 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.625614878 seconds)
  done (took 20.160957261 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.695686433 seconds)
  done (took 4.234597186 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.701322734 seconds)
  done (took 4.235052372 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.020523298 seconds)
  done (took 7.553878213 seconds)
done (took 119.330813691 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.665186094 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.670295078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.668551668 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.670048522 seconds)
  done (took 12.208576238 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.744711099 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.745872479 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.755894075 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.741557279 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.739501455 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.748367455 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.70652688 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.70850297 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.73640236 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.733504627 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.750876025 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.737667113 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.750621284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.70827866 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.734550711 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.751349254 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.738155869 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.752057836 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.709515205 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.739558516 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.683811516 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.740275732 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.735475052 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.682160167 seconds)
  done (took 43.112225125 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.192913183 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.748864699 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.827252908 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.725500873 seconds)
  done (took 9.029125355 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.789380636 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.789025794 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.805329864 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.850807048 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.889221954 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.802665448 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.713801672 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.70566959 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.693330652 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.788765807 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.866201169 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.786655597 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.003745809 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.685813256 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.003352566 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.682563721 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.686902359 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.79007254 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.837058119 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.868707023 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.686024574 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.790706921 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.797933611 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.787540341 seconds)
  done (took 44.637757717 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.689821006 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.701581316 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.685415954 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.700479075 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.685559132 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.685780211 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.687996453 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.694812026 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.688999145 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.684942925 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.689181336 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.701654824 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.685427897 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.686395356 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.693100525 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.689211657 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.689926592 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.694199023 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.69738786 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.688264128 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.688212547 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.69489614 seconds)
  done (took 38.740936811 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.670805189 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.671348745 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.024056592 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.926528336 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.674121536 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.670327317 seconds)
  done (took 16.176391514 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.765213038 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.931391638 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.677102783 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.140442054 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.225591072 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.676501204 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.680340369 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.978036144 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.382032616 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.416941985 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.729726289 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.759528452 seconds)
  done (took 24.904816614 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76422737 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.684079409 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.69495589 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751836321 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681469228 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.683144539 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.774637377 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234804797 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.689351286 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959395471 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687335526 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76560477 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.933889748 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705915459 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.684445691 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.667584767 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911879105 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330121637 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687358225 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681604159 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715205393 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.68255566 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.687996688 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.943313912 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682614343 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.684037436 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.948506882 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683012457 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045031728 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019123243 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017780669 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.686218705 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959472714 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203470437 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790448374 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942735137 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699852722 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.685609913 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.669265446 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.685631416 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.687846735 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.710359454 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020493668 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688835205 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.686383363 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.692143464 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245753516 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.69623206 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.687477495 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.687946558 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025833386 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775257997 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.692828647 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.686497782 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715330581 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686874138 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.695118859 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805817407 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32713978 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686098261 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702156969 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.688782656 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.680731582 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707528566 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462549521 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.697071593 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.695502828 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69545253 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687442721 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.690199662 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709914012 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686889403 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.709074621 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689154072 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658144105 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.698480464 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690359688 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381146112 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707073958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.68926345 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915824324 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687316563 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691161768 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.690944889 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.689419517 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.642414049 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700755096 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.664266918 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719022026 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246268401 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950796911 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709450359 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719263912 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.915298047 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.663746631 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692650536 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.706944126 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692990845 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710766812 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249594544 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691091093 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.697011868 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940406525 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.90426777 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693115104 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.67577932 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250685675 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710987987 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.717975013 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.710466307 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958563651 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.443427668 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041483234 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713452574 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728560818 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.693448629 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.699099538 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693525192 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.701311982 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.714713344 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028213333 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.684370286 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697917023 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768069035 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693093618 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.69508938 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695914217 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694190828 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.697093334 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.946153425 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717209765 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03497611 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.703970583 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693904489 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.693378316 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709463533 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.700678371 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918960392 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699094648 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969956657 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693856239 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694173875 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693492895 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.91295056 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.704334406 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.706215485 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037429536 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71343716 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.714501566 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037641549 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736030154 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810619523 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731636545 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.713982742 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94472794 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.701859865 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.701054934 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697193638 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696732638 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700678878 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.706712793 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710537069 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451980841 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704233624 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.703404719 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.69768092 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.713021655 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77163002 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704377912 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969336485 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.701242605 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695268027 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.704195186 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.707580335 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92208475 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037555076 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.702120411 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877061463 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.256187899 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443474158 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718056299 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.695608896 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.697873782 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.69770547 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699883223 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696694442 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.698602213 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968306989 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050812161 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.713131673 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449795924 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704271153 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.7057218 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.706088956 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038795251 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.710276072 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700268625 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.716736148 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699664739 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714642192 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042296779 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92617631 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.758858897 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.699333812 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.218759317 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708039474 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.702033672 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.701684372 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728533105 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.700123048 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338277234 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043488531 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.716656985 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044261438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.710330901 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.718505726 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.70250346 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718685635 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706591202 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.731348795 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713824232 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.975864526 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.703413688 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707142528 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343729857 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693346722 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388196408 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.708746567 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.722425755 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.70564777 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268364618 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704172435 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704621222 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001242564 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.268267917 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701916232 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26113738 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.711433557 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.648786214 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0503021 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936074262 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.726815135 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.719948169 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051296478 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.920481382 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732616175 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.705556411 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706395518 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.677704884 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349841796 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712203771 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889659605 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267682953 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726484786 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.710947583 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.752370654 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.706162533 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201220466 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.703656077 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70559252 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.709053028 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.728178317 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356398464 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.713571273 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.706278521 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47502898 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.71811868 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.271777818 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705847159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979984838 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052301992 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.036002835 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.711435589 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.718684461 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.954070488 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048655802 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711530467 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.713559126 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400055728 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.574588668 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.719158558 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708504878 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.724773117 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710361316 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081934319 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.713637148 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.723453936 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723142549 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.709163154 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709334841 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.707717726 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.714568835 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710421014 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362774723 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.728657296 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698602942 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.710035861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714411542 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960735945 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.723441793 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46128538 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947689353 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700620547 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745612574 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.719279079 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732673061 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.688675501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.711391658 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.712035333 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719003285 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932012796 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.729763157 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.686742038 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.789980622 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921301343 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.71144595 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.734109864 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998014075 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.71261255 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.713811129 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704643559 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748203227 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.732896325 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715286123 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.698379107 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741396485 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787662339 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988507494 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.05877905 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.061823628 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209900454 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711189572 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.743267986 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.728840868 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795022488 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711966053 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.731207495 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.71473827 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474889765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725873521 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473799342 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062906244 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.718363194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710935515 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712652707 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951985513 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712122209 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992090522 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712875238 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.700247266 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735209199 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713467823 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719069618 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929668304 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987524182 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713765467 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715845389 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718207483 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.716913085 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06746125 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.93513817 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391486469 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442317131 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721011949 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.733728861 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287503777 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991582397 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718025919 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718367732 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715930519 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.726155415 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.722284724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.725219455 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715464397 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967063745 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065004112 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247302399 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058195228 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.748788657 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.593711749 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736269467 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.96972254 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551813567 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992635286 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475406478 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.605661499 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974079954 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790886691 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992760401 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.720622001 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953798194 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.719202233 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.718671501 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717469144 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717032888 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.717372479 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061341614 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472847456 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979158727 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.722534516 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.719161494 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753725594 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.993666118 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944483653 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.694297096 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944161443 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069723672 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.726736139 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.717026912 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472201378 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069150046 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723978101 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.722091803 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009141663 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.722752795 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753111618 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.5848598 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.719844405 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.441572542 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.936138741 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741682903 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735297648 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.618527987 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493570364 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.725018615 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395233229 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.723680073 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719830779 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002095119 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.728874438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.735127483 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010909095 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.727325501 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.730010116 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000418296 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.46863526 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.647772713 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.737809108 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747077882 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.726181289 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72413925 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.801730622 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720920767 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.729558866 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.210006699 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.721503642 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722452983 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732640099 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.733566742 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732270522 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.723318747 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723355607 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.728866255 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.704816846 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.718832131 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.733271923 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846574278 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367627351 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721453127 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.34200959 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.06054445 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.972818634 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.730698334 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.696444494 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.72907918 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723518844 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72360351 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723527569 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.732158041 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44986152 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.731491094 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.073117302 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732549021 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.938797016 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936428337 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.723679615 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031364327 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736969575 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745443334 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.699257433 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727352227 seconds)
  done (took 1149.946204127 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.724603537 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.762063032 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.768989713 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.730613756 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.732028825 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.824961578 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.750289962 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.806828801 seconds)
  done (took 23.675748004 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.719253762 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.723128867 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.719522246 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.721470145 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.731064029 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.303110026 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.719372606 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.72300918 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.74350136 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.728829693 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.71909045 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.488078545 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.727755553 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.732516963 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.715819442 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.723760059 seconds)
  done (took 38.527033685 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.325046231 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.738482907 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.75850612 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.818863486 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.750968385 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.732975766 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.347756333 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.732970396 seconds)
  done (took 31.783229542 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.732272798 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.731723538 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.735280997 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.734093641 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.733535808 seconds)
  done (took 10.244395131 seconds)
done (took 1444.521117079 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.735800599 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.734249651 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.735731331 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.73372764 seconds)
  done (took 8.517108117 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.701362619 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.702677965 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.704662622 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.71924369 seconds)
  done (took 11.40550483 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.190241843 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.413989808 seconds)
  done (took 6.182830998 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.730759742 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.493883656 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.479257273 seconds)
  done (took 9.285877398 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.028264526 seconds)
  done (took 3.605197824 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.153878897 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.228447679 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.726897067 seconds)
  done (took 8.688555359 seconds)
done (took 49.26425282 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.72588386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.485371963 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.878710433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.718273523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.878263314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.876687373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.990335739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.726315428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.737464124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.721808887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.713349954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.879671079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.976947767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.486167116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.975566865 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.48648231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.880536666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.72136483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.716674384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.732479411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.994024324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.72550711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.735061967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.729128864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.880412707 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.867691995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.720336509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.483954702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.734294273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.740908683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.869661953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.738761418 seconds)
  done (took 94.107523837 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.733713761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.719117748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.720189139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.732536783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.722241401 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.72428581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.727378242 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.722739251 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.724160051 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.731487957 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.736467595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.723200208 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.72441335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.733155082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.724945089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.737190474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.733690334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.734442242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.72274447 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.736526513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.724817486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.721377102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.724207941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.72476721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.742541013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.729167706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.724726456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.727787104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.724465662 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.730661129 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.724839002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.719011248 seconds)
  done (took 88.866388461 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.729587995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.740014937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.719366997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.723692607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.721747687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.722692977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.723909448 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.720505253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.72189832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.721559129 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.742450544 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.721927734 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.721350172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.740031209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.723022624 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.740729076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.723323594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.72866531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.725725508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.722433832 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.74492503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.742014989 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.720765301 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.720677378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.73985831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.72283915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.725499291 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.723539783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.739607657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.722817942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.724752898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.723142201 seconds)
  done (took 88.87063989 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.966705375 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.738772488 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.745483162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.736061734 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.743841785 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.74058838 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.736047552 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.97598186 seconds)
  done (took 17.968480116 seconds)
done (took 291.392623432 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.736171717 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.755838621 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.766164063 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.760804861 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.752633555 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.768146831 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.982937787 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.764856621 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.97564902 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.755727745 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.751890526 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.740665535 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.760331068 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.894821451 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.731376372 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.739412795 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.746070602 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.729245953 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.755801318 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.001403877 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.767210745 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.728704215 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.737626307 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.737461881 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.715096318 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.817885986 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.823573028 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.914325978 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.882681454 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.823011027 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.732638152 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.741045837 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.752893347 seconds)
  done (took 78.63041336 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.736807333 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.74676941 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.74532506 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.745784457 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.747315336 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.744506204 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.736959362 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.748001868 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.746547278 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.747166557 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.748556577 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.747309449 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.7494572 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.748347004 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.747868472 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.725511335 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.737140144 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.748092872 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.736051097 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.727392524 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.748346738 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.748154806 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.749981615 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.751761936 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.74731864 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.751079808 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.747446337 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.751095856 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.749159342 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.747611123 seconds)
  done (took 53.944135886 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.749738799 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.743069867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.730051825 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.743443967 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.738641249 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.744583543 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.126001446 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.75277927 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.743161594 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.744034268 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.747425674 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.748865015 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.79917635 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.741736756 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.738598867 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.751786655 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.749291819 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.74081097 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.734938512 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.776264864 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.136679004 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.753076971 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.129613779 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.761163155 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.746503135 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.742704304 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.745608633 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.742856692 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.740558289 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.744582949 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.746647315 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.128060108 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.757257667 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.731765828 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.750553653 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.757972056 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.752670341 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.734690844 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.742465819 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.742137998 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.138944011 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.747119885 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.745387296 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.73265032 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.7409052 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.754164399 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.735660611 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.752728613 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.078205556 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.753153561 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.737045996 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.744324988 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.755906211 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.745837326 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.080472721 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.748741967 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.745623153 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.736339068 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.747978797 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.127944849 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.751354655 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.744297039 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.756712558 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.741378808 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.753665394 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.743223527 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.760548788 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.746075505 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.746818454 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.743551826 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.740067446 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.742861409 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.755619122 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.751912816 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.748250247 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.73735982 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.743454956 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.738269928 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.755910282 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.123096018 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.748453247 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.73790456 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.136655564 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.748072862 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.759639376 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.759182999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.756114293 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.816624254 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.124133327 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.715499484 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.758799381 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.73751961 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.128664557 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.75550653 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.748127246 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.738610861 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.754432385 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.758203279 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.748987813 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.737559783 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.745076408 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.7621546 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.742459205 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.747990841 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.130545705 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.750485393 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.740790841 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.746120057 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.822116819 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.756832888 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.761078658 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.754618286 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.140356703 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.748387886 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.760198944 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.741807064 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.74161839 seconds)
  done (took 249.462511157 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.741829061 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.75977451 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.748208304 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.744370087 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.743117363 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.749944078 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.743536254 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.746734706 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.748511591 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.745907268 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.747303158 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.753695826 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.7524332 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.745624787 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.751052897 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.743531042 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.744007048 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.749263624 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.74375698 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.746664676 seconds)
  done (took 52.549545829 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.761406554 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.48765046 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.470815098 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.761469943 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.76132169 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.751724175 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.828095886 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.765471093 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.76119087 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.146393418 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.981815071 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.766316907 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.761226067 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.761438933 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.461107509 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.735011143 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.152935075 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.486611507 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.758354945 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.521012434 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.740435069 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.763291766 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.749176173 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.488879937 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.162669734 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.135479145 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.834181301 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.514127157 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.766731581 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.762106357 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.4924441 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.762821123 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.755702767 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.503333104 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.765242996 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.776688332 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.762579613 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.832044765 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.836323082 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.155024736 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.492451199 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.147187405 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.77978981 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.956554122 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.76380264 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.738544529 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.503402731 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.762304941 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.741361654 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.767012023 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.771087164 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.474777832 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.75333765 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.4743118 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.764334739 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.76440704 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.491941682 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.472969177 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.46535894 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.983190608 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.755798549 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.139886234 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.761432882 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.50405258 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.761707345 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.764297189 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.766234903 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.990095702 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.494885833 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.136065711 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.14947483 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.149999123 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.763231634 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.846870497 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.769699492 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.152457918 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.839816257 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.192618363 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.151987242 seconds)
  done (took 160.202170992 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.088412762 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.874437902 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.230380835 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.414733014 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.350942675 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.917256208 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.879693836 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.048900499 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.7809038 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.86874015 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.580905235 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.870099505 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.61153033 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.841646564 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.888464905 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.909052603 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.265242254 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.749597285 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.485203288 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.552132741 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.759862998 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.88035953 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.560108124 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.18030187 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.756809474 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.555863137 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.767495691 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.374484854 seconds)
  done (took 65.649012421 seconds)
done (took 662.021882398 seconds)
SAVING RESULT...
DONE!
