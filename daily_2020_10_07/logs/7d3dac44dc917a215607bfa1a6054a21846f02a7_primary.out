cset: moving following pidspec: 2388
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.792533352 seconds)
loading group "shootout"... done (took 1.200475101 seconds)
loading group "string"... done (took 0.419934881 seconds)
loading group "linalg"... done (took 8.230579156 seconds)
loading group "parallel"... done (took 0.162182222 seconds)
loading group "find"... done (took 1.366726214 seconds)
loading group "tuple"... done (took 2.076429287 seconds)
loading group "union"... done (took 13.115401918 seconds)
loading group "dates"... done (took 1.383610112 seconds)
loading group "micro"... done (took 0.211762609 seconds)
loading group "simd"... done (took 4.581955187 seconds)
loading group "io"... done (took 1.04322666 seconds)
loading group "random"... done (took 8.942945979 seconds)
loading group "problem"... done (took 1.554107926 seconds)
loading group "array"... done (took 20.345672283 seconds)
loading group "misc"... done (took 1.547395804 seconds)
loading group "scalar"... done (took 41.3728291 seconds)
loading group "sort"... done (took 3.311959382 seconds)
loading group "sparse"... done (took 12.14347873 seconds)
loading group "collection"... done (took 17.557590426 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515000202 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121701575 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126661108 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119507955 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183640009 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118671064 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126127425 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083548294 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.829089696 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.135932424 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113943557 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.425863387 seconds)
done (took 5.229737275 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163378553 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090595298 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081427951 seconds)
  done (took 1.294988756 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064136732 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133559419 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065325328 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06537481 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065429273 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06572455 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064640584 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065051931 seconds)
  done (took 1.648086727 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070412594 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06657332 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064331558 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06618968 seconds)
  done (took 1.390395776 seconds)
done (took 5.701438934 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.2384194 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098843533 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.287156231 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.440995112 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.604824168 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091486251 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073243052 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068690017 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126077848 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330600839 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101846566 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179801978 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088839451 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.169703627 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.996216274 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119637439 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084960156 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122038006 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093374788 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13047613 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.385091092 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076395807 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072154858 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068831539 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06660932 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646166904 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670332522 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123061625 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084402935 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160350712 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11511726 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.640001309 seconds)
  done (took 10.711872868 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091168906 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088565364 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067320142 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122220063 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092783577 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068157231 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073893726 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066250662 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08850519 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.122002164 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087693815 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096353958 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064847102 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067424022 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072906308 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194366943 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078687885 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080203997 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067246703 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079287165 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104061671 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07605444 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076920334 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076109403 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12743832 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169278475 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097889161 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09706081 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071799346 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078740384 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114337716 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126962821 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067116322 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065491642 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119661295 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095863645 seconds)
  done (took 4.506874057 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.968449429 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093171295 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.09246426 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098067733 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.623519015 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064744488 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147619527 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237085451 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071646388 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.347407057 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.149554699 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.11045057 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145238393 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115875458 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068838403 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.238902707 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115195928 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.510556147 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066689742 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066131855 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066362078 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068069406 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067550863 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063760054 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06955855 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095458673 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086154385 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.168972356 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952890549 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.288403038 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06668493 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.15754509 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083535328 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352387501 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068221166 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080997605 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.438638714 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122418683 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064386174 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167446274 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115298592 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06337087 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118355926 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076877967 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067913386 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082700451 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067858385 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071203902 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070679694 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077748913 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099185298 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066823691 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063978266 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169313241 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063596441 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065637119 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065528028 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148442419 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064789926 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142238151 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064540602 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06967884 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.102409692 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069089349 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087101691 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.093279195 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.327190905 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.051093205 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068008818 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.197967843 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074574798 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065565976 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069390642 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068280383 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063309123 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066537392 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066218091 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070566795 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068751668 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067724913 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107389392 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06560524 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069155559 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06613326 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071128898 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098775397 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064392676 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.49432651 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096249389 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065407881 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074358761 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104484497 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066054588 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069915965 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065974525 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066101918 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065240759 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065486573 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06820623 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094671207 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068646559 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111933782 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.16821248 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068598054 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063172768 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06645923 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071333122 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068192161 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068594014 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065658678 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067660075 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067340709 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064335602 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105010755 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065915903 seconds)
  done (took 21.911723518 seconds)
done (took 39.221050228 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324061636 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076329715 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076820607 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076601837 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077296089 seconds)
  done (took 1.853160686 seconds)
done (took 3.062787763 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107816989 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063079502 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098355248 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097694274 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065826394 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063177572 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09666117 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063137321 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097106914 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097689903 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099303704 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099725418 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062996146 seconds)
  done (took 2.332316642 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069127958 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081046643 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081481098 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060514829 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069947161 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080682913 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060719294 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080399464 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085621719 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080390723 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081025876 seconds)
  done (took 2.037292856 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068695004 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080646918 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082373593 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060946633 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072030382 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080895065 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060936219 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080753353 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082951965 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080841694 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080101353 seconds)
  done (took 2.027052784 seconds)
done (took 7.59755724 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063830392 seconds)
  done (took 1.245951786 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.512347901 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.198999837 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066053656 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083758721 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189364412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.090070797 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.194275165 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069711464 seconds)
  done (took 7.758592271 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099606926 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068575862 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066232819 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06690848 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067379008 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067683174 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069204645 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068722426 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067679555 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068843524 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068336218 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068387992 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066867505 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067590392 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067307639 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066570572 seconds)
  done (took 2.402332837 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098594743 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097952192 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072445603 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072924332 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071409733 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070813583 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073489431 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07285124 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068351367 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070037082 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071205469 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069891373 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069369387 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061021375 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070928518 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072029886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068147193 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071135723 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072134802 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072873834 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070838535 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060788516 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069530666 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069941065 seconds)
  done (took 3.047926717 seconds)
done (took 15.652942549 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172238805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07252083 seconds)
  done (took 1.437369045 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066748788 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066860664 seconds)
  done (took 1.34197442 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071319135 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059363971 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076291105 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069348092 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061448198 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061238856 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076379406 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061818084 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061428561 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060893852 seconds)
  done (took 1.8703222 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062129917 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066947404 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064978194 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067177939 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065067473 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061139114 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063095205 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061123488 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066653475 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059957863 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064225837 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080362675 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064011096 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081076213 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063357312 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064643168 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065610612 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063428631 seconds)
  done (took 2.399305065 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060323928 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060948678 seconds)
  done (took 1.341037272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062720253 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060899118 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063191901 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062485522 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060273704 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059864951 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060481473 seconds)
  done (took 1.64243088 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.41359752 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122217942 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337296949 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066885226 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074699563 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249241139 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062568356 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066695795 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067254922 seconds)
  done (took 2.715221982 seconds)
done (took 13.965998027 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080516414 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.17906971 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.089152932 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.51979025 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089858531 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065624118 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111543763 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.164173888 seconds)
done (took 2.532776968 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226301946 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.310362211 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.778572587 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065001917 seconds)
  done (took 3.374806803 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327915774 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07730081 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077236307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065716994 seconds)
  done (took 1.775612288 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064087943 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070506991 seconds)
  done (took 1.359764315 seconds)
done (took 7.969145199 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063397714 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062694205 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090798435 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062328674 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063013503 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062527407 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06293951 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062486916 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062478738 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062540017 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.062183342 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.062157626 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062063031 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062790468 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062442415 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062157489 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062793775 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062735925 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063442896 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062430646 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062548476 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062304676 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063253404 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063301849 seconds)
  done (took 2.7855226 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077515115 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064218879 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06553221 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065322837 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065894361 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065702227 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06496332 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064383985 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065536062 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063894657 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065383074 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065790385 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063950169 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065854561 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06393698 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06597224 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065712872 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064919301 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063863876 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065812914 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065156713 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064056845 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065642434 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065023008 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065543472 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065476117 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063924839 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064210834 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065469101 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065597514 seconds)
  done (took 3.198988715 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064938106 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058670555 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059190462 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081006753 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060287048 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060459478 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061093425 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059854901 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060038404 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060256081 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059725031 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058579617 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05937877 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059023856 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058891007 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059704841 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063832253 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077749022 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05902961 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058652254 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063755037 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058887903 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059060081 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058456623 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059272133 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.05887324 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058755888 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059044959 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.05898336 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059438991 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058603719 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062741456 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063968484 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058592991 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069088836 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06420743 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059086996 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063180186 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059753517 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058499306 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059203749 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058316351 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058482251 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058874574 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068591084 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058639488 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059610455 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059636801 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059322742 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058400351 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058986035 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060664712 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064458218 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060055233 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.05833784 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059331188 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058342383 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059844229 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059168802 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058407349 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058646261 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063084731 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060784199 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060233475 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078883358 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060328556 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068488969 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061099934 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060214564 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062556923 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059282792 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075861144 seconds)
  done (took 5.651511442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079528866 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083761394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063887476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063962361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059172989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059941629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067879107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059226713 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063590376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079476744 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059189734 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064023621 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063382814 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063739877 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059078076 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063612987 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066609623 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059403527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059044029 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06342121 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059879246 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066556837 seconds)
  done (took 2.677412261 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135875899 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064576921 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102689702 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07242484 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066982079 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072322645 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064385755 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064466767 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064690873 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065096531 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06511453 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064988454 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066858374 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06506648 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065241839 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065388762 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065068155 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065415362 seconds)
  done (took 2.539920405 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074847063 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064923874 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085181594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064699106 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064534522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064801127 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067997414 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068328477 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063891803 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064841019 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068246397 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064304125 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06411143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064534016 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064464819 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064580988 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065273922 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064532278 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067792424 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067662744 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067819943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068188448 seconds)
  done (took 2.717817711 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075438405 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063756438 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078384074 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065296649 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059337997 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059492993 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06411755 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063566151 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064304039 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063769086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064376459 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059107731 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064890942 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063602488 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066797127 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065785478 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064857517 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064489539 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064444255 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060597091 seconds)
  done (took 2.541880115 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085082412 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061657081 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061403214 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080611689 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061536136 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062014494 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080572445 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061413985 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061414263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083140081 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061465698 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061524296 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081257123 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081045288 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061553777 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080802518 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080856759 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080593898 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061751489 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061719278 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083229499 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061556619 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080926109 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061784552 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062064978 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06179673 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062077134 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081036698 seconds)
  done (took 3.213166164 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062766188 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062377217 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062289 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062754902 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063004848 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06274035 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06272913 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063593535 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062473014 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062438936 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062363564 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062813119 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062539043 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062048216 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062522842 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062459092 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062740979 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062979207 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062577758 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062616331 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062286165 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062719855 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062630869 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062971623 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062582762 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062338185 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063078898 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063171206 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062325049 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062990667 seconds)
  done (took 3.131383925 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071344326 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070655877 seconds)
  done (took 1.394030756 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061297414 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076096442 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058876505 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071024679 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067632837 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063274213 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067406545 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06705032 seconds)
  done (took 1.780280732 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064822141 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088574616 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061192861 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061369337 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064298808 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119948932 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.07331847 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.074849478 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074519077 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063642296 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061267031 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072520592 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060341883 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074134805 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061921833 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069492122 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067722596 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072917026 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073142574 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059035279 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072804929 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06096798 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059326025 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06127086 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060136118 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067782732 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075925815 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072827023 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068934297 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058553046 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078918146 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059531745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060201716 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068814054 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063622929 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.05918962 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094830693 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060355022 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064435721 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059275963 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071528002 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079878284 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073429058 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076945625 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06073112 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061197485 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059455783 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.06098857 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063105015 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068998724 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059341602 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067252119 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058679775 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060792899 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069807655 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059750774 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064811429 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068591272 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073253338 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071376528 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069690948 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076393655 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069344506 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068525844 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061573636 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080136802 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062480112 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073649293 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075264803 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061792633 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074195612 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060506974 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059589382 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060748035 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093335442 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062385061 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061990874 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060557202 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060895825 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061998191 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069968328 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066027246 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067785485 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064338162 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075388535 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06802221 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058952119 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065451406 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076806572 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06278479 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059328304 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075212904 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062592205 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058881925 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076190328 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068968381 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061186111 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059660212 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062661896 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072149067 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060198521 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058212385 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068178737 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061004387 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061618879 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063015687 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067813355 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059778512 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069148264 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062971553 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060016546 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057419623 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062826246 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059179003 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057426166 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067850493 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058336094 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071933481 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065122474 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072726092 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073788578 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070700178 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075848598 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059858481 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058686641 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077393683 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06953835 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061431817 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077802113 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059340538 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070387771 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.190098557 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062481036 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.071307217 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060346437 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061764627 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060244347 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065181471 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061704114 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063173132 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064520528 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068389555 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072704424 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061116044 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068389682 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059990112 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075086408 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069407471 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064225181 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063077551 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.06065716 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071581327 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066336999 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069501224 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059553394 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060255878 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059899359 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070329275 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069257959 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060939485 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066627496 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064406074 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060207196 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.05976142 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060851713 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063474952 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062874927 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060746992 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067876778 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068249121 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076183692 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066655457 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068541797 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059252525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059380868 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061656461 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059327824 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064554722 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06934461 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074657992 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071694637 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079980474 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059797131 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069716443 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061117902 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076140224 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072712377 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060403252 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063673257 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058679824 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060845939 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068700628 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071185462 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073004761 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074158145 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06434881 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0646932 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059388453 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073975446 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059795469 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068494993 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069185509 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063610758 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059747538 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060968113 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068979219 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063987639 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059608676 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074675464 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067062362 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060636309 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074113914 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059603925 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069646227 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059053744 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063681194 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065124397 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061548351 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069214166 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074869916 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058625522 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060165246 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074800539 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061956923 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061527171 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067662554 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074348534 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065338847 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068534339 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070214759 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069340532 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064275067 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069447454 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060325587 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068188817 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062021328 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070629373 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059430101 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077076228 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057957981 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073650998 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05931926 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069926913 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059779186 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068457863 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060047114 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075869517 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061685573 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060201898 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070385564 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057827697 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067505787 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058929755 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063763389 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065479139 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067731558 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060262159 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067720065 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061091092 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066984339 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063182259 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066705801 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067557804 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063008239 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058826713 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067024252 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069268762 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066529706 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.196046529 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062768059 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061714449 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070410266 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062656991 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062548668 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069335093 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06521158 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066286632 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061572623 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062256194 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061463258 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068718938 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069714338 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078172145 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069268811 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068258465 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069316125 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059829691 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075270281 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059750591 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067512556 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0589883 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065576299 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068939064 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.06011629 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078448158 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0613047 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067856304 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071622598 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068356738 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063640843 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077165954 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062675226 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068397745 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067938834 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064375883 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066190733 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061501697 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068266526 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070311158 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070895311 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061274322 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067238455 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069104036 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060958792 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067176779 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062432395 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068528448 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061454105 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058669778 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064620194 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071178513 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064331509 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06515336 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059746816 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058907922 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060045054 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066095382 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065043213 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068628096 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074680193 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058597184 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060587651 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059256354 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066014619 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077298326 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069472574 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067801136 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064814039 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060447752 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062395733 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063250613 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061229921 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064176002 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060129131 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060657766 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070184365 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061624361 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064166035 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060108802 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061103037 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06939389 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064411807 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060048935 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067319131 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060363543 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065761466 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06014445 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062963599 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06599068 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.05911308 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063348222 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070348565 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075204086 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066556157 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068592738 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060682783 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067222065 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074843154 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066694674 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060317907 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068959233 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05921242 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077575854 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069782126 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069749527 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070533287 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061637474 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075867924 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063868709 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069387251 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075369332 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06153862 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06669158 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059951647 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075842941 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064612254 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060414895 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068598151 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068418544 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066124399 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071585434 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060528273 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068322477 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063446258 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062233271 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060443283 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059926559 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067180577 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074447681 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059226711 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.062352141 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066320762 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066742409 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063209983 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.21171448 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069670884 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062281856 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062987044 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064965674 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061553865 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072935895 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062028435 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065873566 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066468819 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060554586 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068726638 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07775465 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069938799 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070868547 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060161429 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059451699 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076778755 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063368277 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063944516 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068190328 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069584691 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072094533 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068789377 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075801599 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060542378 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065474666 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072609499 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060879913 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060056207 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064156958 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061901125 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070325496 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071145269 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069225681 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063472672 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06758864 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07458001 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06307406 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065845343 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065984144 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062525266 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071765324 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069776144 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070343419 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063011759 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061392978 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06471598 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070215774 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069079324 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070140983 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062815606 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067857265 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074938849 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068701266 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062832641 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059513916 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062919477 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068936921 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063943908 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059088944 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063936821 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063608873 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065891512 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069632189 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.0641534 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059635721 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075851642 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067623089 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068674591 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061803353 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061303915 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060182659 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059697062 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072291613 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060933359 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062813318 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066416389 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.06281629 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078296803 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069987266 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07698419 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062039633 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065854233 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061012196 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070798383 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06574341 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061720324 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072235814 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061966405 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075366945 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.07108335 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067559627 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059144582 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064609121 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067986734 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074368948 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068964191 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068646726 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062872422 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069649541 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061444171 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070587836 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059546465 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058882583 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069830538 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068025169 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072061024 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059129889 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069192226 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061040059 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06758123 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067769507 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060867716 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060955862 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060861805 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06857226 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06364197 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068471435 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063782534 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075340036 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059875663 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069872328 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068363625 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069807582 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072212761 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0708275 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066930371 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059092991 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066143298 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067107371 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059876474 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063951351 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06204247 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07929046 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060695005 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060462962 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.212671675 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067093529 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061152249 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066945919 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066271412 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070327718 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.080501837 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071241483 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064712022 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061333588 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064846622 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064853865 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059163126 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059238536 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059887471 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070132762 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064982355 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060033813 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078386475 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061443328 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068726351 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071493927 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066674664 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061252912 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059193662 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061140679 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073316409 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075175402 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064042379 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068114796 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061520056 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069022001 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059892504 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069148465 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068872637 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068679254 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059708617 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060597063 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074782902 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074801107 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065087951 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069587491 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069229583 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061578156 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081606587 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069558842 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061163453 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070787246 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062778077 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059660364 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058977056 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060872564 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071353928 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059608014 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062009652 seconds)
  done (took 41.251688521 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097139577 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06128245 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06008633 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059565718 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07047733 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0601408 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059866112 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06078947 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060896346 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062480873 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.05952069 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05963709 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070109026 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072150649 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069950129 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063343301 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0600401 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060931603 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059425679 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061863673 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070817869 seconds)
  done (took 2.725918796 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065881448 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073878737 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070710736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07592293 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068681205 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065364589 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072092363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065218811 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072554439 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070555806 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072405111 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064135386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069422655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069651785 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069170484 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06359834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070661731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067755489 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063876778 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070201395 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063221025 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069853893 seconds)
  done (took 2.862389131 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061232948 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060153666 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068093937 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059744787 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059010104 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062898312 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059289452 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063788698 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063727155 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.06432853 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068581004 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060408084 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058806977 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.0651418 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058916234 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060250769 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.100663533 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060124012 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060447785 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058964383 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064619956 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068504793 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059742292 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059415972 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063561445 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062429249 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059091216 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061957216 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.05986164 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063767589 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06076623 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059138078 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068567728 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067353109 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064194968 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064037251 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061294928 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060089783 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059476367 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059591884 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06794381 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060741856 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059526293 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060853212 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06906576 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059798838 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059095246 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069095409 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059939259 seconds)
  done (took 4.437559216 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069443976 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111183098 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065391726 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092485052 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071601705 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065202819 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065127915 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092569891 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060538602 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060949701 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072468295 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073354641 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062535565 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063869577 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066271703 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061725719 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062537113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061267731 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.064979899 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061788831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064751665 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06656905 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071165577 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072401919 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063253776 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061707958 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06222391 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063469839 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071540725 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065460078 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063252939 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064374061 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072312914 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067122673 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061604251 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062087653 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072706037 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062715858 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062198073 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060598239 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061900842 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063250177 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066377986 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072884658 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062219461 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067404965 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062495627 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060317174 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073128906 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062353858 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066000151 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073248102 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063368987 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062959525 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063831361 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072470215 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062791706 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061554113 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062449171 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07213791 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06067364 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063048118 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072920101 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061900547 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065266609 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073030425 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067177059 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063310332 seconds)
  done (took 6.023581137 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068707526 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093218234 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071082631 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070536466 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070023002 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071422776 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072333802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072005626 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07168903 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0723181 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071674291 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110820377 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066667107 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074021692 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069618198 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0698176 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070145963 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06978109 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070002251 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070117906 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07039638 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070459757 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069857242 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07013416 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072105214 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06653441 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069896918 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069982352 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070217819 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069718274 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072446777 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069571051 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069351326 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069905556 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071786491 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.06982234 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061644041 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071698685 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071276539 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071699123 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067751525 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072054304 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071619853 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067918887 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071466706 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069843146 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070357056 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072234464 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076642597 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071278321 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069761001 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070546448 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069973823 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070498417 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070709646 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076355434 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07073592 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07044104 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07093131 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072273952 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072762157 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078567007 seconds)
  done (took 5.832846612 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072542407 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066618789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078833715 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06271035 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059412604 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069500109 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06149919 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060927616 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067475481 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066113254 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067552559 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06895621 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071200415 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067382512 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068836452 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070511911 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070159028 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068743911 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065833029 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068688289 seconds)
  done (took 2.735880932 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075316983 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07811454 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066173153 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068500145 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065307435 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0687511 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06555874 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066633192 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067634038 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065378036 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069625665 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06997208 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065608332 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068744526 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06941039 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06861123 seconds)
  done (took 2.468638346 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0659686 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066505198 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066296246 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06215465 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066758112 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061375777 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063422803 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060997831 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061145901 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075354845 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061564349 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073053482 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060898632 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059441805 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059959245 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066589369 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059978843 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060615796 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060608931 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065216439 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066950997 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061437081 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064681541 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060727351 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066114587 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067268342 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061766875 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064495384 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060656319 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060896786 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066286819 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068183675 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061039223 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061256277 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060057137 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060472062 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060567737 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061906117 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066173196 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060673156 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059339626 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065778893 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060812511 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061618456 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060050847 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061138294 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059968987 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066557412 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060839384 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065802755 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060572828 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062449298 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061216772 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067970161 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062888261 seconds)
  done (took 4.845475669 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076408825 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065343592 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059992441 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059345881 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065038557 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065197434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065573644 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065120927 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065534422 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059582699 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06582927 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064570134 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065507838 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065110106 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065410459 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065378985 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059704195 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065125427 seconds)
  done (took 2.547863533 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071366854 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065522584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069638289 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065205092 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064822232 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065612757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061857815 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061220641 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060787578 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065893229 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065330227 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064194395 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060005288 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064010055 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064380913 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064557996 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063743052 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060152363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06439097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059975966 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064189346 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05974849 seconds)
  done (took 2.783814589 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.087077321 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082866877 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.125161631 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079039763 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087627598 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070552943 seconds)
  done (took 1.909036349 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092767087 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102195855 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064819206 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065151915 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073142587 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068162349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068920697 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068850253 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073474955 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071401778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068594274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074455375 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073565508 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069701329 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072855723 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074941795 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067452386 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067413086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064545551 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074851642 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068094476 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072572257 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067844116 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067772808 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067913598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069182825 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075156022 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071435098 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07053976 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073239623 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075026167 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067685492 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072724901 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071669922 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064856463 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072852602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067882627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075698765 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073223169 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06974128 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064780566 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072895113 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072749897 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06993079 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07574589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068129093 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070001243 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06804105 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067803543 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077260158 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07304656 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069430341 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07316094 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075051535 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075437898 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077568227 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071539151 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069428359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072940754 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071584705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069409454 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073097885 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069500798 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071368186 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075050964 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069289276 seconds)
  done (took 6.11788513 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098440665 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065968381 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068582891 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073290964 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071452055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069213144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070024863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069112949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069586473 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066774421 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104436764 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069706925 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071553779 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071517477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070180961 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069642284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0691562 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070835867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06712027 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079499106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069431138 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071064208 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071180569 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071474827 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073155725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076695824 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067954064 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067631434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067201262 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067259438 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069555186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0677755 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069206962 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064516807 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0692758 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067487552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067388636 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070853894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069707073 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073382647 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07082776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076206228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067587307 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067522952 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071536849 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067453114 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067194976 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065001775 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068517484 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064912122 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071402963 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07106508 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071626267 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06965876 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067935426 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068098149 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067809661 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067767923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068100933 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075352983 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069465053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067863386 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07760222 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067706402 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067670737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069721698 seconds)
  done (took 6.065631415 seconds)
done (took 125.469827077 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210739574 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182151144 seconds)
  done (took 1.759831888 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073133686 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095778541 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074356326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134006823 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071520279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105467949 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103268139 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073951585 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070895584 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071010355 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070635088 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072753509 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135785531 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071088314 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070615795 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073459555 seconds)
  done (took 2.753672472 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106457447 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181350723 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112672245 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068720237 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105861572 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074937709 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068992071 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080139328 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071932525 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080857039 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075030494 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073436846 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071168848 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073337941 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072148559 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07482614 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07066318 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075227298 seconds)
  done (took 2.925140389 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095903453 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.085119965 seconds)
  done (took 1.572812856 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154465124 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104418151 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142907121 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319739118 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127956057 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.1246524 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128461247 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125281854 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108881783 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120034392 seconds)
  done (took 2.843365034 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105037409 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174170024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309730789 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119226264 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074508148 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09625816 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121541003 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081079631 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078212727 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077871009 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080508825 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075242275 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099609758 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074326258 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073384492 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075726063 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102903376 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072915427 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073719972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074212815 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10398557 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069635112 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074576896 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07345072 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076406111 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076625738 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070973259 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069865374 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074345742 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073511839 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076917279 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093751347 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076316536 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.095972469 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073558167 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.097506963 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073201643 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072426558 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073873445 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072581524 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075482016 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075041205 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078168321 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075367628 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070700094 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073290239 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070377132 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069063586 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077162988 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070090315 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077365727 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076222673 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096234206 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070082849 seconds)
  done (took 6.065295756 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106976083 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104616619 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069573449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111658368 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10417234 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068965227 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102991425 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098973041 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107180222 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068589955 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067822733 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068129557 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074798621 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078311869 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114270086 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10601357 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070045645 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069215447 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105587312 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105926899 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067848834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09988589 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099077692 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104660012 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067527951 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068659647 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067368632 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069187987 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074542368 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076533409 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069447416 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076790615 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080452187 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073508351 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067122703 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067634748 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067000281 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074329228 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074583657 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075262942 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073397433 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067263544 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067210842 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067600161 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068713692 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066889551 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072894987 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073940452 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073197525 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068002642 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0677715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067719325 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067479667 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073557966 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072594048 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07450406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074344813 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067574946 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067342777 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068695345 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075317415 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075242205 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074205945 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068303779 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075888599 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067235758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075914848 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079077415 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067556736 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067914965 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067909047 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067628551 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067719939 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073356069 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073474047 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068139627 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067579894 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067105428 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076013193 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073412772 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06762958 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072677566 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066747502 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067876527 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068534715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068121428 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072605983 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074257883 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06772569 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067601654 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067310258 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067655279 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066427011 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072222138 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073322113 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073664256 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073288444 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067923515 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072955519 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072977669 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067644573 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072110855 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066881706 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067044034 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066625632 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071568298 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071538173 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073864011 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066265283 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066359114 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072182392 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074383474 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066570496 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07132654 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073710278 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.206117435 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068633618 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0806119 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068966801 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075944716 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068272047 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076199787 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068313362 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074091173 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068595617 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067552915 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068551182 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073612319 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069251822 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068099 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068770799 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068392649 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074155602 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077395323 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06846244 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073539232 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074134355 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068847552 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07429836 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068009857 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074737432 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06737782 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068257019 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067347894 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077371446 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067919145 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067770752 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067771408 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075833797 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067849579 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075981011 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073431173 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06704125 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077628376 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07581005 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073019039 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07659612 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068536096 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067915054 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067626428 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067843307 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073345932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073906575 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068240209 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067911812 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073136916 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075931643 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067249557 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073234427 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072850853 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073681329 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067693034 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067992093 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078894349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078147676 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073959062 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073412573 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074525209 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067439943 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072823009 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073618256 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067471633 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079906862 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067608331 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077824323 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07345357 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072668187 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074437843 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075104157 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075417961 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076296104 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077415674 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067654996 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067302493 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073611729 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067267507 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06780696 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073343362 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068526389 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068234261 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078457868 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068226294 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075579353 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066785555 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074002312 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067412476 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067870215 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077807494 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068024754 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068142995 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073523785 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067638526 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073241319 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076135241 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07349922 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06722066 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067668496 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07348911 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074100683 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067213237 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066815611 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067737489 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071947754 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071466737 seconds)
  done (took 17.961549479 seconds)
done (took 37.285332113 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216905016 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164156228 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198589995 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114434552 seconds)
  done (took 2.191637128 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.089115604 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097326773 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074161636 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064597556 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078861005 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064443004 seconds)
  done (took 1.906187323 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.247346485 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184478585 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169431629 seconds)
  done (took 2.033068466 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212583469 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194872607 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.717657289 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300449617 seconds)
  done (took 2.959876084 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.12653787 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075861831 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062569552 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073033891 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.100972025 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.129313647 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.083202898 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104722185 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073763549 seconds)
  done (took 2.322424707 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128030711 seconds)
done (took 13.000292076 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.255640155 seconds)
    (2/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.093097165 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108900268 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075516118 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068491148 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071995628 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.236416775 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.203549724 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075235218 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094011225 seconds)
    (11/309) benchmarking ("sort", Float32, false)...
    done (took 0.137370933 seconds)
    (12/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.232322818 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.252686736 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.210779216 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172982442 seconds)
    (16/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.07834425 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118548464 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.20393798 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.212119467 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073780415 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090742387 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 0.170421381 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072777629 seconds)
    (24/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.160966294 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09734348 seconds)
    (26/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071890381 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158799275 seconds)
    (28/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069853772 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.151517416 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075551191 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.179745145 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071713377 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180127025 seconds)
    (34/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175286454 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074745805 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.218781978 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179608879 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089947242 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091651363 seconds)
    (40/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.181390057 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.222098742 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163997472 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072603612 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063083183 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114938168 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146157593 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077447812 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.146845296 seconds)
    (49/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108256143 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.066633791 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082084422 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064059374 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073416036 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066675132 seconds)
    (55/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063599583 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.169600812 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063650735 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.17404347 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.227017058 seconds)
    (60/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.07206502 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064176862 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063575981 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15872598 seconds)
    (64/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142516276 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078443239 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.225015477 seconds)
    (67/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088770336 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085764977 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075750174 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087558546 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12549523 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065000353 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.189531921 seconds)
    (74/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063407021 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11931801 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128313563 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065729895 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086924557 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119884891 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.381431277 seconds)
    (81/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07592107 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163909174 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076088483 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126245357 seconds)
    (85/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.140671595 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075465382 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12695791 seconds)
    (88/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06896401 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067808549 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172421948 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073443637 seconds)
    (92/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073847639 seconds)
    (93/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073030659 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072513441 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072647755 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064651229 seconds)
    (97/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069777179 seconds)
    (98/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.216528761 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.197577052 seconds)
    (100/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065272114 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065358755 seconds)
    (102/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.200289191 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084016941 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065663531 seconds)
    (105/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.142421269 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.142500447 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075560623 seconds)
    (108/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073032158 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065431522 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129806218 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.231488231 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075214914 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157909117 seconds)
    (114/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065797726 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074254539 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092111709 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063907593 seconds)
    (118/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063231781 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157115391 seconds)
    (120/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074138679 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083584623 seconds)
    (122/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064313543 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081117794 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081661812 seconds)
    (125/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.139344583 seconds)
    (126/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065368154 seconds)
    (127/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064109678 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075297317 seconds)
    (129/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072921208 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130987961 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063551246 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188544128 seconds)
    (133/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.142587764 seconds)
    (134/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.167221065 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072425915 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076519428 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151176114 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074544254 seconds)
    (139/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062649846 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082356695 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063656165 seconds)
    (142/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063240186 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089605183 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06438045 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070855861 seconds)
    (146/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0736174 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074898237 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072493 seconds)
    (149/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074953262 seconds)
    (150/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.063946246 seconds)
    (151/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.094226721 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071807744 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065164145 seconds)
    (154/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.06529034 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090524313 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072533409 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149281646 seconds)
    (158/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06660167 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07376746 seconds)
    (160/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071808059 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064177223 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072469488 seconds)
    (163/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065329889 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067940751 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.174237276 seconds)
    (166/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064563959 seconds)
    (167/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066103507 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065920682 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 0.136795158 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066974583 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067828068 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.145715501 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064301301 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084844904 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081377647 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075217176 seconds)
    (177/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063990815 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065774331 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087690708 seconds)
    (180/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13982436 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064424365 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063824465 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06833076 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.138269163 seconds)
    (185/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.136935205 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064133449 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115069241 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063910159 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.137020477 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075372181 seconds)
    (191/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062907443 seconds)
    (192/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089118522 seconds)
    (193/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.063712764 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063958237 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063903464 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062837592 seconds)
    (197/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075365037 seconds)
    (198/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.235854292 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080934326 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06542193 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073395252 seconds)
    (202/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.067160411 seconds)
    (203/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.066058373 seconds)
    (204/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06733284 seconds)
    (205/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.166316446 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081595333 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066578253 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077784915 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112994237 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075552465 seconds)
    (211/309) benchmarking ("sort", BigInt, false)...
    done (took 0.261447064 seconds)
    (212/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066718857 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147122489 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150003246 seconds)
    (215/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074576241 seconds)
    (216/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067400757 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065263017 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072626213 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072763398 seconds)
    (220/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06620484 seconds)
    (221/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065347854 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.211092849 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065853761 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129429279 seconds)
    (225/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.140721579 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066181914 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076815605 seconds)
    (228/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.136947885 seconds)
    (229/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.077425035 seconds)
    (230/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.064736838 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.188122252 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088516373 seconds)
    (233/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076830152 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160955296 seconds)
    (235/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068386228 seconds)
    (236/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068408667 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067768841 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067266703 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067862571 seconds)
    (240/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064939708 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065567898 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.224742083 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065938607 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064375983 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.149269625 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064868713 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065319017 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07369505 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090240126 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064244505 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065226641 seconds)
    (252/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069487691 seconds)
    (253/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064546725 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064858533 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076529751 seconds)
    (256/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065611439 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151703743 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067439532 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064512592 seconds)
    (260/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.0904077 seconds)
    (261/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072256027 seconds)
    (262/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063888476 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087650761 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084091688 seconds)
    (265/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065213876 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072200229 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.149621398 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068550158 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092012711 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138832902 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084673658 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064915799 seconds)
    (273/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065627443 seconds)
    (274/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063892118 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168711689 seconds)
    (276/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183121898 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072649278 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065800595 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066106404 seconds)
    (280/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078265806 seconds)
    (281/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067169085 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067414923 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06643248 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066599448 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068242704 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065883525 seconds)
    (287/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064865808 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065512868 seconds)
    (289/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072809866 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063636372 seconds)
    (291/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07198142 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072844608 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07134529 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06648267 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077531459 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066057354 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068285043 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066180073 seconds)
    (299/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.066209525 seconds)
    (300/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066901596 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065119034 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063145334 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066413744 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065174837 seconds)
    (305/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072373042 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065128443 seconds)
    (307/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065466525 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06471477 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130490239 seconds)
  done (took 32.765092645 seconds)
done (took 34.21641059 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085493739 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089454502 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072525341 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08403477 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079495803 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.0981095 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072926023 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077008754 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079181708 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078000026 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077647292 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071376792 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07412681 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074129827 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071792597 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086618053 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08014451 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073546118 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073999342 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064480269 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07335346 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064769138 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06338057 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071904258 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075900891 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07198383 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074301103 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074380059 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064893133 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065391522 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070000002 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076436591 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06512428 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.0762961 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073372915 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073493807 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074903304 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078036992 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064002708 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06517587 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07635642 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066255504 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074330082 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071475188 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070190206 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072489961 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07339629 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076576248 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086756515 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069641926 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076253895 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075853947 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076021511 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07072695 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070701844 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073572834 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07144998 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086760498 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073764783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069224184 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07534636 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074548629 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072358697 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074014962 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074285344 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079135851 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078643797 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074770868 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078728827 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074328625 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066017035 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075032409 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071605395 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066018852 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076632645 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078966485 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063414868 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069950068 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072774807 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073078401 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064462113 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069019689 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064048564 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070157247 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068890191 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07130216 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070528225 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072192928 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064076085 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073299087 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072319292 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072996109 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063960008 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076465162 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064596725 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071734881 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065033824 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064912381 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063846257 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070717554 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064462853 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06989742 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073382116 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063480339 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069827286 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077679634 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064539613 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072465897 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063313264 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064290631 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074831119 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076013761 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064943481 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069382027 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063449079 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070718469 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064050586 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064586369 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064682891 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064913395 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069517511 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064763459 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069155601 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070938551 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07639836 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064737963 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069927739 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069183389 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064854204 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071400886 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065264266 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064720708 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063611385 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076758887 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068884555 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064553785 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07008336 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068591714 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071853568 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062992626 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072476999 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069940641 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06851401 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070760802 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062410811 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074892515 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068151974 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068291459 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.205181102 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066397355 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065090052 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065627198 seconds)
done (took 12.589661565 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066138646 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103617401 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072598673 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080517598 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076969964 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066548788 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068851929 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080821194 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06863862 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083827562 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091379307 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086067165 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090631914 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063466481 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065192467 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065795042 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063739295 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072748609 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079067789 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087629982 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093329671 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064820096 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.067210696 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08150886 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075672847 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080832368 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066570404 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066167426 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068020239 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081944811 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089980416 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06584488 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066426975 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078617516 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079141291 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071564479 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066053835 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068477386 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06652887 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065644074 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067477954 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078925942 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071154073 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069249232 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066861687 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066878496 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066155529 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068308438 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078146192 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068701141 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072584522 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076831718 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066703759 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065774925 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06551973 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.07092584 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066194029 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066524358 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065491602 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065682949 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065642271 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067594779 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.066172263 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066212753 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069025382 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067673533 seconds)
  done (took 6.302630795 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079758464 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094128108 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078526728 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077623246 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065900062 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.0679811 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06754388 seconds)
  done (took 2.095469796 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066978313 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078545715 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081570363 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081301597 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.075130026 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083885414 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06761661 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098810268 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065707763 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079120405 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110291428 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082166388 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068952023 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077395181 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066097416 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072703965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066138943 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07584776 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073151062 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082379207 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069412146 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094258366 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080316797 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066436221 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085519741 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069481313 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064543304 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06614842 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06722462 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066918515 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066946309 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103877746 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069080693 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077343413 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063520414 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.099945401 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072013267 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069303757 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.06780763 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074327348 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070933916 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067535901 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06404385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067338456 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068287796 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069552762 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064670189 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068990679 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068109152 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078623363 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064755947 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069009595 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070282508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070266169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072733612 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069433449 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075754169 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067963229 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077729373 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073815482 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067135209 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073173682 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073009202 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070770726 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072864937 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069963255 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068841892 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070547222 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066836114 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067964439 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067761731 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07245121 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065289631 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067495377 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069947876 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067582861 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069286847 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082713222 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08265352 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07803412 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068495191 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067074562 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069173812 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082599496 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070139617 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067358165 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069953221 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064794002 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070308072 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067005089 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072438119 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067106481 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074691217 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.0680922 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070679431 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073928074 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065587835 seconds)
  done (took 8.611361341 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068217327 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067021921 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067802221 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06726299 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067290004 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066743328 seconds)
  done (took 1.99966758 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087772436 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066102183 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082205982 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066021012 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10309891 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073115282 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073000256 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073156635 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.072108076 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079983079 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072239781 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074885357 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072055864 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069955173 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071863004 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066910425 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071846379 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068947238 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078953165 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070644336 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078347791 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070639294 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070534018 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077014002 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068393797 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066312926 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066884221 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079049871 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081492916 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073139737 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069958365 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068905996 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074520718 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072733295 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071730296 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073688109 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065650609 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070912268 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068170133 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068390757 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073966555 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070416927 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067723513 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071197507 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072750946 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074303601 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071071867 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069360189 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071628437 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070846156 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071191547 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066201777 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068579061 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07144139 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074398981 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073511205 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071311429 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07159735 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070126041 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074291696 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066076177 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069589311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073815515 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068350754 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070678089 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070911522 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074468057 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070431075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070444151 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065894153 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071414152 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065880749 seconds)
  done (took 6.75320775 seconds)
done (took 27.311559001 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544646827 seconds)
  done (took 2.087687238 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.5735468 seconds)
  done (took 2.154003992 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.69728671 seconds)
  done (took 11.273190269 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.300433553 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.321839575 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.735876725 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130612781 seconds)
  done (took 3.10894312 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.744494705 seconds)
  done (took 2.334964338 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.2354841 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232431289 seconds)
  done (took 2.068008485 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.340422885 seconds)
  done (took 1.921057085 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.123686661 seconds)
  done (took 2.701352084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.220891657 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156808681 seconds)
  done (took 1.966834882 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.488256682 seconds)
  done (took 2.071525536 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.294231795 seconds)
  done (took 5.88370608 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230286558 seconds)
  done (took 1.856430317 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232070667 seconds)
  done (took 1.823721104 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.140008507 seconds)
  done (took 3.7232791 seconds)
done (took 46.563866377 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0830073 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085629957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085631129 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080896 seconds)
  done (took 1.895808737 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072659477 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068753997 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072707664 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072469166 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071126113 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074308369 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.074174177 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071454687 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073035821 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.071428035 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070080912 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.071043438 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.073471238 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.071305208 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072894952 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072354571 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069151831 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068839256 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071487911 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069062284 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071257522 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069026328 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067415534 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070885477 seconds)
  done (took 3.294375983 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077293088 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071734099 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075101289 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070734422 seconds)
  done (took 1.887070052 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.075233881 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082741136 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083564875 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088328947 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07585091 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.077559003 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.084102886 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.085981505 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066801944 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087155312 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.070100411 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.068104079 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.068234736 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086615858 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.084292333 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063632113 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065132955 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.077537659 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075786419 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079815689 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06985272 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.066906289 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077748116 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.077300152 seconds)
  done (took 3.430814829 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077900697 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065530045 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076769084 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09067998 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09182918 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065296508 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07754439 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092324267 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122267331 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064922611 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070986291 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06544778 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103394547 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064793122 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079041838 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104963685 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107413846 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068215797 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096470582 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064419145 seconds)
  done (took 3.250081643 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07557495 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068796089 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071026193 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066842947 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079180791 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075021843 seconds)
  done (took 2.039565502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067855216 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067735682 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066568803 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066464226 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07127623 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067805919 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066852957 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069441083 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069381096 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068854471 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068080629 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067588524 seconds)
  done (took 2.415588557 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.164361737 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068685276 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069370698 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068146768 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070436187 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066155976 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080615694 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069575656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085194361 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067649503 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06796068 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070624379 seconds)
  done (took 2.546799155 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101425741 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098655489 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.144996398 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118299108 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095031767 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.094041123 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.156468406 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132934965 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114005719 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068549683 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085227124 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098422912 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097673585 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1312265 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110305516 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071563369 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.110080067 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079389386 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112308029 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12024365 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113737829 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119685607 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091476761 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0966576 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105262524 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116227889 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071473106 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071645441 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147795937 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098940513 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.091522918 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098286864 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10747168 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068502753 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085145106 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.104126505 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081498825 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113588935 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085819526 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097244935 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079770577 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128897614 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104229066 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10161189 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129035032 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091315999 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108529128 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104756914 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081088348 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.117130451 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096611066 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08988902 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078800099 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.156401059 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087688484 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.108694322 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109653025 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07941295 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086379307 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099189671 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126370225 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.103028285 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110586656 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.256099397 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.09076667 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09080586 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128907378 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084197868 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099989988 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127165222 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.091658782 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074966326 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094983696 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069103453 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095772009 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104693209 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091286794 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109639744 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075745826 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125401717 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108303185 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074605478 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.118809305 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100555885 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154198955 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094380326 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099364119 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089907919 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.148461474 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083847464 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079045709 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097546696 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127866582 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092483837 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095042446 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127841128 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095229739 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086341586 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073954075 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.088020612 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099625519 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105990122 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09985451 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087743262 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085838102 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094786094 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073597452 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079937453 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.099972997 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08414159 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122416588 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107364835 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121611416 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.07804064 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103542537 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.09575438 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126029766 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116171497 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082959407 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106135403 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138462889 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.112259722 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084406356 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099025608 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109241038 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105507728 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094451738 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133851162 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114102096 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087304469 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091601294 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092792411 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.263223623 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153338745 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09056134 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.104648635 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137966883 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.113366676 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089448449 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082786204 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094422036 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104686082 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139583396 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095043191 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070209734 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090492546 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128966544 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075686319 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097992195 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.092713329 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082294075 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080205294 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067843577 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102718572 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134440843 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112139649 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097107489 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.102148247 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068661836 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097471324 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10338573 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13924349 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115996751 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096584179 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.098086727 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102852631 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078771329 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131063431 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.131532852 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090066091 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089984631 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120845069 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.094659735 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.10301039 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113346874 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101809002 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099763065 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139482615 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118728497 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.121959013 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103435115 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121953676 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080592559 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113870517 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073758137 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102526339 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076227795 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10356735 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078078062 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109270716 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07761437 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096997145 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.068064119 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072070253 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10723395 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.243556192 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085656631 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133629846 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.130122405 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080964434 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100225708 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098711729 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100158452 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107754739 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088868611 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089986825 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078007303 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078925866 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09726652 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092532069 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105620577 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.078564587 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074646278 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136197769 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101809169 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089637749 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094432736 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.118149552 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087970746 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086506304 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102228854 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136725194 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.11641501 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079215223 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091489252 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.069940467 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084040865 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074898823 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10818322 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074233163 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108935054 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068480711 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127954289 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08562399 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100140961 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096109263 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127420025 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089158703 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126149327 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085512336 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106548907 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092817402 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093792171 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108410316 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.0944252 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104022343 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109361426 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091978723 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088609795 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119036252 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104367233 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11573955 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104479019 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134029384 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110580228 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074552853 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102831838 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098377025 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142808862 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097990234 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088181247 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093925849 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101599067 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079609452 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137383899 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083645548 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.083723543 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107791573 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.085399126 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094048489 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074154484 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.096764579 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091115077 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108411803 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.096449013 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.090684381 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105339242 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105844504 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083289006 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083827864 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115277394 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.121342871 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.09601536 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08840974 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083498201 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09280349 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088907455 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.102072476 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076738971 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07250959 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066185918 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069806545 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.109987819 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101757119 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093733398 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09254907 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096589409 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069840368 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083514613 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083756512 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079089358 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084461657 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108760457 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097145406 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119638221 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.095861298 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081070195 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130229718 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118576221 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079362139 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085780696 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095620133 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073947394 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135947849 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112121163 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073591736 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079717893 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074049377 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078185629 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068841748 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098928271 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098042198 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072363427 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097613078 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091835226 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.115269421 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091993435 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072601182 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.074483298 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.071831125 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.072434902 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096529461 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.074380941 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072735721 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120271852 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09706982 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101287628 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080644198 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07227209 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.39576237 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.071134535 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135103437 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084263979 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112045753 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082323652 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080737869 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090431011 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108254154 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107090091 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114147401 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071778431 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104057248 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15576313 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076458207 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075847349 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075963049 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111451922 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087448479 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140995969 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089426135 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092193013 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077411901 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127719936 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.1032834 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083295002 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127929058 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079805155 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071653443 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086663161 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.111257301 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.07245946 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074638804 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112887963 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.509120558 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090043735 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075383753 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088088223 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126353303 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082608554 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107348973 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117245912 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106596933 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.184010701 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074246689 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089972276 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102602834 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097492106 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091046272 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07987457 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08688668 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086838553 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083909361 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10556049 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079989293 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090424808 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079096897 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102554226 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128352453 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086031748 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.100191748 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086663567 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089445368 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098326122 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111140499 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105584396 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086902792 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087462717 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107829216 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082985016 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.236700369 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098966178 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076337112 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077432902 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115807916 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.082765871 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093180798 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103295964 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.088883745 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112348022 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115589222 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110314135 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096525256 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078167895 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084778581 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086611628 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073593912 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077235252 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074147517 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071160935 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1058751 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084656904 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080691183 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.097839533 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107795928 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099070754 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105415085 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089276739 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095344412 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099193277 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.126408509 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144979352 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097256196 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121727951 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130215923 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076795977 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075320599 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.080265161 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130497291 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080669672 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091123854 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.236837407 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077983502 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080809238 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09009614 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106673189 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082609171 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079018368 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097105852 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109502929 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083467004 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080325195 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091980382 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10854333 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126616628 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088564692 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075004058 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107234064 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101125816 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12269086 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.072570103 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080160151 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.126514882 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086436757 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103485736 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08154026 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122608248 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130987349 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073725164 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08851995 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069996207 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08741449 seconds)
  done (took 50.253763319 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15198847 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.145387066 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.082184171 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.097090645 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185203519 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.195459763 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.11821795 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094143575 seconds)
  done (took 2.857311471 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067267019 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083052611 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10034623 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08291375 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066427572 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067450582 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198573999 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080587491 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065874892 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105251394 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074236373 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068268035 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.359563887 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065493491 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066953839 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074008026 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066803983 seconds)
  done (took 3.435583189 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368745818 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621738135 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.319380557 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074041094 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.015735545 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088057008 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.238425986 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137910196 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081162436 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543687706 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368608042 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131082267 seconds)
  done (took 18.738802861 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07487726 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073846057 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077830112 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077447023 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073949411 seconds)
  done (took 2.125940086 seconds)
done (took 99.780991046 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082367503 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.169222088 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066886259 seconds)
  done (took 2.019429985 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081224492 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079573115 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080082171 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.07741623 seconds)
  done (took 2.073684155 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073965007 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075277777 seconds)
  done (took 1.899816784 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232435319 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173045327 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089117543 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082155847 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080052808 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079755239 seconds)
  done (took 2.003638516 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070670081 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070257206 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070982856 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071083906 seconds)
  done (took 2.033167986 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067129611 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065796381 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068008514 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070762095 seconds)
  done (took 2.023617665 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081747388 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077259709 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077206294 seconds)
  done (took 1.988357592 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107794276 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095745136 seconds)
  done (took 1.955220925 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079228883 seconds)
  done (took 1.836207184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08857744 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094901945 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138690818 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105383187 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138234773 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123666024 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076064853 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076768928 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072853233 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071761465 seconds)
  done (took 2.739011979 seconds)
done (took 22.89525694 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077487416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36648155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358878233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086272694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669754578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355356111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98899251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089546904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098242227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067566583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083734657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647499489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981768689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330343692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966973542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328821006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6493855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068524601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067413406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067500084 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973344611 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067304024 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06810426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068325749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648170578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373114509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068783965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326730066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06710818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069510519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355179867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068298583 seconds)
  done (took 16.236247468 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069287585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121048129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07165728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083416714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070114546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068687989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070826264 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068555277 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110364323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070734008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086260224 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068055275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073166889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070280135 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088673161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069475362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072236077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072012258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073355619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071751684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088240516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06838482 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068759671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069360151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069194674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08183086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069380182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068314639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068451191 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071018656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071992011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070189771 seconds)
  done (took 4.182423432 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12065659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124310422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072505008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107757211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11681107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069426246 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149643638 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090316194 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112801834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068078803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084899905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068311684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104297885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069545568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088594338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068814998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070232081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069400713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068996042 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069006305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086927193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068219592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069452581 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069486411 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069330059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083305236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069608111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068367748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068795029 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070941584 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072454317 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069931196 seconds)
  done (took 4.432758421 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069282512 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070181945 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078226794 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080209902 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066440998 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068846203 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069043724 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066927816 seconds)
  done (took 2.344262661 seconds)
done (took 28.965871035 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078800452 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067412968 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070995302 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087893598 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073377489 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069882517 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06463729 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073989165 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070599421 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07096051 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07228813 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066704713 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069616665 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063963615 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070925003 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065675037 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072262289 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071243389 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070902391 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071383836 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068827395 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072024962 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075384525 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070563163 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070663868 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070953902 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075431037 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072334815 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066494897 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06922755 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067594347 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079584442 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072381698 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072789102 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06674384 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066155883 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070725987 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068745262 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072676072 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075242294 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068571783 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074639848 seconds)
  done (took 4.733534327 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086177607 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092285117 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084726503 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082164865 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103856155 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081337773 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08961069 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078873255 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076571841 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087992861 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073103537 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078806342 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078679057 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071566232 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077881092 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074124487 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079418052 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072971702 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078287208 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079030751 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090247743 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072202231 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078903238 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079230462 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073418067 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080200487 seconds)
  done (took 3.884869898 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071779779 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087422168 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091577538 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140294413 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108987397 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081671871 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081176399 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102478059 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100624143 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068039899 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072197766 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093302835 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096184722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07504248 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106375218 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085445216 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079325628 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069325067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074854651 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102162707 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09080122 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086588429 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101221248 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087876535 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067667351 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076776926 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075082981 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083800631 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076989466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082278514 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073141494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072000358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068486558 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080375092 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071272672 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065798701 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088685134 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079766587 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.086357011 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105622124 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076931253 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068113916 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097169151 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13190281 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066878792 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0699305 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071247653 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079618175 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068888608 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096743963 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084850309 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066498325 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085448543 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06880217 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068673139 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082504522 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069074166 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068900838 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079469894 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073296848 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087493804 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071552129 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086740649 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066997722 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078382755 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068214278 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069002429 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06586469 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102684406 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073876126 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116907554 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068318976 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064949819 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078662989 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078347013 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073839309 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066878451 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085421781 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078763045 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070822692 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078469808 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070021255 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070107092 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103137288 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066251942 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064874167 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064858792 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069220746 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070084169 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067272416 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080194676 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066494986 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070838877 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081370466 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067453352 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067523611 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069460454 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067956884 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066629059 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0776325 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071328507 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068985 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079058222 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068358156 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070385762 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081570372 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076486063 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066911055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068967958 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069755134 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069141905 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071933363 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070222649 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068938155 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073326729 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074614479 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072653246 seconds)
  done (took 10.9846851 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159432682 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150025803 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068313053 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145494119 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075727601 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071269346 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146123736 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08633441 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067443929 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068884958 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067506544 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094732413 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.09077071 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.101740532 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07157654 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068032984 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092894238 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099895773 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148111409 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143300604 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091590371 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075631185 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069920255 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069229775 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069315044 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076256983 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08393497 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076314164 seconds)
  done (took 4.454042553 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075395707 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110658802 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071552557 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091526908 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08625305 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067923588 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069663026 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068820754 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084410904 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074223226 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067963955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072381464 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071081131 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070061842 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068366998 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074457261 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074085214 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066713897 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071919345 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07216406 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07829849 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091933715 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071920571 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067804138 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070119361 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067372059 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074076366 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077015069 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067722166 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098427057 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065035936 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071700738 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081864024 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069046393 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067526661 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068647193 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068335121 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067159217 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068007789 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066166167 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065770787 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072274179 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066052755 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073833981 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081769404 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074583238 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068607624 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070193069 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070657906 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064909804 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070578612 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071116831 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070739643 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075931163 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071099414 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070221 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071709203 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096346113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07384044 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067437347 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066759017 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066449357 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068699596 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075610812 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084531612 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068729513 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06637994 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067726653 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072670532 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082095878 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067025822 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072819678 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065263026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067728854 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069834953 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070221316 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068572646 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065861395 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06711929 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067710118 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068087644 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067640951 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067511406 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070360174 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065362997 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066008616 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06801177 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068901119 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073642625 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066364649 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070447389 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069629587 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066196829 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069962884 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072748805 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070421773 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087335432 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075929297 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068100112 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065564398 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081737195 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069352809 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067479807 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073778513 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07174284 seconds)
  done (took 9.396486271 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090279256 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068943697 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086997354 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093275914 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078243373 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073385891 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080595387 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068642224 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084551929 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066919184 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076996644 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066604218 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080097113 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076213422 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069414214 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077779177 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070180652 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087622645 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082619309 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066357671 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076200404 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079416525 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080325535 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085233585 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085124028 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085588371 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079740784 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07022514 seconds)
  done (took 4.017652694 seconds)
done (took 39.239145538 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.855262461 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.016781967 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.851885538 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.036881812 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.003393966 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.978560694 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.978178628 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.849434246 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.004495404 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.877933654 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.142594506 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.261744086 seconds)
done (took 67.701260731 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.873164725 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.00433428 seconds)
    (2/2) benchmarking "String"...
    done (took 2.063098387 seconds)
  done (took 5.853015668 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.003292284 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.510974837 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.130518201 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.848275292 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.85421921 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.363043205 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.658536127 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.336084901 seconds)
  done (took 31.487352621 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.006529061 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.071738748 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.547147492 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.582411523 seconds)
  done (took 16.036002746 seconds)
done (took 65.130397382 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.88173899 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.851608263 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.914337489 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.884072959 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.860142615 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.852579345 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.852364674 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.85406582 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.863971648 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.897067353 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.850904825 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.855981111 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.851992066 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.853214215 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.539716309 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.912014327 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.85721576 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.851220014 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.857958577 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.855277604 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.858823015 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.854119258 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.326146058 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.039347109 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.461867967 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.061895425 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.237776436 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.262078082 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.85594053 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.849956819 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.900324775 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.065813354 seconds)
  done (took 206.557864313 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.851569485 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.88569535 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.943242316 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.881527348 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.274897502 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.030147783 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.946766657 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.317055674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.858054889 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.873240063 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.125599828 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.853131093 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.146804837 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.797425972 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.890841267 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.896700273 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.100570493 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.136545629 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.896497987 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.000575425 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.869625982 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.032640947 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.971495257 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.084575735 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.88653094 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.930581282 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.855430829 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.877088937 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.038789116 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.047708604 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.858662864 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.89312881 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.016969039 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.722829859 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.857707363 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.871087624 seconds)
  done (took 173.311736559 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.043694686 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.854353076 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.858774914 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.853303603 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.912249965 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.975607981 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.857169095 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.518709305 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.866319543 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.965737351 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.858673497 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.85293992 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.853491119 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.854285525 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.866540971 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.935023391 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.856557783 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.868715754 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.855887862 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.87977525 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.855737415 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.853561222 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.854871793 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.8539549 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.853711385 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.853017748 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.854614586 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.234099089 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.095254937 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.857575542 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.855173141 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.353302748 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.865899546 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.955281424 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.859211968 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.946736289 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.915080878 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.968644259 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.856511936 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.073207847 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.931290814 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.855638986 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.854260045 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.91849268 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.867258095 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.854939568 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.856082853 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.856191212 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.860566952 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.920187053 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.090968329 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.854554901 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.978047338 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.332965265 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.855903936 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.855146526 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.855634416 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.424600778 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.857132694 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.855924048 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.861187829 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.86196468 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.856039803 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.857035636 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.240716798 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.926862223 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.007040967 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.236607657 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.858582238 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.243392361 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.926830566 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.855875476 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.856181307 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.856827751 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.856170605 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.858861411 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.856589787 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.862372799 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.980027821 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.864725576 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.979356087 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.939499434 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.979664944 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.858987846 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.869550535 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.682134851 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.927010174 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.895729396 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.672893507 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.859011489 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.229016585 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.624256517 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.859827801 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.858382864 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.870358662 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.857861722 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.860983625 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.858740053 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.93821462 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.85830181 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.981349044 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.573561487 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.169828604 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.86022391 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.8576169 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.859911224 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.868825208 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.93917724 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.982834455 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.859739999 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.923467703 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.865496834 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.859366412 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.940380186 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.858770738 seconds)
  done (took 409.307816481 seconds)
done (took 793.064607683 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.558493549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.442454524 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.587558398 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.459800051 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.438631319 seconds)
  done (took 14.282198707 seconds)
done (took 16.074880393 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.870540506 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.864672453 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.914462564 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.942067401 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.875685823 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.875209521 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.94086189 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.878661656 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.909698574 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.912841486 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.944607412 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.942908775 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.882304551 seconds)
  done (took 26.550913563 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.870077536 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.006077664 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.08064551 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.898396917 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.868855114 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.084412777 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.924079274 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.000049216 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.002350004 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.08803511 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.093629802 seconds)
  done (took 23.715918783 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.869273019 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.007231614 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.084064085 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.903774303 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.869698304 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.098430684 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.930566617 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.005973943 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.005617662 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.089313374 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.100018466 seconds)
  done (took 23.769255295 seconds)
done (took 75.82965584 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.863816166 seconds)
  done (took 3.661794405 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.887186857 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.058300412 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.863539691 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.866862986 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.864846264 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.866177176 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.866057014 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.863890667 seconds)
  done (took 16.935127287 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.863934263 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.863750742 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.864142591 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.863860464 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.864484824 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.863908376 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.863483124 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.864890857 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.864024096 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.864770145 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.865243126 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.864690304 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.864542958 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.865425154 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.86521446 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.863796797 seconds)
  done (took 31.62921261 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.866775582 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.864917581 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.86568213 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.865287193 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.865306046 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.865697246 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.867205049 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.865221811 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.864680586 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.864955459 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.865807883 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.86519665 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.865508942 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.865644797 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.865431775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.865391788 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.864401946 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.865774648 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.870147846 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.864945296 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.866158227 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.866137826 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.865172553 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.866246471 seconds)
  done (took 46.578071089 seconds)
done (took 100.608685842 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.62601949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.854682906 seconds)
  done (took 10.281144324 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.86774258 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.866420367 seconds)
  done (took 5.540075732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.864802264 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.86561664 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.865203306 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.864959286 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.866020264 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.865329605 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.866107706 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.866578677 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.868127442 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.867607272 seconds)
  done (took 20.461936263 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.867536306 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.867441766 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.86811484 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.867490544 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.867208768 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.86786294 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.868270371 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.867641744 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.86858605 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.868633638 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.868802928 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.867859919 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.868332599 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.868854479 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.86787099 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.867558592 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.867942327 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.867863985 seconds)
  done (took 35.425669515 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.868031879 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.868440407 seconds)
  done (took 5.53899828 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.868290048 seconds)
    (2/7) benchmarking "second"...
    done (took 1.869188271 seconds)
    (3/7) benchmarking "month"...
    done (took 1.868428874 seconds)
    (4/7) benchmarking "year"...
    done (took 1.868159399 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.869228921 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.869111231 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.868499549 seconds)
  done (took 14.883447166 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.868833879 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.017601294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.067192459 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.472276094 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.870671309 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.871046318 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.767355074 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.871759904 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.872986234 seconds)
  done (took 20.484248206 seconds)
done (took 114.413213619 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.675631445 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.870816705 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.134741956 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.94238511 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.892806639 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.164592219 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.90868369 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.466199863 seconds)
done (took 42.857627489 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.901348116 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.868763534 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.897979828 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.899070897 seconds)
  done (took 22.470550071 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.869212287 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.184528423 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.893606643 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.799620497 seconds)
  done (took 22.568839516 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.248231574 seconds)
    (2/2) benchmarking "read"...
    done (took 2.218027736 seconds)
  done (took 6.275056744 seconds)
done (took 60.018765015 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.87002149 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.869932041 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.869405475 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.870403678 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.870586552 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.870799034 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.871387681 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.870189625 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.872363684 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.871998184 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.870142671 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.870662354 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872626371 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87207233 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871140461 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871440402 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.871621112 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.872192264 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871831993 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.872516065 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.873079005 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.872431833 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.872188201 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.871873445 seconds)
  done (took 46.71787173 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.873425515 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.873131185 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.871502831 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.872319202 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.871658825 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.872792749 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.872629831 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.872750964 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.873878983 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.876161249 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.873919235 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.872367826 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.871857298 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.872550557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872371628 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.872317628 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.873683824 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872838813 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872641822 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.872547699 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.871916684 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871661106 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.872270151 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.873684522 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.873087765 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.872836828 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.873325504 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.873485944 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.873058208 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.873405001 seconds)
  done (took 57.992886501 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.873602259 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.874601341 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.873889697 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.874576196 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.873949082 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.873491963 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.874044164 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.874364696 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.875594805 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.874376009 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.875674237 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.875203792 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.874121448 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.874379579 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.874387133 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.874189664 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.874239785 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.875410894 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.874726132 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.874489647 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.874196092 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.875156639 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.875033178 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.875696233 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.875806593 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.875593742 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.875625184 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.875562748 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.875641798 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.875002857 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.87496896 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.874755972 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.874624516 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.876957243 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.875997746 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.875106405 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.874304086 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.875797877 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.876063719 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.875739441 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.875665788 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.87646221 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.876103414 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.876892361 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.8761561 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.87602036 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.875696852 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.87553036 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.87522561 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.876696889 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.876448827 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.876665944 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.875756183 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.876171949 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.875959355 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.8755192 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.876663086 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.876449288 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.876750281 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.876962279 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.877343452 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.877112899 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.876795301 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.877105634 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.877813299 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.877967779 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.877701666 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.878415388 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.878234056 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.877343449 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.877110109 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.878033168 seconds)
  done (took 136.862274637 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.877050522 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.877845044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.877031624 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.877765326 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877275595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.876320688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.876567588 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.877212396 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.878986026 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.8832949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88391573 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.881996287 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880973905 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.878964348 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.877894407 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.878164713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.877806498 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.877832041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.877637335 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.877837861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87840979 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.8780735 seconds)
  done (took 43.14014396 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.877922879 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.879036828 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.877799728 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.878392451 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.878832189 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.878501136 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.880858002 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.878664617 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878651628 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.878018377 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879057152 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.879768889 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.879039049 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879158545 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.879517336 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.878298393 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.879772262 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.879393617 seconds)
  done (took 35.633023732 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.879930424 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.878869511 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.87944602 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.879979539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.879217564 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.880032682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.879363145 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.880168299 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.881118238 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.879480156 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.880285052 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878524208 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.879683005 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.880790318 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.879424074 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.881988214 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.879843365 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879816807 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.879663205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.880207061 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.880755027 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.880100182 seconds)
  done (took 43.174929006 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.87969467 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.880305511 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.880546499 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.880664711 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.880726182 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.880782684 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.879838449 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.88107925 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.883165297 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.880673216 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.879990236 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.880379265 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.881710434 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.882090208 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.882261862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.881153326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.881799969 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.882986737 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.881732167 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.881087792 seconds)
  done (took 39.437171021 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.881765067 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881289325 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.881200242 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882740663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882079036 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.880911915 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881900132 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.88232431 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.881941652 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.882962901 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.882149628 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.882411865 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885000284 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.882344706 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.881992351 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.883380037 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.883755061 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.881652971 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.882639933 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.88357921 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.882626903 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.884003711 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.88316192 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.882186364 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.884719961 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.883247176 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882584807 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.883543324 seconds)
  done (took 54.530539374 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883142423 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.883514929 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.883536436 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.882492331 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.883652905 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.884359561 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.884496702 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.884188854 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.884503011 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.882558505 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.88366202 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.883094536 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.88577959 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.88351636 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.884147403 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.883519994 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.883914939 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.883682509 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.884170766 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88389499 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.883394444 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884593069 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.884584123 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.883016628 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883951879 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.884330767 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.884733 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.884406815 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.884893672 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.885242882 seconds)
  done (took 58.3350264 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.905204311 seconds)
    (2/2) benchmarking "in"...
    done (took 1.905407366 seconds)
  done (took 5.627711056 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.88515558 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.885039474 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.885148855 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.886075491 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.88668711 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.885191199 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.884899726 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885085608 seconds)
  done (took 16.9012937 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.88572864 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.890085663 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.886386147 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.886768675 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.885197337 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.894716837 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.887164226 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.887475992 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.888096184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.88708287 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.891143981 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.891007919 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.894584873 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.891799688 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.8855083 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.887125877 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.888895462 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.888691114 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.885998146 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.886145094 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.890057 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.886305923 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.886465522 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.88753458 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.886493433 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.889976343 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.897918183 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.888610381 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.888394299 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.887168126 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.895035825 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.887481207 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.886157303 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.889427544 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.887279063 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.886577377 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.895491544 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.886960959 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.888470356 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.888072263 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.890204621 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.890505902 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.893277263 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.896153476 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.889370524 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.888154371 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.889284271 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.887443389 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.888641445 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.892115519 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.896914666 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.888545881 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.888411374 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.888858022 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.89148211 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.889173464 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.889011838 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.891329613 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.89734309 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.897608648 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.892724889 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.911807545 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.897465891 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.888826231 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.888439812 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.899416271 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.912051902 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.891347034 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.891781086 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.889174372 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.898213415 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.890156779 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.890258313 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.889922527 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.905260342 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.897816383 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.890008866 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.890635894 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.891230632 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.890187625 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.891511449 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.890019891 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.892276875 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.889968878 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.900427156 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.915151408 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.891484536 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.889957463 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.893173895 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.89163768 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.894859967 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.893949011 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.892482007 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.891340798 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.892797254 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.893955588 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.891522167 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.892356323 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.892001835 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.900654748 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.892271218 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.891520576 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.895941968 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.899054406 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.890896744 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.892345156 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.893240223 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.891902726 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.901321048 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.892270109 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.891230323 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.892847118 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.894104285 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.897637076 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.892423794 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.897805424 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.900315464 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.901473933 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.894682019 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.896754337 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.896659681 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.896090831 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.903312418 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.915618369 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.892148426 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.896220346 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.898218905 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.904620541 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.89778559 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.893646932 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.896796839 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.893056324 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.892627005 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.894851916 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.892682322 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.893367323 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.893669703 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.894091258 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.895220803 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.894300394 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.896910347 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.895465844 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.894990337 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.893045289 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.897467658 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.89380782 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.896317471 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.900903248 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.894299162 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.893914051 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.893817737 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.897004314 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.89580681 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.895220445 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.894557558 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.894640345 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.893665811 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.896136068 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.896143651 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.894588473 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.893996933 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.896266118 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.898378651 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.894538779 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.895077448 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.894777726 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.894405367 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.89397523 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.89652151 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.897452427 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.898355942 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.894071611 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.899940862 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.895256624 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.895115048 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.894627729 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.895000059 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.896056143 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.89961951 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.907927932 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.899034157 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.905615681 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.895953629 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.904923826 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.896316316 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.899401049 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.89672079 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.896267312 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.89648784 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.895582677 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.897006164 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.900551395 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.918585175 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.908316246 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.898909776 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.898799107 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.902101212 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.900973893 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.902521026 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.896885868 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.89752042 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.901445747 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.896915093 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.897591842 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.897745911 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.900658272 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.89785974 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.898602618 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.901222701 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.898770325 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.898173939 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.899109062 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.897571851 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.900837147 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.897449578 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.898441534 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.898195284 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.899693292 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.907744763 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.901467883 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.898470837 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.897394169 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.900233878 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.898613262 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.899828822 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.899887572 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.902634949 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.899133377 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.899777649 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.908337679 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.900694647 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.899118892 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.899519089 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.89932373 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.901135423 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.899469284 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.903388189 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.90545575 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.901758775 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.899889749 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.905372914 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.899147135 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.902078785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.900519223 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.901080435 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.899328159 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.901425821 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.898903143 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.900793683 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.908731452 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.898045964 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.899824572 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.901513194 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.902876046 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.901354619 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.902437979 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.900283644 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.907264051 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.908314991 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.90806958 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.901832977 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.905247544 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.90464681 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.90224168 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.906541613 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.903027922 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.916491603 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.909583542 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.900489317 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.901446847 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.900258917 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.903545771 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.900660834 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.900277679 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.910076726 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.902334686 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.903033678 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.90571266 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.901306497 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.901506782 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.911212002 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.902405327 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.905155257 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.902964801 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.902186473 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.902058491 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.901604077 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.905178435 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.902244561 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.904590793 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.906543967 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.902505521 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.90430217 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.902727912 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.912977654 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.902804913 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.904644707 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.910931989 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.904361063 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.903078226 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.903807103 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.902462916 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.903326609 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.905402044 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.903974262 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.904553255 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.90281381 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.906813314 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.914078602 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.909755119 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.910495111 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.904879906 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.913949313 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.902302837 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.903216804 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.903979109 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.908571725 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.91220057 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.90494025 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.904092387 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.91428148 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.905317049 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.905123201 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.90788664 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.903713632 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.904192733 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.903941478 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.907352429 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.91083352 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.907084525 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.904557353 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.903703221 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.903724964 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.904993797 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.907746198 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.906707204 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.905750252 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.906136048 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.904543516 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.904358262 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.904217173 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.904713051 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.904776538 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.905304518 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.904721541 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.913459831 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.905600312 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.905903021 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.908241392 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.905230885 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.915313582 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.905390909 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.906175079 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.906996194 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.905627532 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.909188241 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.906160733 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.905339262 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.907590621 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.907939656 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.9083611 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.918870809 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.913763211 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.90988141 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.908573577 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.906335555 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.908442824 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.916274268 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.931575393 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.907547048 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.909548324 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.910573995 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.915242683 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.908916722 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.912475921 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.911965983 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.915739541 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.909728926 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.90713475 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.910397383 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.919635869 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.90661795 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.907210307 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.907068926 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.912725257 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.909600155 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.907246161 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.909272178 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.912252896 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.908838947 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.919915286 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.909112294 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.909287347 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.907182182 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.907078948 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.90693657 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.907466882 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.910129459 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.910579709 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.908301286 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.908071964 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.910341562 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.913325323 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.906712737 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.912141608 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.916835014 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.910566651 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.907566851 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.910242291 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.907660429 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.910632447 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.90787519 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.908243598 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.911309803 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.909280636 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.910934284 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.914128349 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.918023288 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.910954117 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.910337465 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.90896777 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.914314793 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.910704511 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.910579457 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.910966608 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.918380114 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.91308802 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.920277138 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.918513996 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.90887919 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.910447224 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.917987713 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.917871993 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.910282979 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.909200041 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.910474038 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.91244239 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.912576487 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.912600395 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.909695668 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.912046517 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.914748367 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.910831224 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.91115269 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.910099846 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.911622666 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.913092061 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.912677262 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.917433867 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.911482719 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.91021623 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.910449864 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.911851545 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.914239652 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.914048824 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.911692513 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.911157541 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.91412897 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.91399547 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.916227068 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.911965487 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.911545032 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.913697388 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.911259578 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.912657388 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.912294931 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.912128826 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.911472197 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.916323903 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.922761153 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.911636803 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.913982962 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.914694811 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.917085668 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.913572516 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.912720186 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.912428171 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.912817223 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.922869162 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.913879568 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.912626527 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.914540787 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.914924368 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.919601938 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.916133608 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.921310018 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.913847899 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.915226216 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.914453679 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.918493681 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.923838695 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.920471465 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.918485546 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.923283424 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.920701989 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.917401619 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.913622777 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.913990459 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.914887259 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.914875234 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.919435092 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.914425813 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.917540773 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.914617806 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.916033356 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.913793434 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.916416727 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.914180068 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.914836783 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.91814292 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.92419259 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.926723919 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.914991204 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.916600344 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.915046188 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.918574568 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.927898869 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.915068621 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.914747018 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.914885812 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.916838194 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.917263104 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.923693687 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.925870401 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.919882119 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.916594439 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.921115835 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.9344143 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.91822369 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.925014043 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.948917468 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.918589594 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.916199355 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.916146032 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.917769238 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.917288616 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.919205197 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.915205018 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.923664215 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.917056886 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.915157298 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.925085574 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.915722648 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.918446636 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.915358871 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.919659973 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.922613714 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.91610788 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.924300859 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.915457208 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.916306064 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.917064186 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.919740234 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.916199536 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.917137885 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.916451447 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.919348202 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.916024511 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.917303722 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.927020437 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.916622054 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.918884377 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.931438818 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.930106037 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.917497333 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.91773953 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.916279249 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.923348444 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.921175185 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.91801225 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.921701365 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.9259657 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.921517503 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.925809602 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.918833765 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.919551703 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.919125212 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.918324365 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.917704218 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.933167549 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.931282353 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.919725083 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.919525015 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.925828036 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.919111011 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.927237802 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.926825414 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.918699523 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.9216115 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.918933023 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.917751566 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.918777969 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.919575367 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.923474173 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.927187197 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.919083943 seconds)
  done (took 1137.411553881 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.918324248 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.919453219 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.91923868 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.920173178 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.919016578 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.918752502 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.919849363 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.919731993 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.919800952 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.919570198 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.920001724 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.919510876 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.919393534 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.920834989 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.919438079 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.919645767 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.919535842 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.918900782 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.920644438 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.920624497 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.919564018 seconds)
  done (took 42.163870345 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.920683164 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.919941574 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.920766973 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.920158883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.920224968 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.921553942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.921065321 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.92205665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.919993407 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921206424 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.92107393 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.920662827 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.921917555 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.920927462 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.922441454 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921209175 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.921750022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.92102404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.920661249 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.921144015 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.921940464 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.920936794 seconds)
  done (took 44.116112876 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.922325816 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.921027145 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.923238098 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.922562124 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.921619354 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.922823875 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.921498365 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.924524371 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.92183471 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.923738518 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.929572001 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.930836791 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.921938542 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.925724375 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.922253083 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.923937143 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.067449933 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.922390399 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.922530957 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.922852513 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.922639105 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.930755796 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.923176209 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.922489981 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.922335543 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.924072287 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.9232503 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.923783374 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.92338368 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.925760834 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.928330668 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.925026607 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.924667384 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.926617476 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.923513401 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.925278007 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.928137317 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.924416008 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.923550113 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.924574572 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.933434152 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.947591152 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.924072839 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.924996316 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.932451821 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.924795557 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.925351251 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.928349275 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.933569229 seconds)
  done (took 96.339933151 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.925882313 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.924867708 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.927075785 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.924686876 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.923766853 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.923736551 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.92471409 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.924496826 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.925050395 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.925494916 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.924305226 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.926149918 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.925200247 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.924775852 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.925056986 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.925595266 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.925439081 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.9254517 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.925517736 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.925805291 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.925465607 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.925448661 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.925517834 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.925463552 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.925774831 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.926761377 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.926220526 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.926585253 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.925854386 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.926638371 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.925939549 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.926697879 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.926048521 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.926148114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.926189289 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.925957656 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.926657337 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.92688066 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.927568562 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.926421107 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.927983389 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.926719521 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.925840686 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.929289734 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.926956037 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.928393757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.926859164 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.928437822 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.928332962 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.928241651 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.927068133 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.927939225 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.926746851 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.926970162 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.926569404 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.927302251 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.927277558 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.926922986 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.927316002 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.927957282 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.928433539 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.927056522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.928018023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.928023934 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.927772234 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.927726482 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.927817967 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.927861097 seconds)
  done (took 132.857699914 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.928810358 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.928185329 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.928723854 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.929044402 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.928782264 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.929534033 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.928547637 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.928190571 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.928341214 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.928905667 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.928153741 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.928591168 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.928377384 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.92912455 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.928604482 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.929310209 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.928925278 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.929330152 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.93010039 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.930131039 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.930405145 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.930506853 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.929427957 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.929935687 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.931149475 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.930176598 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.930899858 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.929428888 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.930844169 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.929788575 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.930233906 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.930205434 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.930232813 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.929867933 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.930108024 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.929686244 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.930291947 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.929491493 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.930903297 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.930262628 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.930662424 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.930121514 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.930141086 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.930708906 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.9303341 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.93097303 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.930278787 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.93168046 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.931079693 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.930506044 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.931179685 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.931132662 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.932439259 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.930866772 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.931624995 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.930481312 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.932073151 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.931168339 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.930916094 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.932071847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.931912473 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.930558759 seconds)
  done (took 121.526041991 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.93130343 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.932142356 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.931437957 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.935016812 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.933708248 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.937419466 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.934483141 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.933405186 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.93279522 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.933476126 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.933621613 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.93383049 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.935452783 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.933059065 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.934715906 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.936076711 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.934454057 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.934242397 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.933416617 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.933093082 seconds)
  done (took 40.540713915 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.932911873 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.934751306 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.932654197 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.930908916 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.931916276 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.931027808 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.930840974 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.930182911 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.929798417 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.929823161 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.930442336 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.931494241 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930664415 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.930054282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.93085396 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.933166255 seconds)
  done (took 32.766950023 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.930651329 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.928844633 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.928882036 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.929050022 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.929596451 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.930302183 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.929479908 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.92982544 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.931207927 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.92930354 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.930905171 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.930219489 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.931053495 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.931413258 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.931189399 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.931689682 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.929850056 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.929829888 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.930840683 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.929907641 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.932064292 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.930235702 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.929367932 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.929927277 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.929795531 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.931476578 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.930776104 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.929265446 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.929418165 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.931245565 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.929770941 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.929938967 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.929135733 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.929196235 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.929145409 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.931918386 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.927376464 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.923828615 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.923829421 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.924119342 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.925484043 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.924422582 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.92438753 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.925590062 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.925592937 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.926001218 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.925922793 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.924659898 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.925687137 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.925682196 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.923109041 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.924714753 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.925173401 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.924457147 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.92549935 seconds)
  done (took 107.926596579 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.924294891 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.92504798 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.925260999 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.924687132 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.926694835 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.924239851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.926285116 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.92430974 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.925148874 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.92570032 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.925067392 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.925080702 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.924441694 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.924141129 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.925342084 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.924808392 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.926113867 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.924721927 seconds)
  done (took 36.507481751 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.925052524 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.925275879 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.924815949 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.924619821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.922238581 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.923097236 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.923560967 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.923647726 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.925570769 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.921405456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922494062 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.922432962 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923299475 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.924523958 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.922600004 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.922005171 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.923889884 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.923020052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.922939033 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.921313237 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.922178834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.920914181 seconds)
  done (took 44.167755653 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.921559073 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.92097448 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.936787876 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.944547977 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.942073866 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.959852041 seconds)
  done (took 13.479055048 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922488481 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92220445 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.923809822 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.922026157 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922187432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.921252716 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921422012 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922522767 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921901523 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923343312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922140111 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.9218655 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92221578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921551968 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922667066 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922933614 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923182905 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922112542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922553821 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921468717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.922050081 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922393039 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922882154 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922747933 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922854602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.924464018 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92291553 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923390448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924070543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922937008 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924016632 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.922333507 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923677414 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924154608 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924072149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924176521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923174047 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923543214 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923861188 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922806936 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.924213887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.922674712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92288034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924024635 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923876122 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92395081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923542508 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.923253929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923174404 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925005631 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923505719 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925493197 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924012987 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923513138 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923529063 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923354374 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923461804 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.923504225 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923374151 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923030163 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923758903 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923603647 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917813097 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918532654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918123256 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91954106 seconds)
  done (took 128.763294053 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91565868 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.915600843 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.915361817 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91626262 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917220958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917463648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914654891 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914499801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916544085 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.915833962 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.916818172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.915347034 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.915805801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918252924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91453667 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91437575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913532547 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914092037 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913955013 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914682881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.915860594 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.913423907 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912874906 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914782693 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912820964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914504979 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.913225341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91275043 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912469745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912643264 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.913019982 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.913165972 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.913156193 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.912088828 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911842177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912539331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913429343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912124096 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91278025 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912001991 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912499677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912302289 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912772613 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91191132 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912340802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912800272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913584274 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912058422 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912686698 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914529557 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912877778 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912608311 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913967427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912300196 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912848399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912603709 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.911267182 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912506207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912041629 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912324143 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912193384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911470634 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91336329 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.913225137 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911442593 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912214427 seconds)
  done (took 128.15164397 seconds)
done (took 2646.882097502 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.999594009 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.953756206 seconds)
  done (took 15.798014297 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.081080408 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.030037191 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.913878469 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.968783237 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.915904721 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.914389917 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.939005499 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.914266738 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.914587729 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.915490542 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.914111487 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.099168565 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.912786521 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.913421631 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.913320079 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.004271174 seconds)
  done (took 53.109585607 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.918468193 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.915419388 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.929335113 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.916662547 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.920008996 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.931794242 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.946252429 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.923010498 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.954380865 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.932533096 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.989234675 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.931833723 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.917941807 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.968830514 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.932871899 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.933641212 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.016554721 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.996642175 seconds)
  done (took 36.816608957 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.99863896 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.928572964 seconds)
  done (took 10.776113299 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.919340761 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.905781758 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.936096836 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.92440559 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.932231486 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.906886515 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.945788205 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.937633194 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.920737411 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.912114596 seconds)
  done (took 71.084479028 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.91524992 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.91640452 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.911760868 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.907483512 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.907237406 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.911872671 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.909066488 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.906618926 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.606206627 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.951494757 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.922321466 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.917754454 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.910764616 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.9107529 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.906669832 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.934114649 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.087891916 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.907174425 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.906420005 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.914884923 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.911403425 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.993398595 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.923453909 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.910260442 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.944433024 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.601000951 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.923112785 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.915862091 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.075632402 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.907737618 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.910042344 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.121812952 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.917162673 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.325618498 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.179411852 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.918064132 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.92307745 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.917152503 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.907166602 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.089760743 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.911533678 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.918606036 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.785592329 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.161746411 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.008722591 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.954482671 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.251452237 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.913011738 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.91379454 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.941283528 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.911349162 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.910343544 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.929376996 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.422517293 seconds)
  done (took 135.252205283 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.905669554 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.154416106 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.058764957 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.909148643 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.162077269 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11900217 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.901557094 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952454832 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.911817437 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.105459987 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.160046833 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.010211409 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.911295679 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.907344595 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.905404141 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.905700268 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.049115986 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.97628452 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.910200784 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.907127175 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931372923 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110490706 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.032237535 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.91083925 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.933620842 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.116709884 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.032430237 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.008696611 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.695658162 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.907902107 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.970467177 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.910814438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.906418717 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.907398736 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.062850554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.018613504 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991478989 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.911062102 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.907700798 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.9084769 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.673814982 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111730506 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.005968171 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.031357708 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.159966466 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.126197171 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.517931676 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.908702485 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.532357714 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.077768938 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.113085853 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.116621896 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.032927536 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.912690362 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.457779643 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.908858622 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.907716221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.134367836 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.132442422 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.007876487 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.9154347 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.909436532 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.909533277 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.199734982 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.913963097 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.001190588 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.913760382 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.911899052 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.002403227 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.014129978 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.142088212 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130343163 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.941573738 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.237609916 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.410559541 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.113478643 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.979108784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136529634 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.916676668 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.910208122 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990133576 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.751416197 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.162317183 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.192840019 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.115233727 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941120868 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.530964721 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.912045087 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.101184184 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.100806812 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.149683854 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.156937848 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.152325908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.235982784 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.910452154 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.91043948 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.203475052 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.024680366 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.857539952 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260005581 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145498828 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.399796748 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.93685588 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196920386 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044053947 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.91603787 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.552915051 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.913131972 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.119954282 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.948788903 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.913997697 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.912436725 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.102491592 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.825689407 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.912822317 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.848333293 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.973073466 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.917424672 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116273374 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.915582201 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.160645359 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.916929875 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.150221793 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.483979131 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.944006326 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.14197744 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.158335412 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.545556034 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.157390105 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.159154089 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.027628244 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.19081402 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.913868603 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.915234241 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.177047239 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.916716228 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.913281624 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.082616241 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.914729911 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.055802928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.916598639 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.184408548 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936650073 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.152187588 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.916466162 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.152660672 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.947320358 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963474742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.918776238 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038929384 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.917033917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.733989912 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.074820135 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.91677594 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.913782394 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.712098272 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.914625157 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067846781 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.140710401 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936130575 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.984050153 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.458187734 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.893522197 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.995866682 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.938236001 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.204917054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.914613735 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.165504935 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.867941446 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.378342881 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.91610014 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.207127245 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.582256969 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.922055447 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.91573831 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.755213949 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.901416519 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.916314334 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.070893759 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.269233854 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.687104401 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122256491 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.920242974 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043755542 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.91979284 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.988396366 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.250178437 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.916047661 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.917235164 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.917658647 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.918097838 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.917617649 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.182589854 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.944598781 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.351788316 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.05171762 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.172032777 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.221233549 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.120789725 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.958346693 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.92164898 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.19844769 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.92166878 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.980106884 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.922305013 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.936865743 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14962529 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.921257157 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.206825024 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.159197719 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.791714042 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96474672 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.92238648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.917581583 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.844198381 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.063253363 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.003986328 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.922104115 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.918120865 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.031033579 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.040718916 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.100801505 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.612609026 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.075272544 seconds)
  done (took 912.287868868 seconds)
done (took 1236.9679861 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.917261614 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.919411265 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.920045432 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.92239259 seconds)
  done (took 29.529181968 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.924173993 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.919831968 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.919614711 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.919478152 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.919594236 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.918881433 seconds)
  done (took 13.371704825 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.919099203 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.920730759 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.921714249 seconds)
  done (took 22.61251516 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.998819053 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.339331486 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.06464883 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.36152971 seconds)
  done (took 10.615153695 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.922684301 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.919838671 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.921115537 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.920650032 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.924460545 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.926118799 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.921173325 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.921782325 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.925911301 seconds)
  done (took 19.156003227 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.884509134 seconds)
done (took 101.017399063 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.219136537 seconds)
    (2/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.615583257 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.920939558 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.941389911 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.978654271 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.934521878 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.919249502 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.825901794 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.944307461 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.920114636 seconds)
    (11/309) benchmarking ("sort", Float32, false)...
    done (took 5.594739735 seconds)
    (12/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.382437891 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.920899796 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.977325725 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.921753563 seconds)
    (16/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.054149826 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.671245611 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.109195229 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.900880543 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.159327244 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.265971802 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 4.889269842 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.936525016 seconds)
    (24/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.396862035 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.886647766 seconds)
    (26/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.008771323 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17008976 seconds)
    (28/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.002985989 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.922156429 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.010554213 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.948920863 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.057977969 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.925226943 seconds)
    (34/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.126476726 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.939963697 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.135730098 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.924786733 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.513695862 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.805038452 seconds)
    (40/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.196311645 seconds)
    (41/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.280813288 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.04442459 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.088547709 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.010410296 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.931693887 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.94594681 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.334444396 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.138001697 seconds)
    (49/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.402507017 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.576237417 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.171755832 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.040451968 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.945551085 seconds)
    (54/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.922676421 seconds)
    (55/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.873471868 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.10678857 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.021359846 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.923151364 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.931733095 seconds)
    (60/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.342944227 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.172342622 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.06042884 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.110467873 seconds)
    (64/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.203275383 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.106930594 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.136298057 seconds)
    (67/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.94021976 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.239734574 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.94661199 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.515492779 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.835026044 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.014841996 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.305687685 seconds)
    (74/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.024085104 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.930094659 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.096342372 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.984533534 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.262501746 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.055298658 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.119090597 seconds)
    (81/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.012842969 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.022857866 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.93877827 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.92674744 seconds)
    (85/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.071676563 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.007445107 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.726170826 seconds)
    (88/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.949730637 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.13652973 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.865668567 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.942717244 seconds)
    (92/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.028242262 seconds)
    (93/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.936637919 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.187850975 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.944045423 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.226699272 seconds)
    (97/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.056902734 seconds)
    (98/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.240725167 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.166751251 seconds)
    (100/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.132050084 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.557414002 seconds)
    (102/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.677223168 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.824394392 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.345296601 seconds)
    (105/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.031899581 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310325983 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.225485682 seconds)
    (108/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.93630584 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.87028358 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.122259595 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.234933254 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.937683128 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.182063902 seconds)
    (114/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.698665389 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.653949371 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.031100139 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.745486216 seconds)
    (118/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.047463082 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.029534947 seconds)
    (120/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.946274927 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.801701026 seconds)
    (122/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.30816664 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.180826427 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.717267347 seconds)
    (125/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.040088981 seconds)
    (126/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.063982249 seconds)
    (127/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.081034759 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.233120221 seconds)
    (129/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.938267427 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.043086199 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.031117681 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.224170605 seconds)
    (133/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.118708901 seconds)
    (134/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.140584166 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.939920456 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.582590303 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.935244168 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.735410939 seconds)
    (139/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.032710017 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.321361562 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.029839385 seconds)
    (142/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.191352829 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.310640025 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.28477171 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.013563814 seconds)
    (146/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.932011138 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.57848917 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.368751627 seconds)
    (149/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.932043181 seconds)
    (150/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.497561157 seconds)
    (151/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.969299206 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.013276036 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.694166077 seconds)
    (154/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.497407871 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.587983663 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.961717882 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.929732129 seconds)
    (158/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.932737028 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.880847361 seconds)
    (160/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.09353415 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.230229607 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.176022788 seconds)
    (163/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.348494843 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.99101263 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.131615373 seconds)
    (166/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.324376382 seconds)
    (167/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.380232046 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.930545578 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 5.625065412 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.271939956 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.363869267 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.062626233 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.992351515 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.84668849 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.763524818 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.937441526 seconds)
    (177/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.263857192 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.931602766 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.999748293 seconds)
    (180/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.187838257 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.272363559 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.234231517 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.03425215 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.055960013 seconds)
    (185/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.082180415 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.941536494 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.122670215 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.930457051 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.093337912 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.951713236 seconds)
    (191/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.070584632 seconds)
    (192/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.913620651 seconds)
    (193/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.721550657 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.16401358 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.933188008 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.014866168 seconds)
    (197/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.060851922 seconds)
    (198/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.943510863 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.933844997 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.934607042 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.161825627 seconds)
    (202/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.692838939 seconds)
    (203/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.063626748 seconds)
    (204/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.021126746 seconds)
    (205/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.423523459 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.245502726 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.27519988 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.616132257 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.055693063 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.225468317 seconds)
    (211/309) benchmarking ("sort", BigInt, false)...
    done (took 6.932955888 seconds)
    (212/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.250811424 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.943595495 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.966525059 seconds)
    (215/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.812493212 seconds)
    (216/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.086684221 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.932166084 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.016607758 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.943237165 seconds)
    (220/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.275597031 seconds)
    (221/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.225023378 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.313488121 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.86916461 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.037015536 seconds)
    (225/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.024435067 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.258843885 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.943774538 seconds)
    (228/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.146787951 seconds)
    (229/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.843240402 seconds)
    (230/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.383424087 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.936997667 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.095431023 seconds)
    (233/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.406393313 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.125586778 seconds)
    (235/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.025108094 seconds)
    (236/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.773218273 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.155121926 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.934956394 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 4.088851932 seconds)
    (240/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.954051195 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.03339994 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.316647054 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.116551075 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.433766868 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.936400169 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.333564473 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.138539602 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.960226072 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.712645567 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.092747956 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.233655852 seconds)
    (252/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.030332535 seconds)
    (253/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.680255894 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.260507309 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.494303962 seconds)
    (256/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.036194342 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.937743928 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.037724134 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.195790046 seconds)
    (260/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.955477201 seconds)
    (261/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.952818599 seconds)
    (262/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.241941359 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.847869611 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.898574643 seconds)
    (265/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.232597155 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.941988055 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.935944503 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.938577677 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.960925298 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.151217884 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.112099871 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.338248402 seconds)
    (273/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.195533492 seconds)
    (274/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.256206471 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.93995546 seconds)
    (276/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.940299031 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.949176194 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.856694935 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.4245772 seconds)
    (280/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.880165535 seconds)
    (281/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.323325909 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.938051178 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.914105231 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.938715503 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.960088265 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.752939691 seconds)
    (287/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.037309843 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.11505074 seconds)
    (289/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.956920696 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.012930484 seconds)
    (291/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.960005914 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.95677893 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.950495726 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.938383381 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.679812314 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.337270916 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.940293267 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.146439819 seconds)
    (299/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.103481352 seconds)
    (300/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.039945987 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.061754069 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.043462681 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.25857587 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.15615907 seconds)
    (305/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.946448617 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.199103642 seconds)
    (307/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.252119666 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.137272743 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.069049977 seconds)
  done (took 1030.866783445 seconds)
done (took 1032.777171746 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.965584623 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.963802992 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.942652791 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.964427556 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.056142589 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.986938278 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.957151948 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.9473862 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.992684876 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.992498127 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.941082385 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.984932298 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.944145598 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.944183758 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.942800005 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.961864812 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.340022808 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.987279496 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.961800368 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.956110727 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.962607362 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.942145296 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.99393957 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.984871634 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.94770166 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.949006081 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.948314375 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.963932888 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.057799712 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.94704025 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.949326149 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.956992223 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.34271563 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.985492839 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.943825463 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.963228497 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.956188481 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.955714158 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.948914374 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.977909719 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.49416449 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.953763275 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.946321653 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.945172733 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.94519229 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.951512397 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.946629274 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.95421554 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.963196324 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.965062759 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.481411733 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.969332674 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.949990925 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.945304452 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.958946914 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.946961474 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.951114366 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.966015486 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.964644176 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.965604106 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.32344497 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.997260675 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.950604093 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.964930637 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.955865278 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.51553649 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.952875529 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.953253606 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.496578698 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.962316453 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.516954942 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.965709529 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.949772493 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.961374387 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.980589454 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.343783857 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.988183585 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.94635949 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.956761875 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.946374139 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.959625588 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.965287374 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.954249529 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.946531287 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.967219178 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.990119853 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.960640669 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.948057834 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.959165798 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.967229506 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.95687149 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.959493593 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.951227072 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.945531589 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.961430528 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.952748114 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.950255327 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.951436848 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.953243382 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.962068598 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.496201458 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.976828798 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.9463437 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.946651994 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.948386155 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.963465018 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.495079862 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.957080866 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.971791602 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.999121695 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.953756386 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.325391684 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.994926194 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.969475115 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.960984577 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.950913025 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.947612842 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.325319808 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.52786167 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.973556115 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.950387077 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.947495593 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.96996274 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.951509386 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.947557656 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.347293767 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.995312806 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.971033089 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.073129862 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.963580277 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.98398042 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.947766537 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.953891982 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.995593164 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.969477984 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.982395607 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.952598319 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972075034 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.968735286 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.948381054 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.962297749 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.964116752 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.951518075 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.959591963 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.95006902 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.997147513 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.96996174 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.970255095 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.973461264 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.073730454 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.95017887 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.327738052 seconds)
done (took 307.71347925 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.037827766 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.949663397 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.044200293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.947919579 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.042924051 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.027419619 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.948528048 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.948779846 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.948418366 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.464786094 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.949794604 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.95582247 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.947934753 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.948803714 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.023322276 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.949697947 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.949311116 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.237372334 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.950509334 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.033056731 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.948382347 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.950961572 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.949847991 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.471189814 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.94913438 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.95122497 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.037192269 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.949548412 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.244911483 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.949710277 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.948170419 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.243474458 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.038205852 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.962185851 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.957634429 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.957122423 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.044508084 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.9596298 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.027057164 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.022477506 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.044372511 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.983138676 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.950590479 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.951369056 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.955352101 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.95082576 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.951308059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.982200264 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.948489433 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.956558348 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.238602211 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.958198021 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.955935867 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.951480188 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.951734366 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.966113936 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.952411338 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.953016556 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.03497071 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.951671198 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.032288291 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.47264807 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.469513772 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.951517109 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.950263724 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.952412617 seconds)
  done (took 190.166739962 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.054325142 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.02533467 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.057459814 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.957820723 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.002039306 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.058285398 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.959064851 seconds)
  done (took 15.995745815 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.958887424 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.952792682 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.012998296 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.012923939 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.953580052 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.133295942 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.964960002 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.958328538 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.980841723 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.955490376 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.614457576 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.014339704 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.961855841 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.95410439 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.966896717 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.020626149 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.956254433 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.955175736 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.064024827 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.102376199 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.95929355 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.961782018 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.981312061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.966044795 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.955545629 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.956136409 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.954766173 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.961157188 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.955402151 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.954672931 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.955445356 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.019207515 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.955043671 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.955211463 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.955311985 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.95596271 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.955158202 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.9554756 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.954871622 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.954010069 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.954572303 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.955512923 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.955045161 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.954901233 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.954815942 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.979337793 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.955937128 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.955500944 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.954794834 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.957104153 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.981961892 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.955753734 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.955833977 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.960534951 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.000999307 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.964800858 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.957339547 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.956233356 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.955981899 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.95703288 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.95700565 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.105072913 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.017296735 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.957276953 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.016205983 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.111407424 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.957158863 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.955977315 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.95621943 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.049940886 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.957661211 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.016309094 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.957281811 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.074484022 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.957093041 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.136135335 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.979587805 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.960971777 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.960437944 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.95683289 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.965023629 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.957025416 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.959819421 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.964163076 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.961534489 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.956841509 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.958189517 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.959675202 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.967407501 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.959004977 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.00880593 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.95799635 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.958224477 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.098270753 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.958504611 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.06779787 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.985649135 seconds)
  done (took 214.510372572 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.966515698 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.965165032 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.959401406 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.973014207 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.95938374 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.957743082 seconds)
  done (took 13.667953211 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.961727628 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.961818876 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.959571827 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.957803926 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.958454187 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.959002041 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.958145771 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.959809561 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.962070649 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.957690517 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.958951847 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.960692721 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.959135766 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.959119754 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.959577779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.959761026 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.958910765 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.958459349 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.958920131 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.958746956 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.093528183 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.961049111 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.959715839 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.965591217 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.96293691 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.959360628 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.973625906 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.961258789 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.961743865 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.969171693 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.971643007 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.961786945 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.96805258 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.967121683 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.964242232 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.968611907 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.964807027 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.963176194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.961744172 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.961204606 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.962884416 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.961457591 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.960837296 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.962517122 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.96319137 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.971255809 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.966516766 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.973957217 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.961304964 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.961794464 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.962822759 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.96088053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.961566162 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.962444814 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.968250811 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.967161001 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.965247526 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.961369976 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.960863953 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.966991963 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.964621466 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.96180367 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.963079798 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.966519744 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.966981762 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.963398192 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.966319514 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.964433161 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.961504129 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.962126898 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.963794356 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.961831649 seconds)
  done (took 144.347235722 seconds)
done (took 580.59129189 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.031574476 seconds)
  done (took 8.92150001 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.056237579 seconds)
  done (took 9.03198759 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 11.791342053 seconds)
  done (took 13.685495862 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.978634535 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.97579912 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.981088534 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.966007473 seconds)
  done (took 29.811923852 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.184655733 seconds)
  done (took 9.07682638 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.971365877 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.960148799 seconds)
  done (took 15.890041197 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.09244019 seconds)
  done (took 8.983968179 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.109049713 seconds)
  done (took 9.023138255 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.979422445 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.962206073 seconds)
  done (took 15.853217311 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.964289403 seconds)
  done (took 8.855715128 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.740617063 seconds)
  done (took 9.713870829 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.978923814 seconds)
  done (took 8.891402375 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.999745248 seconds)
  done (took 8.89236714 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.533331336 seconds)
  done (took 10.426757672 seconds)
done (took 168.947300149 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.971290265 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.962126156 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.964415056 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.963175096 seconds)
  done (took 29.754045657 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.999578495 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.999300238 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.008412886 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.999450927 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.989868041 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.990132142 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.000206136 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.999726842 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.991796789 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.997194227 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.999468252 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.995940752 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.999563489 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.008056766 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.008652384 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.997782869 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.999722667 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.000068722 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.990234484 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.00845531 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.997052886 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.998559562 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.965299958 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.967005199 seconds)
  done (took 49.805597688 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.149955848 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.031219505 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.118861904 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.01103303 seconds)
  done (took 10.204519784 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.965086441 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.029556245 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.016749772 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.009601486 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.050605179 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.06831709 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.017954891 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.246198811 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.081287709 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.091251063 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.973123628 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.986446351 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.992385763 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.010777778 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.068917112 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.966665791 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.965565598 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.081794056 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.029608387 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.175975659 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.965880809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.020273581 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.052511284 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.019560592 seconds)
  done (took 50.780537275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.966833893 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.974132424 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.974009718 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.967979777 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.967031379 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.96784905 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.973886975 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.969388925 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.98896457 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.968264861 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.967424128 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.968517822 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.972932517 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.969539289 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.967750253 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.980839701 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.981483254 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.967585685 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.972209732 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.974276402 seconds)
  done (took 41.335187899 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.965637898 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.812470515 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.311464844 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.218632667 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.966249784 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.96621743 seconds)
  done (took 32.136862575 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.980279667 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.975151046 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.968046708 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.026452087 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.109929989 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.978385857 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.967142294 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.978655139 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.014774417 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037085498 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.989698542 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.996692866 seconds)
  done (took 25.917957603 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.968972282 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.967970784 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.968999219 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.98050926 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.979527055 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.976149398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.975492651 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.96713527 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.981344815 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.986944655 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.976352869 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.980178843 seconds)
  done (took 45.610521578 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.185231159 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.194863142 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.184720308 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.526613679 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.967774623 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.868735846 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.586617207 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.602009401 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.265707423 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.947013572 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.932950267 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.84954628 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.209465137 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.970080998 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.224549587 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.894625797 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.970286843 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238701081 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.970508936 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.975373152 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.266348216 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.023954012 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.182789985 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.015638427 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.182765202 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.42462697 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.221592623 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.227507518 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.304382443 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.031288827 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.125256129 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.022220056 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.9787961 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.983247639 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.972236679 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.983205727 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240259299 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.97177459 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.978023799 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.970490111 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.896088318 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.204690886 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.079594815 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.3794675 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.090697341 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.211514501 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.975116554 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.116966359 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.036184483 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.146500763 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.069168122 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.18386659 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.89484328 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.261736506 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.090732668 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.972411768 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.975364596 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.670754104 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.209732393 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.051512624 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.216472035 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.078383747 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.975159045 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.06058247 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.972214654 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.085637875 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.343628549 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.977744018 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.971917224 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.981722178 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.068461317 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.187875088 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.972632026 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973100474 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.990855373 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.974351504 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.323087719 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.496459224 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.964636761 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.540050156 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.429431782 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.94447633 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.426673594 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.021004578 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.249513298 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.1884703 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.156151047 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.217215312 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.855769299 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.9782958 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.780560817 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.054449913 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.052794925 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.973244107 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.114478645 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.19522606 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.084122543 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.974045956 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.899610395 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.984029264 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.175932478 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.436280121 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.03592669 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.974476949 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.974615291 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.977765255 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.975573358 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990876385 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.986286395 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.493136374 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.2568763 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.076302563 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.231218089 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.965356034 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.654508349 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.243428068 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.100897131 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.556223954 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.103116446 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.975537133 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126685049 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.98636516 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.978774394 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.347704462 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.383636243 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.124517762 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.223433691 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.981926609 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.00682528 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.981610365 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.064014104 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.200994757 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.975581484 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.220160458 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.217649085 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.621439666 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.980322849 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.050339123 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.985261862 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.188698621 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.061530518 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.501666629 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.190755833 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.513848212 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.977643635 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.47694457 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.150844935 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353826138 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.992287765 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.127718122 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.01338871 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.677648172 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.902241193 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983566273 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.3174116 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.012593957 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.076654338 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.978329645 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.977565068 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984690178 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.062559573 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.047219414 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.051215607 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.958777784 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.979449075 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981143375 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.977043217 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.517620535 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.596328488 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.266499185 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.978124688 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037024567 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.981023203 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.571463301 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.981219109 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.097894112 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.981804837 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.700324223 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.007527127 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.153243144 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.37628063 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.096940206 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.978493967 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.986718709 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.678120692 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.987581814 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.679254281 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.265269813 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.976783071 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.434341071 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.041202016 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.162806491 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.997677342 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.980926395 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.981222571 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981168794 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.182893179 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.483444193 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.232006598 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.315739796 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.064852639 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.247161057 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.170060909 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.443098171 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.678562193 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.492558342 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.206171228 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.979883024 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981462443 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.62573816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.986389663 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.197533705 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.182436664 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.250463106 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.273946989 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.391804673 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984559354 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.99447937 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.221885322 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.980440531 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.420223751 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.995177585 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.248873286 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.788345151 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.248108727 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.045254126 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.993731623 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.632424656 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111245019 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.940334519 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.102127041 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.910307338 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.599720454 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276645218 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.25959874 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.965237537 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.321771577 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.278755239 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.159552305 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.608263194 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.984663973 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.038594089 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.064619428 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.991352327 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.494750128 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.031969891 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.031679035 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.989476188 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.984889925 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.986931205 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.658329588 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.062522798 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.104466253 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.647242432 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.465183577 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.900096937 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.253559067 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.040011073 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.429930447 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.027442009 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.199570107 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.991175834 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.519045604 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.039626687 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.25438995 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.941948631 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.200462426 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.186362122 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.008729226 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.991868867 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913620056 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.849835638 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.989276088 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.143567283 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.873238706 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.988965248 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.289375919 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.568673962 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.027845197 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990198492 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.223236117 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.307938881 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.260721263 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.995048188 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.200915605 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.109260864 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.90510264 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.464281109 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.56949636 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.688839093 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.002852407 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.190798306 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.233726618 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.239554045 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.03113993 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.058902058 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.260184147 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.966038341 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.988133293 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.507673399 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.084301433 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.228494178 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.295668662 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.485488466 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.328396432 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.384484549 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.046921699 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.197913012 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.350023091 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.230856824 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.990691423 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.080843235 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.203254585 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.266756228 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.876536878 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.697917941 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.231891321 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.993261249 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.938899832 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.195848343 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.495429759 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.340333538 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.53253543 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.147150812 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.022662152 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.466415483 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.006522308 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.925642986 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.989917645 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.938606889 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.205054402 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.140021946 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.034633505 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.546192275 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.170724419 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.389071889 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.203842997 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.033487231 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.915655712 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.616312894 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.939758031 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.00383002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.03035658 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.062402641 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.992989429 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.192964818 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.428642858 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037416259 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.521783585 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.19331563 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291377988 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.259705327 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.285081709 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.947595558 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263668082 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.939263786 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.603278361 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.083069217 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.082652506 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.99277384 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.993966263 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26260259 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.239190653 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.56722048 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.031650451 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.241173514 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.088895406 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.994125376 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.997683416 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.45414943 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.233435119 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.206286709 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.06898816 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.118957271 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.064925164 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.507029225 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.997748251 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.995935985 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.130550546 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.993938132 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.656903983 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.290900559 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.726096652 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.19626721 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.515893097 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.854323428 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.148063931 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.043332939 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.993509436 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.995889782 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.99784173 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.232224307 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.263169303 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.752795352 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.998832779 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.995845602 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.866668461 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.588843513 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.229844207 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.002396033 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.05607457 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.998022149 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.112464777 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.994953151 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.259398125 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.043090154 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.994769362 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.994970324 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.2079116 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.509353258 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.011005966 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.694248118 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.19883554 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.999514325 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.471392278 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.465650821 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.211647513 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.042860165 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.152651717 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.243023681 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.514441283 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.153825792 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.998459058 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.222087898 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.997392637 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269887822 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269661557 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.997314816 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.211108635 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.456960602 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289777124 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.008219168 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.868934684 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.997904329 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.25700212 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.041229235 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.996311836 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.003878771 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.539400193 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.576943287 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.452941428 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.144507195 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.185927234 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.667663328 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.749880388 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.998338523 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.999412721 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.587216052 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.707760194 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.210459724 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.28604587 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.945167764 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.199195241 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.703547752 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.998259913 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.269903723 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.923710906 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.001238032 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.606266307 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.274400306 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.933938769 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.003005633 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.584565803 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.997867851 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.085171004 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.998375968 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.11474923 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.25994822 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.239302143 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.097457103 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.638024576 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.580628426 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.936115596 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.041523391 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.805033787 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.567437248 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.592443966 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019477174 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.014903072 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.923638206 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.001145871 seconds)
  done (took 1698.907157015 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.041623168 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.05516674 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.06419772 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.043724533 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.067872264 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.072648874 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.03572406 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.026822574 seconds)
  done (took 58.334239778 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.998438606 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.014236153 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.002501297 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.998499533 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.003195455 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.999060593 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.216871712 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.028356032 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.00311521 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.004357361 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.000378091 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.005183311 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.331948856 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.030369278 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.000302085 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.000765837 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.010247097 seconds)
  done (took 76.593879908 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.003266117 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.286594318 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.048620478 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.000525946 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.842457167 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.013751084 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.183202158 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.021257083 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.00802634 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.14187389 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.296073586 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.047357083 seconds)
  done (took 91.822193737 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.007428037 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.002411325 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.000864429 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.001122796 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.001648669 seconds)
  done (took 11.947771069 seconds)
done (took 2225.110353552 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.244308058 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.059135539 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.102208078 seconds)
  done (took 6.091231947 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.150761406 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.194707204 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.307541062 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.068774715 seconds)
  done (took 10.65683962 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.285938763 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.3652918 seconds)
  done (took 6.580149451 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.362725651 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.017154951 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.386635306 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.004900861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.005865356 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.005714181 seconds)
  done (took 22.949992801 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.001500869 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.002310751 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.001615241 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.002856102 seconds)
  done (took 9.937534119 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.001082458 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.665911594 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.002357235 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.015183787 seconds)
  done (took 21.61453988 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14469896 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.013786526 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.140625381 seconds)
  done (took 8.229094876 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.151714651 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.839933137 seconds)
  done (took 6.921569221 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.149558672 seconds)
  done (took 4.079860377 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.030723447 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.27617003 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.470203942 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.507949382 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.575225047 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.756855313 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.322056829 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.275325683 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.396664428 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.42389743 seconds)
  done (took 25.965576585 seconds)
done (took 138.964534092 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.360896679 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.0289345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.240310497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.366017151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.234243941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.220117616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.219237243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.351371911 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.037064388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.026048591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.361477212 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.229964833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.17526189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.02067881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.179048521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.020551827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.230668739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.377607526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.033298857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.281485944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.229351598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.010578244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.203824131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.025206553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.235976995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.158758626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.552700373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.022866666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.181658759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.561943916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.159362052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.428136714 seconds)
  done (took 172.696101537 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.005024225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.005471985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.029290212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.005657921 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.263783363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.0082863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.007336945 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.005394121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.314932412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.309221164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.007524245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.265577518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.005513752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.005563093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.008663159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.006051562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.480312144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.006936874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.006224393 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.008893186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.00628228 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.10668059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.006970357 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.121813268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.456825876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.006177441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.007637562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.007421204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.007312492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.005740795 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.007019279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.007862426 seconds)
  done (took 212.438331912 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.959207584 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.006147256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.006030813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.009203205 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.008450808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.007834879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.008773161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.007423479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.766811791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.761774189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.006514304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.008198788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.0084517 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.00793341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.01262757 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.006925325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.011853526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.012401046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.014501577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.017726882 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.017009692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.652150713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.008001349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.63570057 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.008519021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.009338826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.010880122 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.009964506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.012074423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.012336305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.007940101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.009208485 seconds)
  done (took 224.97718329 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.248874012 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.008723524 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.010737371 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.009593816 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.00942472 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.010089104 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.010068211 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.258262543 seconds)
  done (took 20.504723242 seconds)
done (took 632.559496115 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.346613551 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.736809558 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.149824256 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.034814929 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.279296508 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.074018098 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.027794064 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.090239878 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.864244264 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.10028212 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.442412392 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.038118746 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.829682853 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.059649682 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.152082761 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.08865706 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.401087674 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.709821614 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.168726398 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.686807666 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.186114556 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.987270251 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.106987506 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.897658488 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.456315677 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.020154558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.055916332 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.396987974 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.03546372 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.182206835 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.637789943 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.295219288 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.045591159 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.032482474 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.084575169 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.062605038 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.245368769 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.041759995 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.148617722 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.784204233 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.681110081 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.751431272 seconds)
  done (took 106.35440428 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.021233228 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.01704715 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.018370019 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.019070303 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.028471556 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.017772344 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.017614326 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.018451407 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.018044998 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.018910813 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.017618308 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.028092127 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.017875899 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.028990601 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.018630228 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.018902 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.019020229 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.02847831 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.018571465 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.018982652 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.019255143 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.018847799 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.014246853 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.01914414 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.01884022 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.018911681 seconds)
  done (took 54.470657377 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.013249524 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.174886354 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.250869079 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.034642748 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.014302704 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.016499038 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.043724917 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.023147926 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.016790884 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.017320155 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.113230482 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.019152884 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.027756193 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.252087433 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.031459835 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.013506485 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.014115572 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.015987057 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.182436447 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.030344462 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.045397737 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.024140072 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.045907136 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.031327951 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.01722912 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.016928002 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.02040184 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.45144991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.028278466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.117103633 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.061042153 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.048731046 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.384338542 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.26621055 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.071446767 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.022658495 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.016243373 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.121033179 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.022029164 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.016475255 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.045995701 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.025019132 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.256658827 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.546658345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.031375792 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.014890932 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.449711468 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.132914546 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.057338055 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.029592704 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.265402561 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.034269445 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.016549229 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.017244386 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.052790655 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.033022885 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.01748375 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.309795912 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.032820265 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.045797174 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.025211766 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.018554076 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.191663179 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.027226809 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.179579693 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.026945322 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.024206313 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.019115506 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.257035543 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.035998357 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.561978541 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.032055513 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.017791823 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.120696055 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.185488198 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.482487642 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.033150761 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.194781892 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.395867794 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.056651088 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.030163424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.438906326 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.060470386 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.028851592 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.018565104 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.018748565 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.019199501 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.064197952 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.044742762 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.479329725 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.559006417 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.330261245 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.060044538 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.033127029 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.022758957 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.317858781 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.029749542 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.019455659 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.248893377 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.574677077 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.034840596 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.026841465 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.539763799 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.035715229 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.049059486 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.030757485 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.269985345 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.036034549 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.066195162 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.019508558 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.026460808 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.022530886 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.04928781 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.030697898 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.019019826 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.533566534 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.138342491 seconds)
  done (took 249.706801127 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.022173584 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.019391187 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.020261648 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.019590716 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.018558424 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.021635147 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.019285422 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.019690458 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.019889665 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.019094732 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.018660302 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.019596222 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.021270495 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.019309141 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.506661029 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.0334993 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.519308205 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.033410528 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.031487617 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.034660212 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.637415911 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.037550995 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.033009145 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.035415328 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.03383438 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.03211548 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.046488701 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.075809541 seconds)
  done (took 172.319141156 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.033195206 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.111908178 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.047987226 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.08117357 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.047665325 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.034527598 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.211921288 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.059207819 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.040473391 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.033813405 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.033885927 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.066322922 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.04256816 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.13211773 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.070774058 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.141727884 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.139093166 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.043670455 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.033828999 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.035525555 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.083061523 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.05017849 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.067698472 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.098578081 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.050810104 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.090901521 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.050791108 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.035992781 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.036201497 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.173568658 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.055632723 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.067574728 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.07052765 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.056805423 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.155502947 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.154613882 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.142773764 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.140222075 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.043760765 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.036532916 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.0358934 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.036409363 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.093259435 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.052218954 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.038501619 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.152086497 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.056331948 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.036693838 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.037332956 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.037405557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.051141169 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.056525393 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.073360964 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.163209274 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.084762102 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.066838195 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.134645253 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.16153487 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.037486931 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.134563162 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.045292205 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.150809882 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.05875498 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.03879917 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.041115238 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.042077916 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.085553769 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.151200616 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.142464596 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.046121768 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.135603306 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.09260215 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.054933623 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.038748286 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.038828048 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.093406482 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.149579226 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.094162426 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.101213311 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.077002843 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.047594598 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.037969473 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.040013361 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.066090584 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.047906482 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.151809895 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.157890631 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.046186877 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.040226356 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.040061596 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.038622965 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.063071934 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.102944429 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.083423796 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.147874384 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.078540788 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.078161984 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.04894938 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.053715631 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.045706241 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.073515702 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.048530005 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.051999613 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.332474439 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.072142796 seconds)
  done (took 220.280147871 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.426714324 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.085449839 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.115490722 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.305482416 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.396840282 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.985604929 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.080736208 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.089881527 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.098283136 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.219830876 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.151537163 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.142989447 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.079745971 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.062531734 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.082646829 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.101158384 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.11356781 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.388054168 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.282717185 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.643681747 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.083280728 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.388893454 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.421871352 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.460107442 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.141645171 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.483993417 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.663910226 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.183905959 seconds)
  done (took 67.650412267 seconds)
done (took 872.716474663 seconds)
SAVING RESULT...
DONE!
