cset: moving following pidspec: 23466
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.37246715 seconds)
loading group "string"... done (took 0.568667524 seconds)
loading group "linalg"... done (took 7.732388569 seconds)
loading group "parallel"... done (took 0.174516607 seconds)
loading group "find"... done (took 1.299995608 seconds)
loading group "tuple"... done (took 1.988022997 seconds)
loading group "dates"... done (took 1.433904974 seconds)
loading group "micro"... done (took 0.249661772 seconds)
loading group "io"... done (took 0.984481244 seconds)
loading group "scalar"... done (took 42.42081351 seconds)
loading group "sparse"... done (took 14.069586347 seconds)
loading group "broadcast"... done (took 1.105801369 seconds)
loading group "union"... done (took 14.992144191 seconds)
loading group "simd"... done (took 4.833863962 seconds)
loading group "random"... done (took 9.73770422 seconds)
loading group "problem"... done (took 2.00006204 seconds)
loading group "array"... done (took 22.756990675 seconds)
loading group "misc"... done (took 2.05073981 seconds)
loading group "sort"... done (took 3.469053318 seconds)
loading group "collection"... done (took 19.735762362 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.578126104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14381265 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.15081717 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131645365 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207263736 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158900514 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158879921 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098892951 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.996655594 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176559441 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154084382 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.527972513 seconds)
done (took 5.221365848 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217267854 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095890711 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105027537 seconds)
  done (took 0.886749832 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077532762 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147429226 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095574564 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079144527 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097083976 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079842075 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097262692 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079869175 seconds)
  done (took 1.368214984 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087074282 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098913935 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083090993 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099166941 seconds)
  done (took 1.060240763 seconds)
done (took 4.307726276 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741013293 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273622322 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205196359 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466155588 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19771082 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218529475 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683556618 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347779995 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.260227293 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100385642 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143740204 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38989359 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139127464 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689848416 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092966153 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12824878 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.183351153 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44605361 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083326266 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110784267 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116805903 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145284281 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132039737 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094367602 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186105647 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082252982 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194635638 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109601024 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.0809891 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27644242 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.204812775 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692181867 seconds)
  done (took 10.946874835 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111974098 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133763702 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098025086 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139854026 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136410462 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099393493 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084649382 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09741642 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121458471 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177339507 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131899378 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121686734 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095407919 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082940576 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115163031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246359785 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123300931 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102239848 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101968913 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09076488 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140519664 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114529248 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109056507 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095166729 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167602478 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222920475 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113708601 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129301814 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099501461 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114020572 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14583519 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146483357 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097563002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082361349 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174499984 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12401663 seconds)
  done (took 5.193826848 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.091488825 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190638221 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122839834 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171230319 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081158981 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144523475 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09579577 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113508697 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257813923 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113192962 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177081933 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145775915 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100914041 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097474709 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08217107 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097788548 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.622521365 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.125496907 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154195004 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11494278 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102630779 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086928126 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366535116 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106222149 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082840921 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104184823 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066564676 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161449392 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099507349 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.144582698 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12199968 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083064868 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135083098 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210561925 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112505034 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137391376 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096968062 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080382467 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176692444 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10587976 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0805467 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121593808 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134011816 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137238776 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097967171 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081680171 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204585736 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097359588 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113566389 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.941807405 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184225461 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123670803 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100478337 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330288679 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115452631 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080398412 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094439958 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27024089 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.210318188 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.123574299 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081301039 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095471852 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080130382 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09838819 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081455241 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400017945 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081711124 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.656926763 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085464538 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108910112 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083279238 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097245329 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104942999 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087378964 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11554978 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079543371 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099793428 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079680273 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098320133 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077420293 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09978903 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1063588 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086694109 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098127221 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148556091 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097215894 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10219574 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130176032 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102217061 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082280947 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132211637 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094569553 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082100364 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10016097 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13398234 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081993492 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10834485 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099714856 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128633211 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098747159 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.146491317 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096813021 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125809602 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100592165 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114553493 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113759265 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100025918 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084981463 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096845028 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077669948 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165696358 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083052865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09922983 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081455174 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112176875 seconds)
  done (took 22.490733846 seconds)
done (took 40.412693595 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32536381 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105121187 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104155198 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102813509 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100492412 seconds)
  done (took 1.505251319 seconds)
done (took 2.246209982 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288620368 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174211947 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096908614 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166856837 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093210614 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164973718 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16044129 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094878828 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220613091 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095086628 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161299688 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077661146 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095743336 seconds)
  done (took 2.657891299 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094670848 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115860626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083215167 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110910422 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078053242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11230513 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094201919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117157963 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110472313 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086067204 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094013983 seconds)
  done (took 1.832464116 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094885892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113126445 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082970662 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111346087 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077041144 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114001391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093074659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117601667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110308768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08686543 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095085214 seconds)
  done (took 1.832388381 seconds)
done (took 7.052208475 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092155886 seconds)
  done (took 0.825014154 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.936419625 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.76001753 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114404175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152492897 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299554117 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193716245 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.46808576 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12558485 seconds)
  done (took 10.994458889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.115663173 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102803812 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.10037526 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097561263 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104122534 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086745623 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103976993 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100140251 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085592453 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100646719 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084332421 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103544559 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103708511 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084889798 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101739747 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087083278 seconds)
  done (took 2.365335826 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120326287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118697652 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107999667 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108786304 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086795005 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106199623 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106412717 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089172951 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102475233 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10466312 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091370832 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107362155 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10362312 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080514042 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105868944 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108136464 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086798773 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106687726 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106795024 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09101508 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10726285 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096147369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088673878 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107116194 seconds)
  done (took 3.288749636 seconds)
done (took 18.210602978 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162129862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110873569 seconds)
  done (took 1.01449524 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098281558 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113969102 seconds)
  done (took 0.954531782 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099392766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096644573 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124274377 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109904751 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081376948 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096604681 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120585865 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081600175 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097972215 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081131593 seconds)
  done (took 1.734490886 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084821072 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110805433 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102660269 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09683287 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106518099 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095025375 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089504718 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100379219 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112822117 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079657478 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105554658 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118640234 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089250147 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120471497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108130105 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08587024 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106232818 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102072588 seconds)
  done (took 2.563811015 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081848151 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098178374 seconds)
  done (took 0.928861046 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083305793 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094956961 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082178379 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098721273 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094441897 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078205462 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094785079 seconds)
  done (took 1.374289198 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487978991 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136882974 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263064311 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102876934 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104084832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301870607 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099152412 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085883003 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103810291 seconds)
  done (took 2.491906085 seconds)
done (took 11.807884233 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094715801 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116785189 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113874554 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46815794 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108915209 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09986657 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14995836 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252765812 seconds)
done (took 2.158844305 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144232492 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606266644 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.430575643 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.233956261 seconds)
  done (took 2.027365516 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407656182 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101133738 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086047852 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084207487 seconds)
  done (took 1.438568354 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081406516 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099947106 seconds)
  done (took 0.940037219 seconds)
done (took 5.30953876 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081493739 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132441726 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080879331 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097613902 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080953707 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097156519 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077655664 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099756762 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080557789 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096554842 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.099575878 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081536661 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.099846504 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083681695 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099294643 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080432491 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097316362 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0832519 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098602075 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080475391 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09733493 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083271927 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097494256 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080506331 seconds)
  done (took 2.980904046 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101700568 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098777352 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104659791 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087419178 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103090071 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086497312 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103960565 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098012355 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087296762 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103041801 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10205271 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08636994 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100321037 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086042201 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101389518 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102357896 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087384557 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098679139 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083933789 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103294385 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103550476 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082488256 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102925098 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104231473 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08616517 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102748238 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084355491 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099129897 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103081487 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086443485 seconds)
  done (took 3.64354362 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086107435 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094219841 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079608082 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102547769 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078901317 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097627222 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07872206 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097023689 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080535585 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096693671 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080692782 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097003342 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078624592 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098711564 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07937109 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100931995 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112806937 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079504284 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095807371 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080283379 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098456308 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078990351 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09592979 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078913022 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095024199 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079119132 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096332619 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079535893 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096762528 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079738978 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09968071 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082070109 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096548711 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085108885 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100306651 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078165669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100040958 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077612 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097474435 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094977268 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079894349 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094881621 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079383338 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102484086 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079273339 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097720059 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079195593 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097669783 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079337209 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099927642 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079090167 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096562776 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081388237 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097363191 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08284702 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096365953 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096174899 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079641855 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096706605 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078979482 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095033774 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078541655 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098737806 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080960755 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111157989 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086574584 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095776681 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081956904 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097593217 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082099174 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098869416 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110208026 seconds)
  done (took 7.244422032 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085567445 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107508403 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08098548 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099296224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077177742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097417341 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100271236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080495534 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097935054 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086999719 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097245225 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080013915 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09852453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107922977 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081208828 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098038153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086635367 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094906798 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079016655 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101172995 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078951079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101592566 seconds)
  done (took 2.784159563 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212019282 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105464265 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143862519 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107367028 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083926328 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107259055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102177398 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088117009 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102634395 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084933738 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10207613 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103205387 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084477894 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101854296 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101572985 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086983533 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103334584 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085769069 seconds)
  done (took 2.676231781 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094263516 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099386479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.214305128 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100783686 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098859895 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084698058 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105349652 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109007585 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085331164 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100163588 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091068403 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102408478 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101717236 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082484059 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101130947 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08281507 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103457655 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081865718 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110667889 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104973405 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105424824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092474348 seconds)
  done (took 3.024780448 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098168952 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100920172 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118880825 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084897268 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095772266 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080154735 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106338314 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081517248 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108827604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100111652 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082876077 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097903609 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088946186 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10060947 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104080898 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08284663 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101527491 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08244962 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102336074 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077873286 seconds)
  done (took 2.671124714 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103703528 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101141472 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100095043 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09406506 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101876031 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083385222 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111048861 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100778243 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083011375 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126309796 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101342205 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083540752 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111389636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106772401 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100875501 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093958206 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110735311 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109616727 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083374803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101477587 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126796763 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083228938 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111884487 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100766617 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08342517 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101788696 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100376699 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088953741 seconds)
  done (took 3.580738774 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082713846 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099583279 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082542668 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.0973288 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080767657 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098781331 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081450371 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098602098 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082682957 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097963992 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082613393 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099773587 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082935484 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09970389 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082322341 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10031674 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082109058 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097084273 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080074073 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098128324 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083952489 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102806205 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083678585 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100430647 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082245669 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103192617 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081829782 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100363858 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084045432 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100067629 seconds)
  done (took 3.504461953 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092164767 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107652057 seconds)
  done (took 0.974023426 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080696527 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116069058 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079541854 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104346632 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086871399 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102266568 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108716516 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087489966 seconds)
  done (took 1.539761952 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098209973 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111474837 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084227126 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114720017 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109975172 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.101769648 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17514201 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103498213 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10586545 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082068908 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117330704 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083864743 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110100064 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084452684 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10919914 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090907074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101711332 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109392142 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089423127 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101978246 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086755856 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11339134 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087283613 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100944561 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107442607 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094725627 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115923671 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085631543 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108318025 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110460698 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091037188 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097373916 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085685447 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104892506 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082702598 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113326168 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120677478 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088863613 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114111127 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104382633 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097291174 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098670368 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091207661 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110717705 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113302753 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087189603 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104311303 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08047025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101410704 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087218979 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098782114 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085015724 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098521797 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092583806 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107585487 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114355507 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083751236 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104942302 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088437948 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108330527 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091129483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107325949 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105682574 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085711442 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111407615 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090385469 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114950184 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098529107 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08018671 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101746756 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097452799 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128299403 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10803121 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086751095 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104138328 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082179008 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105366456 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085948668 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109626011 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108430171 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08693531 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110777563 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092893088 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104847523 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105907152 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095239949 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103147288 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087232846 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101563112 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121786908 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084821765 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101007612 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083000823 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115889919 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089021778 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105114083 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081595284 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112960397 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097258788 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087051955 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105158894 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086595409 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11563775 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109353174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092191799 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112651149 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10976316 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08624317 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105974927 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081665364 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104126023 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087981026 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112258919 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079409448 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107654125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085545036 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105874478 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111851527 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08155624 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101967936 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091582153 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108715044 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098931963 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080347831 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102969896 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083737274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104795345 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091291105 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100772282 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077765075 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09771119 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103842054 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083482542 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104626272 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088979456 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104607649 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076367802 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100287527 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105088544 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092797079 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101981354 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082902317 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108130298 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101451299 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083163692 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109091488 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086591507 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102582926 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091403156 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106128146 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080176512 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108972637 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106039122 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084518076 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107561143 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089400981 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107573119 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10448109 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084551142 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110188823 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087268242 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103050166 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085057865 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104343838 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114581881 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087562542 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096841087 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081239654 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110637087 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082665942 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104162864 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084412039 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108799572 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103508265 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082487963 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100957107 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085308584 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114196145 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105789551 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085589193 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106930651 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094990336 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102286328 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085400993 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102021993 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102248974 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084836186 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111225688 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089015686 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10795123 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103738793 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080587469 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108126687 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091165773 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100949146 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081772565 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102097972 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106392552 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092144014 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106214631 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085694478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102666503 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085766613 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109073357 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106896974 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086769111 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102051426 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090050654 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103026193 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10948747 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085728267 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112936907 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087372479 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097972414 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086038711 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101022516 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106655917 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079134343 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098719832 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083809253 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10412259 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0843747 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107863682 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078849447 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112752754 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112036059 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086884489 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103518757 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086619374 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112630497 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087610646 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109423526 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08929406 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111343102 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114057439 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084466653 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106823486 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095759826 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10359052 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094411325 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091382375 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101817971 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084676612 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103060348 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083953618 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108601285 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113937226 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09401059 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.100071358 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088261579 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103820632 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085219935 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102177921 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090253404 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108314449 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105935335 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094720854 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106727739 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08988187 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109225603 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084645036 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106718256 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106072638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089426288 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106864748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088623598 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104475013 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088577418 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104786062 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083517818 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108146434 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105322927 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087297028 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111449557 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086274161 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105708926 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088671843 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107410512 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105190829 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08749248 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104006966 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090000285 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105928812 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086658349 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108665224 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081222058 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11400175 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085930735 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114209575 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104093502 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082657901 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111345538 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088875308 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111637176 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10637056 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08868788 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105815821 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086853949 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108034605 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092527445 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.104694005 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117374392 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096237217 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10602505 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090322519 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107183666 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08747604 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105741402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106200487 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089053377 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105864703 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087002873 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111114491 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08959169 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106945217 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087769691 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107593075 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106229794 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088840564 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100146928 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086946717 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104658973 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086840861 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116189553 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10538738 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090394742 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105271553 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088517423 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104623569 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084465839 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11528572 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114265802 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087391423 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113623614 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085789003 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.108557416 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117046614 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081206612 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104226552 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085276875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103418823 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094689242 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108272937 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096372879 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.116614207 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104692411 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084283592 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105287623 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083713565 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098102715 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084978151 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109898121 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089754105 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104964545 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085108952 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107924899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103939357 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094745055 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101883952 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083791498 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104093085 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079805423 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102375605 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101632487 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088102686 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103217249 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08194968 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100678843 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08558191 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105464863 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087669771 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107026445 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08910137 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114325251 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105544848 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09064888 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110248039 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08084447 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108393806 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085736151 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10494446 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102086591 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090698698 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110013739 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089384412 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116846711 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086481406 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10892421 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1065752 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085705928 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105984333 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086990999 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107254235 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086342079 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109196062 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095352404 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10641445 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109243108 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087465485 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106571503 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095510619 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108271364 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089403431 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115969525 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109980194 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08931696 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116161065 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090920224 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112301585 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108340977 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088777328 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113108325 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085807895 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114052372 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086701927 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109827155 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107801519 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086077456 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10669836 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087646529 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105856277 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093548883 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108798633 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085244426 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107406524 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084156343 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109887971 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111517995 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096209706 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109853054 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090645073 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.1036435 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083831011 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110834603 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10447826 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089876234 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109737338 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093327315 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109623786 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0884887 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.108202518 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116484689 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094774546 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111403059 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085081398 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111746714 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088284569 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110658995 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107168178 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088690639 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108550124 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092710701 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109543154 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087163816 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115894905 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090930057 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110218474 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109216427 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089620617 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107194259 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083277487 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108983436 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089330465 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114663638 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089435231 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108426028 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11902982 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088099647 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107948614 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091321876 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108187068 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111978706 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084021067 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10883033 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089735974 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109875531 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082680127 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107475115 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085417933 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110946192 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085878179 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104055372 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117915111 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09646233 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107420607 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08352559 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104142433 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080613115 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103915646 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10612713 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091065919 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109712783 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098818056 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.107535525 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086299429 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104025311 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087677525 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1123494 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110716008 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085288898 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102697465 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087676076 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111576043 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092712869 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107311704 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087707826 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112729053 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109589901 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086522031 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111160967 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084533535 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11224399 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121465418 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08951258 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10816489 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095308932 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11710119 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088862938 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.1035078 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107963357 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0922793 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10785944 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089430432 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110241835 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124612835 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092210207 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107580775 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088147006 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111094098 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087399267 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118131067 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088022745 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110976573 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112596212 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090390405 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116950226 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087644276 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117616126 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107752627 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088116217 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102698596 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085810756 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104783534 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084888756 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110564499 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10803262 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094596766 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117462766 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086843553 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119511084 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116482328 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093491073 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105042917 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086804847 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108323999 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083385355 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.112786481 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085393132 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107458742 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104847394 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088641566 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10902534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09456539 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109387205 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08932593 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108997424 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081628719 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111792712 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089827137 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111241706 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104197412 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089150234 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109259311 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092565336 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114328816 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088189664 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111591654 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089341723 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110881005 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103142277 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096146083 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106561533 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091450773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108793806 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089355503 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111036378 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092044313 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116448153 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109925988 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091108746 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121680376 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08961824 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10688627 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104801853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094836288 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106367827 seconds)
  done (took 60.041092993 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147869031 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081616611 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099856873 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08075378 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116030105 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100875399 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081208198 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101028784 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082094725 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104116023 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080036908 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100055614 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110910849 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125698165 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094869223 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106109637 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079787139 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103248441 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099041662 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082353274 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110239412 seconds)
  done (took 2.912836935 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107255344 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119337139 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116523146 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120062906 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091287211 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117987903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116289867 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116105021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100761551 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112901799 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119468174 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11555751 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09307216 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113234095 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11278136 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095054076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120897092 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111481906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117145505 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096340958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115439571 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116054513 seconds)
  done (took 3.270478593 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085641914 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103237766 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086471575 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099870349 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084729549 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099598492 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088942633 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103852344 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087992305 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104072343 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08255406 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104365612 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104945374 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080145715 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103505386 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083862197 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153284766 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109362786 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084539809 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108246408 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080800471 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10866906 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102607804 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083734277 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.108288269 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091994853 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10960996 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086382038 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108414643 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086257483 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.109249198 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085114463 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.111126639 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107402127 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086842039 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105868334 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086266233 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104726567 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081476251 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103365709 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087668879 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10413194 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087736236 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110138865 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085748653 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105584035 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086954327 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106579943 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09866447 seconds)
  done (took 5.609620775 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105895739 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164854602 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087672515 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145198637 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122879002 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114172659 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088491632 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144155937 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105483171 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082963551 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126067463 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123061307 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104857004 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090988424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10939557 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104959619 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087174399 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104582209 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0882503 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104925713 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10984791 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092263134 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122740772 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120233153 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10898474 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084302985 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105427669 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09008456 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119302009 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111935434 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110737351 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091912414 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124075751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107668624 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084304474 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11074793 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124635976 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085572007 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1096453 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103291508 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08775029 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110858198 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111044753 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105082071 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106787807 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111193023 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086481027 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104525988 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119332693 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088413908 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115301648 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121420321 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08939907 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10656075 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10994606 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101305162 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106785526 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103623672 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089292255 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121334825 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102624623 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089591997 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122146086 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108232494 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093515285 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121261256 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111210648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109854527 seconds)
  done (took 8.251006851 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095352828 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113891093 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122149383 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122530726 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09269188 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112964247 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11207973 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092256326 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113102971 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119039427 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111845473 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135969332 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088446872 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115914757 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112111937 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093323254 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113282783 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111664825 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092024052 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113824706 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112783071 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120969526 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093433377 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121994187 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143595177 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107088036 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09156851 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113586078 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121803651 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111567671 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125852384 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093089124 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113291694 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121779837 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124575345 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092605118 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105483568 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111486473 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093111535 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112942173 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106368833 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102310361 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11383268 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107173136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091686458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113131188 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122230381 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125790033 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115618065 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098375529 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113741718 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122945355 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111982771 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092314652 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121829026 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14856248 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122698686 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123249624 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112876707 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10134225 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122688012 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131306768 seconds)
  done (took 7.776825939 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108785826 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116909436 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120100079 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100682139 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084174369 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110686897 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084194234 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105129501 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114863146 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095914796 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119232384 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110462578 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092779771 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118316147 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111269659 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114410574 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08941759 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111716491 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116892501 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110490061 seconds)
  done (took 2.978072759 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095564917 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12648279 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085991691 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114109758 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110045124 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092544002 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109837786 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107972731 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088380273 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109427451 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09764567 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118639943 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107763823 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092462194 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118670201 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112957515 seconds)
  done (took 2.530554869 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10080628 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119591587 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122399345 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085399616 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106661111 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081423563 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107922553 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101641786 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082966414 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122885663 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085747055 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110888674 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106668467 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084767744 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103338812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088646486 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103308785 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083284057 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107521385 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121779688 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097597647 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106389021 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106648538 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088055763 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107075636 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091392474 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107286374 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104053209 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084806873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106843099 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086907161 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116067618 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102865133 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085676257 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104225528 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083503544 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107903626 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086109405 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110564297 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105626528 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084605521 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107024367 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086090184 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109032281 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081395969 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108521654 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102323452 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09371243 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104297406 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087427126 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107328612 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087634116 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108999183 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118247743 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089479144 seconds)
  done (took 6.339453365 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101279147 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110468975 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08187116 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10489199 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088579012 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109495629 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109370057 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089824928 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108896359 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084173679 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109362403 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090693005 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109231027 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109405533 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088668109 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110894202 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081785378 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109566637 seconds)
  done (took 2.64994854 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092463154 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106459909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094078426 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108856537 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085901989 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11103254 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080574402 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106002625 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104193218 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087797375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106496916 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089040869 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105263773 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088008292 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108000585 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086605123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109612329 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103754305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086400344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102086941 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088885094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105044736 seconds)
  done (took 3.006628861 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119829363 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127175079 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092879222 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233736205 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105406824 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134698589 seconds)
  done (took 1.664670479 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111723864 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12271471 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106383107 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109875121 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117040058 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08733769 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109859895 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110227099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118719002 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103380312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109818855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119520083 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118914413 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098109017 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117089895 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116173743 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108268187 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089155803 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107767383 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130000287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088393686 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120352691 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109277779 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088614955 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110022008 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119098757 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11880757 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123691519 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089759597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119286409 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115928025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089326247 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120845146 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124345192 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109771914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098849457 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110409962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129353909 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114614881 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098377898 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111031995 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115671192 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098785335 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115876336 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119838469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109298368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095795259 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110325111 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108849075 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137520414 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094578297 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118844636 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116730481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119564397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09887253 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157177908 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103071455 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119424734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116863246 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124851172 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118366522 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096181773 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119469658 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125203629 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116210889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098387238 seconds)
  done (took 8.233903751 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105037589 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128409969 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109378285 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124492397 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098573018 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10991869 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108565099 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089540371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109979591 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10808459 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154589767 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090137799 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119818071 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120623753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087471052 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111196832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109979634 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117314235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089028609 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1367564 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109433081 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119417271 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118896283 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098759324 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124781888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116106918 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107979433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089968098 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109923046 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108649198 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095246069 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109952688 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119687065 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087486213 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120460443 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110792398 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088450201 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115806123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110337953 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114925942 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098597326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13080338 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110916998 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109129043 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10321349 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1109808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110745163 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087580434 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110618171 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108982127 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10308451 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12549106 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124140756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120050571 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109508579 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089804161 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110707834 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108783166 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088770547 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117179248 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118868601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087997559 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138414734 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110758002 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110316701 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118808548 seconds)
  done (took 8.133156049 seconds)
done (took 158.777430543 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218257539 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201186959 seconds)
  done (took 1.274969255 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099439291 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138080088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095944296 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172053254 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107039666 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121065953 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140061927 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098752493 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108259064 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086038569 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108440972 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087748698 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173857649 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085860863 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10890204 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108163538 seconds)
  done (took 2.703554616 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119887942 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255964216 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129043725 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106489851 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090888975 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111842269 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085036351 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113612671 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089987308 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107800945 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088541336 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109546348 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085101142 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109379788 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111311046 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090040191 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107104215 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090321366 seconds)
  done (took 2.864129246 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114808766 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150516775 seconds)
  done (took 1.133313972 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.248387631 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163886424 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.243486764 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.460098941 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277151839 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.368650249 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.205333472 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.214725705 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164826151 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.212631167 seconds)
  done (took 3.419980295 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120017154 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182292568 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320935928 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156332373 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108451594 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131739142 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157983353 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131675896 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124041722 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101756422 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123372264 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119199615 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1389468 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096149489 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117513429 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118240309 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122264979 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116017066 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116015469 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096959514 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139868364 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085216952 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117126784 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11570125 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098912136 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120610703 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107604479 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085975408 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118618556 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093912996 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115464409 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126820314 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119813081 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.157848993 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123800216 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160299634 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117763488 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092806629 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.1169892 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090718302 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12039675 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120746586 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124961555 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097654094 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106861261 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09732988 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108380921 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085672083 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1172263 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120242643 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093754561 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115265523 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156664493 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120907283 seconds)
  done (took 7.456633776 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796997178 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16130669 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090018939 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88767173 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137435667 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104135665 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780469102 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113443771 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258046921 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759613368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13452148 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120797467 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208219142 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261537959 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928532851 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289192544 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.692787045 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103006966 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152333524 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155886475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119004446 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137003305 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109714676 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431011769 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118435699 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112404709 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097335617 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120275065 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161442875 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126824781 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115041757 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180598112 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246111081 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208063685 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115330999 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091678313 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112412659 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1723551 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266080832 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196009268 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181256065 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109770538 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111011382 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101288014 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134106856 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108234536 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165137201 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175797008 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171323123 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115928681 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119973186 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098007471 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122088152 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164940038 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122177539 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312678309 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324342393 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088424978 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122698157 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126585057 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260889594 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102159788 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228970948 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140588418 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214906649 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090224708 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778306908 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169807668 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113960102 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095587083 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122260936 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118429685 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099549665 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169505251 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409764996 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125781179 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116225711 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089821723 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230136632 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125474197 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090521514 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163176521 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118702445 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121697401 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102467305 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124381401 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170742318 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251528141 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100535624 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120759792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117744124 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1029786 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117890485 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212956039 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222220689 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16325916 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234657965 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098796884 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18825299 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16993041 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120565987 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174801632 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121300675 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102199664 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123420373 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22127328 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146133982 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125449374 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09423319 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119789374 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150090888 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128757118 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09671262 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195217054 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458798327 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169019934 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111011785 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128700604 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098046366 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1861126 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096239562 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265090325 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123318156 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171923759 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120380955 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086892875 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122955941 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163702627 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124450399 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121651373 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09989916 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120807136 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238220194 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220012103 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122848783 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223312104 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184768567 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120527152 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172504415 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123431174 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167180713 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123100149 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121142039 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095769584 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772411878 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1250779 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098710508 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116990444 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18931129 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112049482 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10327994 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127661561 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109490304 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764775507 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129229197 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12314796 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103237021 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119539541 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121549788 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096106568 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117577188 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162699467 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23462048 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120624014 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11952926 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103256658 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184341979 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095991105 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.128445819 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125539872 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104428603 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123281029 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115830365 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103650033 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194704076 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165473722 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22303904 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575133139 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114424107 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126631217 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230135009 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090288607 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293794003 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121219959 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224306481 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165950875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100790319 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32182578 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188508413 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187435273 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106443459 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197072121 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088839852 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119122072 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165677508 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11294862 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095906423 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186614023 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103649759 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125042089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.969634076 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090598716 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249368737 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087376128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173009398 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119054476 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122895183 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286650464 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090164596 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129721626 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16603458 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116737051 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126101534 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.856217797 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127354236 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122779066 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096794701 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224048678 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164658925 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121908812 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120194474 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098112053 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188171494 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212752054 seconds)
  done (took 44.364585881 seconds)
done (took 64.077232475 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283433245 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.22009695 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.271812851 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172627102 seconds)
  done (took 1.918822657 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173438524 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151185307 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123846474 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110136183 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153097048 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084535759 seconds)
  done (took 1.689471016 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.366597974 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280127354 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244776761 seconds)
  done (took 1.788718329 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321674949 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253964691 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47701591 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328749121 seconds)
  done (took 2.380801785 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213126338 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135117522 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112509288 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103835754 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201530565 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247722684 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144139609 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204170937 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098372472 seconds)
  done (took 2.405104535 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199043084 seconds)
done (took 11.279799366 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.253425886 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.163324031 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.304857893 seconds)
    (4/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.149640884 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092172732 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127429504 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.132334649 seconds)
    (8/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.24854935 seconds)
    (9/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103234966 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.183910253 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.242791551 seconds)
    (12/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186451498 seconds)
    (13/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094397099 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126733473 seconds)
    (15/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.160384649 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099185938 seconds)
    (17/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.180791183 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.155000039 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119839513 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100196124 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140756702 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137636509 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088596664 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.22215892 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117247618 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.228271833 seconds)
    (27/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171030817 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.10596796 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07699208 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.230523888 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198851001 seconds)
    (32/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.113519486 seconds)
    (33/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.182188387 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.181266562 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108527623 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094896325 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.185241399 seconds)
    (38/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.086804398 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.176114228 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.14083564 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091377711 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125082978 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.076137489 seconds)
    (44/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117647755 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065963015 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117974212 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216085607 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097168186 seconds)
    (49/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137219293 seconds)
    (50/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.181186275 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115465316 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117944775 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092422128 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213791899 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.256550408 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.183184851 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121453591 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.206073195 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.158360416 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102368504 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.079847715 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112252979 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.162808556 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.120222967 seconds)
    (65/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080487345 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.206636312 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118584274 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.130176289 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.211333848 seconds)
    (70/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.143340482 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143234712 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078232547 seconds)
    (73/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.148562246 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190374886 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.198571465 seconds)
    (76/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125811162 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.177704185 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095266843 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188554236 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066623924 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185323222 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.200462907 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.087702269 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117179194 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093628952 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093032625 seconds)
    (87/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095400358 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.176161801 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.189073834 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17599262 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093999929 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118753722 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08837203 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.166295276 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067110433 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126192375 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17507276 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.11655123 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067319827 seconds)
    (100/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139841878 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081180366 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111738414 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094267904 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.138806793 seconds)
    (105/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118832672 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093895377 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.142861614 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.134847795 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.167140752 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.142406152 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090631763 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099116815 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118918235 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195394658 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163432524 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137286188 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154543618 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.19343477 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150486627 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.182899642 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120326989 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16238721 seconds)
    (123/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101235504 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13930879 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109638724 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.312431619 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115099781 seconds)
    (128/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102389344 seconds)
    (129/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117859189 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21692373 seconds)
    (131/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.116435747 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115917086 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088790247 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.137290045 seconds)
    (135/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174929109 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.175833299 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.126393859 seconds)
    (138/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065788321 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.122041583 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094132528 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120956228 seconds)
    (142/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140018774 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156863231 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112789416 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092979472 seconds)
    (146/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121390598 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067713096 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156580249 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09574921 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.108285035 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096963935 seconds)
    (152/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122596296 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095871461 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121712729 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119516368 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069630032 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085948514 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11247977 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066794334 seconds)
    (160/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.16529922 seconds)
    (161/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068021608 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.178363413 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121835736 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.178324298 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067166657 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108249707 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068354626 seconds)
    (168/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.199333705 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068310721 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141716157 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087805117 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.118129485 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085954394 seconds)
    (174/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150911281 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091949475 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182409833 seconds)
    (177/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066172253 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118678757 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110027442 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112126776 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.133516033 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095399565 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111184742 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117841736 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096911666 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.13677839 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067623764 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109814725 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068473915 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12036747 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117170913 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.151665299 seconds)
    (193/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087548794 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 0.173611186 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109198127 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195969869 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198454 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112207583 seconds)
    (199/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075679371 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.141415378 seconds)
    (201/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136198456 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097050186 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.110733723 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113141745 seconds)
    (205/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144695018 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.185328703 seconds)
    (207/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068116562 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113242416 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083416011 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120627786 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11140461 seconds)
    (212/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156590194 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.181132349 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066993692 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184431632 seconds)
    (216/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076183496 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.133925477 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084046505 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110627543 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086675589 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092064493 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093044467 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090115908 seconds)
    (224/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068282093 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086028586 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11496724 seconds)
    (227/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076885918 seconds)
    (228/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128178541 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085369429 seconds)
    (230/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.101766065 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089305188 seconds)
    (232/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108381613 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068852939 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067923177 seconds)
    (235/309) benchmarking ("sort", BigInt, false)...
    done (took 0.221475459 seconds)
    (236/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.102098998 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19249725 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114169619 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.114787601 seconds)
    (240/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068484918 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112771141 seconds)
    (242/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079497031 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.228524704 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068072053 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.14639163 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093458148 seconds)
    (247/309) benchmarking ("sort", Float32, false)...
    done (took 0.176891385 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112173518 seconds)
    (249/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078513739 seconds)
    (250/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068253662 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.11663167 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172419916 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.071693703 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118600609 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 0.193026392 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087313434 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113242497 seconds)
    (258/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068992241 seconds)
    (259/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.135285644 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103223491 seconds)
    (261/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101509371 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069562635 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117136765 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090035265 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163910904 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109480197 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.092413776 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095443948 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111701107 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106867235 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.161425894 seconds)
    (272/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126337589 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067362221 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125952376 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067968522 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.122925619 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068962464 seconds)
    (278/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066509536 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.133696 seconds)
    (280/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124430268 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.069084551 seconds)
    (282/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175483164 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095851739 seconds)
    (284/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092767044 seconds)
    (285/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069395403 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087574463 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115720919 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092371145 seconds)
    (289/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112555521 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084892011 seconds)
    (291/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104621775 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095420189 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118576742 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067545977 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.093438748 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088073851 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11244194 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094067484 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112506079 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112955008 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113186744 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135834458 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089018688 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115789174 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09169561 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117060162 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069177577 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069393574 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137859279 seconds)
  done (took 40.073259955 seconds)
done (took 40.976861343 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102093514 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149766007 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09664225 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137762787 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125698372 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092253203 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120229115 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098288342 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126197919 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126777094 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099755182 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095234236 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097695279 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122580002 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097287613 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143721064 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127465553 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094868026 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121874719 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087243989 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122233621 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086419202 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114576222 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069441827 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123843395 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093628889 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118830212 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120248583 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088070785 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111553715 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091008777 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11962278 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088420329 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125163264 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09440039 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121009752 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096941108 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122593549 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089165894 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112985621 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119748692 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088511117 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118290704 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096103897 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118315776 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093584474 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119743484 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100184549 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14269746 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11710617 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096384251 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121950916 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097529284 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119892156 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09239515 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121704624 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092341379 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141835199 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121023611 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093308091 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121068413 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096051818 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119970964 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096270692 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123742966 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124272461 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09971816 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120458008 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098289494 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119917576 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090180549 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128529075 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096001827 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.120181131 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100167111 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.129569676 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111744907 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096318889 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122481786 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095952545 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11423856 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094201844 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.116897466 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096139455 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117746532 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072436233 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117406122 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094749511 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111608097 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097017933 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11891047 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094732789 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114161872 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100095111 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112438356 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092405542 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113695678 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087231659 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117158077 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092392751 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.116552689 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090120377 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.124695506 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089103226 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119134799 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125172779 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087806787 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117931568 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089850023 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115667425 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10564822 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.126600441 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087355817 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119217915 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087017617 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122131389 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085828251 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.115295697 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086903683 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112994625 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093320622 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113459031 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114531516 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09602364 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126007278 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087733495 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115071419 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090527328 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113770524 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094270491 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113556377 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088484437 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116593069 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080051601 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117252788 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087964996 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120189977 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09127789 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120476299 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090174392 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122185333 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091781559 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120988284 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091928062 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112298557 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076391562 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123154169 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092672536 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11427628 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0882374 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117378302 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088148659 seconds)
done (took 17.267532315 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088839561 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186906197 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15404904 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144536026 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108612936 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113681958 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123307987 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121379165 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.117125436 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14484423 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111389663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134084376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1502264 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087497956 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113604698 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092223214 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.1153506 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103383622 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148172801 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13487101 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166994608 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087818135 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151328458 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137911906 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122253324 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11613323 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114364818 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093312171 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117207812 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104020385 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135636027 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090806728 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114532857 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135394626 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105629504 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123228863 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08770398 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.1234958 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088105435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114949695 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142975554 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135331598 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094555361 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119519838 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092447307 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1159211 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091455009 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123687032 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099570167 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119371472 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127239795 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159247047 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092777692 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123974661 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087652538 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125008827 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122550509 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091468657 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113047759 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092194072 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113236945 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092752324 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128908013 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144429242 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092762617 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125449002 seconds)
  done (took 8.751113553 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106757086 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141961783 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106542619 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13334108 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130035496 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090479526 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114193021 seconds)
  done (took 1.79018494 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090429575 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136456806 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112184755 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140084751 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133706338 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110198018 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126741184 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089830506 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134804337 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089674423 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13782377 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153588645 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090812439 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.125182561 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138640823 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089285367 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138538698 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089237019 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119181076 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113682458 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118264794 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135888023 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091622966 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117180993 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104259792 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.117214645 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162680733 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095847484 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117621169 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093187331 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113339542 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168932849 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10567915 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129344411 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088898599 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1312111 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129766802 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088089561 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134452898 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095431843 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13227901 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089594902 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117160735 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086947103 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12014456 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124835636 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093348065 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117621985 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092849874 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136082122 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090781957 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13090284 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089100191 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122141908 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091994174 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123447795 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125282754 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091905421 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134854929 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09202918 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134095376 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105479081 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130718518 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131748592 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093577086 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128845692 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103588074 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120772578 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091754353 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120425852 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132132773 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08854397 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116992561 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101249497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118466297 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113193718 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139563635 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117086397 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101039913 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116095599 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091052951 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1152668 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113861582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120056584 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089404181 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120403584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092312694 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114550813 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088209983 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119480294 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08796213 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116792784 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117248015 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091212262 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117229374 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106970984 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11785676 seconds)
  done (took 11.99834097 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091917882 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116137678 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093600419 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115640709 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092199142 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116042086 seconds)
  done (took 1.604103598 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115857729 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119414328 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104594432 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122928905 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158039886 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104514657 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132696953 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125564548 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108839446 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129483619 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130796591 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106886423 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138174321 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122861589 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105184215 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124335166 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130895491 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101709421 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129124465 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098814215 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139655841 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122354465 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097255989 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134351034 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119258919 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097124539 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126929993 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103973273 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129898687 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124479103 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097567656 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119370529 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09732349 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124901957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131920104 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097310674 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123580954 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120110978 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10226103 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119618447 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105510623 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124874119 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127692223 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094971977 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125768226 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122504068 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095699558 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127325005 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.105398359 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121031419 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121082263 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096114462 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121258186 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095682772 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124912589 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124000897 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096010146 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13348199 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.098342351 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124327554 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119032655 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09500947 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126304227 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120782722 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107477614 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120689122 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097482109 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123701205 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122959039 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097495961 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121812958 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093706102 seconds)
  done (took 9.353635811 seconds)
done (took 34.465308183 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69087106 seconds)
  done (took 1.667039251 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.716117342 seconds)
  done (took 1.694693703 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.406746904 seconds)
  done (took 18.386714891 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507492928 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.591086953 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.890153971 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18169683 seconds)
  done (took 3.149853421 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.954469201 seconds)
  done (took 1.953257103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297748035 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259350043 seconds)
  done (took 1.542029569 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774633342 seconds)
  done (took 1.766210208 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.3629426 seconds)
  done (took 2.347883323 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334211668 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187081352 seconds)
  done (took 1.514491381 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550727712 seconds)
  done (took 1.54486841 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.934449556 seconds)
  done (took 7.934095765 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270457656 seconds)
  done (took 1.276826153 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304728875 seconds)
  done (took 1.303723951 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.588244749 seconds)
  done (took 4.58758355 seconds)
done (took 51.656837271 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099833078 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127831856 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102982103 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12506315 seconds)
  done (took 1.449985467 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10236891 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12262142 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101523943 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122273169 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127572217 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097684358 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123756187 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101985917 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122624583 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09740749 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12221774 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120446084 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099808781 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123648342 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094708199 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124888311 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100450807 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123319474 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12542297 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097263198 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120424165 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098500903 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125587248 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09446358 seconds)
  done (took 3.691907492 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102204669 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120532218 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097161589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118792532 seconds)
  done (took 1.445194838 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101265737 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142501565 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13910185 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101156274 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144779248 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13696974 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093301123 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117345534 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095335113 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126232899 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091401201 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151131469 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139332387 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.10009302 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129455692 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089085585 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119683496 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138763086 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101112813 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127013535 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094953372 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127305817 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090858772 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141695668 seconds)
  done (took 3.841940072 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170414987 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129458355 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140935477 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095584208 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161021533 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142661873 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089070936 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142406498 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089486017 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133817529 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119304634 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135123836 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130828639 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088695082 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115559646 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088800426 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131701101 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130071241 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092357462 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129263886 seconds)
  done (took 3.466117282 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099080277 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118921799 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090379494 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117448594 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101287554 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122609052 seconds)
  done (took 1.658446179 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091989442 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116001084 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091239649 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115431414 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095327792 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116505164 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090323591 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115644685 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091075113 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115983402 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090706913 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114545824 seconds)
  done (took 2.253232133 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466972591 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094611265 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122015898 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115783034 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097109143 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11617796 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104330149 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120548481 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142071356 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090665798 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115969891 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092757392 seconds)
  done (took 2.6886613 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236626557 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127066344 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289849577 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278890712 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160280918 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172369921 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283027642 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164057959 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.228422389 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160315505 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205377383 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226021464 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15291474 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191613587 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139485575 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120023482 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228746146 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242447325 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154657535 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204634357 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226927533 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168474311 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181784319 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15090985 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114245926 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172538807 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122770567 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131345604 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207279153 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205485297 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190637351 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164133727 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148879704 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239140346 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255665492 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195712682 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286852374 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136794793 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172484736 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169404336 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265591657 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113128825 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233498015 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157732483 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132177151 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194393047 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167772546 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178589341 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152240609 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141481122 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221662555 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21418995 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.221860587 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112406501 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237726459 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159378832 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170182861 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197498551 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253945623 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225673252 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1814452 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094127419 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217517515 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192813241 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186886727 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.19637438 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181938428 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150006899 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193737026 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190257797 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193578849 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189179698 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186906607 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142247054 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169420129 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174875803 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201338479 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232244764 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206878693 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095709693 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171338234 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15159657 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135480999 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197266108 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099314385 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243103015 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148465882 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137838806 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247283475 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162027723 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163439076 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201076043 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222574151 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149827689 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084573778 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157511691 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157292366 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192374108 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142695672 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160864869 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164032669 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133823554 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181839736 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097478289 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204175447 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092342048 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175787721 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211270018 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100711617 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163816072 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154294997 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1523945 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177202904 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228033876 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116513053 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135967122 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211465906 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206780542 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151391524 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180835195 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20458199 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147232268 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15092806 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202966473 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247590713 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141233293 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205923601 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159142824 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13698414 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105512295 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210493141 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155872027 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162462984 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109981484 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.212194622 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208936292 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127827057 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1128872 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215475258 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108233543 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133473071 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163163587 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150016034 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140193833 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148192358 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.125570843 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211651224 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179716027 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155936439 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167129407 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154727351 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257051654 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143869049 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15169054 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122866528 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122947736 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194596248 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230186484 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104965102 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234908315 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173735748 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231518605 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172274772 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108584317 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178506273 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132362482 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09334784 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22435156 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17061993 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163804727 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199192163 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232018223 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179982017 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.212427078 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175168988 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175878715 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167875567 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158697495 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111892204 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162424732 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195930584 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096953164 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145354068 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136070658 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148833577 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117747937 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135406519 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226666338 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172113721 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192543275 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159618526 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152513333 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183640882 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131603998 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177104821 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180696047 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150836561 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201579549 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225209217 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189290086 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145520427 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202350754 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122276563 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126107421 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115704692 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199529581 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108348942 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138331659 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168062328 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182789817 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182519478 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206275485 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215054422 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19990347 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194373357 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096378044 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170757714 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187703134 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178233647 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190306411 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141942797 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152144854 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179581087 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160485107 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258825428 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171001583 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176573169 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236205311 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12392617 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133437938 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154048311 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187893269 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156310894 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179876367 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149942997 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143207068 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163940296 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135349049 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162550864 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185963163 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166523808 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221504753 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124181803 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217129599 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101029027 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194888989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160793563 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166785742 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082838901 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176822962 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236376489 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149820638 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170642229 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19194768 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13391442 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309983962 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21203624 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221506047 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139644737 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159760201 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135886469 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164726496 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200441214 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179676355 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161703032 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190331265 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159671524 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109386312 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142436346 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149922257 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153553322 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133452791 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150725242 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179399199 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112812325 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217150888 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16399848 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16114683 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175205504 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150820931 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117695796 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152675692 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245557989 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178214948 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241215672 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123947667 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.21061458 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208567132 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128047666 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105294248 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135508711 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180964173 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138585541 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19213465 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217623656 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208224107 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181994664 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21839231 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113345697 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122884687 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159101277 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175245769 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236762542 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155237298 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160200942 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205676843 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.144654361 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104859945 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174382055 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229804893 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148503839 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200787863 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080761068 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308263745 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101217206 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135927015 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165879698 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209409617 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139378872 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187044042 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172305595 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170723881 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166746376 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152254066 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194416699 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248457294 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203652585 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210847538 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10644189 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157465493 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179092702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225338922 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161076385 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113055243 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234764334 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196666905 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227321118 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115500091 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173459205 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199650526 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130591436 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218628587 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136120605 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20987439 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137413323 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195923184 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155303951 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145212155 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177959846 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.218321025 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115197996 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221270748 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179001953 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136825239 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107076453 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17138802 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208528941 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159637813 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.09998698 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211593392 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098822375 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19338007 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260968688 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138100999 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157313825 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150119181 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109200661 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158415267 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160376946 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143705594 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167099852 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206991367 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138284857 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194565487 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235419529 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170985307 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178112829 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147468619 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695338238 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132988035 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196751126 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15732514 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237752409 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121568962 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205164356 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160034628 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170815207 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198601863 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163415303 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235318429 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194526714 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.211029276 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104916034 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159851337 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163780251 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146247882 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153775902 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171098342 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162511142 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156594906 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180960122 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199249345 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108705716 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141772684 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201926382 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158182265 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183621949 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180825327 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141309126 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174236047 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219567234 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107210364 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.209830483 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2098854 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144630916 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154935075 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136084187 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157607829 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264168257 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098084803 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230830137 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179454091 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160233465 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171452913 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148714967 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194506854 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160458155 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179659341 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147466722 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161456119 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158995668 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1407481 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13062679 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128684461 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197658066 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122729984 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161890221 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168153314 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195175649 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126388946 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146077789 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200597419 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190313826 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247743199 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137303899 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108743006 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164482649 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153012881 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181260502 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208364836 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109342827 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13931467 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139120272 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132305958 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141110262 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156067964 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201428864 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168094335 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209989869 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139996303 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280344253 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141963016 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155391729 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090328853 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134479154 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152231077 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11995852 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161625517 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223273821 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264878595 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.119987402 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135399933 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152814321 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098405803 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138547604 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168613248 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16550441 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178411383 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147855651 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110233561 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159481888 seconds)
  done (took 83.628564264 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166258019 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13326326 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148412834 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203579505 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178966554 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272018775 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210744425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272900379 seconds)
  done (took 2.686469308 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094457927 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146329645 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162526947 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135207907 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092427542 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120941873 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.348972729 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135037537 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117709091 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122531464 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174771812 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094776551 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.558125389 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091413866 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12097849 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108568515 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092685414 seconds)
  done (took 3.815001512 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477017508 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72500009 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.513385817 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.09819892 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.163055136 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113860995 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.750374496 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198038656 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11584568 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.489115687 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.778500724 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.167073 seconds)
  done (took 18.695623967 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099090699 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122402247 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108366497 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137328678 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096490535 seconds)
  done (took 1.674553606 seconds)
done (took 131.989729741 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104247126 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411219244 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072006439 seconds)
  done (took 1.623372986 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108704601 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138476513 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10950461 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137043689 seconds)
  done (took 1.606839498 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098403934 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128146391 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109999206 seconds)
  done (took 1.443229917 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325827604 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191710121 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165574564 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107188935 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131511938 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102937594 seconds)
  done (took 1.452809708 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097986428 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128899015 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097862093 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131673351 seconds)
  done (took 1.567777372 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095241039 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074087707 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104082756 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075917937 seconds)
  done (took 1.457934905 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11518667 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133236053 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104357622 seconds)
  done (took 1.466065524 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.132249779 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139339981 seconds)
  done (took 1.385919214 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107132283 seconds)
  done (took 1.215177097 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118834524 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171240545 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192993892 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166451394 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.232110477 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16723302 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142224678 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114801525 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132953075 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145363871 seconds)
  done (took 2.696887462 seconds)
done (took 17.81272096 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104447861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422944564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413167761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118077869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723071546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381359222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036525307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14760169 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167528785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09354249 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140457892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673502644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.06448127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377432433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021136018 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378314537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703795699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094116348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121172686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095051242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020377959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091922428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123216976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094062958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705329989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426512556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094626605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372697425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093048263 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127807004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383189932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123887939 seconds)
  done (took 17.037576308 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096034819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175318624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098877723 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138180267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124542154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095460075 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126195616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09382351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18084721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123723627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11196094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12250716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126553676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095779624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142982172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094029088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125879747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092962312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122193949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122337426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112926933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121587052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094681886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12223523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094856622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136287404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123356884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093946946 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121777752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099440702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129251449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094789285 seconds)
  done (took 4.868774705 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141490508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185119932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129509303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127833984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170661804 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125086457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201340558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118148372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183416121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125955987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141681544 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093775469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157764689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123753865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114621407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122541053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096864372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122900344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092593946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123711864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141223796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094457921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122538152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094019325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12490002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108227652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125347736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121862247 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094264109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128690098 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100315692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12481104 seconds)
  done (took 5.200444251 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09825671 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126693894 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10954553 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139593676 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0959436 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127123687 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097683601 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126125046 seconds)
  done (took 2.038952132 seconds)
done (took 30.254724817 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112810305 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129434793 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106823268 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138880785 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103011451 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13520466 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091871399 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135316221 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134173143 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103684956 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.1387781 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09270832 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124207985 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091798464 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136383983 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09818215 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133855635 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102635288 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135761208 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134123626 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095330828 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134585805 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103815043 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135253326 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10461188 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135591356 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139508219 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100605499 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126043268 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094485205 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125852387 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105921069 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130286405 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105758572 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12877387 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098297627 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127152182 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096103529 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135019835 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133603122 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100529366 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135412598 seconds)
  done (took 6.082849481 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108601338 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141310274 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105503869 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081861054 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117776202 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081467348 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139444709 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082149006 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111031679 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108886493 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074656688 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107219486 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078065408 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101872123 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077795516 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075891806 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109417108 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075511164 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077075719 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10673202 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079416516 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073068129 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109376573 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078532293 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075006546 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111049948 seconds)
  done (took 3.612130672 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100698454 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136697634 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113958113 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186119462 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162110096 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10033765 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134517148 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.1407253 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109827137 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122081309 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096947445 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151902038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120505181 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130959514 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122576959 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.108299179 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137541702 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094857149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130808571 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114091576 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140615753 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103093105 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144897689 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135196847 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09320259 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124916938 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097341725 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137272916 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098271145 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132745821 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126786988 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09732406 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125462756 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104998346 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128442303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094228486 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143585652 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132990007 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102408652 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123671158 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097013951 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124201327 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114094086 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169703489 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092315907 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131678147 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130282991 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103598894 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122928839 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110818288 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132934398 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092245371 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12647757 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092657242 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122880721 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136495703 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095782855 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125119228 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103252819 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125854371 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105279159 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127196261 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109401546 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124837677 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100826643 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123081938 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09342879 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122138285 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145458132 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095212097 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165810336 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094398683 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125320145 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132668149 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101964276 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130791266 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093765533 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13939501 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105215072 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12782833 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102169483 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127410449 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.12509886 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111691412 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125124986 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095727277 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123795474 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099983334 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125645637 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094402558 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137810595 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092497342 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126614402 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139892399 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093673997 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124759825 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100438477 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129328829 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091854596 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13693856 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099080567 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124352032 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133082471 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094089516 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125812198 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103633223 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128482665 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092948018 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12887232 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10012469 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12492691 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094225139 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126489475 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09461641 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133756941 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12968921 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098921489 seconds)
  done (took 14.987872883 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229262985 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217325304 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239697925 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263916881 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137189914 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115452067 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213366904 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157202123 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125416053 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16166355 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162810222 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182520162 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140310065 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181513043 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142897483 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122897965 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113174631 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165603652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216304552 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291980708 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113453724 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133810443 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164986255 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162651036 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106872542 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134952736 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140223794 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106383971 seconds)
  done (took 5.784199441 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108904759 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158039198 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099745689 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145939461 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150683755 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094058125 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12957188 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09493808 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137262001 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137796673 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093751585 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131198544 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101297857 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133356056 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124356571 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104218693 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13400142 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094784371 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128586697 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097627015 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130920283 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102013944 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127541853 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122428545 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104055827 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123349163 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087077369 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145052875 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123140756 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116759105 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122476605 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100199359 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134507273 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093446163 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124020686 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095429323 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126940933 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094937713 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126081699 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091718513 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123110849 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077988466 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12352571 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137149998 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101236434 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080507995 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131606681 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129699184 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095822129 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121899971 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096684323 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126740919 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09792054 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131732808 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09997404 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125869008 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096551339 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118157492 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100527177 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126820194 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085173599 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122614872 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099814942 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119761479 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10235644 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130439882 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0932213 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126582395 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09796567 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130842219 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095610857 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128921602 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091614195 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127445634 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096292557 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129258108 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097474319 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124201161 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123387209 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095660394 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075999769 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124733717 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074491488 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128053623 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093542391 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124042987 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095398541 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131540067 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138951754 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095384818 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133389675 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095441428 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123913992 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097552483 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114574733 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096591061 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140805201 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142915192 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094086411 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12316449 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107582567 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128516523 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093417034 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10763374 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10131564 seconds)
  done (took 13.088518508 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128973711 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157303549 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098473445 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145707621 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157076495 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163110239 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10149555 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132066354 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096176334 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143771651 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093603622 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133358231 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09730542 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13839898 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158412086 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103452556 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127330979 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10728554 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133684374 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171749621 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111805225 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143741157 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108961706 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126092413 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129603168 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111774809 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163072279 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109429541 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139455649 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143212788 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10929923 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163065347 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14360486 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102181919 seconds)
  done (took 5.551607099 seconds)
done (took 50.225195998 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.218712925 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.461406164 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.215551569 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.198485463 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.252720889 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228206091 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.24972805 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.220207435 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.755016444 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.213539784 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.478926869 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.893893752 seconds)
done (took 60.531169522 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.328989224 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.343590276 seconds)
    (2/2) benchmarking "String"...
    done (took 1.477102754 seconds)
  done (took 3.963342337 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.573438788 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.167653143 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479237917 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.212290971 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.218424104 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.5082582 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.849937005 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.558001136 seconds)
  done (took 28.134229803 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.220459564 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.606968316 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.904955754 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.904892533 seconds)
  done (took 18.778803534 seconds)
done (took 60.921642209 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.209250565 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.268304801 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.22361818 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.195880385 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.327270586 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.24308306 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.564222015 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.256090111 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.235793283 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.193181639 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.236019178 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.240322431 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.240696568 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.573632861 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.220703112 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.219668284 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.276531697 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.761371606 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.618616686 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.221467941 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.215071382 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.301524011 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.225996392 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.22302884 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.267980715 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.216674207 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.235799905 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.217852068 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.770051592 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.223274085 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.237556436 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.78918279 seconds)
  done (took 191.39214434 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.214772457 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.075160742 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.191843222 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.275713292 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.551098361 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.41518364 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.369142931 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.670590722 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.237106949 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.225719719 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.367923753 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.217248637 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.441633888 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.240061601 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.222270391 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.212624649 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.438504731 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.461415583 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235294929 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.457060204 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.222556308 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.459870347 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.323743731 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.350858614 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.27455305 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.277334865 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.250457086 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.236540111 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.408005326 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.356456089 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.244755389 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.219172555 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.822563596 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.075321962 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.220245255 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219217149 seconds)
  done (took 149.624448318 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.504048 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.212859736 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213021404 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212743549 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244293024 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213462056 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.773721368 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777566668 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.712162619 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.848938556 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.52252727 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51321249 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21635438 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305909363 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224366036 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211105702 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.225974096 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.253772971 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211190378 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210926127 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761833166 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229386518 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.301685078 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.386585579 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226953102 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242269486 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598447887 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210786714 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241591112 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.534544652 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257653093 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211598964 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.579584716 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.762328915 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327624104 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213190151 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24099326 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.21121559 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487034945 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211491511 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.211087964 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213780903 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.858005519 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.215130539 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.756306815 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215375324 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.162929194 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.215517454 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210654073 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.462446817 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.855641603 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233642457 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.210413577 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21397171 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20978291 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210536224 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241293724 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.451351737 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303907465 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.227776614 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209736715 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208692324 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.212055292 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238270047 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208494578 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.239690682 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213192436 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.443645311 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.279902863 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.31130192 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.724978089 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213308055 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303536757 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327550495 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.208835663 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.210235534 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208500625 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.208776468 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.31604036 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.208187933 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208576568 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.600514727 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373995113 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.224058237 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.389337402 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306666373 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208480338 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54791883 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21321446 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207424952 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958321974 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.213384259 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301003007 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209102453 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20750087 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207241588 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594841973 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.714536212 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.408810662 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211922089 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.436825179 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210552192 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.604915285 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.705424817 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.838985395 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211709895 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316331781 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.370819945 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222508962 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.206143728 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.344940104 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.211164993 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263453448 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206707779 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600725107 seconds)
  done (took 365.720974943 seconds)
done (took 709.383831315 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.84651767 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.831949562 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.941224394 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.830747282 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.795376297 seconds)
  done (took 10.379543858 seconds)
done (took 11.512814153 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.380744226 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.385245629 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266571609 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.382266584 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238426255 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398588841 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366342256 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231042547 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30042721 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280225743 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302667337 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261366336 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231882749 seconds)
  done (took 18.159509803 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517093231 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504712116 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26970949 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510972888 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247036766 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526480872 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408147507 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.412132875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420459819 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238744074 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219976828 seconds)
  done (took 16.411365608 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528266249 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520598759 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277675059 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5201251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250184598 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535455643 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409447649 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420107012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425704145 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240136415 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220130332 seconds)
  done (took 16.4821818 seconds)
done (took 52.187902306 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.216315558 seconds)
  done (took 2.350930104 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248312577 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407866164 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.234245182 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223344113 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.217362024 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217578803 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221291461 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.217631485 seconds)
  done (took 11.124018594 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.213168343 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212882799 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.214021694 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215659225 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.214777803 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215369504 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21572823 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.212638206 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.21341714 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214341331 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.214624082 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216793734 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21646069 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.213833034 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216660363 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.217252858 seconds)
  done (took 20.572849756 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216284486 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213969066 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214183631 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.215144574 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214051409 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214401658 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.215380624 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.21399392 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.215320764 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214640905 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215136026 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21405619 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214549505 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214209451 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.213735851 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.215762695 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215456201 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215591406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.219556366 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215580418 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.215577561 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21507215 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.214390376 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.215073338 seconds)
  done (took 30.30027468 seconds)
done (took 65.482953307 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.122898322 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.751381845 seconds)
  done (took 9.01216702 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.216997642 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.217171428 seconds)
  done (took 3.572552672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.21710727 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.217413743 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215993789 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.218062749 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217445495 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216795129 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218550565 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217516348 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.216772381 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217518715 seconds)
  done (took 13.310815354 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21824422 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.21893828 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215495187 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21897011 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21906746 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21567159 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21767247 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217784313 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218005445 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216747905 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219008396 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216728818 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219710629 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216843153 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218564489 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.216447188 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216481974 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215749023 seconds)
  done (took 23.054670589 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.21877057 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.218658278 seconds)
  done (took 3.576332858 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.217203666 seconds)
    (2/7) benchmarking "second"...
    done (took 1.216870818 seconds)
    (3/7) benchmarking "month"...
    done (took 1.216875976 seconds)
    (4/7) benchmarking "year"...
    done (took 1.216663804 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216534546 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.217102222 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.217357335 seconds)
  done (took 9.657976575 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220766338 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405499595 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.481324483 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.873734107 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22171082 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224061938 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.095439549 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223752356 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227035143 seconds)
  done (took 14.112801301 seconds)
done (took 77.434371295 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.200655925 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231083425 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.287975412 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.237683325 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.235248137 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.559357143 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.265339098 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343420837 seconds)
done (took 37.501439052 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.21468847 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.976278216 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.983102395 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.213015118 seconds)
  done (took 11.313904945 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.196843663 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.06960162 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.205907591 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.178513261 seconds)
  done (took 17.792638639 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.160630978 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554789908 seconds)
  done (took 4.856709947 seconds)
done (took 41.319011128 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222909892 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22107587 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221557935 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.219249836 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.22294455 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.219879993 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.21976631 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.221053419 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222048358 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.220009438 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.222602974 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219370233 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.22305307 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222558615 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.223666027 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220074462 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220387987 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222269399 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220490049 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220355083 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219576256 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222055322 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221015436 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.220683386 seconds)
  done (took 30.451148694 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224610282 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221487463 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222656485 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222782668 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221395169 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222838817 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22321871 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220487667 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223633279 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.224225257 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220306107 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220604022 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224124089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222352178 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224421618 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221498943 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223499086 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220376692 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223931072 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220581987 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.224158227 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221850766 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221356162 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224074761 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221336265 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221543463 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224800667 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.22232212 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223727303 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222587275 seconds)
  done (took 37.820758104 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228469802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229324031 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224363062 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225025188 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225300131 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224339778 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224485843 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225345254 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.225728169 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224217346 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225802093 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225142189 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226007526 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224659476 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.22627182 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224285041 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224920989 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226096019 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225743938 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226001771 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225360242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226166613 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226055979 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225215937 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225690204 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224590418 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227103096 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226976044 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225970147 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.227279373 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226432574 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226361837 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226362824 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226329156 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226846646 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.227534096 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23075188 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.231848157 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227588981 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.227468927 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226331263 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227220578 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.228053216 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.227353272 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226576509 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.227417042 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22623411 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227667848 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227731456 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228034854 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.228647137 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227748313 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.228095904 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227791558 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228097993 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226712929 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22997169 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227214201 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22787384 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228229368 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22808729 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228573132 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228279685 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228192028 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229078169 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227897728 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.22825039 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.229076758 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228634844 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.229567791 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.22784196 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22901899 seconds)
  done (took 89.491427508 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229335667 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227380984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226227232 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22663827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226347298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228948544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22714123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229798434 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226814848 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229609857 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229608526 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226804223 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226477516 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231224308 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229833646 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227457232 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229828831 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226717069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.230230833 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230418723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230219839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22860858 seconds)
  done (took 28.174097853 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230017731 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232123823 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228166766 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230423507 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22808414 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230736656 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.231437519 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233150647 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230196244 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228670815 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22863925 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231791761 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228527892 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228379928 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228694875 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229980105 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230781177 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230723128 seconds)
  done (took 23.290174567 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231017237 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228666827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231579362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229560245 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.229181447 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232083744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229974124 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23219537 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.232505658 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228346382 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232304738 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231620425 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232758267 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230210641 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232035408 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23145254 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232867342 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229446227 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233135862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23065251 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231046708 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233358035 seconds)
  done (took 28.236942152 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233262823 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232462568 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230683707 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23121075 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230767588 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23388963 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233753347 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230752429 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.234363893 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232873761 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230462171 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233582612 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231479082 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231163537 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231086154 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231215549 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234264588 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233007632 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233690483 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231213124 seconds)
  done (took 25.798080882 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235008351 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23575863 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234955171 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23588181 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236016458 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235059571 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235933456 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.235327655 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23605918 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235702096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235997085 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235848128 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235485654 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235965637 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235649731 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236317604 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236951071 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235565314 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236523109 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2361761 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237054217 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236635321 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23652895 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236761165 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236790892 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237435434 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237619368 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.236324999 seconds)
  done (took 35.764378515 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237559282 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23692848 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233594044 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.23536302 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.234855813 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235025913 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.234355401 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234251226 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236711626 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233148157 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.2372433 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236053803 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237207898 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237388825 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237345437 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.238030741 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236465242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235713733 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235361048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235283651 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237918384 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238067897 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.238483612 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235170099 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234965236 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.238164127 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236115105 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235500995 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238731593 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235104193 seconds)
  done (took 38.242083915 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.256466523 seconds)
    (2/2) benchmarking "in"...
    done (took 1.257176104 seconds)
  done (took 3.671248953 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235867391 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238057185 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238148222 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236447155 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23527853 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238380934 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238362912 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235503077 seconds)
  done (took 11.05360997 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23814911 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237656908 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238628265 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238260753 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239313489 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238044943 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245538572 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256229108 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239520346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239614102 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245074121 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.244995441 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241371452 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238999821 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.239676794 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240556086 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239028235 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240009457 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239972585 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239719543 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240837747 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24123177 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241821983 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237490397 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241066958 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248612983 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261819061 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239968785 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239345344 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243034932 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240475532 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.238322994 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241948779 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.24124605 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241913827 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.240990819 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250334293 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258276241 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.24732644 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259093055 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241700231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239248101 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241748457 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.243342683 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243933835 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.242639128 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242532097 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238985033 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241327319 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243470295 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245544464 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241684974 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239778887 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244984695 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242437501 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248604999 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26033886 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244786462 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249103621 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251358144 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270292877 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264345749 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244606712 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242695176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252636109 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262908206 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250390287 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258125388 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240101451 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243208401 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.249957929 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271770752 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266644271 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24373755 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243752765 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244800593 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243518474 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244505635 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250936744 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.2653122 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.244094659 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244663385 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254417593 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263574362 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.244869585 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.244020889 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244540607 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245022208 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.246306994 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254789698 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26220699 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.24566077 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.244634704 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245786158 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246138448 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244975774 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.245330765 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245586673 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242110283 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245643074 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245466152 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248839551 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252399587 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245117276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246359576 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251559041 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263741327 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244696795 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.252103636 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.245702557 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246198244 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247417823 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.2494312 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242746289 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249397713 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252830699 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.246482672 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247628536 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245619214 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247080432 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254148414 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267968443 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246351114 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247052207 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250903525 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256458207 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247425919 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.24966341 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24783183 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.244845133 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244781171 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247303944 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24739958 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.247292914 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247762568 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248273966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.244875248 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.247875189 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247578059 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248929675 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249102562 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248258464 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.248502962 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249806009 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.248159171 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249476579 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254680801 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266312084 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249591531 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249405208 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245975992 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248143995 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.250287876 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248639705 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.249264651 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249527647 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249171234 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.249293552 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25064156 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.248588541 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248919259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24985722 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252913958 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249133522 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.253337782 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249612083 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.246398327 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248532615 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249501965 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249444794 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.250912472 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250188514 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.253102298 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255270802 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250917611 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249434915 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252343706 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24953995 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250742166 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25103226 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253319362 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256186918 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250331472 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.257877059 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267543301 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251238274 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.252465762 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.251030283 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250575703 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250269395 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.254127547 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.257467266 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262109433 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272974035 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252320941 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25411137 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.2526321 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25468617 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255820944 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251218402 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252407928 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250520561 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251479559 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253019596 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254487512 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252044782 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.252812874 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253252673 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.252516472 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.253183109 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253190719 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253072404 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253530934 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.251341971 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254086571 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253086142 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.253416885 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250992371 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252613932 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.253744384 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252174747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253737093 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.259773422 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250664339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254014649 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254536511 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253432907 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252603355 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.253571122 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255178689 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252923682 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260766183 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271466223 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.254498058 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261210557 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27122009 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253703046 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257319256 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253399062 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252311554 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.256882923 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260699251 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254166453 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.254808609 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.254628636 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254450703 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255315428 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260416066 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271049553 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.255162774 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.255513449 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255658429 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253194917 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255748319 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.256181509 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255123244 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257532154 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254574684 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256154111 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256567901 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.254648818 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255369867 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.256358706 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258094434 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261589546 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260752302 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255602542 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258124434 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.257499711 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259176323 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.25703992 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.256240827 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256013602 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266818622 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277461877 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262455521 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275626316 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257394419 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261880262 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.275464799 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259191948 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25744018 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256401492 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257009083 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257237295 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254839645 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257033828 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256893075 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259223225 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.258736397 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262302477 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257924671 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25811871 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257224552 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.257934178 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259529884 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.257880117 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258856772 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25900802 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260022879 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257666899 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.258942852 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265803131 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277128836 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259090557 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258471291 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257692906 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258222712 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259764581 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.259544091 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.261145518 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.26507233 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261873443 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.266435109 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.261194952 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268421317 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.258146391 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262759503 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.26615982 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257404971 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259640111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259909385 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.259997769 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265913635 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276868871 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260269727 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263023175 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259802615 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259956443 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.260144142 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260508187 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260650198 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260061866 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269370563 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278228203 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.264045068 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262174808 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257797317 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.260876754 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260944804 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261824104 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263797094 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.261286727 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26265824 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26106536 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261546615 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261249877 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261532856 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261982968 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258492755 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261636329 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268015766 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28011252 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26546223 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261828106 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26892209 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280692793 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269255275 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2808241 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26303999 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262715545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262806389 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264217025 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262613046 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263313294 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.263422 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264596442 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.26648191 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261893149 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265002402 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261963751 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263211617 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261076314 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2701817 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281924798 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.262618868 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266001626 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256716222 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.256303823 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259112478 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.255681469 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.255389345 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257013345 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262955874 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263033093 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.248707911 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.248652365 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248745224 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247818594 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248322747 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247613041 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.246852222 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.251451368 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.243369822 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.240925477 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244294281 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.241570463 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.241892417 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243145266 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.243432422 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.251366204 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263029121 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.242558268 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240684736 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.242186693 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241185918 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.241760464 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.241027423 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24094436 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240183059 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.237438509 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243734079 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243330615 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239568826 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.238022832 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.238039388 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.238902552 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.238716276 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237578563 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237455678 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23720484 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.237166278 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.236820223 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.239278427 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.235833391 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.237659549 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.236616335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236248141 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238304291 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.243060871 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23618121 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.233957707 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.237522073 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235880124 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.23470904 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.235636785 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.241063242 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256597922 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.244216628 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.242602327 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.239009597 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.235499867 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235359915 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.241315828 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.233042802 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.234600667 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.233569147 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.234922637 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.234486709 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.238040195 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230922427 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.236507689 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.250069029 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.230639463 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237199452 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.250390271 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232371031 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.233334424 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.232373469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.228497354 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.226989412 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.229165899 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.228365413 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235057173 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.247514263 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230627275 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.226751061 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.224618916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.225720657 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229013195 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227016404 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.226833897 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.223880569 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.227950426 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223889638 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.223588695 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.221075505 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.223104947 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.223683201 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.226528039 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.229707329 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.221446674 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.225495475 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.224131014 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.223743472 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.223866788 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224883611 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.221403641 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.222158657 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.224650583 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.224084748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.224075703 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.227112896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.223667627 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.22523019 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.225319733 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224996472 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226220157 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.23301035 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.231133523 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.221536907 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.224109142 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.224549068 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.226442144 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224572554 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.225024235 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224804292 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.223293515 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.222560426 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222863973 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.223113126 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.224138302 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237075969 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.240093549 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224157069 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.220806589 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223890072 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.220643669 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.217921154 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.221318919 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.222287853 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.222148379 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.228148658 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.218238049 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.22522679 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236758033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.219282116 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.223260937 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.221413983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.225219178 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.223254676 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218407751 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.217832768 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.221934587 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.231387004 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217759444 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227352312 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244057933 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.237635927 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.220132019 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.217722033 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217145182 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.219510537 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.219936827 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.219388304 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.218990889 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.220206105 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.219422373 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.219520225 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223955121 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.220897887 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.221390068 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.219021305 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.219971122 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.220456466 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.217934048 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.219536676 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.219685408 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.219697234 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.219756443 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.219393812 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.220038551 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230274688 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.244598157 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.220716909 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.219705105 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.217043552 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.22330823 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.221687775 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229408803 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.22642667 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.220879346 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.219481573 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.221663253 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.219397599 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.219076345 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.221069238 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.220375288 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.220524646 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.21870169 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.232069562 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245187983 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.225232544 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.220812973 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221774682 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.221030455 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.221523318 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220237534 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221885053 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.223951658 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.222757031 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.223962298 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.221423027 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.222520455 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.223738225 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.228536044 seconds)
  done (took 743.477176419 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.219678109 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219494216 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220057659 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219776436 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220418691 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219557657 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220281766 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221865091 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.219578036 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220022485 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.220495188 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219539513 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220553752 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220077682 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220314705 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220262893 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219602672 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221074785 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22148455 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220194694 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222360584 seconds)
  done (took 26.766745995 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.223373761 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.221212349 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221718596 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.224487864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221334077 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.222746206 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222503923 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224267309 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224708255 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221893454 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224816818 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224613059 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.221532813 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.221731836 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221799523 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22369384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22368622 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221440569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.224627297 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22185972 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223814113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.221806619 seconds)
  done (took 28.044428343 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.225130215 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.224315854 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.222960786 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.22235429 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.225488062 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.222103168 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.224579585 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.225558746 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.225085363 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.225532177 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.224207132 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.225438203 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.230700407 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.229095187 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.226219222 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.225354776 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.369644273 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.225308284 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.225268484 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.225584464 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.223492452 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.230349858 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.242525976 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.223098419 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.225331281 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.22630127 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.226011961 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.225886614 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.22578099 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.226041549 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.229239943 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.22565004 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.226670065 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.227862049 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.225808701 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.227783872 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.230496252 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.227641097 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.224691034 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.227198833 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.234946627 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.24387035 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.226960522 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.232714575 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.246391755 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.227696222 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.232838115 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.23303905 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.225806354 seconds)
  done (took 61.445653214 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.228216249 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.227964909 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.225461438 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.223227607 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.224616226 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.223255425 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.223098856 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.223025816 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.220767914 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.221089791 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.225744569 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.217461508 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.21738782 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.220137241 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.220605224 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.21721432 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.218227477 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.218261897 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.22058727 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.214112467 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.214989831 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.216007499 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.217365868 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.215034174 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.216563225 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.214849082 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.214404438 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.217407772 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.211735728 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.213620253 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.216376995 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.215972409 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.215540123 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.213596354 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212790643 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.216909335 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.216455332 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.214045738 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.216416374 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.213526192 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.216241106 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.216129812 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.216668224 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.217004735 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.214471533 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.213740783 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.213977356 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.213994244 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.213818554 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.21672422 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.21621429 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.21451475 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.217032587 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.214643207 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.217899238 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.217159116 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.214106975 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.214300214 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.216897663 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.214718295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.214635838 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.217323775 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.215608207 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.218078805 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.217822925 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.215036212 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.215057755 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.218355928 seconds)
  done (took 83.922617022 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218021203 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.217800814 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217455863 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217528562 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217152949 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.217250796 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.217624184 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.217325405 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.218106211 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216565787 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217227551 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.218056423 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.217135341 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.219123173 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.218606704 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.218406449 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.218186953 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217823047 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.218433485 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218125937 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.217269648 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.218490127 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.218510567 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.219475465 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218112787 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.218695636 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.218943167 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218429615 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218723581 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.218351004 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22000381 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.219394273 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.219208351 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.21948869 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.220209135 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.218763406 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.219401099 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219271581 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.220605429 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219283906 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.219207835 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219826794 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.219613803 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.219317178 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220189302 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219774538 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.220142451 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.21988417 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.220074688 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.220254798 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.220018115 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220587334 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220594265 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220692915 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.220352852 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.220779924 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220872431 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220912997 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220169683 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.220356513 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221592136 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.221003048 seconds)
  done (took 76.71937539 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220991066 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220703934 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.218084778 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.218740768 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222234837 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21828025 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221618798 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.22191972 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22113398 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.221553962 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221797939 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219342685 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219344445 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221223004 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220200571 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21923972 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219737875 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220121097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221614667 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220052466 seconds)
  done (took 25.546348367 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.220213059 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.222819244 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.219528274 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220090851 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.222136147 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.219991661 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.223556455 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222315818 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220247469 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223282973 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224014169 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224051595 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221108199 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222233303 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223611132 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221891901 seconds)
  done (took 20.690310265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.221066289 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.224101812 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.223651476 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.223616057 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.221130454 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.220264345 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.2231653 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.222230706 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.220996154 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.224606335 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.223355438 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.223508139 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.224375443 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.223461392 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.222010186 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.223805086 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.221337187 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.22150973 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.225212992 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.225074833 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.223350454 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.222050355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.224391546 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.224489173 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.222200149 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222858706 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.221642427 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.222335004 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.222374587 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.225464184 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.221160679 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.222930008 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.222462791 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.22240178 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.225376088 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.222926164 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.225879177 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.226039581 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.226307906 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.225137321 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.22609632 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.22286736 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.225449621 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.226264703 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.223484274 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.227104494 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.223591992 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.224419778 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.223195818 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.22449737 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.226269643 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.226275778 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.225641435 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.226593333 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.227058015 seconds)
  done (took 68.451334719 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227748537 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.227171027 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224039354 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227602918 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.228438603 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.224142194 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.227319063 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226016505 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224236493 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227375193 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22543737 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.22815829 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224569521 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227681535 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225869837 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227079625 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225052868 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.225770843 seconds)
  done (took 23.217781919 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225761061 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22516824 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.22922484 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225639434 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.225129734 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2284117 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225538995 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.228844361 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229379706 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.227008028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226363375 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.229347249 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229908321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.229380411 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225945937 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227321328 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.228474205 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229419657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227051148 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22632485 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230021236 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229230408 seconds)
  done (took 28.15330772 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.227688073 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.228360993 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.228875308 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.243711507 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.244592486 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.248987158 seconds)
  done (took 8.567738234 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234954098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228401121 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226729972 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23042337 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229649328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228280191 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226756433 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227408984 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230064447 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227533969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227423523 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230076795 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230058443 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227371784 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229562492 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230444317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228091454 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227459098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229086207 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230722815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228391815 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230600152 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228230187 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228276865 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228006377 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227724344 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231495143 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22941329 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22855841 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231263679 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231683112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229651821 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232042598 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22967708 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233777945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23104207 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229685947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231533526 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230956259 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229414389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231575127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232079287 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232225983 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229175809 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231700555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229545746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2294418 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229066733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229183297 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232099576 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232680038 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231187087 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232667024 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233371051 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233118589 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234328223 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23223018 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230540053 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233256784 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231656164 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23084703 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234821471 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231144723 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231599659 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233807422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232260864 seconds)
  done (took 82.375925913 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231529939 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.230820876 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231709436 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233057281 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23132254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231226088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231174823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231741175 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231881637 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232383814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234311807 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231621156 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232435448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232248337 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231981845 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231913871 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231978678 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232774981 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231815936 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234891619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231989455 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231831782 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231699181 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232595542 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23264156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235067859 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232306101 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232273638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233041527 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233669837 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23284176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232495065 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233154545 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.232874691 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232992249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233152949 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233833621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232810742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233828369 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236040554 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233487642 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236592978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233833443 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234158865 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234090007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233801546 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233652281 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233287759 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233768195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23349101 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234485206 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235003574 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233887348 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234489633 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234156164 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233880583 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234341586 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234253396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234975323 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237387313 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234642735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234869997 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237808623 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235014729 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234089168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2351394 seconds)
  done (took 82.554290142 seconds)
done (took 1713.069080192 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.260850042 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.302588354 seconds)
  done (took 13.716295843 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.397244657 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.354803405 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.236736629 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.288056115 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.235695993 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.254042408 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.253517461 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.236260127 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.236045853 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.235947478 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.235869571 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.42467078 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.23031559 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.235907234 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.236079957 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.332351878 seconds)
  done (took 41.578673927 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.26006979 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.245895423 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.348852081 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.268972435 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.266635588 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.421896237 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.299674712 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.24440321 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.402511762 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.292245984 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.721473177 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.272681191 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.248162636 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.295425045 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.267478359 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.416730508 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.486027419 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.737686433 seconds)
  done (took 28.651531011 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.657589171 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.243488401 seconds)
  done (took 9.061366399 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.284519908 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.270330358 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.237184622 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.267505249 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.256211269 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.292637846 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.308354374 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.320004871 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.278693584 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.259638176 seconds)
  done (took 63.936055848 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.263030125 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.246358225 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.247183651 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.245148793 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.237714479 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.24295882 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.245453725 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.241461299 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.612495982 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.367672608 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.253217969 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.253071889 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.264820836 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.246383894 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.244721368 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.279741843 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.44275886 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.245804141 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.243494156 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.25204691 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.247933206 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.329319704 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291370875 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.251638477 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.361949442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.630492964 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.256076306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.254933755 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.423227663 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.25068427 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.247098708 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.248788825 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.249255043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.84087144 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.684094079 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.262646486 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.269236748 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.256821801 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.245565145 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.406125594 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.254154342 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.254216167 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.241497318 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.677707502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.382332623 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.361256253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.427815586 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.269910474 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.248657181 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.3038507 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.255542944 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.24947713 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.27605245 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.983304764 seconds)
  done (took 106.031279884 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.275836229 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.632468004 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.407324946 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.262395656 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.856982407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.925003559 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.262184477 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.507997948 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.312816605 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.24015225 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.574064885 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.727726714 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.257742861 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.247107192 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.874924367 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.307137192 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.245115745 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.942614433 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.257723557 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.245256532 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71703604 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.249566376 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.264910887 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.409700153 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.278594573 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.677530184 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.549509793 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.51989305 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.26534336 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.243115778 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.683429744 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.260482127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.249236719 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.244639023 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.494871821 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.583313859 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.570877183 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.263665179 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.263388167 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.246182103 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.272042032 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.670174762 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.582856295 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.264991418 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.257977483 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681565059 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.260680513 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.24795908 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.247917895 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.441166673 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.845867426 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.250177185 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.538546339 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.245106899 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.607248315 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.244880454 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.28418824 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.705273131 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.260616295 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.173055382 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.284940136 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.245283016 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.24623013 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.244326742 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.249335122 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.569153441 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.36132865 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.250761356 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569063201 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.694038884 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.264234639 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.75973093 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.060952036 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.272155929 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.345333401 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.244732097 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.758128862 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.711698897 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.272290954 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.247035414 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.556294974 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.264159743 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.556411668 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.260080411 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.25995374 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750272613 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.254881342 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.287024418 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.257773394 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.246174445 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.872899012 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.256290666 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.518829427 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.266710416 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.247247952 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.246560963 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.250505261 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.247424513 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.2706267 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.253467917 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.750355513 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.270655914 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.210751349 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268858451 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.24695005 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.262132271 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.249267437 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.249018775 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.460793983 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.653942363 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.273865921 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.247671801 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.246957338 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.25637708 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.410693489 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.248917584 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.532624418 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.265508523 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.248454748 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.265321265 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.947963741 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.29057441 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.248612643 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.263339066 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.138525704 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.459613579 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.269146964 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.249879656 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249322925 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.263215237 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.411480408 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.266465528 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.339648197 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.250219112 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928135077 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.291401656 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.261363239 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.497065902 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.259131114 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.085500004 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.267482015 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.250360041 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.547237232 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.511019855 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.286865813 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.251813333 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.254665483 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905336285 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.303443848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.39443913 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.271273538 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289470526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.446568389 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.665389978 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.249362736 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.891558022 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.250932075 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459023214 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.255142252 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560244508 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718764526 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.265093361 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.256585926 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925005655 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937003556 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.917285476 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.2515845 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.565200381 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.222382982 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.741203865 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.251863695 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.265944655 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.664259736 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.256422839 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.256823683 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.250988129 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.252079327 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.402313409 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.422840844 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.596399164 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.256362421 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679615399 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.27929005 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.252137952 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.252998018 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.25315542 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.603483829 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.331469525 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.251622172 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.261248427 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.253338137 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.256817677 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701622733 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.192674749 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.261145246 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.403925822 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.856128591 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.267029716 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.253006369 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.751886117 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.561600239 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74094839 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.32532894 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.539216919 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.269137987 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.289513172 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.798721466 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291217381 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.704861112 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271099034 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.274713134 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817681777 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.269294389 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.608284884 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.254710073 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.25422264 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.773448078 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267856298 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.257977592 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.424382378 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.273113831 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521873072 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.256672089 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275547557 seconds)
  done (took 1089.688380907 seconds)
done (took 1353.81497244 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.254677438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.253740543 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.245798041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.264699413 seconds)
  done (took 26.1952779 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.264659919 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.262619748 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.26316075 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.260737466 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.264732429 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.261706447 seconds)
  done (took 8.755995771 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.331997852 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.256992344 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.262918225 seconds)
  done (took 19.030161105 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.453130115 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.512173114 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.59962402 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.392913659 seconds)
  done (took 10.137328501 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.263566589 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.263593476 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.263728642 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.266499292 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.26685471 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.268334944 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.266035869 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.26563602 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.268067343 seconds)
  done (took 12.571180646 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.981723907 seconds)
done (took 82.846432469 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.257902229 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.974572367 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.340466368 seconds)
    (4/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.298122931 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.323039379 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.685405208 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.324005794 seconds)
    (8/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.238412266 seconds)
    (9/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.286146654 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.7033109 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.547595357 seconds)
    (12/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.073454854 seconds)
    (13/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.380611533 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.501256897 seconds)
    (15/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.574255438 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.300437364 seconds)
    (17/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.623014699 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.09354639 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.305972674 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.283487786 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.687792671 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.504503392 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.374356568 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.539939307 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.377584147 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.239027214 seconds)
    (27/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.421599914 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.831201214 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.659969819 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.247915479 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.618609804 seconds)
    (32/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.443448186 seconds)
    (33/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.056746453 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.269013413 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.732978836 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.363017117 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.240731378 seconds)
    (38/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.357134207 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.859002204 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.097786527 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.011240781 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.352334835 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.614450428 seconds)
    (44/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.352335898 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.24026162 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.311595637 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.261194003 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.354012923 seconds)
    (49/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.436561792 seconds)
    (50/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.840398876 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.339026893 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.395168702 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.286660312 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.26169948 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.276789362 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.523672799 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.447846442 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.366442505 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.377053785 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.992546103 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.249508783 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.318270425 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.241843118 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.258491113 seconds)
    (65/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.621784103 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.636674834 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.403957395 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.241571253 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.31871134 seconds)
    (70/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.057262011 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.268393619 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.256368292 seconds)
    (73/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.507618231 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.35627349 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.276401854 seconds)
    (76/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.346105442 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.302769242 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.305143784 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.243418387 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.266131363 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.286135911 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.187784409 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.472633328 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.993508463 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.294304775 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.242984492 seconds)
    (87/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.275367277 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.20995158 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.460322386 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.251411185 seconds)
    (91/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.391982447 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.290531999 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.273738567 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.342399813 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.244426145 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.377859467 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.244078446 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.84430245 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.251459565 seconds)
    (100/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.317784625 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.772890061 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.005142996 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.390199921 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.65803463 seconds)
    (105/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.316075743 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.282084221 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.30845645 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.477457171 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.64561415 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.29580514 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.49802502 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.281185201 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.274224264 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.264341006 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.08586883 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.298054207 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.272086138 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.267035506 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.02200179 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.794888455 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.303254623 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.245617082 seconds)
    (123/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.281782034 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.524804415 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.265024186 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.354525214 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.371762087 seconds)
    (128/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.388642595 seconds)
    (129/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.293067644 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.266745168 seconds)
    (131/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.451253663 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.004414312 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.272181464 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.53398602 seconds)
    (135/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.247064265 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.806863951 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.273423424 seconds)
    (138/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.043238864 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.38985478 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.348805651 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.3943195 seconds)
    (142/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.063893134 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.381233736 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.007545298 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.300738056 seconds)
    (146/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.293910185 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.247632807 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.358877638 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.279892303 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.255616022 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.313050621 seconds)
    (152/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.275911973 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.659007009 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.689327845 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.193586137 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.256022963 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.686211975 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.289835488 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.26255568 seconds)
    (160/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.274413639 seconds)
    (161/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.281644007 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.622280664 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.290315001 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.257637677 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.039159894 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.091353453 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.256057284 seconds)
    (168/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.313516538 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.256033356 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.910032689 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.275375353 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.520386163 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.636610645 seconds)
    (174/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.037980088 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.639259972 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.942665892 seconds)
    (177/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.49754332 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.310805463 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.268235222 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.165403687 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.638040536 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.318395717 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.078818798 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.276949205 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.345143485 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.158926655 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.257413852 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.190241019 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.256885908 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.857030266 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.218840661 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.257244248 seconds)
    (193/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.297518521 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 5.561471366 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.334417835 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.270427347 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.277505319 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.677588824 seconds)
    (199/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.682761623 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.564151056 seconds)
    (201/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.360958912 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.328863721 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.389045902 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.269155139 seconds)
    (205/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.317432712 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.194624614 seconds)
    (207/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.804147263 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.284676812 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.260347553 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.923126851 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.477789632 seconds)
    (212/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.265991385 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.280517505 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.280941586 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.29691056 seconds)
    (216/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.004324657 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.658940979 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.835594156 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.121212106 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.833138526 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.303739082 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.301105249 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.710234517 seconds)
    (224/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.63361445 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.910460874 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.337761409 seconds)
    (227/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.515853751 seconds)
    (228/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.438635376 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.320244651 seconds)
    (230/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.508818994 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.432369437 seconds)
    (232/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.024269825 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.276965616 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.027993958 seconds)
    (235/309) benchmarking ("sort", BigInt, false)...
    done (took 6.294582125 seconds)
    (236/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.64210488 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.281170288 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.332317055 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.357781344 seconds)
    (240/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.259677515 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.364983294 seconds)
    (242/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.28094557 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.289599561 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.261705014 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.347596511 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.298361785 seconds)
    (247/309) benchmarking ("sort", Float32, false)...
    done (took 5.27476661 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.295912411 seconds)
    (249/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.567950271 seconds)
    (250/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.310748995 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.295702124 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.372153674 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.254295274 seconds)
    (254/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.391843731 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 4.321983976 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.620558534 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.499837858 seconds)
    (258/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.81717479 seconds)
    (259/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.605767533 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.97616613 seconds)
    (261/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.676855391 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.280102196 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.309731304 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.3590588 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.294972472 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.634246252 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.465083872 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.665732157 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.892129915 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.694048802 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.272289712 seconds)
    (272/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.611023804 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.264016624 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.442290066 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.138478527 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.18496634 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.271122348 seconds)
    (278/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.264281681 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.323445015 seconds)
    (280/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.969725923 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.86840381 seconds)
    (282/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.46900553 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.365204995 seconds)
    (284/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.825210731 seconds)
    (285/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.835554362 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.366018978 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.169686964 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.310306547 seconds)
    (289/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.643288851 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.39869199 seconds)
    (291/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.616501428 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.075296611 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.301727897 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.268246301 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.374787873 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.380443759 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.479008568 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.340318445 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.275149354 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.284720841 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.143677987 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.693229825 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.909476702 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.34750902 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.339992198 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.299790974 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.864144395 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.265719456 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.310403997 seconds)
  done (took 1011.883394385 seconds)
done (took 1013.064062356 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.310048609 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306489581 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.28811872 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.309383635 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.398845804 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.311416739 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.298735962 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.290793258 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.335766378 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.338156332 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.287024812 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.310560719 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.28967585 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.288086103 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.288329455 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.302437321 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.279958487 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.287842677 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.305324844 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.299050634 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.304935443 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.286757558 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.338605241 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.310565306 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.293453063 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.292711848 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.291931627 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.309005581 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.401439402 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.29273801 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.293734467 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.301030023 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.281315781 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.290376966 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.285640727 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.309946989 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.300080938 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.299045498 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.29420457 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.321263537 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.678201589 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.311404722 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.291226701 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.290260252 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.290484649 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.294562278 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.291252505 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.297973505 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.30455317 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306954812 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.680956647 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.32874081 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.294315662 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.293051723 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.302369635 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.290397411 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.294981006 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308197568 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.311415721 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308756278 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.270804816 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.297028725 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.295109792 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.307708719 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.300866185 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.720831275 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.311175531 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.297872905 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.678104789 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.320887052 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.722173483 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.322911656 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.293379612 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.305539067 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.32337522 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.28446311 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.287415134 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.292421601 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.300806393 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.290287507 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.302617717 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30602858 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.298346611 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.292969319 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307569426 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.316103537 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.304287461 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.294368928 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.303363011 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.312038362 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.300729455 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.304290801 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.297346933 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.288931937 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.303178582 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.297090366 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.296341299 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.296444617 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.299896078 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.304657963 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.680925952 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336531006 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.291016736 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.291038557 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.293943999 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.308772254 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.6821239 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.31861555 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.318624063 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.342148454 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.297028648 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.274076352 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.296718702 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311971498 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.303615296 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.298774482 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.29142439 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.275171033 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.691905769 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.33312668 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.297514315 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.293020775 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312676529 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.298010279 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.292513122 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.290088943 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.297407631 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309660928 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.41759449 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.3075132 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.328159587 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.292886532 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.300184089 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.318552388 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313829795 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.329220623 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.300712312 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312748794 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.312911386 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.293807814 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.306421296 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.307726033 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.298967419 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.302265642 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.291616516 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.319660734 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309411861 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311318223 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.318576064 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.417867532 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.294464261 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.277049257 seconds)
done (took 218.658593788 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.356174224 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.292533033 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.386118182 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.294062463 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.392600663 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.395962386 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.291803846 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.292338672 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.292239793 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.673736588 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.292510603 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.293281074 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.288667007 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.292182749 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.381120424 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.294170761 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.291824047 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.635786871 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.29467279 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.365054649 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.291301382 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.293072252 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.29385397 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.674616293 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.292170181 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.289208723 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.364599955 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.294760829 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.642317861 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.296520126 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.293839812 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.641513029 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.386001971 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.312648298 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.305740427 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.302840427 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.393657958 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.311987182 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.377547078 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.377533586 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.388474439 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.334310717 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.297764256 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.290246822 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.297242839 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.295641191 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.293709519 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.322742245 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.290828517 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.294372623 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.638792801 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.306151059 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.295399993 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.295078463 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.295678483 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.325466252 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.294913599 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.297861201 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.387167397 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.297772902 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.359186396 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.678467245 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.678094077 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.297860991 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.294645972 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.296364437 seconds)
  done (took 145.884565835 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.36348863 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.370617892 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.405597492 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.313071691 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.347804869 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.411929194 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.31416102 seconds)
  done (took 10.736545708 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.303422765 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.298546803 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.347504321 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346817495 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.298304286 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.445610539 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298132082 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.309382073 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.295596729 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.350752016 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.300231405 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.299147227 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.305189343 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.29965692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34610778 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.310276665 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.413229174 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.299445598 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.29967959 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.454019316 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29759152 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.305289392 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.349861761 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.31080789 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.300344312 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.304726509 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870009496 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300017805 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297541074 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.299981372 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296469712 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.338479724 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.300484981 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.29591014 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.298069981 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415130202 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.300031841 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.298426656 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.300950695 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.295414744 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.299046661 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.301777431 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.30108407 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.298529263 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.302002103 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.322829097 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.301624846 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.301091745 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.300894325 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.301166229 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.350661968 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.301894662 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.298700477 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.29882086 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.357809786 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309178652 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.30246867 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.299010636 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.3024117 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.300086096 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.458356752 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348664793 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.302111858 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349965284 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.303263191 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.302467002 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.302151714 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.303237255 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359649999 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.302763418 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350334281 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.301217674 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.455592494 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.325072821 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.305862536 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.306253853 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.304435 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.303086786 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.297710596 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.308522776 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.301501389 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.304190307 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.309785494 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.300569711 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301520629 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404997288 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411821281 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.300550443 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.314992787 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.310040819 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.301452451 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.356566116 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.304508736 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.301380081 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355812951 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.418902427 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.357768094 seconds)
  done (took 150.00814106 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.308552734 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.312123543 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.305725539 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.320779317 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.30489359 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.30499667 seconds)
  done (took 9.071779354 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.306333896 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.304509191 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.304792396 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.304259768 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.304901601 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.30630869 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.305003613 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.305079109 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.308287782 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.304998008 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.30575855 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.305262438 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.306712531 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.305656121 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.304564691 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.306355167 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.305644053 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.303527979 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.304614372 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305588605 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.399823819 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.305356966 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.305382513 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.30628789 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.310374274 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.305648789 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313968165 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.307360567 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.306522112 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.312985325 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.324950954 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.307270989 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.308182224 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.311601119 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.31038473 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.308275836 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.31112821 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.306574877 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.304421359 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.307419324 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.309031772 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307927569 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.308399993 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.308392842 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.310213161 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.311041396 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.312555982 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.314788775 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.307580771 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.308189573 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.308076452 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.308789242 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.30945528 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.308259444 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.309556274 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327851572 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.31247936 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.308702155 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.308450378 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.309111689 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.309026928 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.310086907 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30994237 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.31270257 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.316648386 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.309830883 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.309851157 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.312586172 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309900398 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.310305377 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.310131683 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.307881796 seconds)
  done (took 96.538140259 seconds)
done (took 413.443823225 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.623052876 seconds)
  done (took 7.843787845 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.3294241 seconds)
  done (took 7.552960328 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.15289131 seconds)
  done (took 21.375399369 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.350211254 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.354379896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.342480424 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.319645174 seconds)
  done (took 26.586272139 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.457087009 seconds)
  done (took 7.67724548 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.302725178 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.300527549 seconds)
  done (took 13.82431561 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.67626873 seconds)
  done (took 7.896107314 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.439376771 seconds)
  done (took 7.659301278 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.321780017 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.318445501 seconds)
  done (took 14.11723161 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.282756075 seconds)
  done (took 7.503363067 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.136531762 seconds)
  done (took 8.359945496 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.304157931 seconds)
  done (took 7.527013478 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.368908692 seconds)
  done (took 7.58980599 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.139159318 seconds)
  done (took 9.3611626 seconds)
done (took 156.093760654 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.302401197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.312133122 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.305840206 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.302691037 seconds)
  done (took 26.445007304 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.343876686 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.345439496 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.346428195 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.35596347 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.34762426 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.363694054 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.338011184 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.354643284 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.355523876 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.347326914 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.347217769 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.760574495 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.345171392 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.337513561 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.346959985 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.346932532 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.355040168 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.347737051 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.339422486 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.348568793 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.313811178 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.356281559 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.348943585 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.312583882 seconds)
  done (took 33.928130052 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.83262184 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.383168239 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.467058957 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.363718564 seconds)
  done (took 7.270629028 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.364508014 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.365357099 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.377531892 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.415618989 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.451074607 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.376353705 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.340080457 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.334195637 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.320781103 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.36688245 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.442753795 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.37982452 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.476810855 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.314615362 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.49676007 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.31325366 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.315106004 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.36553626 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.41655199 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.432034652 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.314932929 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.366646626 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.369818987 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.383643152 seconds)
  done (took 34.323999175 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.31327428 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.332244666 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.31315397 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.312792641 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.322092612 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.313309682 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.3142134 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.314426543 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.313805178 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.32078022 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.312880434 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.325824591 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.31435177 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.313234984 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.320600304 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.315831681 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.320177929 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.314043189 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.31463558 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.320875151 seconds)
  done (took 27.568353265 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.306862863 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.241902955 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.66064546 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.564818908 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.309829786 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.308457293 seconds)
  done (took 28.618585991 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.383542023 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.53797064 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.321986136 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.660929662 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.751167209 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.330711425 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.316886442 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.549758183 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863173144 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.852462269 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.378660323 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.388174538 seconds)
  done (took 19.562667685 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.315356878 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.318135802 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.327161892 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.333700138 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.367939497 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.342048643 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.322467609 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.30991655 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.376477924 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.396479948 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.34193222 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.369812901 seconds)
  done (took 37.350180528 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396547991 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356233367 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.222171846 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311092155 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028856045 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523175763 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318322883 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.76451087 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.314736474 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585591262 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311536659 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418580167 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.566578643 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320532806 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318985909 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.273980126 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554058753 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775187395 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314431181 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.207741997 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337383539 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315853464 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.282332773 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.349583752 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523521438 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.454308073 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.574002843 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.089184432 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602052225 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333069706 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322767088 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312894457 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586781329 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971256242 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434323415 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322503713 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325355569 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858500423 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.311786361 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.251010746 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.106644979 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322770961 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32438905 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31188812 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248123558 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312674061 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754705772 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.319031296 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.024871273 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312434288 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325509811 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407301148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.31742396 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.304314218 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313219934 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.32098895 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.313067808 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33869299 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901910467 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.64835169 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323550223 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.255934577 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327291567 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.188990012 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943936443 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.44027418 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.317513773 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318024053 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249539834 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.177785153 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337910678 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462791049 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.336467341 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964475423 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998211675 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.340064542 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252870757 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830265545 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31726271 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.256846427 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543927068 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09310514 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250877149 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.262298869 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250325083 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986640111 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324003878 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.667490669 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336572435 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.766939143 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.327496425 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334146348 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338948906 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538852322 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.196924584 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315458299 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.118522109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461938268 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33761275 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.747526353 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250646838 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.320151591 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571586443 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.526664514 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320786444 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.288953348 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537717337 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318059406 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.355162567 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32076901 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.335229279 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.873158651 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352166373 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.643463212 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342024311 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.093591026 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009980407 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320941021 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.425918427 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.326955429 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562434337 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.045343502 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477604778 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384863495 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321643658 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318014725 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.270378954 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917934899 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.470828954 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.314649849 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323914127 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.334846791 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.31892137 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26627156 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.315827686 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328080119 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.103613883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.541592325 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318433001 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60210084 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252503867 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465717595 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32778002 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.541867223 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.512652758 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.335337618 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578473541 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329243931 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336656587 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337760928 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337731164 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420298781 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340667882 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.321581645 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582585496 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.32302288 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.324222291 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.295969083 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.105647852 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327145871 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.325597565 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324050631 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88154758 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321109525 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323887607 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208351642 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.335016604 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389009405 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325663299 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.330146962 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.078768544 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349726071 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.327144423 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.319025643 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560575517 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331575909 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.218179397 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410764301 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.516328062 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882772128 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358524572 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.257636475 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.03413831 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.013974742 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321950699 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.519711419 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320255856 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332035567 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332653325 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326998266 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882463817 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346662766 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.221634906 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.335641294 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333072434 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.328651041 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323390858 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.0800324 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.691583936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332568028 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.360129045 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467410493 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.337754873 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256646819 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.840114119 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328631222 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323023239 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.098280318 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358805566 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.206613149 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80326487 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581578009 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3296898 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335830448 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.384032886 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.36314332 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.353083447 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.148819793 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360040533 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.340817174 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347067041 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.335163931 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.283520705 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.695025278 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890805454 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025348517 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86529742 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249536289 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.333264758 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.241851274 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.759524757 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259347461 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981011907 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504698202 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785957636 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270640722 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522636745 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.517025427 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089750102 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335427091 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554349431 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233495538 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.168910388 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364359824 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538032383 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359525582 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328898931 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262231584 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.617009106 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562775369 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.183654195 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412873509 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760997717 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.173032234 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.122942404 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.333166297 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.606697296 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510561576 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878479048 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713323953 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327534185 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338809824 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798976441 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33049069 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853137393 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933586067 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349323077 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.529595347 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262856617 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.337124502 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338212008 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.32367599 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.582622695 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.32935278 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.589264356 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337579936 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260499829 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331213943 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855152698 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.20811309 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.333842687 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327686043 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031901574 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342147275 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623286678 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.336716285 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.062518576 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354109893 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261829617 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262373197 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.021045885 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337934226 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306136431 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79748085 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.332646192 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346816652 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333950368 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181930849 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58400681 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.342017342 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895202234 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571218156 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347791376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353615652 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.428585393 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.21558931 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.336225583 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.227346459 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.564112276 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339357044 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555289786 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.25335258 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.229812218 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375651036 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541602049 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.228426815 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330890273 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584726505 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.066204195 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.343625311 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027769848 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379867027 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338622484 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347087507 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33100487 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350974533 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418527806 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342036599 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.341234382 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.34086664 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498930642 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336748588 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334068064 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34553022 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424571756 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.71810116 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.070977002 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.113325578 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903051061 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057887616 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918162705 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359278834 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332157644 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333336916 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264846919 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483463322 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.857756872 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609296717 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468372474 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.335125024 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351573576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.239239315 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346940281 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543298973 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599985585 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.296394468 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322373496 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115831507 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.203407149 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333705093 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.533618613 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792565969 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860096293 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444418724 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336655721 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.764623397 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598787666 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415292044 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326623507 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917944524 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.343304777 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603035506 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.34906384 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339885716 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482037037 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334686231 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995687851 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361579161 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.485656364 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.099307964 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.376728371 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582060735 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.777611973 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.337844674 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89765143 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026203682 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589294584 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396528684 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336626049 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.432989245 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474110796 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.336527415 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.21499256 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326219966 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170550961 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.036189558 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.336697726 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896922457 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606150096 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.324019956 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.32418908 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372952426 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.336382784 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549798493 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996138295 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552785415 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338677009 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336432263 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.897418991 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897816725 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356968069 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262247577 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.331778765 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57312029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589269818 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352533015 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.780816848 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.04078079 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865979979 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.30111148 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351308996 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328401091 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021316594 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897175645 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.082737583 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814166466 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.985439887 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340256586 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612834875 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.335065425 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339883873 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614532053 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.332251929 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337935381 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348900352 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.897943078 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096910401 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.35225908 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.268789078 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.274746922 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.554982417 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337758773 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26885516 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33103455 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.501414999 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330798735 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461216272 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341516683 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.337630305 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342630655 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.098710372 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603625849 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.336742738 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.315589151 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.29541837 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347420607 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362622888 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589821943 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335032046 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.005080763 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.680874877 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587486973 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.334726084 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.319018424 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.335572225 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331593541 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04905244 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.341269729 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331209068 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887144136 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.336849275 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.349453198 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335817025 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.547468681 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54334593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33383391 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344640948 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338525914 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355428152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.238549961 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099377499 seconds)
  done (took 1631.765134786 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367357766 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.358715547 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.344477974 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.345485814 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.346172208 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.373728832 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.397878934 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.343997877 seconds)
  done (took 52.126089224 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.338214789 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.494541655 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.362831041 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.336781798 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.349958664 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.346727888 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.779721252 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.357684374 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.343489302 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.344395967 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.345044465 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.355099346 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.961328568 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.343880597 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.338956308 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.329916623 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.349037822 seconds)
  done (took 65.32727836 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.347112291 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.840610015 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.42911664 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.343218507 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.321024977 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.35934158 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.001472717 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.336416587 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.333801378 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.622930406 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.006933213 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.363610688 seconds)
  done (took 84.556286274 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.344579265 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.344432104 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.344279944 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.345092451 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.345786609 seconds)
  done (took 7.973361237 seconds)
done (took 2058.037955463 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.5823742 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.991445453 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.974662121 seconds)
  done (took 5.215260251 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.482071272 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.530825591 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.651408411 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.657696671 seconds)
  done (took 7.572337172 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.617373107 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.709953302 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.529000409 seconds)
  done (took 6.106452213 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.698111295 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.365173204 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.350104435 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.334680853 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.342656767 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.343007406 seconds)
  done (took 20.272806566 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.340534832 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.342937837 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.340163911 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.342467844 seconds)
  done (took 6.617617858 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.318779579 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.04556347 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.318042538 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.339313563 seconds)
  done (took 18.27404026 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.085740103 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.100241248 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.083758936 seconds)
  done (took 7.521418079 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.347217315 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.187619487 seconds)
  done (took 9.786835442 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.627770349 seconds)
  done (took 2.879333295 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.471919859 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.665183213 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.350903907 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.257437963 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.37532437 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.0488234 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.902865137 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.523806894 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.220005509 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.437563546 seconds)
  done (took 27.506561891 seconds)
done (took 129.998191282 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.078989015 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340027254 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.545536909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.050256104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.566270157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.545861734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.534291815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.015085703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.604055675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.562696813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.050449144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.566348195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.696949053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.584697408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.699743194 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.586342721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.56592653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.21698847 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.786711332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.977925236 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.540087625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.69470374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.882008879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.763012283 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.571168121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.499322776 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.270676929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.586178892 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.910685037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.329418154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.506915385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.148108913 seconds)
  done (took 192.531033086 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.339280007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.339185758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.338756413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.367315655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.340428305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.338831482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.363448278 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.339327042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.345480635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.352958243 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.339505757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.354393558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.359831233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.339441518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.356627108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.340141153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.356666378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.35409477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.341069427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.339851095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.342757943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.355295513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.340481268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363162101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.344235791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.342245145 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.355961529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.348785319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.341981784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.355616684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.340883386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.365503438 seconds)
  done (took 204.398725099 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.341128393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.341428881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.357991902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.354994006 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.340833323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.359662179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.357721826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.341491813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.343238975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.341276252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.346117956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.351240463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.343952018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.341472897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.344870343 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.371257385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.341808022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.342564913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.357993366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.342688222 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.345491911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.342247353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.362769585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.342289319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.342010276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.351569189 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.349808218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.353805295 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.342712681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.358141635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375183351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.342498158 seconds)
  done (took 204.428935668 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.544672087 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.350735255 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.3514561 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.310936237 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.351389793 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.349982564 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.347155409 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.540690469 seconds)
  done (took 14.405696522 seconds)
done (took 617.01619605 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.585884563 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.317679048 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.550034958 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.379069206 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.094112762 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.388144008 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.371994604 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.533964346 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.27128959 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.548810066 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.59887238 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.385824182 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.741125278 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.369053618 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.618994381 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.466949866 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.270786043 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.393509123 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.678093403 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.860109631 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.624224368 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.818498561 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.551289647 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.253524456 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.758170392 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.817362291 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.053069034 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.257216542 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.386856033 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.684784451 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.956754493 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.30416192 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.429498472 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.428698326 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.484896197 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.462890658 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.27770587 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.424320083 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.564442171 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.598789879 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.869768032 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.082382214 seconds)
  done (took 91.773775533 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.337132918 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.336043105 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.335296631 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.33666916 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.337181401 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.336435492 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.336073984 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.3353789 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.335670898 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.336422783 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.335561465 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.337237691 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.335724594 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.337258762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.335984521 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.335593962 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.33817472 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.338994597 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.335736573 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.335405375 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.338017274 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.335564113 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.337743668 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.338058189 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.338767263 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.336343229 seconds)
  done (took 36.014433345 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.355268836 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.60343678 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.760886977 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.363375493 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.355065016 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.359118179 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.42988406 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.356797874 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.357668041 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.359819515 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.522288728 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.358651979 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.394800512 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.789691818 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.357655055 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.357525737 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.357125344 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.355054618 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.612257626 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366090121 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.453080796 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.358395566 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.4311393 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.368472981 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378964925 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.357440257 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.36229453 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.871053705 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.380009674 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.524465055 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.129355591 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.43742049 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.829093927 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.792619402 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.1302226 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.367587858 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.359692629 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.531100856 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.367292853 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.358531914 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.432492087 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.367061725 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.767063184 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.970571329 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.381845331 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.358968239 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.889706748 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.557785079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.600976501 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.374232497 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.790905485 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.36965096 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.361451441 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.359930383 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.594369193 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.372815647 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.359004597 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.876952083 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.388836482 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.433597853 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.367857527 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.359526032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.622008624 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.366660163 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.61256922 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.368828543 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.3695642 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.378720698 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.769632918 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.371392225 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.981435646 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.385326743 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.360343864 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.527591211 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.621863104 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.932128689 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388866946 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.62617474 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.844804575 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.459704774 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.372490449 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.880788447 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.462158189 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.372493262 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.364024625 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.363372009 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.36136888 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.407872944 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.433551376 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.926449987 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.999665517 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.902279723 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.462604349 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.382338181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.361174535 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.880683784 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.388299677 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.362226427 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.763977415 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.990051896 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.386047668 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.370419978 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.986820423 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.388388125 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.436879374 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.375159089 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.775851273 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.370766287 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.409286044 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.36299715 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.368753964 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.383896984 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.438652618 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.366647252 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.36373905 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.957225996 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.559072663 seconds)
  done (took 178.889222597 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.357780684 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.356187973 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.356173158 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.355965854 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.356084714 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.364007402 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.357021052 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.356719191 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.361732943 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.356341029 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.357732322 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.357586121 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.357023164 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.36347826 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.368107657 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.363847332 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.972718817 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.357431652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.366403622 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.356488492 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.145699247 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.36747352 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.357621723 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.377431665 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.360152018 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.360652615 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.359775311 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.377126285 seconds)
  done (took 152.775471409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.364181295 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.908690913 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.382611015 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.49091382 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.39371095 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.363226609 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.488135805 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.426805828 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.390231458 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.363723277 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.362755274 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.655917784 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.367013421 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.866122314 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.556405156 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.514363977 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.874805854 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391587726 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.363449177 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.364131579 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.491934282 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.375519761 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.658412655 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.924993011 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.391349764 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.916892225 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.35779228 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.366538365 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.365146907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.918049268 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.389101705 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.66115785 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.44822264 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.432000916 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943022643 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.894504011 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.894044638 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.515384846 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.374696167 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.365108622 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.365929009 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.351004488 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919462834 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.393684586 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.366983272 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.908710111 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.393042112 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.369193972 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.374085791 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.365218463 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.423695502 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.4476259 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.688684414 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.932204151 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.464817348 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.387370376 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.493918403 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.736751907 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.370816463 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.870181282 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.35879274 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.92281726 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.394664004 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.351105316 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.368122903 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.373178207 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.510190709 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.501292755 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.876904151 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.391400889 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.872223963 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.535583866 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.37488895 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.366124377 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.369883409 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.923604273 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.898426885 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.535693 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.504819608 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.561797508 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.361444754 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.367018303 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.352840961 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.442223062 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.375635063 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.924560006 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897186842 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.395892648 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.370288157 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.370744281 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.371348704 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.537471744 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.948838363 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.4683442 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.865318118 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.68283462 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.674867128 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.380811019 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.425692226 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.392710283 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.669284137 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.379811247 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.425526962 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.797950627 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.668924863 seconds)
  done (took 163.010450467 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.613684517 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.550664753 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.456173768 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.497715065 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.977813784 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.944577317 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.575739453 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.508189368 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.482598207 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.621663234 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.500681357 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.468157157 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.544815226 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.452623892 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.107401109 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.46075206 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.477288136 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.506892295 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.478671119 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.385767152 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.039871026 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.661694126 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.549774716 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.21886992 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.459662865 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.10453012 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.922539403 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.902953835 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.551274864 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.693478234 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.906077871 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.498689438 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.316281983 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.034209913 seconds)
  done (took 65.751487901 seconds)
done (took 689.473230557 seconds)
SAVING RESULT...
DONE!
