cset: moving following pidspec: 2482
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.35037594 seconds)
loading group "string"... done (took 0.564882369 seconds)
loading group "linalg"... done (took 7.660642826 seconds)
loading group "parallel"... done (took 0.172921619 seconds)
loading group "find"... done (took 1.271783232 seconds)
loading group "tuple"... done (took 1.939196847 seconds)
loading group "dates"... done (took 1.422417507 seconds)
loading group "micro"... done (took 0.248051878 seconds)
loading group "io"... done (took 0.976659335 seconds)
loading group "scalar"... done (took 41.238542884 seconds)
loading group "sparse"... done (took 13.39881476 seconds)
loading group "broadcast"... done (took 1.03787776 seconds)
loading group "union"... done (took 14.363254009 seconds)
loading group "simd"... done (took 4.759589175 seconds)
loading group "random"... done (took 9.646493511 seconds)
loading group "problem"... done (took 1.986415511 seconds)
loading group "array"... done (took 22.54756429 seconds)
loading group "misc"... done (took 2.029448618 seconds)
loading group "sort"... done (took 3.434239748 seconds)
loading group "collection"... done (took 19.537577024 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.568902326 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142230416 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149970102 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130944613 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203880226 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156051399 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158006685 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098363508 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.965933748 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17859518 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152466032 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523005389 seconds)
done (took 5.153596819 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.216402826 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094493975 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103523409 seconds)
  done (took 0.868807725 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076897649 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144968471 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095511047 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078941067 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094535524 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078274365 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094300484 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077381643 seconds)
  done (took 1.340794776 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086933077 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097130089 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081588791 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097488067 seconds)
  done (took 1.04077308 seconds)
done (took 4.227415558 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736834006 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274759202 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204972451 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463104366 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192003845 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215764347 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688496475 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353279853 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252737189 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099405814 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143146333 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389007554 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136879903 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684842725 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09228589 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123806304 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176081015 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.462315246 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084344084 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109313122 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116221402 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142482586 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127328644 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091339653 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183358254 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082425894 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193343847 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107467971 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080756125 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275164306 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202021963 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687853572 seconds)
  done (took 10.887746775 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110858005 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134012646 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097916003 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138375467 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134442939 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099915286 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084646086 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096874936 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121757772 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175913541 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115192252 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136131017 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094901131 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082281495 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115109513 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245381123 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.1188905 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100946218 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099546259 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088495254 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137418679 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112299394 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109084214 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093073414 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166525155 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221988264 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112910341 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125825687 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095652023 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112589592 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143146997 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144401521 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096090419 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081131538 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172473256 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124485564 seconds)
  done (took 5.13132104 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.082956531 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189059357 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121276312 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169432516 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080329331 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142082015 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155446289 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096556142 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113949225 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25619876 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.116640441 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176663248 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14395855 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099519352 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096582695 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081718925 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093992102 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079454197 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.59329078 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155384583 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134235016 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098405893 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104049441 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098923957 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364006554 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09134105 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095182984 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080969553 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081873663 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161324535 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080846031 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.167662736 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101563309 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101299609 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133380075 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194986491 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12718794 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134813551 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079431153 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096749319 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174177172 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086799138 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099767369 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119345302 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132284754 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118004788 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098267002 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096107638 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.200428693 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094490709 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096724546 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931653716 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181940553 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.105221918 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095031288 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322606111 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09842568 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096788022 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077531286 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28345534 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189045698 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09739046 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079357003 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095991227 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079829234 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396012176 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080863508 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.753766775 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083737599 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105365463 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083220505 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09647336 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102274493 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086657853 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114238227 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076957924 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095725441 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080535815 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096128427 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078125548 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098108897 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105114183 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086056445 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09669024 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150692182 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096156202 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099931604 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127810131 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09985657 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078730522 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1307043 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098368195 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080056956 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133078495 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097602687 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091097746 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099358066 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142610309 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096798195 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.139999674 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081381434 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093313675 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108073994 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100313345 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130656223 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112135444 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097060892 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084919341 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094834289 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077012116 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162393503 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080939173 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097859232 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080667775 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10943224 seconds)
  done (took 22.359280505 seconds)
done (took 40.135315637 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.3175563 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102192177 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103406114 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102562652 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101947788 seconds)
  done (took 1.479361347 seconds)
done (took 2.20410093 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285309801 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172499822 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09393008 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16590936 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09222599 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163046147 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158255504 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093267909 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218316666 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093154285 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159628396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076453758 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093683526 seconds)
  done (took 2.616732369 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094290921 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114336162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083048995 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109883624 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076205955 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109826134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092302072 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115460375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108308564 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08511232 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092235854 seconds)
  done (took 1.801254934 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09595639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111785859 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082128564 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110106314 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076626652 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110142723 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092171333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116171327 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108027812 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085862809 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092002354 seconds)
  done (took 1.801585338 seconds)
done (took 6.933491841 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0904762 seconds)
  done (took 0.80754188 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.913720388 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.472266423 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112138877 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148409671 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31110665 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.18893492 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.455454531 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124604809 seconds)
  done (took 10.631199766 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145604479 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085659149 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102373984 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083148145 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102409459 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086616693 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099136909 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099396743 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084906481 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099317217 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084282348 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102332886 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098495366 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086180187 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097869164 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086336638 seconds)
  done (took 2.328715207 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119328789 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117170925 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106240903 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108498115 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086886287 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105437495 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106067059 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089337494 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101650421 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102691014 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09185471 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106484856 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103254809 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080032168 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10674826 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107695278 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087019308 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10636557 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106551971 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091013722 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107400425 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094486525 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088071968 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105788656 seconds)
  done (took 3.258207387 seconds)
done (took 17.746294143 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158906418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108761518 seconds)
  done (took 0.994741164 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095584252 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112067928 seconds)
  done (took 0.939514595 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098572924 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095734148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121458725 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109484743 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081568074 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096493368 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119899189 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081130955 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096699399 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080302425 seconds)
  done (took 1.716648203 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082445537 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108880767 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101891084 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096399109 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105587038 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09409215 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089609126 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099237477 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110026196 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077737115 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101690406 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11479899 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086416167 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116331722 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103807263 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084551327 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102040365 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097711495 seconds)
  done (took 2.508995067 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081592528 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096595591 seconds)
  done (took 0.91297459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082068309 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093383991 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081696059 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097638058 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093504853 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078271126 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093543102 seconds)
  done (took 1.353807915 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.440672412 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135105268 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258807568 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084639291 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120321168 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302714964 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097904936 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084961996 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102960543 seconds)
  done (took 2.420103652 seconds)
done (took 11.578256734 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09401326 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114385184 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113413129 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463121802 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107287491 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098552615 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147399027 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250530812 seconds)
done (took 2.129503724 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143635761 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.594626285 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.42722568 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.231240568 seconds)
  done (took 1.995977876 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403152144 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098828247 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083044904 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08153021 seconds)
  done (took 1.412599176 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080472347 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099016641 seconds)
  done (took 0.924880712 seconds)
done (took 5.223251956 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081405873 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095810675 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078405345 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095789707 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078065493 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093282991 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081984554 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096414934 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.080685284 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.095888568 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080850177 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128498754 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094900392 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078221631 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097155861 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080228334 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096987385 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079788215 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094253263 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078764307 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093335515 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080984133 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093428567 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078525917 seconds)
  done (took 2.913154165 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100969067 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098590917 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102943457 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08724794 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101936201 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086500275 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103472412 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096455815 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088355794 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101364495 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100660437 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086370694 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098646227 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085684706 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099788355 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101545373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087498363 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099461677 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083414857 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102368418 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102081788 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082433352 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102735101 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102575416 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085772708 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101379235 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083865783 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098051154 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102597632 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085717061 seconds)
  done (took 3.609438138 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086441571 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09404644 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079652812 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10219557 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07832036 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096603588 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078783532 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095793462 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07963586 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095114495 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080753234 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096179667 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078467765 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097080385 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079365956 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099579448 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111575268 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079454548 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095374761 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07982808 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099172511 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079780973 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094989838 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079243776 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095016609 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078301892 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094643216 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079749838 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096051391 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078400049 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098412697 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081396451 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095091649 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083852701 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09871211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077431405 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099336184 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076592802 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096310292 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094001852 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07919612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094081133 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078465955 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101188483 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079722361 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097235032 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078897719 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096191338 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079430701 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099003746 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078005692 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094979392 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079606053 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096092371 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082046722 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095208592 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095332287 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079782117 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095546495 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079099541 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095106761 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078255975 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097053583 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080012859 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110643882 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085449007 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094914869 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08020193 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096570147 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079889884 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097693954 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108647874 seconds)
  done (took 7.177995975 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083466973 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105861861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080701643 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098025771 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076663606 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096547417 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098791588 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079597721 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096232541 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085903653 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096667299 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079145577 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098805532 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108026776 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080321304 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0970262 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085105424 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09375202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079518905 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099865703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078315214 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099989234 seconds)
  done (took 2.74958928 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210393254 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105612997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142890415 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106527998 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083794777 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107203056 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100806854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087153061 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102950045 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083811515 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100699892 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102089194 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084391011 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100201383 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099967958 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086673862 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10146906 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084655204 seconds)
  done (took 2.645999386 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093315264 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098872966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.211712753 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099017668 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097886973 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084669848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103631883 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106648434 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084266184 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098387271 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090774804 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101438565 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100029858 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082151172 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10032396 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081960735 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100829461 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080741418 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108675978 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104356244 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103628573 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09176504 seconds)
  done (took 2.981289399 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098408556 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099996644 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118158445 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085889751 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095016971 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080752028 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105662516 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082461695 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108652106 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099300741 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082893895 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096466194 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088688122 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099031494 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103081069 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082484165 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100002531 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082058 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101127983 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077864201 seconds)
  done (took 2.644352546 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101943891 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100300934 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09917172 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092283828 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100328159 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082368769 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10999937 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100374653 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083090336 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126328563 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100158275 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082005348 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111537805 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104962273 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099516016 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092691387 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109118094 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108495818 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083143244 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100840196 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125577441 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082382552 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110190426 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099641657 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082971083 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100175291 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099378617 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089061455 seconds)
  done (took 3.53774191 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081778964 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097954617 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081971314 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095469577 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080414499 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09495024 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079566617 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096137441 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08243521 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095123895 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082634116 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098078671 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081625024 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098140819 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082179784 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098482307 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081928008 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09683869 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07833279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095974064 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081518499 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099021803 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080966623 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096998242 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078412294 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09870169 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078315524 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09609959 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080913118 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09705771 seconds)
  done (took 3.429821339 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091592381 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106559712 seconds)
  done (took 0.958769231 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080520528 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11476296 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079413304 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102778915 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086115643 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101209855 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106844357 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086752136 seconds)
  done (took 1.519508272 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09692631 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109289114 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083478559 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113802303 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10944091 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099391297 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171441373 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101565823 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086987052 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099452342 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112874708 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081131222 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106225306 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082937128 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10492949 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087916834 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097845383 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104491509 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087139836 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100428506 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083701277 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109149772 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08384634 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096556914 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100529977 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091616153 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112143944 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082803868 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104320622 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106614332 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087601892 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092816811 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082818392 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099969614 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079229011 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108937385 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115734006 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085175501 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108854323 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099456307 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093610736 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094380424 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087335606 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105582338 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108999692 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083868139 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10009686 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07736184 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096482282 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084472829 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096073519 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0814607 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094243588 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089009055 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104226895 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111066159 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081766593 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10074521 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084609142 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103502836 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08866109 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103261386 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101782267 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082264943 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109934862 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086359725 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110444859 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094960354 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077117887 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097612543 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09330735 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123197397 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106049678 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083759635 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100353718 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080357851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102943544 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083503929 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106313914 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10484324 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083056845 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106181652 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089327289 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100914381 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101722209 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092300408 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097905225 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084546326 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097882712 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117105846 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081390549 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096781672 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080550124 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111286081 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085672873 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10026907 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078909609 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108567787 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092808225 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084388958 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101007452 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082818579 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112602846 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104882703 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088958293 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109199305 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106653845 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082919445 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102942423 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079685884 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101742162 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084317573 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106861348 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076486865 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102774951 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082529477 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100880042 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108240622 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080996466 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100309032 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089655226 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106103113 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0976581 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079016915 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102041421 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082910731 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103880527 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090569982 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099490993 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076516099 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096678401 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102741797 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082684883 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103787296 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088078891 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103939993 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076123778 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099822962 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104299536 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09204662 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100762643 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082920064 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107197743 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100536594 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083029659 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106237931 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084998291 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099230969 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088025557 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101646997 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076925575 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104743628 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102936823 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082000795 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10331608 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086612032 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103115724 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099725558 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082877777 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105530516 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084068643 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09961527 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082184893 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099202256 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110822848 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084593515 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095208532 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08000332 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108108497 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080671959 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100626925 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081196578 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103773282 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100292542 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081170286 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099823378 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084715611 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11257101 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104175697 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08481124 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105474006 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094844715 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100478711 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084862866 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100944098 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100506537 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083898101 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110237618 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087026042 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107007972 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102430225 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079748055 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106401385 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090240485 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099725105 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080359352 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099557273 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104085165 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089082764 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104707035 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084184 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099426146 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083539806 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104783467 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10291128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083525481 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099270707 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088610623 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099816387 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106790066 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08507254 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110713682 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086419631 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096762405 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085846169 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099971605 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107027711 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0786225 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097700921 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082113645 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101919838 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08235912 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103454441 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076028991 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10889238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107683167 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084192392 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099553147 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084180003 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106676657 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084270623 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105447952 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08470954 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107630329 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110913494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082999603 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103861838 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093595782 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101275302 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094186946 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088982379 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098189357 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082403306 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099270576 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080817565 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104235089 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109789549 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092370051 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094359769 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086235807 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099965357 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081673852 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097952554 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087736363 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104211852 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101947412 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091042521 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101641711 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085841846 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105398626 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082307136 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102921122 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101320996 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086516261 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101378323 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086472557 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099973975 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085783968 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100353919 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080940428 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104177512 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099994391 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083809141 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10607528 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082681257 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101022641 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084421567 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102204171 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100771383 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083942389 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099197171 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087463414 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100300794 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083058399 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104245277 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077782897 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108765871 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082515804 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109441097 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100527727 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079650635 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105973756 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085719048 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108008498 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101092423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084346049 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101198118 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083232162 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104457611 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088611089 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09974364 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111520045 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091388968 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102547902 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084857389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102312133 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084589325 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100681989 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101047432 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084690288 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100182941 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08283542 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106511353 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085193239 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102422273 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085145598 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102935293 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100469584 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085181784 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09474729 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082629115 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100459514 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084302423 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112339863 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100925371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087344234 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098624884 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085072942 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09977328 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079974388 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109512956 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109850845 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084670887 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108617529 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081465832 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103803697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111721746 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077573733 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098465885 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081601438 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09873388 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091357409 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102899903 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09164763 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101812182 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099435504 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081290504 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.109988896 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08211844 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095271652 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081269172 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105593176 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085881393 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100940244 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083010818 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105820926 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101263304 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095073627 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101060735 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083627777 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102381827 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078861766 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100598862 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081797565 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105820909 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102118961 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08143117 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098112882 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084311267 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102561246 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083972908 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101804905 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083889005 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109759447 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100121762 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087163922 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105122331 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077914206 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106177733 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082547296 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101524033 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099208406 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088243976 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104666126 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084460727 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111398509 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082646317 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101905141 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100680962 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081626999 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100552227 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084260338 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101333694 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083177996 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103963505 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090583893 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100733916 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103426314 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084212692 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101404753 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091891854 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103052115 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085675749 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109602755 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103655089 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08487213 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110137479 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087360475 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106125168 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101913801 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085056924 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107207908 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08204654 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109648953 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083042094 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103905869 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102763438 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081935333 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100856289 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083614608 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100900143 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089830178 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103485314 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08148863 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101533519 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080089002 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104079192 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104971793 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092633582 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104714914 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086537168 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098392684 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079814273 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102981643 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098558583 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085615302 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105035577 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090306379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103921474 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082542294 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10149558 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111119425 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090060714 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105258761 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081762331 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105840213 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08395985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105499715 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083788138 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102521117 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102858096 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088071346 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102975247 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083007964 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109989858 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086165711 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104133784 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102272908 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084871489 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101404948 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079944684 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102938525 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085483436 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107549495 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085122294 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103354162 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112463135 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083039554 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101739473 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087646792 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102873052 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105584858 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080120164 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102058765 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086001406 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103285511 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079193538 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101903181 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081106921 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104820219 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082217102 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098008126 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111848258 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093480705 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106645946 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083020319 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101388366 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078210046 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098953337 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100690005 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085783718 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102926383 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094502603 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102619071 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083204971 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098282405 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083274652 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106021456 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105279714 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081962233 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096852564 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083255879 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105245565 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.08907035 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102773457 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082932914 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106899942 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10444325 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082525481 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106101615 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081073695 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106447551 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115168038 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0858202 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10247466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09126348 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112229563 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084235755 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098326373 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102789671 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088933145 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102227569 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085468326 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103741004 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117628143 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088878409 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10070691 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084249357 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105924625 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083303623 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112364811 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083852925 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105621202 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106454647 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086470318 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113318135 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085469824 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111815756 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10502312 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086930765 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10244254 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08319295 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101708686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081459267 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105153566 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103903814 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089021988 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111366795 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08253464 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11597087 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111539387 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088943035 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099635564 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083105444 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102981307 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079543599 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107282155 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082119048 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102172362 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099648927 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084302754 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103198742 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090835258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103776787 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086223987 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103752789 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077523298 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105041409 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084922983 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104787817 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09859283 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084702622 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103733203 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08810684 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107492674 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085520657 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105974314 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084992041 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104520293 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097619318 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091936485 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100736291 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086929487 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102086957 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084595683 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105095742 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087142871 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110632606 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103779816 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086699603 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116395025 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085488723 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102090686 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099276317 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090352713 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100811403 seconds)
  done (took 57.783319105 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147532673 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081122054 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098147453 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079728272 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113218519 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099492053 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079781079 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098949839 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081132406 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102230556 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07924453 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098861108 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107660211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123743695 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093346028 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104110782 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078769935 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100898846 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0975208 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08215997 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109566235 seconds)
  done (took 2.870989426 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105427085 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117991512 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115272199 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118908951 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090225487 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11564657 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115394569 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114948847 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100607388 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111786857 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119471255 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114377003 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091459116 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11141118 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110625039 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092991303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119222965 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110634547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116132826 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096150826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113243585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113949964 seconds)
  done (took 3.229401111 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084446325 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101622204 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085588796 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097145686 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083500368 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097701212 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088653764 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101106889 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086845462 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102762403 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082199207 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10335735 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103758855 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080305171 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101576582 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082081282 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151227042 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107747907 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082823009 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105740347 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078398743 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106501145 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098013375 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08059586 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101392654 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088613419 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103867864 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081505576 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103090308 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08226823 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103472596 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080764284 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106337786 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102653593 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083889211 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101430845 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084312878 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102387534 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079590578 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100741362 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08457269 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09938141 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08345813 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105083408 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081386693 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101994899 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084434897 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104175899 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097337243 seconds)
  done (took 5.458956923 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105123268 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161917012 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086898969 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144415196 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121646419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111693929 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089030921 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142163675 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102444932 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082193802 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122328477 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122236213 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104015787 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08951364 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111594732 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102793901 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086373909 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103502326 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107533783 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083975583 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108392912 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089835558 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120928046 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11852944 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108319601 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084118111 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104976971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108646349 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098527165 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110796687 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109382493 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090104008 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120761873 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.1098129 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083430316 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107088294 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122824278 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104359905 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087706286 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101357347 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08722601 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109178481 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108798891 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102408541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105159074 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10919523 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084453672 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101446627 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118439803 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086754538 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114139149 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119981567 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108422451 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085218419 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109171005 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120544749 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085402548 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101725063 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087198094 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118555044 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101889705 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088374365 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120687309 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107115415 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111363227 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100904506 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110416983 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107929276 seconds)
  done (took 8.144465359 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094106703 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111046979 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119829188 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120693418 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091753509 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111827358 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110211539 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091846815 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111798651 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116893165 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110155198 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133235404 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087499503 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114862288 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110765092 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09281076 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112531572 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111897729 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091567544 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112325939 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111941208 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12078743 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092105672 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121071333 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142124494 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105795388 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090839648 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111417108 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121199833 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110234976 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123569863 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091737379 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111465618 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120769898 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124069627 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091843986 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103643743 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110861487 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091296695 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111537953 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104956975 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101703879 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111772381 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105925191 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091437186 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111685484 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120667347 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125085793 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113700288 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097231832 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112796002 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12119364 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109212439 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090830706 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121095372 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145991802 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120749239 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12080736 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110761712 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100195376 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122441451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128344944 seconds)
  done (took 7.682424162 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107594223 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11525829 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118111216 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100162557 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083633265 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108868477 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082709452 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102246255 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112694178 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094308585 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117563143 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109190433 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091295839 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1183693 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109333294 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112237928 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088967474 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109777071 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114838728 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109194969 seconds)
  done (took 2.936164743 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095711036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123811089 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084811951 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112606085 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108044501 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091401681 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106972421 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106873197 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086899621 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108116371 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096097822 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11757744 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1068319 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091687109 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116716905 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112304576 seconds)
  done (took 2.4969674 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099840602 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117058666 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120652598 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084103698 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105082825 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079994104 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106738886 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100096906 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082029961 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121296211 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084174719 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109445991 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104543651 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083476827 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101848122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087601403 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102470652 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083017174 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105919258 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120566413 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095623019 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105818659 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104658624 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088072161 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106002307 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090784693 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106770491 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102430516 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083579683 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104837781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085239578 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113396323 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101600199 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084683184 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102861317 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08218937 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105430021 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084727763 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109491001 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103734364 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085290856 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104458432 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084789233 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106800013 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079687609 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106365064 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100388798 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092521954 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102899299 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08489522 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10586608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106479819 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086351312 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.1156074 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087508525 seconds)
  done (took 6.246865926 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099111219 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109682288 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080970778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103253594 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087583958 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107777731 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106989165 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088692442 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105888789 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082758924 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107678156 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088834266 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108237707 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108162132 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087690134 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108789796 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080298837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107527686 seconds)
  done (took 2.610182251 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090651189 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105163558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092247623 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107438302 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08371 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108893307 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080517566 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105316543 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102938595 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086416008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105042707 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08896614 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104598757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086849077 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106313527 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084349962 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108214365 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102371763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08637338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100727874 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089089686 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103743103 seconds)
  done (took 2.968555799 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119308626 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125509576 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092097555 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230362858 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103729181 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131839768 seconds)
  done (took 1.64217562 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110093176 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120286969 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105866216 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107432934 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115723802 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086137654 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108721442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107927613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116597919 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102196475 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109794331 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117365083 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117279096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09711352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114870098 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114570726 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107063071 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088066662 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10605628 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128064781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087160857 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117721574 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107241618 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086894413 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10916523 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117819251 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117287689 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122178493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088591258 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117746188 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113656855 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087914042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117964266 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122069967 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108117056 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098395268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108680447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129403621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113530756 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097632039 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109920661 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114758525 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097710101 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114254238 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117791163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107617076 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09389573 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108662123 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107501623 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136029608 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094934228 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117891972 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116038996 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117518906 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098108785 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156168247 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103238875 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118145895 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114706299 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123436556 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117733891 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094520173 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116687154 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121743335 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114958466 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097043307 seconds)
  done (took 8.124958775 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102471867 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125911337 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107826839 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122346913 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097072444 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108279046 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107170326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087782959 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108516119 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106762436 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15111029 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089046364 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119136909 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117620857 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086913271 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108756992 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108451579 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116938183 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087340121 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135236871 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108454572 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116783253 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118140508 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097028615 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124056166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114086454 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108072656 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087899353 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108770872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10749998 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093825337 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108721136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117150048 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086125442 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117655593 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109394895 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086923024 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114460167 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10794225 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113728066 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098174309 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129997298 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109081367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107034335 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102316777 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108854603 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108326963 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087076352 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109525904 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106061113 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102390737 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123516299 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122403447 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117957713 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108196985 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08819362 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108487153 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108493753 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089124839 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115390424 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117456168 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087085734 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135488058 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109319237 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109011653 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118231027 seconds)
  done (took 8.019881928 seconds)
done (took 155.124711954 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215710251 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200168302 seconds)
  done (took 1.259223507 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098207893 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136111382 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095252799 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169855414 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105722577 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120057212 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138104765 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097553175 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107294587 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08614103 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106857236 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086953626 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173162393 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085154082 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107378132 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107017632 seconds)
  done (took 2.670724561 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118602355 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254451005 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124615936 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104597375 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090679471 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109698537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084481958 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112692474 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089637523 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107032215 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087854389 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107191334 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084443623 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107865685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108869404 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088798815 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105311552 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088670302 seconds)
  done (took 2.826625106 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112572546 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147033762 seconds)
  done (took 1.115748032 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241273073 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163440148 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230721963 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471128858 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.27488927 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.355182658 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.20341888 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.212111837 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16473907 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209850342 seconds)
  done (took 3.375561154 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119166712 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179761858 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316520976 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155261792 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106410403 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129901911 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156128943 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130561513 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122208191 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100978552 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12214898 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118781017 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137984331 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09402738 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115860505 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116674044 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120879717 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114741665 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114826191 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097496065 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137865544 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083228681 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115931958 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114250384 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096950637 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119792812 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105420674 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085741999 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11633739 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093735873 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113552124 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125202637 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117104076 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156075164 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122455899 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157132972 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117144235 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091891439 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114936395 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089577756 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12091886 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118372828 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123656202 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09864925 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105387635 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097721525 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106424434 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084381203 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115682461 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119013226 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094044317 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1142348 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155128059 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120354743 seconds)
  done (took 7.373630091 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792578406 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156330062 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089570687 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880053092 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136252249 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103484273 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77260413 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110443144 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25517858 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754673832 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135895117 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119291929 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202544983 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255840865 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922772311 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284490023 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.662035058 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122861069 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149809606 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152300501 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118315263 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135598806 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109411015 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42836206 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116785648 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110758894 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095799183 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119060575 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159418208 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124108165 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113099389 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176181944 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244679755 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203215537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093338162 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111799291 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10967694 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168601788 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26311707 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190230303 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180131746 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10944024 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108656697 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100810114 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132051602 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107302401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161597836 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172079844 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168984364 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114508572 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118658985 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096623108 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119891641 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161796072 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121770911 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311044835 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316282085 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088278838 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122360076 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125049873 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257954154 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101332467 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222417973 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138721767 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208863955 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089099089 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776768802 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16821775 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111810134 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094341408 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120272257 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115806597 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097498199 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167496779 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40665713 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123555583 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114011723 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088004111 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224703087 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122824842 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089848855 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159202208 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116635951 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119653134 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101833842 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121474151 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167505583 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250439457 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102884136 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118537061 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115563762 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122544214 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095940903 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20922701 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217916569 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18244987 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207278639 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118361053 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163668292 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16858699 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11892993 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172756775 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119112743 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099779764 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122540973 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214376272 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143999709 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122798747 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091857331 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118617942 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14781103 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126025407 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095069225 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191222154 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456157811 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188227964 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087295487 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126881922 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096396088 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181691878 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094694389 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260380665 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120871301 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168026863 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118460481 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086053193 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120532178 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161923475 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122504901 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120368 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099369334 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118481479 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231285848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215552861 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120971207 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218536706 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184092861 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11785279 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169232884 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121950227 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166005974 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119808413 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120796631 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094141715 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768210277 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12293924 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097066162 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115729944 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186306989 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10933731 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102634898 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125534443 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107622093 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79397332 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125970456 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120575621 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100728274 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117680159 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121334758 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094908925 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115368022 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159585457 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227109298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119723865 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117357421 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102442158 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18042795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094975695 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125381489 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123847705 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101865255 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121440583 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114492943 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101158085 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189422671 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163144508 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217635525 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572286144 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111078844 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123119706 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223548418 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089706006 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285844653 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11778304 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.220969082 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163118204 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097946536 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313241296 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184156464 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185084112 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10456146 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192675049 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087371736 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118704874 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162582271 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111012798 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093644217 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182863297 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101239431 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121743392 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963157608 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088826785 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247060863 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08701054 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190416453 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095533394 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120017904 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28317933 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089437924 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127392217 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161550332 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114503681 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123486239 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.848791521 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124929023 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119778976 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09645989 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218737258 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162261453 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119802179 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119803543 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096025744 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183986452 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207198434 seconds)
  done (took 43.789172943 seconds)
done (took 63.25839405 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277996861 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215623745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265541411 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170470955 seconds)
  done (took 1.881943231 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171439054 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14857593 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121381846 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107596079 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150785266 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084017 seconds)
  done (took 1.659134896 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360466042 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275143355 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241816545 seconds)
  done (took 1.758317426 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317400347 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252001709 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471924093 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323977234 seconds)
  done (took 2.342114206 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210314144 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132422113 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110175638 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103120846 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197695347 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245303823 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14163407 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200095789 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.119150162 seconds)
  done (took 2.383284596 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.174600822 seconds)
done (took 11.078826251 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.310738097 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.169880809 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.241030698 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.245362089 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.223308207 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.15501037 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.211566307 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092188039 seconds)
    (9/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.238338052 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122712129 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.202428754 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.157404482 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217098574 seconds)
    (14/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183065243 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09159409 seconds)
    (16/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.194916918 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.167424285 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.148214554 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124684557 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.214951187 seconds)
    (21/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09138833 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.198216252 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137152203 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.090249538 seconds)
    (25/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.194261049 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.148845501 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11896044 seconds)
    (28/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.124191659 seconds)
    (29/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117533495 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181788173 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099397775 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119300719 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170320667 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155440276 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118464253 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.233666689 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114968554 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.237630212 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111332625 seconds)
    (40/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.156880907 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194447854 seconds)
    (42/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.202759153 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093860781 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.185488756 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20854838 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07223807 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115464112 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110145049 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17033075 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114576826 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.149665687 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.184855127 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108401778 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091608612 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.176572449 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136985976 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157884903 seconds)
    (58/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100601417 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09170565 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.139769 seconds)
    (61/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196400154 seconds)
    (62/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112442847 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.089568473 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.221768161 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113598084 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.169238271 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.213954802 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.087325356 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121345356 seconds)
    (70/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.115668764 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129981878 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131070392 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.184563025 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.086543463 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.112528922 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096421101 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124245737 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152101974 seconds)
    (79/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.11561529 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.129560403 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.129892031 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089209158 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110541961 seconds)
    (84/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147247562 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137643068 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087108159 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195473026 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138952735 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172118192 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067792431 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.138187111 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06759052 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.134333196 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.160054909 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108650202 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119094618 seconds)
    (97/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093972842 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.1196532 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093566774 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109508196 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095176767 seconds)
    (102/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.173134236 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110511006 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094402849 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192509081 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065918317 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118023404 seconds)
    (108/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096673628 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113208287 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.133608414 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087674008 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108384625 seconds)
    (113/309) benchmarking ("sort", Bool, false)...
    done (took 0.179226472 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093923829 seconds)
    (115/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119863208 seconds)
    (116/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121811935 seconds)
    (117/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110697147 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.088619612 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212293698 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092092112 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12394573 seconds)
    (122/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092935466 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109573591 seconds)
    (124/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067353674 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.109606095 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118811305 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.402751314 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107926348 seconds)
    (129/309) benchmarking ("sort", Float32, false)...
    done (took 0.150130477 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.215902813 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089738395 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094198925 seconds)
    (133/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.099174688 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067594627 seconds)
    (135/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066774167 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.18034616 seconds)
    (137/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.135394973 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.162548576 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108043614 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093812111 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.117357947 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182864714 seconds)
    (143/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098646938 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.153482936 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067122107 seconds)
    (146/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116575538 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067864022 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065689322 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.180305982 seconds)
    (150/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065150145 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131508509 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.148158394 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087593209 seconds)
    (154/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.190837671 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18460466 seconds)
    (156/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.113375604 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115060133 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111920402 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086917114 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085877431 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142289106 seconds)
    (162/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219919864 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.132773997 seconds)
    (164/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083720932 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12990257 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089077914 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124587632 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214126689 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10728334 seconds)
    (170/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094006202 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116229388 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.09816989 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.089770385 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068573945 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148582561 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096541903 seconds)
    (177/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150490171 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065790927 seconds)
    (179/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12882902 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068702979 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132436437 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138784947 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.16148521 seconds)
    (184/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091175839 seconds)
    (185/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.08803693 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104772822 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067072955 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182056218 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112539822 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109189186 seconds)
    (191/309) benchmarking ("sort", Int8, false)...
    done (took 0.187339217 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066567184 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109227656 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.074927034 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.103717982 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.1004506 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065761648 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.090827828 seconds)
    (199/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091131472 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134591724 seconds)
    (201/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117478331 seconds)
    (202/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094562979 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107748818 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08709995 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107061839 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101179837 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115590697 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066213121 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123159458 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092652843 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11408405 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094175705 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.099309085 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066882775 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09023567 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089809232 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06643628 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107677787 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085183502 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120034888 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067036794 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163465053 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086228091 seconds)
    (224/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.099732877 seconds)
    (225/309) benchmarking ("sort", Float64, false)...
    done (took 0.147475393 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109688782 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120571463 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164264048 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133911956 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11449209 seconds)
    (231/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148712572 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.187913037 seconds)
    (233/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111358613 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087307963 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067618276 seconds)
    (236/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119476998 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114631012 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087050295 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114746432 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110029302 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109146372 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086234561 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109010015 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066727441 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066287735 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119046958 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135342127 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086820298 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11760256 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086857125 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111822365 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092898311 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214238903 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067894704 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.19041745 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18043982 seconds)
    (257/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06720326 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117374997 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089960776 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11902046 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109041434 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114622994 seconds)
    (263/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089173187 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067402593 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067362451 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090932024 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.1124712 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066663648 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.131675312 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065652144 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.19794861 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.090272477 seconds)
    (273/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094852652 seconds)
    (274/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107805284 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068686031 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089181477 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11322985 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112039359 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087782535 seconds)
    (280/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.116993112 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06750389 seconds)
    (282/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086840836 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.171083127 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100857488 seconds)
    (285/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076357624 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.135526193 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078312923 seconds)
    (288/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.090177871 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.091091233 seconds)
    (290/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075821187 seconds)
    (291/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089769786 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129561488 seconds)
    (293/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11927378 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089554274 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091021234 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087226718 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110483128 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088379104 seconds)
    (299/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115190199 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086878927 seconds)
    (301/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.090277596 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130582394 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109449082 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111013086 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223897302 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113878045 seconds)
    (307/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066334752 seconds)
    (308/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.099507736 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067838779 seconds)
  done (took 39.402501912 seconds)
done (took 40.28665424 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101049449 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145926301 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096005926 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136094835 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122724096 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092048451 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11912152 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098106002 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124022934 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124667166 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097891803 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092481534 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096371452 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120415696 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0961125 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139450917 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123754244 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093989116 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119317637 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085876785 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119244418 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086717123 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112987347 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069076829 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120732119 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093583134 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117557244 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118577824 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087448826 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108970655 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090672451 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116682666 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087543637 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12380225 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093248023 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118817578 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09667848 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12152744 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08778547 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111931888 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117154601 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087423069 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116302749 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095165402 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114888142 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092771496 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118517305 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099852483 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1390475 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11399086 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095423513 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120286562 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09671125 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117015601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091096648 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119449638 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091292775 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140291597 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120346506 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092318908 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120470198 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094254771 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118173712 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09453104 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120157127 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120371683 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098788408 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115696028 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097239727 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115379225 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086825661 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119614133 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089732711 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111323835 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095590119 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12312684 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084863368 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117711181 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11659168 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093637812 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10909608 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09013982 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112199362 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093292582 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111897825 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070526901 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113400073 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093595808 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108915021 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096446311 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115693245 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094091734 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112040525 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09877047 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109942851 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092750462 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111112385 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087533994 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11325643 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090692248 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11116117 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089195942 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120126404 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088871105 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117363696 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122588144 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087577338 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11666014 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087643883 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109645407 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102561943 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120712704 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08688249 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11563728 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085288838 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118808411 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085966814 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111455554 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085608493 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112075385 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09206057 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111045102 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089103269 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118429169 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124358351 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087480117 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.1138846 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089577162 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109623695 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092315734 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110798207 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087648042 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111901209 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077653342 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113093514 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087519 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117301296 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089679222 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119250045 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08861588 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11956107 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091740107 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117548504 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091978144 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109834312 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073564231 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117073306 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089109221 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112186133 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086613077 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113370446 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086639042 seconds)
done (took 16.905879947 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088204447 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184434199 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152237468 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141911346 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108121613 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112285961 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120399216 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119677169 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113538688 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142288092 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11065269 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131782756 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147255061 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086652941 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11132052 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090637705 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111985567 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102382858 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145982711 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132454174 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164639169 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086240776 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146247863 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135620706 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120192267 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105382472 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111927765 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092259329 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114292286 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1123158 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132974088 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090312761 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112587407 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132943996 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104484277 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119969043 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087120645 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119468722 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087020477 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112083371 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141467076 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133109855 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093717689 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116687423 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092446692 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113767602 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089617686 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120725038 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098650545 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118117048 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125627393 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156753026 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092401646 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121971152 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086986811 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123440664 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121093433 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090888221 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111736862 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090388118 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11042262 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091102647 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126945076 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142390353 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091918217 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12224013 seconds)
  done (took 8.602528041 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105607119 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138621683 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105561133 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130322242 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110693948 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08905765 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.129002916 seconds)
  done (took 1.75559924 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088920061 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133834755 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110653151 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136070377 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130859163 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108810126 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122128396 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087864084 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130418234 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088109054 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135565764 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151007649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089129556 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121856254 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137383114 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088629895 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136529675 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088689401 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115771678 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111877264 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116939853 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13404923 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090740872 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112756368 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102509562 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113743319 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161300675 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09400904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113728873 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092613261 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110989472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166284385 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104402251 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125319999 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087469706 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128093757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127381638 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087029072 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129099608 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093789511 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127575022 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088459356 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114552289 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086063537 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118148513 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122045872 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090311329 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113205055 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092958522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132508946 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090196889 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126237351 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088930347 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11826229 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090000594 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11973084 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12234945 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091104524 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134098425 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091307093 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130249193 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105061695 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128262245 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129065038 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091626083 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126830012 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102527421 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11586982 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090511711 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117795706 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128519962 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087109048 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114058864 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100120645 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114135419 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1128076 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137226813 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0897054 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124716414 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112018663 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090383042 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114003603 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112923938 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116656537 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089322924 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118539573 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091252933 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11146172 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087375223 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116900568 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086636859 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115684558 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090979766 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11480551 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115658493 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105957515 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11342842 seconds)
  done (took 11.765668899 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091088586 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113238715 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092227197 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112852878 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090595947 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114004518 seconds)
  done (took 1.571288018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114531906 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117202645 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103918804 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120858176 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155229527 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103495151 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129974094 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122761818 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107525716 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127552184 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128609392 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105074436 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13612824 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120592409 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105069635 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119850873 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10396701 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10090933 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12669639 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096436016 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136761709 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119796986 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096472544 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131743987 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11735923 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096038178 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125266336 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102238255 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127401342 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122618647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096200527 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116870359 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095949385 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123163915 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129070357 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095681883 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120176408 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118150703 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10070553 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117057443 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104609285 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122004252 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125389257 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094963963 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12290209 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120546212 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095692056 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125086498 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104120252 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118756529 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117520661 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096070807 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118125239 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093854726 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12197154 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123594827 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094195716 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129649913 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095308333 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121537694 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117184775 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094147771 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12312218 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117199858 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105921012 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118814228 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096175971 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120726868 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119709391 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096740217 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119465316 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093613968 seconds)
  done (took 9.187947921 seconds)
done (took 33.827599728 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.678989553 seconds)
  done (took 1.634458852 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.709149204 seconds)
  done (took 1.666281631 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.691840749 seconds)
  done (took 17.649863338 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500430525 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576250768 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.87424186 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178872742 seconds)
  done (took 3.085844143 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.93843472 seconds)
  done (took 1.913643318 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295864745 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256853839 seconds)
  done (took 1.516388154 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77143474 seconds)
  done (took 1.740921906 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.319363436 seconds)
  done (took 2.285152448 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329478378 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184521872 seconds)
  done (took 1.489318422 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547425708 seconds)
  done (took 1.522526757 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.721983695 seconds)
  done (took 7.701238362 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266546101 seconds)
  done (took 1.250997043 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300006865 seconds)
  done (took 1.277376315 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.433374655 seconds)
  done (took 4.410571454 seconds)
done (took 50.112167432 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099886542 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126111205 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102539776 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123073501 seconds)
  done (took 1.423831491 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101564121 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119525082 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099440051 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119800137 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124469892 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096614872 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122487139 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099888861 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119323043 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096393562 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121222714 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11789538 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098357481 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121763702 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093240452 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12294837 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098068059 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120471609 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123466944 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096581891 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117782779 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097408784 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124200125 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093677023 seconds)
  done (took 3.626990351 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100448915 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117398306 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096910077 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116240864 seconds)
  done (took 1.416362881 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100704316 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141682968 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136625506 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100223061 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141824798 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134983599 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093225207 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116170614 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094124051 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124967634 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090509499 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148504042 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13732512 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099088995 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127026384 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088062399 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116395353 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135846015 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099301872 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125243869 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094213351 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125026471 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089797147 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138759341 seconds)
  done (took 3.780781992 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171438896 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126671973 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137463836 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095772311 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158912536 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139098881 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08907347 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140645183 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087940675 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132083033 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116843456 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133117198 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128346516 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087557118 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113357248 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087889399 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128057219 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128033745 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091450049 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127083559 seconds)
  done (took 3.408279106 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097897805 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116550427 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08926991 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114898915 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099383313 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120431897 seconds)
  done (took 1.625483506 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090934314 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113584944 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091297013 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11266037 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093944913 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113320904 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088746371 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113871036 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089539465 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11369203 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089329056 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112807121 seconds)
  done (took 2.211210316 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.457275168 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092053684 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119523048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113220988 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096762784 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113670272 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102227476 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117539921 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139168974 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089223514 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113648018 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092184639 seconds)
  done (took 2.633457726 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237162043 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125110927 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291951348 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274936928 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160034178 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171196891 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277490049 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162999151 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224743808 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158296499 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207142637 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221703164 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149922989 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193986221 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137259569 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118896832 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226128287 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245108099 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152931587 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207309976 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225984358 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164594666 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178705879 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150105381 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112440943 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168100192 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12096872 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129907723 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210555521 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207245384 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190005726 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16196224 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146762698 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243506734 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249565451 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197370588 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283833565 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134276674 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168834692 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166836119 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266242978 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112420624 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237837394 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159467693 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130417412 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199402551 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168868543 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175611871 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150076353 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139405673 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223732331 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21572664 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.219528761 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111965971 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234594943 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159709879 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167309171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192061342 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250396945 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223667634 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180880364 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093356658 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211350895 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189853476 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184429078 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.193970018 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181924841 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145751476 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192617202 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1874635 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193756806 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189526645 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182597788 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138677056 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17093936 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174021427 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197902995 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232558309 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204221979 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095784907 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167101309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148793938 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132112471 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193235309 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0984709 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244089567 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149369812 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136418708 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240074028 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161460885 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161734214 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198254421 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219636949 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146165163 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083938048 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155170953 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153693305 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188918733 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13952564 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160191664 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160019385 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129076328 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177246614 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097028181 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202444283 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09148779 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178688662 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211070694 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.09992839 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160846097 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152635511 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149120577 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178761515 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19973698 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14118536 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132963036 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20791328 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201797119 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122989933 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205449722 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202223391 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142800152 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149393708 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198420173 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245979599 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138095831 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206205561 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153417165 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134447088 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106418298 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2059973 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156097892 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133504158 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13299546 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181203037 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238288184 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124526592 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111601965 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215622817 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107047662 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131749387 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159989561 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148625673 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137685457 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119774797 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151223995 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209101203 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181297976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153988601 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167100052 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151329332 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250408738 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1392355 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124121992 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147988139 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120574885 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195176347 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224527421 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104230723 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230624692 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173478723 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201100292 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195516758 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107800101 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175992345 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130306358 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092993254 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219605168 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16700425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162954803 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195201764 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223742965 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181743978 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180474656 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196797901 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176312354 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16428176 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159494813 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110768385 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160581188 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165813106 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123230753 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142284317 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132198932 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123725964 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143046481 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134048375 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198609409 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198501191 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189153489 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15906275 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149592041 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180227805 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127383116 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1785032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177180354 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146518374 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197297254 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220091057 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191277613 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141524732 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200731136 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120662297 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096841889 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142285117 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170791333 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133686073 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135574809 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166529751 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180383335 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184675565 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202032276 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208666101 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174396174 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216707633 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095364255 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168435954 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184689145 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176129727 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186173474 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140476691 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150485904 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176681845 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156132772 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255235455 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166602381 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177397638 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234238749 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12333029 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132635368 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151571189 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185618002 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154152373 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175455685 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146978026 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139721243 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16115572 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131528929 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161210726 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183562997 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161344117 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216968535 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123253167 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214685752 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099822424 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190683767 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131808316 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164148354 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108485574 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17612331 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229648579 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145921468 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169382608 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191970312 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130245361 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.302737933 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212428122 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222827859 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109431939 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157164307 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159959874 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162265284 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172062053 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176653917 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184740686 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1905044 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157663977 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109227067 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139328461 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149761409 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15200114 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105162198 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148253714 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.202529132 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111930788 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217060504 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161003306 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157336254 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172803514 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122351932 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143842887 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150738244 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243924786 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176579411 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238330961 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123174436 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177130527 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234430597 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124777818 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104013889 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132993918 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178275866 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135254581 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18983339 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186971831 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228172392 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178366245 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215504969 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111386689 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120631201 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155699269 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173908683 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204699085 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148901067 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157998049 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234996868 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140675488 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104215469 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170914561 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223978411 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119020533 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224252753 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079457268 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278077774 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12427475 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131354974 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162941938 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206907399 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136532769 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182043099 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173477468 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168660847 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163111452 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149781717 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191724963 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240043342 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200474074 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211515404 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104736831 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157594047 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17517601 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220071336 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155522412 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111710417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23198104 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194629804 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196735007 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14126551 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169023433 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168804498 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156741281 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214158451 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107033129 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232747078 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133394887 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191890329 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152518363 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14196536 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175142741 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187517824 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139113432 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213279018 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174537324 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133871568 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105504967 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16674684 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203327183 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154483265 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.0994805 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180767574 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124816251 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191402324 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259388456 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134008008 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153178308 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14565615 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107941575 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156972132 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15720147 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139279583 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163546504 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206760991 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133913497 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19067451 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23072179 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171125205 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173536507 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143847776 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691733978 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130277451 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194385904 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15446021 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231694048 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12311254 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198896254 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130522612 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166677421 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224660338 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159549001 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230352479 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191003524 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.203431485 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104719576 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157659255 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160421727 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143872841 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152831516 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169372404 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159075301 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152393957 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176628786 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166585332 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133755888 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140202342 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199544518 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155916771 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18649907 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178205698 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138572397 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171761245 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212669255 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10525117 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.206193356 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208166511 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142379459 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150072143 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132693187 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155656703 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232949906 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12498774 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198976712 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203611727 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15736109 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167188066 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145966119 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192986621 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156360988 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178127628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146399694 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15806893 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156959585 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138149792 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102220989 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155333368 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167610199 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150680636 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158129378 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164628569 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193547551 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12224707 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116787848 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221866012 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190172287 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242731747 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109252587 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13562886 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162053127 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151766653 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176901622 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177023504 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135306192 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135489861 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134905262 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130664609 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138318021 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126956307 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220155092 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165095266 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205850904 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137379131 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277446623 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138101749 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127186212 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116544233 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130472276 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12219687 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14617542 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156539602 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217098795 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261117517 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120555174 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132726548 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148614278 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097028928 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135817592 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16421108 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165246553 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174637534 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144948061 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080033058 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156822674 seconds)
  done (took 82.446606543 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162176511 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133536657 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146695225 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20077799 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176073468 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268893392 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208686974 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252976191 seconds)
  done (took 2.63029514 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093340245 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.143625528 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157206862 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131540266 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091159647 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118777576 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343249328 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132648672 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114011639 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12083597 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.170577646 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093746319 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.516472992 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.11617993 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118299555 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083527938 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115833375 seconds)
  done (took 3.729299384 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.472343302 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.700033786 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.498574677 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097051186 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.11289086 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112981907 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.606813056 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.192949411 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114679403 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.473950165 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771561538 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.155998813 seconds)
  done (took 18.386411047 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098859256 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120292398 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107254514 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135897645 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095365365 seconds)
  done (took 1.640421521 seconds)
done (took 129.932264514 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104019988 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40136737 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071222458 seconds)
  done (took 1.584851029 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107380589 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136645509 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109128633 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135054704 seconds)
  done (took 1.574902198 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097541411 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125675292 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108629776 seconds)
  done (took 1.414863245 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320106254 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189231308 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.162756661 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105603972 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128435577 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102435394 seconds)
  done (took 1.423171784 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097073274 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126458052 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09798729 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128156783 seconds)
  done (took 1.53670769 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095062562 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071102712 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101816898 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074351595 seconds)
  done (took 1.425554925 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114321714 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130630271 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103331143 seconds)
  done (took 1.435751407 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.1296432 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.136515627 seconds)
  done (took 1.353769905 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105086484 seconds)
  done (took 1.19069407 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118011758 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168362188 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188133949 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16410021 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226990691 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163613919 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140491386 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114921241 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129809304 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143404097 seconds)
  done (took 2.648361013 seconds)
done (took 17.44713773 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10319127 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518028212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412530297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115989983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721580495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380812228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032905253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144376896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164825465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092773601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13852323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671016549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025775215 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.472584665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986198494 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376468185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676056241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119132243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11839853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094289203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018053587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091577443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120370525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092146418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701476777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424320348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094918844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376604873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092283179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126085633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38312223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121606823 seconds)
  done (took 17.087361186 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095543642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173059625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098783259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13646881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122181427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094192942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123366924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093494227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17927594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121987558 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110545767 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119875861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125062232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094835963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140650522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092205024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124144815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093175772 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119731404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120282398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111446346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119498554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094705343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120436117 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093401664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134607935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121115159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093010341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119673805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098326883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12765677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094135425 seconds)
  done (took 4.793349745 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140052061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18175075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127795864 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12633787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168286573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123432665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198667836 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117543687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181830756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122175068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138254141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091779901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155697879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12143116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11491477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119741424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09698667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121386775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093103196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121996792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138150101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093355123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121539918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093337843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122928773 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107994604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122416798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120063362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093642901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126847358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099767497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122581703 seconds)
  done (took 5.120401432 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097040082 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125175922 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109255249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138477275 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095301449 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124765076 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096949597 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123676329 seconds)
  done (took 2.000863852 seconds)
done (took 30.088947419 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111246297 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127499381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106459693 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134211155 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102775468 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130950492 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091162136 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133781804 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138280029 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102840534 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136226842 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091663847 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122200003 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09169754 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134290927 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097019138 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131215738 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101731305 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132262588 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131137879 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094878746 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132186804 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102881037 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132391477 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104679711 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132927597 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135734731 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099936101 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122780106 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09367045 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123557199 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103413332 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122967815 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105780372 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.1266518 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097152286 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123079608 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093970399 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132602542 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131780988 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100805579 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132379136 seconds)
  done (took 5.980248625 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107830753 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138518387 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104527928 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080337236 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116471263 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080351194 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136658664 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078778818 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109268162 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10750726 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073605628 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105551901 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077816393 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099844543 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077336329 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074805744 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107759028 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075272772 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076008368 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10520148 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080540899 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072668621 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107178816 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078167774 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074491415 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109464577 seconds)
  done (took 3.553454047 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099636472 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134420346 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112663496 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182404317 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16025234 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098937444 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131788977 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138840064 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108569498 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11911442 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096413881 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149558915 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110872622 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128039677 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091394739 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136889804 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134145605 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093496942 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126777181 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113396459 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137612894 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101961845 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141554388 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131871967 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091905374 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122045891 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095899416 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134294762 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096932318 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129616892 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096063476 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12398325 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12163652 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103821289 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125191193 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093958284 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140810224 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102384004 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129774721 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092183213 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.124679928 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121060908 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114029293 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166429103 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091490933 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131531437 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127203898 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105157648 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120449368 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110829579 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130439659 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091532492 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124165464 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090998259 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121258284 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105651941 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123788219 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093640551 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130464754 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122887118 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104805648 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125210391 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107863869 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121028625 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099332 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119655352 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092515657 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119701582 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14202456 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093305303 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161822664 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092758461 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122645717 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101984928 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128264231 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127325747 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094222394 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135799884 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101864551 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12452902 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102597545 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12488623 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094667718 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13919096 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122520711 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094415699 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12282771 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099832316 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123637283 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101030175 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136176655 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092362012 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124199054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138433282 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092741566 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12173836 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099621566 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125620629 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091927218 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134391727 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098512122 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122234502 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130966693 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093374785 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124020423 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103819764 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126339532 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091780109 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126250572 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098665656 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121875076 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09295329 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124290564 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093715525 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130852205 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128161849 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097819315 seconds)
  done (took 14.739144556 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226824533 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213339258 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.233606607 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.259622945 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134964014 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113395379 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210875688 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153941985 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122702194 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159313369 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160464176 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178994275 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138629104 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179594494 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139014267 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120898376 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111628157 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163780629 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212392572 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.28667365 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112369039 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131041096 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160451599 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15941207 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105526045 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13157626 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.13796311 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105646962 seconds)
  done (took 5.678174504 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109022415 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154970258 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097510443 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144026697 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147307996 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091972766 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126533498 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093643606 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134384531 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134460251 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092484455 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128058447 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100650845 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131571987 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122755869 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103185608 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131037954 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094616125 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125724291 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096820245 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129082846 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101665692 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126687997 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119322333 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10353476 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119999509 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085971519 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140789785 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120805173 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116054647 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119496846 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09898481 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132156176 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093654494 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121633821 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094467187 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124414479 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095080363 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123179173 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091272695 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120926531 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076611253 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120607739 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1347385 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099559283 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078882522 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127414145 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127639511 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0947416 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118437958 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096826544 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123990048 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097502736 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128950381 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098598821 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123608836 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095222036 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114634008 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098953086 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124225588 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084396928 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119975547 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098359453 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116335638 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101473435 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127088013 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091986154 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124066089 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097185851 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129428247 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094953135 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125450995 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090929673 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124451104 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094869082 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126338966 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095938736 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121497299 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120487492 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093980268 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074967705 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122097661 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073507117 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12518746 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092217961 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12054722 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095826784 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128375651 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13594198 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094692482 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130654952 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093777744 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122400865 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096760931 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112103396 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0957987 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1375688 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140690351 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093756567 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120522391 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106948843 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124612429 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09243581 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10464933 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10061817 seconds)
  done (took 12.85955907 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127668578 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153296121 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094665869 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142985275 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154819033 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156441256 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101459218 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130157421 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09500361 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141277344 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09368076 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131280754 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096238972 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136962154 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155829904 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102127821 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125588347 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106639375 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131022717 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16939443 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111633227 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141754752 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107023128 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123322385 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128891522 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111080272 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161177301 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107235707 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135212395 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.1407171 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107868425 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160340291 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141338689 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09840249 seconds)
  done (took 5.451023748 seconds)
done (took 49.354538679 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208939299 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425518838 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188799235 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.105676622 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.219062747 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.195263094 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.219113349 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.187802788 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.616309661 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.186383757 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.425563053 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.757667064 seconds)
done (took 59.855451384 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.247424742 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.327507234 seconds)
    (2/2) benchmarking "String"...
    done (took 1.453417266 seconds)
  done (took 3.898688638 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.556842332 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.090774476 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448108066 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.187223549 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.203165548 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.498108307 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.744505602 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.477211121 seconds)
  done (took 27.767496466 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196884695 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.553121675 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.70457221 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.696927179 seconds)
  done (took 18.269292294 seconds)
done (took 59.856625486 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.171650998 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.250344436 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.193715975 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.168682028 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297745816 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213186644 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.516021702 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.226344118 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204322384 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.169666747 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.20828837 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.188943116 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.196233123 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.55381795 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199747806 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.186582571 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.243058302 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.737417487 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.567068763 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.188514801 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.203636964 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.221945515 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.186813482 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.187771909 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.200150951 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191166155 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193501237 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.188472375 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.34350214 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.186458314 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.27837359 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.75809567 seconds)
  done (took 189.940305268 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.184840151 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.053535633 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.163964083 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.204061995 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.617032239 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382155307 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.315169845 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.696323118 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201526571 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198425685 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.390206047 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.184440328 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.45106698 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.152645004 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.19136201 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.191574824 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.400653065 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.46787326 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.19946285 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.456822485 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.190196645 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.247992667 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.181856043 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.358546347 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.186930823 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.277187487 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209158934 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.210373284 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.376759726 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.328832541 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218519138 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.193877946 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.726567872 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.045117577 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.210113545 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.207007605 seconds)
  done (took 148.388463122 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.449853551 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182957006 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.182758248 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182390218 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.210359207 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.182937799 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.183172555 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.674469967 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.677984369 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.677005832 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.491144518 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.311518655 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.430373405 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187021198 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274643914 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.195644579 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.183456087 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.183993353 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.198953305 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.223506701 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188543261 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18462058 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.674838586 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.199270976 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.266370708 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.346649768 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.198792974 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21288008 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.572347908 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183485647 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212783338 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.501317517 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.228294903 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184118708 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.503431901 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.420721034 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29576665 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18666897 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212761197 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185312196 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.456789897 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185439023 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184820937 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.188658686 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.788661532 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.18735972 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.67735185 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188383287 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.082833159 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.18835856 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184885147 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.037996191 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.724142603 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.203198785 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.185608965 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.188095964 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18628736 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185244275 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.213341121 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.991636307 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.278219108 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.200536448 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.189069491 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213467472 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.185920831 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.22591016 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187231462 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.75962996 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.245938834 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.299449972 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.677773168 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190795737 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281190039 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303533859 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.185903648 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.186508636 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187614808 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186593455 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.186656379 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.294353282 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.187649638 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.560539855 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.349876947 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.202315144 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.292586606 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.28406991 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.18799689 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504016117 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.191226293 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.186437841 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.903403721 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284672248 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187329099 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187606177 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18729318 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.55994245 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.68176202 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.353315728 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191710047 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.744194906 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.191098743 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.187857471 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.576686532 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.672953016 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.801375605 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.191868719 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295630901 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.351257726 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.203791251 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.188728373 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.298866574 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193901613 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.247353361 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.189166705 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.582994145 seconds)
  done (took 363.011072491 seconds)
done (took 703.90898366 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.824296039 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.816719496 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.925938644 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.811971394 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.779827445 seconds)
  done (took 10.277701979 seconds)
done (took 11.396030683 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.360992915 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.35913212 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243756157 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.361695527 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215816366 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.376077481 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.339799659 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.209894914 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.283681642 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.263931964 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.284385978 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238711647 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215039639 seconds)
  done (took 17.872387488 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490117181 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490070631 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255257072 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.490828857 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231481261 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512268329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382754596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.401706703 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401578726 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221967193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205085829 seconds)
  done (took 16.204576145 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.492177332 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.495391975 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257835179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493379757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23140871 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.495907689 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384910802 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400086763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400581703 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222766173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20362712 seconds)
  done (took 16.198577294 seconds)
done (took 51.394272405 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.200111224 seconds)
  done (took 2.321739227 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23315615 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.389200017 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.214218596 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205673805 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.200925224 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201884646 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.205922332 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.200704603 seconds)
  done (took 10.973908938 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.199641714 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.197433531 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.199725589 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.196388515 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.200423527 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200807637 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.19679127 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.196936464 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.197796644 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197572657 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.196981671 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200004776 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.19873708 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200488782 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197907805 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.201167205 seconds)
  done (took 20.300659739 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.200473926 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198128769 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.198036803 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.199016405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.199023912 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.198552056 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199818757 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.198136953 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.198656298 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.198408388 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199976079 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.197972516 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.199804382 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.198613747 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.19934148 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199094005 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.199596541 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.199693575 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.203631321 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.199059961 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.19958658 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199442828 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.199541832 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.199796658 seconds)
  done (took 29.908875767 seconds)
done (took 64.625592338 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.132629775 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.751019189 seconds)
  done (took 9.007626895 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.200874663 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.202778101 seconds)
  done (took 3.528554741 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.202381907 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.201968713 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.200753258 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.2024389 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.201584667 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.201937154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.201259276 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.200958523 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.20183509 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202450966 seconds)
  done (took 13.142375869 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.202324104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.202825263 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.199202735 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.201987062 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20165454 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.199010453 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.20328212 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.20279752 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.202186977 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.200030096 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.202108028 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201292025 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.202703729 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.200296898 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.202767373 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.201925596 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.200409387 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.201401133 seconds)
  done (took 22.75381485 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.204304358 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.203310536 seconds)
  done (took 3.533400359 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.20139052 seconds)
    (2/7) benchmarking "second"...
    done (took 1.201167051 seconds)
    (3/7) benchmarking "month"...
    done (took 1.200609907 seconds)
    (4/7) benchmarking "year"...
    done (took 1.201342639 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.201247638 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.199927773 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.201584784 seconds)
  done (took 9.533879916 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.204396563 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.373831734 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.448177662 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.799795675 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.204986082 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.207007511 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.083901287 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.207764054 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.210223159 seconds)
  done (took 13.866283754 seconds)
done (took 76.488760382 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.183625601 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.212994569 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.265228321 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.208053583 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230135452 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.542173136 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.250747058 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.329383876 seconds)
done (took 37.34915245 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.21446587 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.913080924 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.906964748 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.212462215 seconds)
  done (took 11.159814952 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.179488753 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.062167183 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.193734412 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.157998796 seconds)
  done (took 17.72212296 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.145903444 seconds)
    (2/2) benchmarking "read"...
    done (took 1.537197406 seconds)
  done (took 4.810329532 seconds)
done (took 41.033378349 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206863492 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.205804384 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.20431738 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.206426814 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.203622047 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.203060089 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.207627131 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.206018074 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.206716599 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.206902134 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207293344 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204773976 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203960468 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203617752 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.206531777 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207095468 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.206209066 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.203749148 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204153485 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.204805615 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20520254 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207389906 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.204250863 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.204665658 seconds)
  done (took 30.06101572 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.207997041 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.205961356 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.207605506 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.20669792 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.205295257 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207215597 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.20846225 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.205000176 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.207784099 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208724303 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204682963 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.205011678 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207384274 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.205676722 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208124339 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.205649269 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208578026 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207038905 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207542094 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.205811782 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.207891921 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205305215 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20657651 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208030882 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.206446648 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205555562 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.208208657 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20661559 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208525504 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.207081613 seconds)
  done (took 37.336717732 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213338051 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216050452 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.207916545 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.209232209 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209273915 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.208682755 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.208806915 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209124417 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209373478 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.209428536 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.209411828 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.209173663 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209253752 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209683759 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.209536893 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.20942588 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209226114 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209159565 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.209839389 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210329993 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.208935801 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.209529611 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.210295763 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210446484 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.20998372 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.209587543 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.210369288 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210671585 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211166647 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.210847115 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.211299327 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.211025878 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.210589288 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.2103562 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.211065897 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211281662 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213801587 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.216622122 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.211143756 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211406623 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211255354 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.211911279 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.210484169 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.211731426 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.211857225 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.212687211 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.212007773 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.211885404 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.210795381 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.211467526 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.212200413 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.21153861 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.211606713 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212327569 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.212175952 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.211485351 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212501067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.21169253 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.211385531 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.212167204 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.21259382 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.212395763 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.213352596 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.211747022 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.213394127 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.212542525 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215577642 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.213540576 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.213295067 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.213254127 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.212504942 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213270068 seconds)
  done (took 88.342068227 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.213101669 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210177032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.211720491 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210660958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210525712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214036757 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.210523255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213772709 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21177894 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.212700339 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213859593 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211378751 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212207429 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214163588 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213162158 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.212389688 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214072701 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210867564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.214579657 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.214851763 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214657116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21157978 seconds)
  done (took 27.812608503 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214550486 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217348387 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.212075337 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214679201 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.211381485 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21478162 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214886731 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217119647 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21432806 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212155794 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212009584 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214590588 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213205048 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212208527 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211708476 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21380376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215646519 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213962429 seconds)
  done (took 22.987553091 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21428856 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21312631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.215205894 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212807279 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21376201 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216587118 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213868127 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217430429 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.21682297 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215155297 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.216809864 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216046905 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.217141325 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215009747 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216233987 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213726129 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217900629 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214666155 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217397546 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214822267 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214420315 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215585848 seconds)
  done (took 27.877285435 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21792556 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217387452 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.215297699 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.214458737 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214320775 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217031001 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.217102901 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.213648423 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.218041211 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.218555285 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216008426 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218213108 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.21686758 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216365858 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.214718531 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215009336 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217458051 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216103255 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218139745 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.214951306 seconds)
  done (took 25.467243879 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219318404 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218681811 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219508187 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220486749 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219114691 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.219586608 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219177226 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220262671 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220110742 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220444342 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.21902174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22026188 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220088454 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220550046 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22024137 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220105964 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219934578 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220112095 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220323294 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220412489 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.219906216 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221129701 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220256755 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222350242 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217932901 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218319433 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217893279 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217610753 seconds)
  done (took 35.29352361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217149168 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216930968 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.217548198 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.206876106 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.208312326 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.207429179 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.207951322 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.206834251 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209051774 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207606061 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.210215798 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.207493524 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2022958 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.202130035 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.202493261 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.201936786 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202449888 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.200264556 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200526717 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198367669 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.201863935 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200484097 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.200946231 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197848728 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198532774 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.201299987 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198947378 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200860966 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198050527 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.19585863 seconds)
  done (took 37.268284704 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.217280719 seconds)
    (2/2) benchmarking "in"...
    done (took 1.216348236 seconds)
  done (took 3.554415037 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.196541597 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198885557 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.196792562 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.192114595 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.192446076 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.195259002 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.195285558 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192704489 seconds)
  done (took 10.680119406 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.194379614 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.19520274 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.194554149 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.194036013 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.193803734 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.194761108 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199192337 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.213494371 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.196568177 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.195832418 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.201851103 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.201390162 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.196873996 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.195641647 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.19482426 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.197702524 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.19557636 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.196055848 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.196400578 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.193665071 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.193394761 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.196589947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195916643 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.191174575 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.19512398 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.204340184 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215597032 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.191809261 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190729902 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.195579686 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.191723107 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.18916597 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.192031087 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.191892097 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.192993403 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.192121763 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.197378089 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2059125 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.196259163 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207386518 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.19094819 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.188145538 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.189895822 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.190179952 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188247602 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.187828873 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.187521545 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.184115805 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.186504166 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.188770025 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.19017306 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188188857 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.181921705 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186043072 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.18468744 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19013011 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.201019873 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.187165313 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.191298947 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.193690282 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.21298732 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.205249258 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185376584 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.184024159 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.192595255 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.202831936 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.191045684 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.198997362 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.181597729 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.184219228 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.19015318 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.212468863 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.206670358 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.184148668 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185190878 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.185116834 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.184420062 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184114855 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.190580496 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.203751995 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.184565708 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.18523409 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193472737 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203033617 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.184060161 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.184388047 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.183619392 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.183819123 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.185860661 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.193838782 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.199957002 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.183899384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.182731732 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.185003306 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.18185264 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.182096981 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.180579325 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.18142288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.179497711 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.182421221 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182013783 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.18528031 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.18944073 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18083199 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179637119 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.187490397 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.197662159 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180189091 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.186920405 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.180682274 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181251091 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.180196079 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.183551781 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.176134757 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.180363975 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.185140268 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.178740468 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.179280221 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.179749882 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.179548443 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187290537 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.199766438 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.179428062 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.17905711 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.183266752 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.187758882 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.179224863 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.181036714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.17954212 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.177025738 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.176580683 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.180589866 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.179123896 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.17987869 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179913792 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180396484 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.177213415 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.179866554 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.178651857 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.180439004 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.181349748 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.180057868 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.181378245 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.181254627 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.181351283 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.181794734 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.186288207 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.197930312 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.18096866 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.181836336 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.178154167 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181157929 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.181133942 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.182069675 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.181208672 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180481268 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.181379698 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.180856802 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181876362 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.181248503 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181477309 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.182875605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183073759 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.180582862 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.185373549 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.181388194 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.178937018 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.18086119 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.181550389 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.181462723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.182294439 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.181010425 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.184123444 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.187519394 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.182772661 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.183538213 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.184418824 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.181911293 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182950402 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182121881 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184330997 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.188150075 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.181669156 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.188794239 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.199484854 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183082537 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.183339723 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.183029097 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.181996752 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.183426452 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.185316444 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.189254198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193699102 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.204354049 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.184449464 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.186275955 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.183909912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.186288754 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.186038836 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.182955969 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.183432724 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183452273 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.1826794 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183148795 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.185317218 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.184437785 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.183704015 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.183642259 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.183273785 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.183206835 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.185208175 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.184544211 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.185163343 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.181965547 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184814793 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183753983 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.183424567 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.182065176 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.18341487 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.184433155 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.184430892 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.184892397 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.191016847 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.182460158 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.185931301 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.186701309 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.185922138 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.184101635 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.185823757 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187579669 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.18536365 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191989722 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.202857325 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.186445578 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.191883112 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.202615408 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.18617459 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.188038651 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.186404427 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.183359936 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.188157354 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.192020431 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.186464539 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.185880247 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.185923605 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186422056 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186662963 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.192758518 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.201258185 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.186494764 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.187571046 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.187685248 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.184683537 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.187309277 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.18738607 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.187614636 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188909885 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187531614 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.186557753 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188783902 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.187659596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.186725983 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.188085356 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190361394 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.193303217 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.193108544 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.186546411 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.188924738 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.188759439 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.191654151 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.187217758 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.18776909 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.188487376 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.198988153 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.209730971 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193890932 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.206349594 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.189057328 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194648917 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.20668607 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.191941975 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18748192 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188823393 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.188517903 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.18793371 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.186024922 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188735151 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.18912761 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.188542858 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.188741482 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.190779846 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.188371051 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.188521741 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.187441686 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.187974495 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.190050265 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.18772911 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.188548367 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.188554282 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189923163 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.187683233 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.188907039 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.195149962 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20553083 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.189060553 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.188297262 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.187983542 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.187728998 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.188975208 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.188378482 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.191467899 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.194881783 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.190799239 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.197918335 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.190083461 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.197455797 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.188795946 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.191092454 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.194561997 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.187379211 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.188845608 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.189304873 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.188673303 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196574001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.206207529 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.18998438 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.192310804 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190119564 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.189794516 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.19002825 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.189906385 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.190812247 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.189910294 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.198182274 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.20708991 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.192818562 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191093636 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.187460338 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.189721884 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.19140329 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.189378491 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192296613 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.190682026 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.192376006 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.190451947 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.192140167 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.191575367 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.190629088 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.192848576 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.188100013 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.191576885 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.197765519 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.209620183 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.195032587 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.192007598 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.198171388 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209551653 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19870705 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.208894283 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.192613933 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.192049242 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.192104564 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.194142794 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.192651008 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.192194012 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.192010354 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.192932711 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.194913684 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.192188312 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.194213684 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.192239613 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.191849415 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.192589679 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200862225 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.212279718 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.193092932 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.196885879 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.190123829 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.192986912 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.196894704 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.192903637 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.192070298 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.194984597 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201332045 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200292967 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.194228885 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.193442644 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.194620835 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.194694537 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.194815151 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.194637452 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.193172678 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.194771568 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.194757188 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.19347635 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197108435 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.193797861 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.195581198 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19589118 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.195720859 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.204396567 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.213312535 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.19609488 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195307898 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.196902051 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.195153083 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.194942517 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.195770035 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.196194948 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.196040097 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.195384602 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20109031 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.201092195 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.197843339 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.19520549 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.196067048 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.195709169 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.195989084 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.195557969 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.19533779 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.196346528 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.197464239 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.195642814 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.197194535 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.195824387 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.196649477 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.196241175 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197039479 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198626542 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.201797772 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196633629 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.194533283 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.196412141 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197575367 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.196362407 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.196445719 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.203566255 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.216839423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.205231326 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.203381607 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.20065964 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.197410858 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198884748 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.204038387 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.196723156 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.197251558 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.197851926 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.197989 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.197326717 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.20031243 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197770878 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.204387322 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.216220549 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.197086214 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205289534 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.215291693 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.198032521 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.19914689 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.202068786 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.19817957 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.194772675 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.199545054 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.197364517 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205295593 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.216536198 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.198990624 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199672813 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.198617714 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.199933408 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.202366191 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.199426645 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.20000364 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.197982251 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.199514434 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.197963189 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199889281 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.196919452 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.198360799 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.200368192 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.201688769 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.205164061 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.197800751 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2016003 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.199963755 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.200667956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.200137123 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.20037963 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.197525663 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.197041495 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.198832174 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200148852 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.199953805 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.200801626 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.200133373 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.200961463 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.201009046 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19989972 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202356721 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.208354487 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.207282656 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.198741774 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.199944188 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.200539181 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.202115162 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.20034736 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.200780648 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201091646 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.202558338 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.2021899 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202159099 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.201894322 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.202417883 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.217441539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.219001876 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.201819378 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.201757668 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205310335 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.202093828 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.200488849 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.202809976 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.203438949 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.204077906 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.208226273 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.202414451 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208358301 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220504859 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.203470026 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.206048174 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.20529795 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.208248354 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.205157872 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.202701947 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.203410208 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.206980511 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.217814681 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.203471835 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21193187 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229478815 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.222805857 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.204379515 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.203555829 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203074794 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.203852167 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.20511254 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.204125946 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.204331234 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.203998857 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.203679184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.204428223 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.208409615 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.204937601 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.205888437 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.203357899 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.203499298 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.205705661 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.201875139 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.204299068 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.204827528 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.203477881 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.205171609 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.204555668 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.205039301 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.216498212 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.22897426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.205457498 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.205383759 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.203056715 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.208290792 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.206816149 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213590903 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.212326466 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.20555538 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.205892331 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.206646018 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.20555127 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.205126553 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.206567188 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.205590384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.206650406 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.204845218 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.218182086 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229451792 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.21074315 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.205030008 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206368158 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.20643734 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.207261693 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206536777 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206072859 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.207298355 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.2084838 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209383186 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.206629748 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.208176114 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.209422459 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.213332345 seconds)
  done (took 712.735050243 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205442437 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205015082 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204730285 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205756022 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204706361 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205124108 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205656446 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204877727 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.205387907 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205429685 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204531055 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204774464 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204853051 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205130533 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204583514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.204793076 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205651658 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205573684 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205898756 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205472989 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206285607 seconds)
  done (took 26.435047433 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.208748199 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.205706806 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206395395 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.208834973 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206565516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.20957606 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207798353 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209266507 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208825083 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206122766 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.209170444 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209315789 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.205851149 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.206552329 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206590226 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208619035 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.209658769 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206143254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.20967399 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207595377 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209977526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2079516 seconds)
  done (took 27.702009272 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.209191096 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.209884707 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.210074171 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.207787321 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.210545717 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.207835651 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.210205873 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.210688796 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.211247156 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.210764941 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.209616177 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.210951224 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.216072941 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.214550498 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.211530934 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.210564135 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.354623208 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.211186058 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.211225435 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.210973196 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.208505694 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.215179267 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.22736305 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.209361599 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.209715168 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.210945381 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.212335099 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.211514778 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.210814517 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.211687516 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.215217879 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.211535807 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.211518753 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.213726836 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.211968952 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.212765996 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.216459199 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.211591829 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.209043339 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.2118787 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.219537218 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.228968165 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.212777869 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.217392715 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.231330725 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.212233006 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.215055659 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.219164312 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.210038233 seconds)
  done (took 60.708732449 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212669435 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.212914497 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.210509209 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212519797 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.212613963 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.213398625 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.213633284 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.213913682 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.21085941 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.21053765 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.213334602 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.212052141 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.210759313 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.214128691 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.215477674 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.211100128 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211510585 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211354028 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.211142163 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211449696 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.211109766 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.215219558 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.214970834 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.212948634 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.214435784 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211235563 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.211612695 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.214420335 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.213241923 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.211845996 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.215618136 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.214775033 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.215408792 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.212710152 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212772328 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.214670814 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.215223299 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.212170264 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.215725788 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.213003688 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.215340215 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.215823536 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.215364237 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.215477385 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.213251906 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.213284434 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.212958925 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.21381697 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.213497429 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.216456134 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.215988358 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.213868589 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.216305393 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.213327697 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.21609259 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.217141418 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.214186605 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.213663606 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.215465926 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.213918391 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.213877117 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.216011716 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.21415485 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.215913584 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.216740215 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.21461994 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.214216599 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21719575 seconds)
  done (took 83.670063609 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.216164569 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.21597791 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215504299 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216197004 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216378157 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.217119082 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.217067852 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.21670112 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.217336915 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.217444523 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21723326 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.217493277 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.217733495 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.217510704 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216625133 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.217271324 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.217840688 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217237175 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217816792 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217369007 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.218245187 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.217517062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.218319136 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.21792663 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220158846 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.218280332 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.218720054 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218114717 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21784812 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.218465925 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218269009 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.219062598 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.218815953 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.218286858 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.219645923 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.218222394 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217949825 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217941219 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.219623088 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219501852 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.218987479 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219512297 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218784447 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.219972698 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219548769 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219359111 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.220012337 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.2206784 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.220664703 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.220106419 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.219118148 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220948426 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219169577 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220348321 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.220435643 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.220630149 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220096705 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220177668 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219151339 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.220355973 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221027105 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.221814775 seconds)
  done (took 76.688987367 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220947251 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220520033 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.219067628 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.217860231 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220605847 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218992468 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22072656 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.22096155 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221465274 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.220955099 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221580032 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219143828 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219322414 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221827631 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217293071 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21886845 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21860418 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219557546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221386069 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220249915 seconds)
  done (took 25.538991584 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.219138786 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.22287654 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.220743575 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22071609 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.222125788 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.220077761 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.222611844 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222131501 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220562262 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222338789 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222706304 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222499813 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219966274 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220489394 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223277628 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221728892 seconds)
  done (took 20.683841008 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.220708156 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.223223999 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.223310903 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.222343956 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.220573431 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.220417411 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.223547123 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.220375458 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.219706776 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.223526796 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.223743346 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.223362057 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.222881563 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.222127981 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.221037458 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.22281725 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.221003033 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.221059964 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.224397363 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.224049638 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.22299864 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.221684396 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.223834771 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.224051035 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.22211918 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222491586 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.222257931 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.222065535 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.222180953 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.225269284 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.222189547 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.22209701 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.222602479 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.222225006 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.225041263 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.222038923 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.226057651 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.225318827 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.225473952 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.225964873 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.224374238 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.222245943 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.22616245 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.224545592 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.222062909 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.225581633 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.223496935 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.222997591 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.22348327 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.222891994 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.225484696 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.225305045 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.225519756 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.226417654 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.226237028 seconds)
  done (took 68.421051329 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226110239 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226255661 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224030805 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226048585 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.226319292 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.223112705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226251042 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.225264549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224455693 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226743894 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22475296 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.228381564 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224022091 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227376169 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225448401 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227139003 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224886673 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.224848871 seconds)
  done (took 23.204501306 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2245178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22490138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.227914281 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224027536 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.224265528 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22746718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224408122 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.227937836 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227285977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22551258 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225140243 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.228396021 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22745928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.228786113 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226600975 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226225743 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.228586731 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228391328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226273356 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226162768 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229143472 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228771752 seconds)
  done (took 28.132788199 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.225745222 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.227426632 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.227279419 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.243209938 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.243653706 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.248478397 seconds)
  done (took 8.561696224 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232631463 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228266427 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2253171 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229502456 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229219456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227325919 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226886136 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226647394 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229006234 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227098411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226524732 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229721303 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230270144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227181027 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22983493 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230348325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227421446 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227607361 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227615194 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229125752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22878764 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22971927 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227487919 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227579165 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227381737 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228270039 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231176785 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228357301 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227740741 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229663574 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231116729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22985623 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230921792 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228529311 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232930302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23111402 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228698972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230834024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231925647 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229173596 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.232108549 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231509952 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230429125 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22818813 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231705189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228613587 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228854964 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229324848 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229598378 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232700083 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232452698 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229329298 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23233234 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232688122 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232688003 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232143584 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230106206 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229828643 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232587266 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230288836 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229475983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232941364 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230369174 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230587647 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232223138 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230634273 seconds)
  done (took 82.331222862 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230291886 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229956278 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231145363 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231617266 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229659714 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230306978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23155098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231189482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23076871 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231232724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233518292 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230840163 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230345763 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230981649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230886505 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230553421 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232455257 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231113809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231628195 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234680301 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231648102 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232267912 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230956234 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232157956 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232884981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234278569 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232721594 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231612056 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232001948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231741302 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232355824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232447119 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232560849 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230933327 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23256892 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232464827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233169724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232700765 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232807568 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235989084 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232904076 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235881189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23332711 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232078928 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233339941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232391827 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233614537 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232933941 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232722158 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23377583 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234023142 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233847457 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233854118 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233300329 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233431026 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233006861 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233006934 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233866202 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234254094 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235966367 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233712588 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233360495 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237646165 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234099979 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233169763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233551149 seconds)
  done (took 82.504268195 seconds)
done (took 1675.126242538 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.267337174 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.312597259 seconds)
  done (took 13.732087187 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.396011083 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.352395924 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.234467744 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.284567228 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.2345501 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.240324806 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.249622725 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.23529324 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.235538976 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.235456729 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.234977213 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.424220605 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.291580668 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.234875779 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.236014209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.329525028 seconds)
  done (took 41.604762604 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.258770342 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.245191757 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.349359657 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.260952928 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.26661925 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.419692488 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.294530863 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.247101974 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.402487404 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.284040989 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.706694634 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.267207998 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.244511934 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.284295421 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.260222984 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.41968119 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.472468054 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.711864601 seconds)
  done (took 28.550239879 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.662620428 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.266007805 seconds)
  done (took 9.08776501 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.256102488 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.285390324 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.275533667 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.245577126 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.238841335 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.242833438 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.282986397 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.280695218 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.280019549 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.267227248 seconds)
  done (took 63.81521792 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.262527311 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.245780389 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.246205029 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.244791709 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.237678324 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.238519178 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.245285165 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.244332178 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.617087678 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.365893142 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.245828277 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.254899209 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.264227583 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.246603639 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.243905234 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.279483271 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.395899231 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.244814337 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.243601576 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.252155999 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.247197688 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.345458105 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.28578179 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.244129171 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.361803434 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.630284161 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.254508212 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.254246149 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.378382197 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.245500082 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.245613692 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.246639478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.247880221 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.836272734 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.663344957 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.252960505 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.268813072 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.255252793 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.244355125 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.406898944 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.248304761 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.253624371 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.250756752 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.665951943 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.368604024 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.355411705 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.379065306 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.267890832 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.249453453 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.304845212 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.248756648 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.249049935 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.275484561 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.980081812 seconds)
  done (took 105.794907305 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.258333477 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.631917777 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.407006586 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.256920382 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.847402291 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.871257935 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.259568089 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.50932197 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.322325051 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243414911 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.577951139 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.723982253 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.260233948 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.259690931 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.893461226 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.308263519 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.241054699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.971981519 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.263069932 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.243441496 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718029135 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.248287592 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.257926872 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.40015696 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.279115373 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.67791457 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.542820873 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.666539817 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.262344134 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.24136377 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.686362378 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.262324883 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.248689113 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.242712704 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.494800778 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.581483543 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.574528645 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.257928208 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.280966378 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.243894887 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.281584948 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.671050666 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579200404 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.257790827 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.257664242 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.676402 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.257073729 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.246743629 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.243088185 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442501996 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.89899115 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.244648652 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.517886957 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.243500354 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.620670116 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.245271931 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.309390836 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.705320651 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.259203397 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.289765125 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.277396962 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.243913336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.2511197 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.246362817 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.244558689 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.569227173 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.384817061 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.249292728 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.566504232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.693901751 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.257181158 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.740573373 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.148893747 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.254199224 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.351895733 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.244031109 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.787990228 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.71085768 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.282191253 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.244910293 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.556161509 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.265095814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.554718646 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.259828926 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.245299948 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740431519 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.250363442 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.308682361 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.248254442 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.256987354 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.85277754 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.245707778 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.515892944 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.291457999 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.246260362 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.245899083 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.250648768 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.255610751 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.247016177 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.251569305 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.743549225 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.274567066 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.199535318 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.263794176 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246574022 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.260474278 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.247334658 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.245271242 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.460104848 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.626313151 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.270466952 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.246219351 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.245752128 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.251943825 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.41068511 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.251072897 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.530715345 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.263964508 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.24923904 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.250634526 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.904147777 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.275660988 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247811866 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.266261565 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.134136935 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.448314571 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.263244757 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.247684083 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.247969999 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.26342481 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.406278868 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.264443197 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.331064654 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.247999665 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930166188 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.291572111 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.264060418 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.5556975 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.248623294 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.041010535 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.269117615 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251230053 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.543682442 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.503350757 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.288063726 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.248541209 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.248441887 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898344142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.298542596 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.393222345 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266021799 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.336524195 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.444821207 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.631888265 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250292268 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.869575146 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.250548544 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460485198 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.252596476 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.555661925 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.71584069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27044951 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.258324093 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92751855 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.935857598 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.048321443 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.254081399 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.562474513 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.190147107 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.716397436 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.251100458 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.259702844 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.661978301 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.253377417 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.255833013 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.250730787 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.251753448 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398448585 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.42275634 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.580038188 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.25267803 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.678140308 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.27732637 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.251218578 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.273721441 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.252764763 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.599477186 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.310545294 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.257208345 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.293959018 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.250726567 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.255425169 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.699084989 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.19124239 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.257404919 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.402200331 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854764175 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.272061985 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.251691058 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.792409997 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.495936436 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.739745415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.278049507 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.538716903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.276896438 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.288307432 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.798956584 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.293678826 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701616877 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272467686 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.27139344 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815755393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.267900711 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.613315232 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.253149385 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.254427613 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77607237 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267473127 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.252199573 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.401930276 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270541831 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513449305 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.256062878 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.274784106 seconds)
  done (took 1089.768938674 seconds)
done (took 1353.505677634 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.254303277 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.254077317 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.241493669 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.257379336 seconds)
  done (took 26.183565981 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.260003401 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.256949987 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.258596072 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.256756858 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.260253931 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.257082624 seconds)
  done (took 8.722883068 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.300941851 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.250649251 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.25687377 seconds)
  done (took 18.981556527 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.446801855 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.503689591 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.590706033 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.377976306 seconds)
  done (took 10.092131305 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.255231552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.256120022 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.256400519 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.258894049 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.261519354 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.25974465 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.257634505 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.258778089 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.259325218 seconds)
  done (took 12.494984659 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.975374766 seconds)
done (took 82.625637414 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.837209242 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.478632199 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.535881254 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.47860394 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.246228405 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.334419671 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.248945987 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.490265095 seconds)
    (9/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.244409555 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.304418067 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.230831128 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.386607618 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.23699388 seconds)
    (14/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.248449714 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.29103112 seconds)
    (16/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.833151515 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.272604485 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.127174456 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.389049038 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.236623388 seconds)
    (21/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.314401905 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.775084485 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.250337624 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.403774108 seconds)
    (25/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.023108528 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.809070839 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.269574807 seconds)
    (28/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.608639827 seconds)
    (29/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.281039458 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.115520941 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.249899739 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.276856531 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.000113429 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.452710042 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.278816252 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.23376411 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.353534704 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.926329434 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.643320035 seconds)
    (40/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.467287642 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.240197146 seconds)
    (42/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.011074737 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.339473599 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.231817899 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.252420048 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.231994946 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.368475232 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.507741544 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.23426213 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.083697228 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.593164437 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.235388524 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.309205932 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.45120321 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.247678007 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353018463 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.198380356 seconds)
    (58/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.094185533 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.054532745 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.296344477 seconds)
    (61/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.266713049 seconds)
    (62/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.285771119 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.846852628 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.267422419 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.651121883 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.364069945 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.252929064 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.564447278 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.671076192 seconds)
    (70/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.372212271 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.163859353 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.633300772 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.263513711 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.301103775 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.421246157 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.374560952 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.942594422 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.348780817 seconds)
    (79/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.622975879 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.373721642 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.976564861 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.264725795 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.137659214 seconds)
    (84/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.471244865 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.508263825 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.252950395 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.271304108 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.301510219 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.437175227 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.240890708 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.093658064 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.253922779 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.638865191 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.361930427 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.336957255 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.364863941 seconds)
    (97/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.38087806 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.254651141 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.467834615 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.254386666 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.364844321 seconds)
    (102/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.256218451 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.339154798 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.281093887 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.253421505 seconds)
    (106/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.246039976 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.280544142 seconds)
    (108/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.279044635 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.318486388 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.637262012 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.08358675 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.259075844 seconds)
    (113/309) benchmarking ("sort", Bool, false)...
    done (took 1.767507648 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.292144734 seconds)
    (115/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.264272305 seconds)
    (116/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.391283131 seconds)
    (117/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.508442803 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.236279351 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.256797851 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.995293298 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.96398615 seconds)
    (122/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.53271938 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.270132985 seconds)
    (124/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.811948991 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.260385219 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.330311597 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.237014596 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.37856115 seconds)
    (129/309) benchmarking ("sort", Float32, false)...
    done (took 5.241418294 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.271344695 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.2492691 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.358228846 seconds)
    (133/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.510229382 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.441874818 seconds)
    (135/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279065135 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.242673633 seconds)
    (137/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.434553416 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.236878477 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.987333612 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.282318233 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.281788328 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.274462396 seconds)
    (143/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.265846775 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.325013686 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.238418981 seconds)
    (146/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.281443969 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.238154864 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.522223724 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.652246916 seconds)
    (150/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.261240721 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.657243964 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.266145115 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.320192636 seconds)
    (154/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.240479327 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.240049351 seconds)
    (156/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.450686923 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.290023887 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.339604114 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.968049454 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.333228995 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.270381979 seconds)
    (162/309) benchmarking ("sort", BigInt, false)...
    done (took 6.258789749 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.314451389 seconds)
    (164/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.780825606 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.566189761 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.343473158 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.568571481 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.25839145 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.601855639 seconds)
    (170/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.300033693 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.285014229 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.258406443 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.242299568 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.25112098 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.022186596 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.300761467 seconds)
    (177/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.243507327 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.040558673 seconds)
    (179/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.081897122 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.256126718 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.11824969 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.857080406 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.241632898 seconds)
    (184/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.262780796 seconds)
    (185/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.394160265 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.827283679 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.696653114 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.074301263 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.258885714 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.33657122 seconds)
    (191/309) benchmarking ("sort", Int8, false)...
    done (took 4.272868417 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.950376604 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.9989287 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.602044166 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.276522522 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.373302541 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.241545496 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.643686959 seconds)
    (199/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.619620458 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.266917906 seconds)
    (201/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.88426075 seconds)
    (202/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.469462385 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.790781959 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.657357764 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.161523155 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.40740494 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.286378837 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.193470591 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.58433713 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.692374845 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.289506595 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.287122588 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.254254683 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.617527787 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.307148944 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.665683276 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.242313573 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.871228117 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.301777856 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.093246066 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.242388358 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.2874244 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.284945439 seconds)
    (224/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.986473122 seconds)
    (225/309) benchmarking ("sort", Float64, false)...
    done (took 5.514796437 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.878370125 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.274866727 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.260562536 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.278410106 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.288845243 seconds)
    (231/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.243310673 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.360187844 seconds)
    (233/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.288410267 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.607358816 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.257857954 seconds)
    (236/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.318576762 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.982688747 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.990302964 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.288941148 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.619075886 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.291122343 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.157518141 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.710005021 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.597566571 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.242682947 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.29237929 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.443755239 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.480400652 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.287188025 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.663060797 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.362513574 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.348735248 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.368825487 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.2595863 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.299432223 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.264828591 seconds)
    (257/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.485070405 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.307843448 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.327483695 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.646791769 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.605935803 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.094868316 seconds)
    (263/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.951149958 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.452708606 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.779913751 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.244968012 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.310483308 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.867608683 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.309928672 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.461772814 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.279836159 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.850410359 seconds)
    (273/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.361389011 seconds)
    (274/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.347720463 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.780919287 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.266224112 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.408508238 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.284412699 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.265491487 seconds)
    (280/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.107688264 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.246075554 seconds)
    (282/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.314033113 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.356331458 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.246521652 seconds)
    (285/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.603667359 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.706595692 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.634556679 seconds)
    (288/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.321888224 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.246638389 seconds)
    (290/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.64221544 seconds)
    (291/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.813870659 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.289923365 seconds)
    (293/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.277462658 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.330028485 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.056318229 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.271990604 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.53499813 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.402139836 seconds)
    (299/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.288881729 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.889683593 seconds)
    (301/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.851506087 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.340715922 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.150907492 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.727282685 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.267503207 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.390339193 seconds)
    (307/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.081508734 seconds)
    (308/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.624596926 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.248340649 seconds)
  done (took 1006.945657025 seconds)
done (took 1008.117063985 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.300087218 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294856944 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.277163095 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.298548446 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.38923819 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.304700171 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.289052702 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.281211317 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.326762743 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.327530681 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.278480134 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.304461674 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.279945672 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.280167773 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.279603565 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293523464 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.265487799 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.278989063 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.294804156 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.289591868 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.295391282 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.278146555 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.33013119 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.305935358 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.283157838 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.282529557 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.282305525 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.299806263 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.391874323 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.283436293 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.283696488 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.290759611 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.261411777 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.278045633 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.276411367 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.299363345 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.291602355 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.290419981 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.283914966 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.311184882 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.643859129 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.295943065 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.281441461 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.281423365 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.280696959 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.285363486 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.282220479 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.286864192 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.294576516 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295566362 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.631373578 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.31189226 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.284367888 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.281943115 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.293196071 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.280913976 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.284872906 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298943581 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.301571991 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.299449151 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.249923612 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.285735084 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.284753245 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.298091121 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.28907176 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.670898351 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.29376612 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.28722527 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.646114903 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.304578241 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.671117649 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.307622038 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.283465212 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.295698004 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.314474434 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.265538605 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.278199679 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.282034026 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.290311049 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.2810657 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.293708294 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296027276 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.288822353 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.283707084 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.299301646 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.309355011 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.293797773 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.284612803 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.293726114 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.302601451 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.291210138 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.294578232 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.287497799 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.279159715 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.293663793 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.288303111 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.286956547 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.286529109 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.288537556 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.295728948 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.646961776 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318598128 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.282759352 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.281010702 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.284079421 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.296981527 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.648321102 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.301612245 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.307471222 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.332074512 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.285851749 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.254487386 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.287560021 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302061453 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.294600011 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.288837304 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.281522663 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.25629122 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.640029248 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.315733533 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.288103528 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.283786097 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303295996 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.287695379 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.283248195 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.270807952 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.286701963 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.300799861 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.407229055 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.297754978 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.316876308 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.283583062 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.288893689 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.313770983 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303717747 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.317299294 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.289611092 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3028397 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.301917238 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.284617511 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.297669979 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.298132113 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.28881742 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.292726364 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.28161009 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.31469048 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.299790663 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300592631 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.308728764 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.407231816 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.285253837 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.260418883 seconds)
done (took 216.798461015 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.344510792 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.278666193 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.370548424 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.283582099 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.381218892 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.381767642 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.282016063 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.281901989 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.281490964 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.66086811 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.28154717 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.281677321 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.283950237 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.281720305 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.366970066 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.284617313 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.281381317 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.624517107 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.28567234 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.354280351 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.279859152 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.282391601 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.283458067 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.668866796 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.279614538 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.279894363 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.355555344 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.285166626 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.633049646 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.276987365 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.27787857 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.632361842 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.374809944 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.311549859 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.294348673 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.283126883 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.383501821 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.311592037 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.365407951 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.366263128 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.371478324 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.315233493 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.27891114 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.280864199 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.287482422 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.28824611 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.284867279 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.313301678 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.278373661 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.293143962 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.678893839 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.296733546 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.285121912 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.28481118 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.285348048 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.315751315 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.285198038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.285890255 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.376687341 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.287459336 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.347372128 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.671255348 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.664541058 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.287510672 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.28550665 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.286083072 seconds)
  done (took 145.215144744 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.351661886 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.360089448 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.396215762 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.302931768 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.335985499 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.401193035 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.303489658 seconds)
  done (took 10.65219628 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.293564123 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.288610285 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336767702 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.337442055 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.288517493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.43550869 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.288351816 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.299430929 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.286496354 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.34071234 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.290773685 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.288821275 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.295346969 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.282256796 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.337449261 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.299803624 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.40381493 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.290000951 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.290474837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.445423177 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28741569 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.296765115 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.341151824 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.3001146 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.29064769 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.295148573 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.858810289 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.290664217 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287280089 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.29094301 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287186724 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.327224662 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.290442216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.28544653 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28896605 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405079374 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.29101961 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288385656 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.291564297 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.289346984 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.29085917 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.291596519 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.290539735 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.287951173 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.290638446 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.312298985 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.291432605 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.290145334 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.29032426 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.292691362 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.342696195 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.290851626 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.289597149 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.289088123 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.345726996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.298820217 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.291278772 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.288663692 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.291474855 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288770003 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.446985122 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339292811 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.291498523 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338678922 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.292815518 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.291901523 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.292151923 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.292157238 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345473284 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.29290893 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339546927 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.290430217 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.445731426 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.315964829 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.294165578 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.294810712 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.294489393 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.292848384 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.292343035 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.297824465 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.2912484 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.293579364 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.298501173 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291296472 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.290543603 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.395471192 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400716756 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.290669627 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.305570899 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.300372714 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.291079457 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.345452402 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.293019875 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.29144766 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344083795 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.407540104 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.346339784 seconds)
  done (took 149.012536126 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.298006829 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.301321824 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.295633342 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.311081197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.293353227 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.292728402 seconds)
  done (took 8.998767508 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.296503584 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.296024938 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.295235436 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.295632477 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.29437299 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.295209947 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.294976147 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.295565679 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.297805787 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.294978921 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.296522586 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.295960411 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.296572719 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.295136661 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.29486675 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.295348235 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.294152767 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.29299594 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.294562544 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295330429 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.39804126 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.295553733 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.294266461 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.296459821 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.299676787 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.295567278 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.303546853 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.2975103 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.296130781 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.300327694 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.314263097 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.297793134 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.297641898 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.300275277 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.299800838 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.296217492 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.299429074 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.297454141 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.294448597 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.296886577 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.298804259 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.296173599 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.297341774 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.297484228 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.298014235 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.300481043 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.301837819 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.305512168 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.297022488 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.298068342 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.299049237 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.297998854 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.297947105 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.298963482 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.300223883 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317353764 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.301953986 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.298306418 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.297865301 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.298723785 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.298859019 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.298509817 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.299117203 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.302102023 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.296715984 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.300171551 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.300532669 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.303143613 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298639745 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.298625948 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.299897327 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.296667614 seconds)
  done (took 95.781548762 seconds)
done (took 410.856100109 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.588975965 seconds)
  done (took 7.800978318 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.304441558 seconds)
  done (took 7.5172843 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.046838504 seconds)
  done (took 21.262394944 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.370734511 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.409142505 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.293279043 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.293548979 seconds)
  done (took 26.578866271 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.420545464 seconds)
  done (took 7.633005182 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.295878261 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.292985081 seconds)
  done (took 13.802756338 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.639650198 seconds)
  done (took 7.851813469 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.382470938 seconds)
  done (took 7.59661983 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.32048308 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.308775899 seconds)
  done (took 14.097466009 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.273972418 seconds)
  done (took 7.48721005 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.030801826 seconds)
  done (took 8.246223031 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.298234235 seconds)
  done (took 7.513390415 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.376977292 seconds)
  done (took 7.590207256 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.046270051 seconds)
  done (took 9.260004932 seconds)
done (took 155.449116954 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.295001118 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.294441937 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.294348509 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.295207857 seconds)
  done (took 26.39273025 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.336371551 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.336141494 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.338157314 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.7540077 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.338106565 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.336107779 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.328659109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.329264628 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.347061115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.33878173 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.337839012 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.339134908 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.335706899 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.328173865 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.338800855 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.338034924 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.347610906 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.33821444 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.328688413 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.339881599 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.303881877 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.347909661 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.338464712 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.303974081 seconds)
  done (took 33.663844924 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.824340244 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.374745389 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.456076477 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.355228133 seconds)
  done (took 7.226063825 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.355597978 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.357089482 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.368251104 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.40751558 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.433067948 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.366701341 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.330103152 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.325860329 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.311337886 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.357770793 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.433126464 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.372832544 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.440635544 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.304504859 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.489659951 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.304601164 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.305296825 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.356599169 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.408727425 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.432992745 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.305864829 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.355492143 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.360231188 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.374417709 seconds)
  done (took 34.074815028 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.305578817 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.322617708 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.30450132 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.303797206 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.312530746 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.304461487 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.304049473 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.306342637 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.304777462 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.310521664 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.303964436 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.317297221 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.30534389 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.306856306 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.311989198 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.305997724 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.31060238 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.304278459 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.305830483 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.312014086 seconds)
  done (took 27.381673567 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.298556276 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.154617555 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.650901266 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.555335067 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.299470363 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.299040582 seconds)
  done (took 27.476309372 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.372351401 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.514965416 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.304995361 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.648999397 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.739357635 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.321646702 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.308805393 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.536313431 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.841794815 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.830752146 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.363396988 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.370965095 seconds)
  done (took 19.37478918 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.311092348 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.300447918 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.305642248 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.334483458 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.359307558 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.324195595 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.313059235 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.300394021 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.363527002 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377896006 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.324221881 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.358691616 seconds)
  done (took 37.193557974 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389307598 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346200508 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.169692592 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312365709 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.022364378 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512860174 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35957921 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.733438823 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.307624362 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577118421 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302391173 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392296783 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557943902 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312662584 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30278576 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.271329645 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545036903 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755626889 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305732323 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.197609802 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328481982 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305591346 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.356594531 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.331428218 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513999541 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.280514888 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.564168932 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.08099975 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583542679 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314976498 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314783515 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303889885 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577880678 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949748861 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417594805 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314414252 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314759453 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.848883927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.294011992 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.275029853 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.145224152 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308366702 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315929924 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305195189 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.239220529 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304586626 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735676083 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.311536969 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.016484498 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.304169713 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315863215 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399296621 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.308732688 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.296882699 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304892047 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.311672742 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.303729031 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330756027 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897072018 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674521654 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314537121 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.239587634 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314132327 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.204737232 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923338758 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.424244676 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.309698195 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309262599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241227995 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.260444043 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322036712 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453563451 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.329712423 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956628696 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990843162 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324075229 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237136703 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825835205 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309237834 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.256753756 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534071398 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.081685694 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241649951 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.254579582 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.240899214 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977831058 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316412509 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.640912923 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327474099 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.758003851 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.318738754 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326938054 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331034544 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.530876185 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.189395048 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307431687 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.184872361 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453296172 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329102753 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.734313207 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242004663 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.312458037 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563594271 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.519815387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323416091 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.278903566 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522111026 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323435334 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.327737403 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31996236 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323405329 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.865844941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336119779 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.669183734 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327108766 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.084103615 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999793185 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324481212 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.411727998 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.308296051 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562428021 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.021777158 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191521698 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376970459 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311814052 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.310306874 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.297773403 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161086451 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.191775973 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.307695419 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311510745 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.325983131 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.310613085 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258279188 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.310363141 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323297492 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.08766487 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534219666 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309599959 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588582674 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247043629 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458042912 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318679872 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.532947666 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.48930907 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.327711892 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571021644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319272227 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328124187 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329143421 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330175825 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407386892 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333729821 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.320396107 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570921362 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.315450392 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.315079554 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.320015919 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.090842816 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315091183 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.318365923 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316477456 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877365605 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306075108 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313223024 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200894078 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.326185022 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380238734 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31826396 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.322088078 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.086364623 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340195546 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.319287542 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.311068611 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54929553 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323858133 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.318044692 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393530464 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.508790006 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877388556 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34302748 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.247615623 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.02356832 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.00614532 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31418028 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.502768527 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314386329 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323969544 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324742614 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314248655 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875760189 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332411994 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.247806809 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.320277671 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324007965 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.319957951 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314927449 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.07204219 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.718876448 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315974165 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.331153332 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457588921 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.328720792 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248831467 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.831831955 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319964725 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315202448 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.093185035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349524081 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.241282504 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782690714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575974702 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31961004 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328205277 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.412523976 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.347919217 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.316186517 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227382715 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33598329 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.320170222 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34002101 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.327322626 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.334477997 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.754820194 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884383897 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01281828 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856666812 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239729973 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.331568091 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.215498327 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.748410781 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251047794 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973467049 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496993082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.772219589 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261281228 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511584707 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.494550055 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079901878 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326610413 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545732937 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217773648 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.235783798 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34723311 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528020092 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351462566 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316102004 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250334622 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.598049785 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55196344 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.203532455 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396662316 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748839469 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.238265494 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.112687146 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.337821605 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.594838447 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501659267 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.861634183 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.704227726 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319753002 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330127998 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785796468 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326676924 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.843215627 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926004207 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348858176 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.519553922 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254744983 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.329709044 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.329448329 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.314588595 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.573967981 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.320597417 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.57340074 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329602276 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252161578 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319384462 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836317774 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.1904653 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.325714522 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319948613 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020838728 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320902808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595232985 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.335273373 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.07061259 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333891611 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248254311 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248593561 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.006991749 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.316039613 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29026592 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782769824 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.317606747 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340958127 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323654377 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18209471 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571673997 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.330136725 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.8806015 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56390167 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322293606 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346442611 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.416698038 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.244194379 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.323944111 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.209952183 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552194748 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318479524 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549477162 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.204783468 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.21763268 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385977007 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5286869 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.2142016 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317675606 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560285575 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.045830668 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.336803549 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011395023 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362822149 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324265361 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3331405 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329657619 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340766089 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407275742 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327940943 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.329692509 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.328167941 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483189103 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323638045 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327189336 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.333299299 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411768729 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.698541792 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.080002079 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.093024386 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889122266 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057619706 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908494824 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355110732 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.319038285 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329764046 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253191712 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468868403 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.844765048 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592206869 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448828862 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.322618215 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345490164 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264243076 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355159333 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535697861 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595193422 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.190342965 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322221077 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979942508 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.478739553 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330689558 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.531128025 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79428493 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857698263 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42891378 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334280615 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752548016 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595942495 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409974309 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319812835 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911841521 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.324278564 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.616128601 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.34397879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321795428 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475660296 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331410312 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975211041 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.34927231 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.480510568 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.094063742 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.332534379 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580951679 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.772770037 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.332609254 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891588402 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024978187 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591900961 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391281146 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332600161 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.427377004 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468059563 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.326820829 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218832687 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32335509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166126581 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.031667812 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.332829059 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893020777 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605688252 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.320114012 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.32794018 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346236491 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.333084346 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.547171788 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990403661 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546734217 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332755861 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325142117 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.893516354 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894752098 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356406816 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258021269 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.326766649 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556460608 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577238213 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349202783 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.777223847 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.035374913 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846620462 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.29473215 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34558904 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323904731 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.009533212 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899325684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.104926856 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798169431 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.982740868 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330673019 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603938532 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.330992442 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.329360764 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606926079 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.328168606 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.334670868 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341546638 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.895345679 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101733442 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.331573133 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.279389617 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.269323241 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.55250791 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333540785 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26994833 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325534909 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.497087654 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326926785 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455454944 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338158015 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.32953988 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334240205 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.064769692 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601066939 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.331954875 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.313672243 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.30957113 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337258239 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353976929 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582603601 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333278326 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.000274157 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.677087908 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582046549 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.326257964 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.310926674 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.331720514 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326506516 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045453145 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296841146 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339780191 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87642505 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.340269823 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.340918369 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331176785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.543575931 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539110892 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334038046 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347048648 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339327825 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349868021 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.227817036 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094413037 seconds)
  done (took 1628.112278907 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.354591439 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.356401247 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.328101445 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.34412478 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.339340562 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.377693789 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.354920055 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.364532636 seconds)
  done (took 52.06534618 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.340914116 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.483986769 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.357664345 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.329794327 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.337981448 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.335867271 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.771791147 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.343898408 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.337676565 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.338828077 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.328935167 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.33824492 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.957042693 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.338494051 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.334687951 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.326570134 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.340008896 seconds)
  done (took 65.18874134 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.343017581 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.836926641 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.417040684 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.332126872 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.29238874 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.35925351 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.016543753 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.332360401 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.330195289 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.60872627 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.996702096 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.346730003 seconds)
  done (took 84.459677805 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.33752942 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.337445686 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.338155179 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.338101408 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.337921932 seconds)
  done (took 7.937086913 seconds)
done (took 2051.760928756 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.575918392 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.985544602 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.973692708 seconds)
  done (took 5.20658504 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.480929347 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.533068099 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.649400429 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.65500074 seconds)
  done (took 7.569372054 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.613273585 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.716388768 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.529139934 seconds)
  done (took 6.110077469 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.691965428 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.363844055 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.339329142 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.333878168 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.338722619 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.336362886 seconds)
  done (took 20.26186445 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.338373193 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.340870396 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.339686156 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.342384965 seconds)
  done (took 6.611584847 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.316125587 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.01853451 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.315163212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.336696718 seconds)
  done (took 18.237841378 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.085311722 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.097476224 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.082554384 seconds)
  done (took 7.516947342 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.33910623 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.179515381 seconds)
  done (took 9.769497342 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.619911175 seconds)
  done (took 2.871363896 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.470658963 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.66410561 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.343967327 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.25718825 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.374403634 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.022598299 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.918848926 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.521484854 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.222843397 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.44645308 seconds)
  done (took 27.495782894 seconds)
done (took 129.867561237 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.080249297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.712434482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.542743018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.049500139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.557058856 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.543246071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.544095222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.015692307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.561356025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.549920522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.095673748 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.558576267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.496180127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.708181167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.493790013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.581912009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.55753605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.116900698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.733994795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.938255364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.547297787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.688679857 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.921188076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.71108102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.561933173 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.495918973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.267657318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.578387197 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.906173299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.290331471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.494482876 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.108237171 seconds)
  done (took 191.263195048 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.338243584 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.353459429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.339298356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.367460314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.337821641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.354119536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.352854023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.357937228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.341990892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.351824976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.337637891 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.362375019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.339619765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.355581088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.33838733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.338807473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.35325384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.365884434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.348592277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.338310006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.338993266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.364755878 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.340473348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.346232613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.33900988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.354463626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.356315203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.360513422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.339688886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.339388021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.340465346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.342042231 seconds)
  done (took 204.391130459 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.345510451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340275005 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.357725119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.340162919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.339880614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.341871934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.342748614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.340720365 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.353991975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.339892176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.357184245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.355938021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.358612296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.344287391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.341387239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.340778198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.356078435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.340898738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.341409207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.35688421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.344267359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.34054033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.340722416 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.36495338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.342229236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.341355227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.341378165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.351857053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.354156301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.355963474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.341456178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.340264826 seconds)
  done (took 204.35338927 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.537910498 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.34953714 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.349566371 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.283108088 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.349617999 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.349346878 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.34460901 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.546001128 seconds)
  done (took 14.367690345 seconds)
done (took 615.626308038 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.5613638 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.287357296 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.546393183 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.370030829 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.089584918 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.389542679 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.371077648 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.534310161 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.249101404 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.540662688 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.588223071 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.384519956 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.726285989 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.368932332 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.616104793 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.467778366 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.204425342 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.327294345 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.677273857 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.861720159 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.632195075 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.807038892 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.551842881 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.249856387 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.745646588 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.80606577 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.035847669 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.195954416 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.386198411 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.680945189 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.908439966 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.296409077 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.428151187 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.427313841 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.483631741 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.463704506 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.255148953 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.425228474 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.56786398 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.582724116 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.873502502 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.076014114 seconds)
  done (took 91.301319022 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.333618926 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.334211636 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.334452399 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.334644369 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.335635877 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.33509579 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.33446328 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.334443185 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.333972384 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.334802036 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.335270923 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.336552941 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.335238129 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.335105894 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.334325912 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.335031759 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.335135675 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.337270523 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.333420882 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.335201504 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.33629274 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.334904333 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.336072249 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.335776186 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.337306198 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.33578875 seconds)
  done (took 35.977225754 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.354124675 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.600762742 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.756814358 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.362735812 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.355368414 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.359565564 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.430056546 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.355416129 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.356521892 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.358744805 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.521165234 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.358043938 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390553903 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.784495816 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.357579441 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.356960485 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.355943081 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.355678471 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.610564565 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364651902 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.453026339 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.356183582 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.431436165 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.366446019 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378193749 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.357253661 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.360669658 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.871999202 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.375585223 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.522783309 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.122044687 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.430323251 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.824665225 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.78675626 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.129522904 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.364980288 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.357593005 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.526683845 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.358815716 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.3573674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.431665643 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.358386513 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.769466887 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.970584295 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.376052932 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.35841756 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.889061725 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.545037129 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.592087789 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.368118052 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.792424853 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.367805187 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.360068847 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.359453994 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.594251486 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.367902338 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.357060085 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.879664505 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.385802553 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.432322307 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366496876 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.35812827 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.618866027 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.360395398 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.607463235 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.359491949 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.367706319 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.37683361 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.769410196 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.36701738 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.995677707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.381830067 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.359893108 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.522152303 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.606478936 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.925128623 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.381901183 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.622738759 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.839530507 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.449367154 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.365047591 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.862790924 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.453632218 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.365893091 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.362848067 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.360877845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.361340036 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.409707147 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.432075184 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.92858984 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.00520255 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.895963522 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.453033242 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.372230732 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.360500332 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.882073258 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.379199866 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.361224343 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.764147013 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.993809372 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.376751123 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.368520951 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.99457225 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.381518978 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.437154055 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.366000397 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.777680868 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.362349326 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.414807833 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.360785641 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.369225023 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.383563884 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.437625722 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.365410608 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.363721941 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.96274272 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.550198791 seconds)
  done (took 178.580387686 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.360033477 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.354849789 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.356720923 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.354651865 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.356452536 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.362395738 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.35515458 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.355147673 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.360937783 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.355683806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.355636092 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.358585705 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.357922965 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.35605204 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.368015453 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.362590707 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.965763385 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.358017868 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.355772516 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.35619821 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.145314404 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.362031187 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.357081385 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.358867205 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.358432446 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.356143047 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.363540796 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.376336753 seconds)
  done (took 152.715038246 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.364353511 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.912369983 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.383774403 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.489511748 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.385690631 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.362429379 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.488388596 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.423231892 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.381804396 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.362841433 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.361645096 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.654878596 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.365767568 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.86224936 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.546170103 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.507765136 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.860616304 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.3807473 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.362825639 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.362865033 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.493200144 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.368829239 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.654693021 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.910114271 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.382790425 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.910385805 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.350170243 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.36508949 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.364130027 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.913808493 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.381026614 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.656151074 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.439132113 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.422116529 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.932502791 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.881941311 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.883936107 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.514831333 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.364741979 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.364953758 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.362811701 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.350150157 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.916915366 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.386005179 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.366570672 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.9044546 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.384304388 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.366002833 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.370754516 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.363622198 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.421071689 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438324294 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.675421171 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.918494071 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.461331215 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.379891703 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.490668005 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.726379094 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.3685304 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.866079242 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.349522711 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.914362189 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.385171816 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.351113353 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.366991541 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.37242387 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.508142689 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.498397536 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.86870189 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.382569213 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.866287272 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.525293822 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.374279397 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.366107979 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.368532494 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.910873401 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.882968304 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.524895756 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.499731709 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.555445688 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.354882571 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.366156905 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.351893397 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.441276677 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.366846089 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.913075446 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.881071822 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.385182131 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.369259734 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.369140206 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.369020967 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.535553442 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.932776017 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.458481294 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.85339374 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.676138665 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.660068923 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.369914292 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.42457471 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.383596427 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.661336014 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.370890126 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.422128612 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.783822964 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.662307124 seconds)
  done (took 162.403063103 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.603442436 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.528438791 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.454253962 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.497933374 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.934594068 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.911106411 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.545489952 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.505149677 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.476170498 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.62010853 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.476434732 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.459346197 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.532569204 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.440595094 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.096645374 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.451327653 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.475199521 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.51843635 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.47540036 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.351025664 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.997113056 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.644350897 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.53650541 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.227078669 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.456250672 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.123069513 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.912372734 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.888793689 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.543027614 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.618832482 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.885386971 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.504177104 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.288177859 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.021627291 seconds)
  done (took 65.278590382 seconds)
done (took 687.513423751 seconds)
SAVING RESULT...
DONE!
