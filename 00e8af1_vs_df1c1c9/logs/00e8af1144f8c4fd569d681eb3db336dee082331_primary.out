cset: moving following pidspec: 18808
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.546060858 seconds)
loading group "string"... done (took 0.508232857 seconds)
loading group "linalg"... done (took 8.603477 seconds)
loading group "parallel"... done (took 0.174156977 seconds)
loading group "find"... done (took 1.365573053 seconds)
loading group "tuple"... done (took 2.024019495 seconds)
loading group "dates"... done (took 1.330045274 seconds)
loading group "micro"... done (took 0.209528584 seconds)
loading group "io"... done (took 0.594717809 seconds)
loading group "scalar"... done (took 41.706765843 seconds)
loading group "sparse"... done (took 12.836383487 seconds)
loading group "broadcast"... done (took 1.041870981 seconds)
loading group "union"... done (took 14.245041734 seconds)
loading group "simd"... done (took 4.888716692 seconds)
loading group "random"... done (took 9.816207923 seconds)
loading group "problem"... done (took 2.103532345 seconds)
loading group "array"... done (took 24.319852082 seconds)
loading group "misc"... done (took 1.141954857 seconds)
loading group "sort"... done (took 3.574631438 seconds)
loading group "collection"... done (took 21.07643066 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.601475914 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135235843 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147838512 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175496015 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207439915 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138616816 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156508262 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.552429038 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.034939921 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208124274 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143690886 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.54390307 seconds)
done (took 5.7687566 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227854608 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.074616347 seconds)
    (2/2) benchmarking "String"...
    done (took 0.131703986 seconds)
  done (took 0.878251951 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074461197 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173527458 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094583908 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109094076 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.11005522 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108711471 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094977264 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109620858 seconds)
  done (took 1.475525088 seconds)
done (took 3.336040936 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.810749805 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.82349422 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.521721264 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.125166462 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154394717 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128605928 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.3131905 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.159290794 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106144338 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11342311 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170986083 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.359205532 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428258464 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.943354029 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092964875 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128155994 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079754463 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.70299793 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081251444 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129732944 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.514841776 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.110837692 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116610918 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12483575 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206860817 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131025127 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.183198509 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102100186 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.695821846 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102668688 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183184169 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09898884 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16367101 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.216432142 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.080200611 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106728652 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676202291 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188950965 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.111244948 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095082792 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67545515 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079654001 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.18791812 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106164908 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108801955 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187989695 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116824919 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078754639 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103643524 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102106739 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159147156 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46602444 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105762734 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.1462027 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108862762 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691933738 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094597249 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155051821 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125648358 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10752731 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096780125 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116154589 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156719579 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.123661708 seconds)
  done (took 19.698702704 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115304862 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139025566 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092853595 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13843484 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138457891 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095407205 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082868887 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093809438 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107666157 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18312752 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135448665 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142130597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073396738 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.096780509 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116798093 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230492715 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121258771 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118633967 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081273209 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10541829 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122634961 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112344441 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108073185 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093322296 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167709892 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205299504 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.121649872 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122535992 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092772325 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099325646 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141768724 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160432388 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074661909 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093491162 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1786723 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119565861 seconds)
  done (took 5.114442617 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197600203 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.114731203 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188341859 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.176641993 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148825207 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165038883 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116814822 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262635912 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.173475346 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16221157 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12844152 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112213866 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078216055 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159390139 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097681559 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07742716 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.740651662 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182403928 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147474874 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122448788 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086160734 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096711975 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375337359 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098070719 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080597401 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100386383 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070639434 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.171944286 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101499309 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.198829098 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117594359 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106948472 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113045311 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208114799 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128673867 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121295614 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10207383 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079177483 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.228396146 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089798204 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094384942 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101423895 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133673299 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129928464 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096488323 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.090859441 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240129995 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081510646 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116986748 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.037697266 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199372784 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095917522 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096969171 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332465616 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115290274 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08671831 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098134582 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080382159 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.290150572 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132846933 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081077259 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076944359 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101638987 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077082533 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406270372 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088894958 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.99849436 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096937561 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155843795 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098374692 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103158453 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080377147 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101312097 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085387289 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117224837 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079622562 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095604895 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079101943 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093568081 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083604335 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113571301 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083264893 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095505712 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145715075 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113553099 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115398464 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108770739 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099000985 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07734841 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128385286 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096718862 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082054132 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.141242567 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101895155 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096627369 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099855626 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142247854 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096726644 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.171775271 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09592516 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121864127 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083464691 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127441707 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117198382 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078502696 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100358332 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075824022 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097663134 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145974066 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093531109 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079163799 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098858242 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07999681 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109249342 seconds)
  done (took 23.407352798 seconds)
done (took 48.891532603 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.415367091 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111099615 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10964821 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10889973 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10817431 seconds)
  done (took 1.600761008 seconds)
done (took 2.322582064 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.324751631 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197469284 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100203259 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190576704 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086559709 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195796438 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163565451 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098872621 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207838438 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081621774 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185889656 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081408477 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103977621 seconds)
  done (took 2.766831487 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091031205 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115892331 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080372101 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106556441 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073941876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089272003 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105965967 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131247298 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0893414 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083742323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091373305 seconds)
  done (took 1.777453599 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09011885 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114554552 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080087856 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08961835 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091191231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088931891 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106191863 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100257575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107352422 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084292031 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091681088 seconds)
  done (took 1.764995213 seconds)
done (took 7.022655738 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.125638974 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.924687774 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122554589 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173499612 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.333159379 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.21911261 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.635836091 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134581613 seconds)
  done (took 16.568197077 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.127363999 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096086997 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078731473 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09924315 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08180854 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098950437 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076846474 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09823311 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079413227 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095578373 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081240558 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098548081 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07839884 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097168681 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081839115 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096510794 seconds)
  done (took 2.253121105 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1148749 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113931438 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103062951 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088123887 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100041965 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100279007 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08513589 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100988668 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080830116 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099292361 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088744423 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104088093 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102772398 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081391523 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101106638 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088329464 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098016851 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08425338 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103019254 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085389575 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104117317 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10016547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086319819 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104640143 seconds)
  done (took 3.146194375 seconds)
done (took 22.689982649 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16527041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083541143 seconds)
  done (took 0.976296786 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099653862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11779641 seconds)
  done (took 0.952114209 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105693514 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096193322 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135813631 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113652468 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081460082 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079893243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.131304416 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097047423 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080721797 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096544528 seconds)
  done (took 1.753767303 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084608611 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100101878 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08878288 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118732178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108301129 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082561496 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101701115 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083488222 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103332451 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078926937 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104795983 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098706357 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.104178 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117912751 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.205618981 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10395026 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10791443 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084087912 seconds)
  done (took 2.6106642 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080016787 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082256136 seconds)
  done (took 0.896891081 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082331957 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095494605 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082516131 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099251375 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078461752 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095111865 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077628478 seconds)
  done (took 1.346490884 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.475290262 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.247632085 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304925979 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.113045777 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131647543 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.351730225 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.134081852 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.093716557 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110680472 seconds)
  done (took 2.756491308 seconds)
done (took 12.024687535 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089840184 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131737177 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.474097545 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113913378 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077221271 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156400951 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.268054847 seconds)
done (took 2.047421734 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340152526 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12068603 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08926389 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079432903 seconds)
  done (took 1.362632411 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077987362 seconds)
    (2/2) benchmarking "read"...
    done (took 0.084432306 seconds)
  done (took 0.904959641 seconds)
done (took 3.008625411 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077149036 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076506764 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091446267 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076995308 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.091733874 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0757948 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078003865 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097003384 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.078591627 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107914288 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.095593868 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077181479 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075287128 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093230824 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076106527 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093520378 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074728334 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093660039 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075233539 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075681652 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094384544 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078332432 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094810275 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076330138 seconds)
  done (took 2.816167538 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103447601 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096570279 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082900305 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100968052 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082965365 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101555982 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100208094 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078441234 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100778739 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079992296 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099459408 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081634358 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098098949 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082215917 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097622246 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08173639 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.101669512 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079164829 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097025241 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082124114 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100584905 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079291174 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09969141 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10126965 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081942593 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099070831 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080264306 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096327856 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083738647 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099530924 seconds)
  done (took 3.493662745 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086035274 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075105072 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093025768 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087118471 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092117386 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078897596 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092764764 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078678136 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097354635 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075312077 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080639171 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092451799 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078550202 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097619058 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07958187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099596978 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093017979 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095843354 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078003461 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097834588 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080738636 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097699919 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077804803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075351362 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091957873 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.075340415 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093393183 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075111874 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093799299 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0756065 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09734658 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08232197 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076138523 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105426772 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082254399 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091928864 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084318992 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092541714 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080857495 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093937782 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074902668 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093974581 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079303119 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087052723 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09586726 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077001453 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096693777 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08083011 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097805811 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083124179 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09434251 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079817266 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102196314 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08072776 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082170892 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093535168 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078335288 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095327714 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080654805 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093876979 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075608012 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075437093 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099607045 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077412814 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11593753 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104370605 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078748893 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080927028 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097339039 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083425439 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098035996 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093395407 seconds)
  done (took 7.046364102 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080782078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104272125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077409622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095534012 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073808591 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075423289 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100124909 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07623169 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094592663 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095330276 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0934755 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077927128 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094278948 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080475781 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093815313 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078131847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104059409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074030876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09373544 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079036225 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094422743 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08195425 seconds)
  done (took 2.670413694 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22354533 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103257478 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140469416 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11268925 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096358148 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112442961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082061488 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10179485 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100662087 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08579713 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104500161 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083375187 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113881581 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104190968 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086150657 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105352142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083585316 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104719277 seconds)
  done (took 2.696628395 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092042627 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096861115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101888838 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096606577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078934957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099526655 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085484119 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115464186 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081443698 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096295279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107439736 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081311894 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098642143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079005547 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098939364 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078322691 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099315988 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079976712 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10753021 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086407696 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103425186 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090045097 seconds)
  done (took 2.806444727 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096300277 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099266639 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101264763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101006706 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077779604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098698579 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086989357 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096937258 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088756067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098682973 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079460895 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098186859 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086914717 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097062127 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105987251 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079417996 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099541464 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080709168 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099124192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078646875 seconds)
  done (took 2.607647375 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119873935 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111423176 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09489037 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12323375 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112146266 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093426672 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123004813 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09544719 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111545242 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126669546 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094757562 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112690132 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122857701 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.100915702 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112259373 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106497394 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123245627 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123661435 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094940291 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112832361 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125671096 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094146735 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123909224 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093931518 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111154024 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111307919 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093972443 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120630965 seconds)
  done (took 3.848212839 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078644898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078700745 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094001781 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076695897 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094115921 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076919682 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076842965 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094386029 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078248729 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094029365 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07774396 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097168868 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078880033 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077935804 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096047298 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07846197 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096152735 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075709302 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094421596 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076082259 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078643524 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096091838 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078572276 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094101941 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075528606 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096751237 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076282073 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07634869 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096091946 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07600602 seconds)
  done (took 3.293542001 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08712011 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107580866 seconds)
  done (took 0.955173856 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076835409 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114021665 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076091535 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100499933 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08579992 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098327413 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08895395 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102529331 seconds)
  done (took 1.502350289 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103115232 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117919915 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085606394 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109540501 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099170566 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115106831 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162541656 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085687305 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105063292 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080205105 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117251254 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080098157 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107331606 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08553354 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106081922 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112816302 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080381766 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090627589 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1069058 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082438138 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104564426 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113361976 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090997396 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105022028 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082552174 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109997471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094381685 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109086038 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084881425 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109204914 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086654782 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091458694 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085757586 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104249831 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08148693 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11590201 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115332534 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085484605 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107093964 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087124972 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107757689 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078711724 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10879488 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086573351 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110675605 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0855551 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10510354 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079231756 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098691496 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084666667 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096556783 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083341347 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092294255 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090375982 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107625701 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098918847 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10086022 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085002842 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102111953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083399073 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104925964 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084431475 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108748163 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083584986 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108385499 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089174828 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106351404 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07906163 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091616214 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081634209 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107765462 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104615807 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109523812 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103578712 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08686809 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098824152 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085987438 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104404076 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088554002 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109356817 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085099588 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10537296 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090659688 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100718162 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084184823 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105288587 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083231396 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10123193 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080871063 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119271815 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083371255 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098590676 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081582857 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10949029 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085256002 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102427409 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081381309 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108092666 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074622952 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104269867 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086479224 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10537042 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092629575 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103801626 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087227746 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106434833 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091404807 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10356922 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083322091 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095198108 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086462464 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100730466 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088471174 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091618267 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086117395 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102447302 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086984177 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108698254 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082634839 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103485613 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090839141 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109423446 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100463913 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076481178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084598021 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103534879 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108309113 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092255508 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100355666 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078512593 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078802672 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106900434 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10315292 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087362794 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103574065 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085619766 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07450221 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099538423 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086111565 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110259746 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10139271 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087403034 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109376571 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087923878 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101563809 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091236368 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102149944 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080769961 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108299851 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085605218 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097549297 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091459382 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102852446 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083209968 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10395536 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091337474 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102856087 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087147467 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101126823 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085753284 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105066255 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081229952 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104264753 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083103362 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112055323 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086342918 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097951417 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077596223 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105902737 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081581142 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103593205 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080852695 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103135295 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087444283 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101039485 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08379617 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101887778 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106245424 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111736201 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086627457 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107089891 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092803536 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102955523 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087643129 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102851337 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087894717 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104459942 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089904465 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10613292 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086586977 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103407924 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077297796 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106108432 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090898646 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098903594 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082715804 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099428793 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085010858 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110746518 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085156589 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104619289 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082395772 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104987777 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090524481 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103079564 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085574958 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098833283 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085085481 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108423993 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087371221 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105825395 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093165829 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104723454 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079409689 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108693021 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082716749 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107224471 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079456368 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099345098 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081766127 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105481196 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08367361 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102496963 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075165768 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108354888 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090915513 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104236472 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081352268 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103898122 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094384009 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101939721 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090620192 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103798844 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088548249 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116751576 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081096523 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104234661 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093033208 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104619926 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07543361 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107388454 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083437979 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098710436 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084106962 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10178138 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086480858 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10588123 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086619264 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093051665 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085680202 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101992001 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082065609 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097799065 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090764395 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105136689 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085975137 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11372346 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087535466 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105743295 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088147138 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103795956 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087342844 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106082418 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086125473 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105596112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08383238 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099727759 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085786439 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099554032 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083262457 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102580363 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086125535 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10528325 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087839666 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103317988 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090992245 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104752546 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087642222 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120843377 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101917107 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081629956 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104906013 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088539019 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103112787 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084762239 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098186451 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090545919 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104236057 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09214274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103090095 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077823416 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104748715 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085328012 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106426452 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086793808 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105795441 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08429718 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10369014 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085499214 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113744726 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082397196 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111557212 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088316626 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106951142 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085304773 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104279196 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084051572 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09941804 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085141134 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106192541 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086842517 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103724111 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088138618 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105021723 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085036296 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102745493 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088614171 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105705738 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088385743 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094246342 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081731167 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10045613 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08676563 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108851874 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086717531 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102140253 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084176501 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107493212 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084651262 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095859662 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090136848 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106679372 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087359333 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113289171 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081567716 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104767192 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09614802 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094617613 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083527005 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100513745 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083150213 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109850317 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088084938 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110308443 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086715127 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101335293 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078216463 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106702616 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084430462 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075253924 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100957479 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089708704 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103067005 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084840192 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105293599 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089313995 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107161514 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090272771 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10370579 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085413643 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105635355 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07840718 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100526263 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081692872 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104386835 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087565549 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100775107 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078927415 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104374212 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085768729 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104861544 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085193399 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103352496 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091858103 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104062882 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086421835 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110657551 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076397559 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105131097 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086302826 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104628645 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081614857 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106497887 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088448215 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107125335 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090808391 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104484248 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088017802 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10490367 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082634694 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105204217 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086145527 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105450949 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081274486 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106744111 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092898588 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100816112 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086065478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105415931 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083770976 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107582771 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088337229 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105844887 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090460375 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105475728 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086776724 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108416992 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086321549 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106249745 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087867833 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103945212 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091128771 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100194714 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093805248 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106077901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089184538 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103962001 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082458912 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10443516 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085783621 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104000954 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092752682 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106836863 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082139552 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100871307 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083565704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105360846 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092404037 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111825646 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087832398 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105899901 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080419482 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097970992 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088898393 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101665831 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08511524 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108143324 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090918873 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105171725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083701503 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104345172 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091366081 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109450858 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089757186 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102452823 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088842295 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106612742 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08669765 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103042186 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086010301 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107331114 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08874627 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103202108 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082172402 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114887803 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091037229 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108074491 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085166992 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107951954 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085030904 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099570401 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08761761 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105719719 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108076897 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086534743 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085951228 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115644811 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.099808723 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085739768 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111011517 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085757926 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110543486 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080941539 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106532409 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08895459 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107464333 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080937851 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101151893 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083169849 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106164553 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082599445 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080671082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116848101 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110488984 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087268139 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103423735 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085103808 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099543367 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081579531 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082181879 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108476573 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084648708 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114075618 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100965499 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082598886 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080799505 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10563329 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087265785 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107855208 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079563555 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100611809 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082859193 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106518878 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092776399 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103577173 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086886967 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107208951 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086171733 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102760716 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092257293 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0981019 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088925118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118082372 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087857225 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108515338 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109902016 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093388306 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107029621 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081048225 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106734831 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087486278 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106905706 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089052462 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108479946 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102357757 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106678805 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082385141 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104693396 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087345017 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101519282 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094961985 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108545433 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088003888 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107519714 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085941225 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108764235 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093491348 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107348909 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08894014 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107524833 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084940011 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105813336 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084458079 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104451426 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088908119 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107546771 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086942377 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10930402 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082990299 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117132754 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11258094 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08958762 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078309435 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102832089 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082960161 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100627375 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088782717 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100235971 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08544997 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10420183 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085552582 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108063199 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089125112 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106200645 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088872153 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10572757 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076408491 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110274165 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087181262 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10872572 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079805625 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106676498 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089422687 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110168473 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093212644 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104440836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087567505 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.1046488 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089490784 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100686515 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090236307 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104779887 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086225097 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101951581 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087326187 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107806442 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088976183 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107455096 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089474675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105896436 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091280207 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109620476 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080528686 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099177753 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090705148 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102445174 seconds)
  done (took 57.918934458 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146703534 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087773211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077407538 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098129929 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12505225 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082443104 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097025358 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0826378 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101213272 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092827933 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097092012 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077882133 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119908505 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125361386 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123176452 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092957992 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097860974 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082821863 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09738492 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082905614 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118839686 seconds)
  done (took 2.913797083 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1036314 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115713663 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115041726 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100322971 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108658123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115927472 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095396573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116844672 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119830229 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090076465 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120157231 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114901569 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091235497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111422181 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110737917 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093746597 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120223635 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108435943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097739133 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114726095 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112957923 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095140093 seconds)
  done (took 3.178415826 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0912594 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085490557 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110884215 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.079884607 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105992487 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080227235 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111590356 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08360051 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111284598 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.086222036 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.103344136 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086002391 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110398199 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080975235 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10387986 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083160603 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111001344 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086567223 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106703967 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.08149435 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.125527254 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080549854 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10063702 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083483619 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115163814 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088261178 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.106510046 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086632741 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103337201 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086400845 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102477153 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088908187 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108437962 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084669095 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103338676 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086446765 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105823373 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.080997483 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083041114 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110011736 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.081705284 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107485228 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093256213 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.103323719 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083136574 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10774277 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086598349 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100282305 seconds)
  done (took 5.404710671 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.117681793 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154374155 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085417891 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1457073 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121451714 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09635428 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106977236 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145648455 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080631604 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105799499 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124276696 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.099852625 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107903837 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111968059 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090209888 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105978992 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088745502 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101238526 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092170358 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1053143 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11213391 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090069643 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120614892 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117496842 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092111702 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104513873 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083725075 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111279801 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117595185 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092881914 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111946389 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094360434 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122490701 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10797253 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084789283 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10944291 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12390255 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088878428 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108703871 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08184153 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108553182 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092588906 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110400013 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124151466 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087912016 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107945155 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086897464 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100169182 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118074187 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0896444 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116380365 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120591139 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091792972 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106540405 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092685019 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12186128 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106175524 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085964641 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110834358 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118148289 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.081860369 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110788249 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100616868 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108682478 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11607578 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100461282 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108089882 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091073467 seconds)
  done (took 8.132078503 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115739128 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112684176 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12341787 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105167904 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111743289 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091686808 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112814533 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111707348 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09162034 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119043676 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091432718 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160834222 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109726108 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118220615 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092492141 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112504221 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091855706 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112195301 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112725308 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092910101 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111958165 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104929336 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113356786 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125100753 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12518245 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089476 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113209822 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093037369 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124690951 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112709739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105876185 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113619395 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11169867 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105022956 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124769965 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112768184 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087456104 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112727319 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092954494 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112901622 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089376021 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125187023 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112808825 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090040429 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112121481 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113007319 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104620819 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125908065 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119632846 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100889233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113416768 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123868833 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093097075 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113879854 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124520986 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134221528 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105016246 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126950134 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112852054 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125550762 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105827219 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133619329 seconds)
  done (took 7.712487214 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08484155 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083593206 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101526361 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081713568 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103962846 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081429297 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082648898 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104227052 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08326208 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103170931 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083314218 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101007967 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081791667 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082761736 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101999225 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081127235 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102291011 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081740771 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103819059 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081862672 seconds)
  done (took 2.633099623 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09314114 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125586751 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085574382 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112363559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086573462 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113163915 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085361137 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107563728 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087650946 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107706685 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11732848 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098913769 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104848616 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092242656 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117329182 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11169769 seconds)
  done (took 2.472155916 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106069496 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.126675586 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12955385 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090018723 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10293416 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092571873 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107246669 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.080476127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100541931 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.093527894 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110300967 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090418523 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106825653 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082950073 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084388122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112686569 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.080268304 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109344519 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08693868 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130496736 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109357981 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088690083 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11048221 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090930101 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112269208 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09625887 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.118446797 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087514388 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109812396 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.093547004 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.114589807 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.098715172 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10663734 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088749642 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10355236 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081726277 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108005188 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088329187 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111511181 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088220766 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103138663 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087083358 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107294997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090630437 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101314996 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088105856 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10079271 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091184899 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106629928 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088102733 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107660544 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092546048 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111659262 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.095371135 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115848556 seconds)
  done (took 6.343892758 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100131623 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109124316 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090409363 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102714423 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088430204 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113691875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090481197 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107668155 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087774593 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102406336 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087707162 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109196537 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087118688 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109223367 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088458839 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10952725 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080184138 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107479833 seconds)
  done (took 2.601489014 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090616512 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083783811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113606001 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084027166 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106878075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086964945 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101564228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08402737 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102876301 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085651744 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104095353 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088143693 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103303991 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087054722 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1048557 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085920369 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110822181 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08637906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090472495 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109930583 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09346294 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110093737 seconds)
  done (took 2.942937595 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101914808 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136761766 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098850592 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.1473759 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110705493 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088394627 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118952939 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088898027 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127077638 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.08899909 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.108759421 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.0884659 seconds)
  done (took 2.136703232 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109822025 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143065579 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085883501 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108531157 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119806372 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091379688 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109979493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090851373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124355553 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123727114 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090121774 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124609012 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124525339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12200364 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099008804 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119778721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11067113 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090491627 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106255993 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13374655 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090448018 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124685218 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090041578 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111035208 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110182484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103267946 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125180888 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124646156 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08992289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125120556 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119759383 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089750795 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126028465 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125061227 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087581478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126279007 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110518065 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133938609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099352946 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122288236 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108613177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100104434 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124319108 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118635717 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10408202 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112144754 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118730085 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090293961 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111306949 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141672452 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118789974 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103283413 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119584599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12433062 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12437443 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139815367 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104891833 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123062445 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11902675 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124899584 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102488978 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119871044 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123126683 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12503374 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100382467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122670555 seconds)
  done (took 8.326584555 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125676849 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108290625 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091294389 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12422558 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122433223 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111166524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091594494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11129982 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090604286 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.345463621 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158120793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091250962 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122549354 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123223223 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089286971 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111762606 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1110405 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102106851 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107896116 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140326661 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089289089 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122866587 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12190622 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121483098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12428141 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099302176 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110954427 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090689487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11112155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111155152 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099538789 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111354127 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122835436 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088368059 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122300775 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090165349 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110906169 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118953188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090694223 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119574929 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122403033 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134192265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091566855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111531259 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124216443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091481958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110954362 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087349939 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110750657 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08749358 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125075137 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124555325 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124886568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102586986 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111647075 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11089615 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091603473 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110993202 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090936689 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120612765 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122647217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090975968 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14013389 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111826484 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090324673 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124097071 seconds)
  done (took 8.360776425 seconds)
done (took 155.556262153 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102826691 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141577585 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099486774 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168598333 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085706658 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140610606 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118691731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121179661 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085326554 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105533838 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085865468 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109012958 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152630723 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104873035 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085647925 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108779415 seconds)
  done (took 2.653238446 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180986992 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2841742 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105683585 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112031017 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091465524 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109020113 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089767916 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112245071 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086410845 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119321112 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086799133 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10980809 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118207175 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088359975 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106716992 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088032186 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118368658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087494741 seconds)
  done (took 2.936783761 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117175964 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149733572 seconds)
  done (took 1.113215417 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121069093 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182174714 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300353794 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13747087 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136189519 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128398956 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161701727 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.104624212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.212896189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.108534375 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129001354 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112369311 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114946874 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118651495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115583146 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092303599 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139277887 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094950619 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114149775 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093366185 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136706756 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115929725 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097852058 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114709495 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183806952 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126896082 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094469583 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113392669 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094724343 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114328759 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.098758925 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127873112 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128792242 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.170011049 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.119095531 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.16757943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121130144 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091541153 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114774515 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091541142 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118014366 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117120288 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107791674 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112804746 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093490763 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121519141 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.092413199 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114297858 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121524312 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101963472 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122625935 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119769691 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165901521 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121995582 seconds)
  done (took 7.613550907 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794688907 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155810033 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091831621 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.897101652 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144440088 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10585732 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.799817218 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135026196 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243001528 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.809849977 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107508442 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127228852 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235210136 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258011338 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.146712737 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341712019 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675610767 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105266235 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144921011 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157350068 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119961563 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11968242 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132775691 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.416498941 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113784177 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091183903 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119369754 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104093951 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190548673 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09158421 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116973563 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187621606 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269529686 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214038124 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112599072 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091881576 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089358996 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19826519 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273740119 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202356712 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178953419 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109216612 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090793532 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126336911 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132052955 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088532891 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169520903 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.202658227 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182253417 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093827437 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127549241 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122334822 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102476364 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.191496753 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088922398 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343316079 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347109292 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089990487 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12367622 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131606471 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250105991 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114547466 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231112161 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116947842 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220485234 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111602441 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774644923 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.194205972 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091718656 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12252366 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098621443 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11872854 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124436062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171025809 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.359860422 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128754398 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117821345 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090098542 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23087992 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091175198 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111715888 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171902581 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091748501 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122467879 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129571147 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104757165 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.202517959 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257263132 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127574141 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099360933 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119305194 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126019887 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093230315 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217772297 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225865519 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164683242 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.242093665 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104927496 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194629696 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17462775 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124783817 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178561762 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097618689 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13299791 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12677411 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2216718 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148873663 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092301618 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11884718 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098264942 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150514681 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11670526 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098776233 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19659088 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.448434415 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171231881 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109661134 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096780759 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122397302 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169238248 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120209395 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24860895 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123204041 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173377411 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120742736 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088333929 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122408124 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170560922 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128884428 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099230447 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127287917 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122135723 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257372579 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227336793 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107710651 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24546455 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183094677 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124053381 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181614476 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121472481 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176480625 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100423151 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126627448 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114489732 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768157532 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127500224 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121399309 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097199647 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192549845 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113635612 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092767961 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.11244755 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08849431 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7962473 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093806314 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11046203 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092763523 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122504925 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099000776 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120894369 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096597257 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19321801 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240599723 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104958157 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12148842 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090339495 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.189378656 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093197406 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112111187 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092075843 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113239698 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101611177 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118371114 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093067272 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178180155 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.189343652 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22700663 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.532388203 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112879847 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092852552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237239386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090860677 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312298962 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121511158 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233090103 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17518064 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087227226 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342619756 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175133473 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.1905893 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116755183 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177541375 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108968182 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098494784 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167593819 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113488837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119704585 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16687559 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107579075 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129849917 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15064605 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090598588 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255031358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088889197 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175741419 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115729961 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125244704 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297246606 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113542707 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133419183 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16921736 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095229234 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114946423 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.60848004 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114565544 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100748103 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125019208 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231782224 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172674446 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122054721 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121124335 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1056244 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168980263 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.242440405 seconds)
  done (took 44.657534147 seconds)
done (took 59.817430235 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309849188 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268354235 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.298271941 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.201097545 seconds)
  done (took 2.020858434 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.178887668 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155532991 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126518909 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111273954 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156575667 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088055278 seconds)
  done (took 1.686545814 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.485616352 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.380245743 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.349055683 seconds)
  done (took 2.086665016 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257872661 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.284045455 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.32516652 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.433878326 seconds)
  done (took 2.279344141 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210576654 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12885098 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101737577 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.140930726 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174574238 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180556034 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146834463 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156257846 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131700966 seconds)
  done (took 2.287505609 seconds)
done (took 11.23533412 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.256837385 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.186107612 seconds)
    (3/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.153937429 seconds)
    (4/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.256812752 seconds)
    (5/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103207852 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.133506312 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10456838 seconds)
    (8/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.126998275 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098600354 seconds)
    (10/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114338153 seconds)
    (11/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.172278537 seconds)
    (12/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.250133867 seconds)
    (13/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.132544825 seconds)
    (14/286) benchmarking ("sort", Float64, true)...
    done (took 0.232120028 seconds)
    (15/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.230504191 seconds)
    (16/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.270213394 seconds)
    (17/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.124383171 seconds)
    (18/286) benchmarking ("sort", Float32, false)...
    done (took 0.152415696 seconds)
    (19/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.242358552 seconds)
    (20/286) benchmarking ("sort", Int64, true)...
    done (took 0.223009203 seconds)
    (21/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.21040485 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.189755032 seconds)
    (23/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117578168 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.102345182 seconds)
    (25/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.123224258 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.222878775 seconds)
    (27/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187996354 seconds)
    (28/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.240916299 seconds)
    (29/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.270426724 seconds)
    (30/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119785111 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106403657 seconds)
    (32/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126979071 seconds)
    (33/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.130661867 seconds)
    (34/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.251201406 seconds)
    (35/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194948067 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.194622677 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.14158858 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078924694 seconds)
    (39/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.109159307 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09724976 seconds)
    (41/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12176186 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095164238 seconds)
    (43/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.153034528 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141127734 seconds)
    (45/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092784427 seconds)
    (46/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11737798 seconds)
    (47/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.18687674 seconds)
    (48/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.277007855 seconds)
    (49/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101605965 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116148853 seconds)
    (51/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.142752131 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094209123 seconds)
    (53/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119186961 seconds)
    (54/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100039876 seconds)
    (55/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.121903972 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.22811537 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115369927 seconds)
    (58/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167577277 seconds)
    (59/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076939511 seconds)
    (60/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115958719 seconds)
    (61/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.104055914 seconds)
    (62/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.12471415 seconds)
    (63/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.230687388 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116929907 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.257834667 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.120447533 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.102687168 seconds)
    (68/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104915701 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.113706515 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104073026 seconds)
    (71/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184360051 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.088327469 seconds)
    (73/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115622095 seconds)
    (74/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.158867273 seconds)
    (75/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.106604736 seconds)
    (76/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.168433261 seconds)
    (77/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093648115 seconds)
    (78/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188242929 seconds)
    (79/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192845993 seconds)
    (80/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.109055424 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.152853668 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.160864191 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.184526696 seconds)
    (84/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.170736625 seconds)
    (85/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.191971798 seconds)
    (86/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.105525792 seconds)
    (87/286) benchmarking ("sort", Int8, true)...
    done (took 0.22006764 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.235484314 seconds)
    (89/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.10192158 seconds)
    (90/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.208854671 seconds)
    (91/286) benchmarking ("sort", BigInt, false)...
    done (took 0.23144965 seconds)
    (92/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078131137 seconds)
    (93/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.099880753 seconds)
    (94/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.117627679 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.145586103 seconds)
    (96/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081271472 seconds)
    (97/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120357274 seconds)
    (98/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078736585 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.101270277 seconds)
    (100/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.132315669 seconds)
    (101/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.186683235 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144967641 seconds)
    (103/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.116744365 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.102766477 seconds)
    (105/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.1240294 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103436944 seconds)
    (107/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.115422264 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.177914004 seconds)
    (109/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174376247 seconds)
    (110/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.134222264 seconds)
    (111/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.183336771 seconds)
    (112/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08780485 seconds)
    (113/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.099856903 seconds)
    (114/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161960926 seconds)
    (115/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125974798 seconds)
    (116/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.162888606 seconds)
    (117/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095125141 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11237317 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09593354 seconds)
    (120/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119805755 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.187858422 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.102298105 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124809206 seconds)
    (124/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.102064508 seconds)
    (125/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119824118 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094250528 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.142522517 seconds)
    (128/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117615752 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095725763 seconds)
    (130/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.155197187 seconds)
    (131/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077987816 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.152475056 seconds)
    (133/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.108774849 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102763 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119067094 seconds)
    (136/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.12782899 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112160737 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098039289 seconds)
    (139/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.193974495 seconds)
    (140/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.158582606 seconds)
    (141/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093074682 seconds)
    (142/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101659883 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097683427 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117354602 seconds)
    (145/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198984218 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09627947 seconds)
    (147/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117842516 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102674247 seconds)
    (149/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138861258 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.095538291 seconds)
    (151/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.100872908 seconds)
    (152/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.107819756 seconds)
    (153/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.100836882 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080872758 seconds)
    (155/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128856941 seconds)
    (156/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094056947 seconds)
    (157/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100955502 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08170736 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.118802427 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.1048702 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112476717 seconds)
    (162/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095653447 seconds)
    (163/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.105562304 seconds)
    (164/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.137332284 seconds)
    (165/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.246576544 seconds)
    (166/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.101585485 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098063835 seconds)
    (168/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12789061 seconds)
    (169/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098018222 seconds)
    (170/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12951469 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081398035 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.126907045 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.106114371 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.200387015 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.172165646 seconds)
    (176/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.183877961 seconds)
    (177/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095010953 seconds)
    (178/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120791144 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09535509 seconds)
    (180/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115812178 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.223753972 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.093640579 seconds)
    (183/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.152566591 seconds)
    (184/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.103555219 seconds)
    (185/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089676492 seconds)
    (186/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.078377908 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.103324042 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.150612236 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.106274219 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.143783639 seconds)
    (191/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116997596 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099263504 seconds)
    (193/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077954983 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190393399 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.178201873 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.121938606 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096112002 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104266755 seconds)
    (199/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097430468 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128295346 seconds)
    (201/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094884216 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133667801 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.1373758 seconds)
    (204/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094480342 seconds)
    (205/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.0805966 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116226317 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.080089475 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119440398 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078806493 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137193939 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.116161042 seconds)
    (212/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090423793 seconds)
    (213/286) benchmarking ("sort", BigInt, true)...
    done (took 0.250082275 seconds)
    (214/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139647485 seconds)
    (215/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084703186 seconds)
    (216/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122822623 seconds)
    (217/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.104265597 seconds)
    (218/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140933959 seconds)
    (219/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139290777 seconds)
    (220/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.138251136 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143567046 seconds)
    (222/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079283037 seconds)
    (223/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.105902995 seconds)
    (224/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081673705 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119861817 seconds)
    (226/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078078543 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119478702 seconds)
    (228/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095397054 seconds)
    (229/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.151050866 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.105516909 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.120272025 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.101693597 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119914607 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081339967 seconds)
    (235/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.101928013 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090201188 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119463329 seconds)
    (238/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.085415219 seconds)
    (239/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.108217092 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081741603 seconds)
    (241/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.108155341 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096658939 seconds)
    (243/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.160321116 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097782535 seconds)
    (245/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.114220974 seconds)
    (246/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.151614254 seconds)
    (247/286) benchmarking ("sort", Float32, true)...
    done (took 0.231916711 seconds)
    (248/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.154491143 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128061887 seconds)
    (250/286) benchmarking ("sort", Float64, false)...
    done (took 0.152279888 seconds)
    (251/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.101567777 seconds)
    (252/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079835861 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.102688441 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.081087993 seconds)
    (255/286) benchmarking ("sort", Int8, false)...
    done (took 0.19797437 seconds)
    (256/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.109131368 seconds)
    (257/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.078201562 seconds)
    (258/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079107921 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121250355 seconds)
    (260/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093016707 seconds)
    (261/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10529382 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098713009 seconds)
    (263/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114825422 seconds)
    (264/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.093707576 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.114679133 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121462237 seconds)
    (267/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076870152 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093683025 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12945919 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139805278 seconds)
    (271/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10420196 seconds)
    (272/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11698908 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09393181 seconds)
    (274/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.108384637 seconds)
    (275/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.08573677 seconds)
    (276/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121756842 seconds)
    (277/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080465742 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116006728 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097491183 seconds)
    (280/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101615519 seconds)
    (281/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097201189 seconds)
    (282/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114478258 seconds)
    (283/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092228544 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082051276 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122613673 seconds)
    (286/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078426789 seconds)
  done (took 38.344571244 seconds)
done (took 39.220885155 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105646298 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153975787 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101371717 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145801625 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125862918 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106463489 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.123526505 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104736394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128338459 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106331561 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.128711073 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.084633431 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124929465 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125049623 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102767574 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145114681 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104173558 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120188883 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09338097 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117483306 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09338312 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117096848 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095697081 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.108667572 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102154054 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123817739 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096882451 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124729956 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094652601 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.118212916 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092618751 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121700957 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091840772 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12784542 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096372485 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117889002 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102208932 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123674453 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.096047441 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.118330665 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098336947 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.117791763 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096969385 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.122080651 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09476559 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117241794 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093280478 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130046773 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144302053 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094116183 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098588485 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.125369275 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126214465 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097984502 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115083299 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093970642 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119004098 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120772007 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.116808824 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094915064 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.139675704 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098366554 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116468563 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093069142 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116643783 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100660625 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124703743 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093507044 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123753454 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096648647 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112768746 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094029877 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115946167 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091998224 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.12321761 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100858595 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111819482 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094217551 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.120467596 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095754779 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117079413 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092847067 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118995247 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094681263 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091518927 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109340433 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091617337 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120787094 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093864604 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117026304 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096269695 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.119675662 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095748875 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125433374 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.093730592 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119336657 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11814611 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094654476 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.119400142 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093042495 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113602873 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092574371 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098389315 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115091368 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094517188 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126339745 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091308117 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119723993 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094108545 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117361667 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.131420878 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101601769 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.117813691 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09528924 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08990464 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122295266 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115205709 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091969467 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.114937997 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094735508 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118034639 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095194514 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092374789 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122221195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128444772 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090356113 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116539496 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092916027 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094374783 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.121749192 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094079015 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.115555034 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093467149 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.111775179 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092517376 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116309534 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097773873 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117145107 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093444538 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119734188 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094431012 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.120289056 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095769967 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119329888 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091750903 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.110743587 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095052701 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115808843 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096835942 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.118916212 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094022677 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113197971 seconds)
done (took 17.476252633 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101630103 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18761617 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151958163 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.152906265 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126022999 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135622967 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128090768 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.148956326 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102614414 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146636049 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149604745 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.115814573 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.154116273 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126052273 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110840199 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.124552036 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.099637092 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.133896625 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.158067258 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.144046871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126732792 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126171517 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147418366 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143171493 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100249347 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.144224526 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103137507 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.124594549 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128019518 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119977405 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14024533 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103606368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.125908169 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137066717 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108221889 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12326434 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111389191 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121194827 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100840534 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12561526 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138301601 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110868259 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121739244 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13142366 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.100872997 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129055674 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.099949694 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123397438 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101054674 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120035183 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105048708 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145636586 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122863729 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.102706922 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126569597 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126051605 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103232068 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128970961 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.102680434 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128657803 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.124627614 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10352991 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130319589 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14182281 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100719992 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12725962 seconds)
  done (took 9.182969981 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115478757 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152431523 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132377173 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108562538 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12795801 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090405654 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114452413 seconds)
  done (took 1.776705233 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091856858 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145103748 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123362047 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148441882 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141512904 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127545408 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133072443 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091864254 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140627069 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126070205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119593909 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17107919 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11724658 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104017939 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.150228254 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091783272 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151016645 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091627388 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12492596 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1487136 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097956173 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.138198462 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104582511 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118251143 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137687083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093722168 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183539168 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103418824 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115760825 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098196896 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122481617 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187639063 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141091043 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103425723 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116422083 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120100286 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140858839 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121760219 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.117836974 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121609625 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.114154789 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124549378 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099337864 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123242331 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099554541 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.131825635 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.1283167 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101827707 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.12257091 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.120806809 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127969769 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114203242 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11926631 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097268122 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127078279 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099407135 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131154388 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12206345 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120860872 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124186668 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117274478 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143698332 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138395812 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117650808 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134810792 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139790399 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.11440021 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122438304 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100272429 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124982478 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118899816 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121505019 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103034952 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.132875647 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126241854 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119832609 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144186945 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097518004 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130340108 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096176821 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120981387 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092721708 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133396108 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096752195 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119401372 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109228772 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129425926 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122715794 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096225886 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140385583 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097259742 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129589592 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103392448 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122077945 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13207142 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119907942 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128403428 seconds)
  done (took 12.752267107 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09485356 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093719151 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.123601469 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.09518847 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.11983425 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094887195 seconds)
  done (took 1.569494981 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124424789 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122074143 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.108490343 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124230235 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162023315 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118250649 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144737198 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102948693 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138423584 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134187439 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.117537947 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143922749 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148953443 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100671897 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14236539 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100562154 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.14345228 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097581245 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133152131 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097188292 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13450096 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126069298 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09701814 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141295517 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102285468 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126948523 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100426874 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133797161 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108086803 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129074282 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125668825 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.101985823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125786658 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103194863 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.142418677 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125796718 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09636945 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128752532 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101549363 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126475562 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.119298067 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122582135 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106882232 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.128437856 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103146304 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127469304 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128235496 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100343271 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143227956 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.103488334 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129293078 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101874487 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126270886 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.103513594 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.126113222 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103949393 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129683224 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.142976581 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101507072 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127418246 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097886187 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.126818331 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104248404 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12759275 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102291278 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129052621 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12561605 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098297477 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098456267 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125428932 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12788161 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098578998 seconds)
  done (took 9.573317801 seconds)
done (took 35.786463707 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.682787098 seconds)
  done (took 1.628736093 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.838364035 seconds)
  done (took 1.785749687 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.498419488 seconds)
  done (took 18.473361523 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506044332 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598561506 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997289516 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16768202 seconds)
  done (took 3.217883429 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.9699205 seconds)
  done (took 1.940062453 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.310060267 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.274621523 seconds)
  done (took 1.538471171 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.792486568 seconds)
  done (took 1.751111389 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.544622419 seconds)
  done (took 2.503513675 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362377489 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204691952 seconds)
  done (took 1.537496911 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.576977601 seconds)
  done (took 1.539895723 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.603296337 seconds)
  done (took 15.571655387 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24600971 seconds)
  done (took 1.225277872 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304504512 seconds)
  done (took 1.2702342 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.635343197 seconds)
  done (took 4.601733545 seconds)
done (took 59.543854511 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103907157 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132124951 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108015246 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128478773 seconds)
  done (took 1.434644023 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10889756 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127634091 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105178095 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127249812 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109472411 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128171771 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10040264 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.184128778 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.127605827 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.10339246 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127577263 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100683021 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129082894 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100266442 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125353496 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10396695 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130419455 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100988036 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128421405 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.12733501 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.100857564 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12804632 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104387133 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12693891 seconds)
  done (took 3.827026199 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103342591 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097932134 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.125279444 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097512629 seconds)
  done (took 1.395623027 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10791505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139048454 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113659237 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132360008 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115337353 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.139644008 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12260924 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096580674 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124932304 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.106710166 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123877469 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117209553 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139973969 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092539028 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.134163514 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094712385 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118757706 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139494386 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108398338 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133615878 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096938685 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13197819 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104108647 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137316891 seconds)
  done (took 3.848004962 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.182640655 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.136612077 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147398795 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.105177005 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173888389 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149393731 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.096544168 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.149372519 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.097621407 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134371149 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.126974952 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15022156 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130879877 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.100547562 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12421286 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130637806 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.105769574 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132163568 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.100084167 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136273348 seconds)
  done (took 3.585081197 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103858369 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122494842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0939933 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.096834521 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.129450636 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09956285 seconds)
  done (took 1.622504143 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093747968 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091628414 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118519492 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091361465 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.122096717 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091444336 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116630383 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092169679 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091716628 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117838317 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091174399 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116336573 seconds)
  done (took 2.215249705 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.3846558 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122611163 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121922262 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096279717 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129433296 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096271561 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135923004 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095045493 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.1520058 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096534482 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.12154044 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.099887166 seconds)
  done (took 2.630785632 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215684266 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10103336 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270732163 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3812823 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138442286 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171327627 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306992714 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14509629 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.216702142 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117374176 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227009818 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138017192 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160249535 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185249191 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145943921 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.18260286 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183102675 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208548982 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155515104 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212476312 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170312054 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174209388 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18588621 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158434271 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143013479 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164141986 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099010846 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134396007 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180198588 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177907967 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182129408 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155167673 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144412038 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208988283 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245793762 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186663541 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315074634 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139798732 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195457137 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189198153 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233099962 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145888298 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226739918 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134638447 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136914383 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188393647 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164945307 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187004986 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137586526 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119891703 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215753282 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18441717 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185991823 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142697705 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30686593 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152714517 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.125851537 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188059144 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221611461 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197906754 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175715243 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101518432 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216492688 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191434193 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186158832 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151758084 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1727944 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103142374 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184849753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199253779 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208669131 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177026787 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191070237 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139361834 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171750704 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175594664 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162038584 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184244402 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168127867 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09944537 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157282742 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142481767 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106761734 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192531749 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10175372 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237504983 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114638913 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.272940801 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236871214 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163723884 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16704602 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171080706 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173532318 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125785471 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.124459431 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153399123 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.13881821 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166799287 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137685968 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164014913 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153220058 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105074189 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160626841 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129510073 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166814068 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112488168 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174626107 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171965903 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134976496 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170883377 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128385334 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163525141 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178439895 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219277115 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111452374 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137617625 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200615894 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166805335 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.115230843 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17975755 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218404725 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142256615 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144754254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176171501 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201266564 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148297954 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194577321 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14863422 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140225069 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.156887278 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164766763 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135515561 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162165725 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136281989 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161211079 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201921494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.105059326 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14330053 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182120674 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13286636 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107060887 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152375771 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142644857 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120804682 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15504892 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146185477 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163504639 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166504017 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159978928 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165141186 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120838912 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228445444 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111803087 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166863209 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155475821 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097522475 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.214733622 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191702461 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108072567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192680136 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175403504 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23048872 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173261452 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108950585 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186620666 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135564857 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096998474 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171989706 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166929076 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168655167 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188184564 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228443129 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174382249 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159404073 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156202988 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17579216 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180306219 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163725103 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.122914725 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168314352 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17468881 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128466638 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.101492093 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133259632 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148957361 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108891985 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138736034 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189637333 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172689542 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219130412 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143119061 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148107235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18874277 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.13194993 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172427571 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17869055 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144300615 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189659849 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189117956 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174031769 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12071307 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182412696 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126016819 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10392717 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139742009 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172533689 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138594828 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111457991 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149941599 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18794561 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182594255 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157210162 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233456162 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179578708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199310272 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100378661 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170291674 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177696593 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165008668 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.19185773 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113186046 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.166984099 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184128309 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149604173 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198479224 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170606284 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176594918 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232603105 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135371058 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137334674 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156114833 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177146525 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117758709 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167428905 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152179383 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141274553 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160991385 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113755629 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132480059 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189295261 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15137971 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186988631 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.163017935 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178576908 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132624859 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149281397 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139222478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152927404 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.122575576 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179042623 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194414191 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150184267 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166988026 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183018655 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107432687 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314952098 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222354285 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193161466 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142221995 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121528869 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169240913 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167057084 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172644742 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187596074 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150593124 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187895642 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165238698 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.120351901 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140800704 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154654748 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156951737 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129732154 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138421945 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160580154 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152438967 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193577137 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152430608 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164797139 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172209814 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12493169 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.161154884 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149803766 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209455961 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166060013 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186756428 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163062668 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173304156 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195203886 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102164154 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135365217 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104391335 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188641187 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139897178 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167151277 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191448428 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203140183 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166378788 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178071788 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144849351 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129646734 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138282548 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156869044 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230871366 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121163254 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141832824 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198320335 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157772721 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137068442 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170038802 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288521497 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123573285 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208657727 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.098687722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285031221 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13178883 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109921215 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166759434 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178089649 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.144821468 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.16441184 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169602872 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152357275 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166697283 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145479806 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194271726 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210740102 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1786922 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21137235 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120998268 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165381428 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170837286 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184035177 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150301599 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151850248 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140914856 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219272325 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19068544 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.110748365 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171710164 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171642465 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167810941 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17956917 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140094966 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19622941 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13657044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174414925 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117302156 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13106452 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167371603 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191531407 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138795339 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18387194 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166835471 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110424073 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132993441 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158278835 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166630564 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121552693 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136597966 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188582191 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.133634446 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170649154 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159396931 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136754077 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162094265 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151347765 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116666857 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150387676 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152560262 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112994457 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17728228 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189522239 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138544324 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186028757 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184420711 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174656177 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167403894 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151336362 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638503043 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134492313 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189879586 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154429154 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194310563 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155828726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172560927 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139408056 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156578023 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176064169 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157895647 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226994412 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174417927 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164546225 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108415047 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151811895 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15314356 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137669123 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130169462 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170182233 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148481014 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143479998 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164308565 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125503054 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.15225313 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146322341 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19200358 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125924469 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222249137 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190741612 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115730332 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174321475 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208655729 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108208342 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167679189 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179010954 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149035086 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157382863 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109502858 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141892428 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188488609 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101509835 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169524612 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170066948 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172090179 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171993663 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141010129 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166267082 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120160419 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169265652 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136980759 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160490248 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163022346 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108110763 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134822953 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161274425 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138941965 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165650858 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133189788 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152099796 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185019453 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.132535247 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139466768 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291337281 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16713534 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200866839 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.159834035 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111947064 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152060048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163546428 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161023703 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166109828 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106752809 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138661163 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108165671 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188939092 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.159624096 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164880615 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193221759 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169931304 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197416572 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141744859 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243000395 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14704141 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162307183 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1357942 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108039793 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149845115 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112250394 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154034075 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222564906 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159349038 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15868051 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152212517 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133641611 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104782599 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139999841 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139034579 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161939758 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166601299 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151115081 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.122963495 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122427849 seconds)
  done (took 79.847853449 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152061379 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149655221 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154855612 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200547562 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173041055 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248253284 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211691236 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232518507 seconds)
  done (took 2.589161745 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105620046 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164368032 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145096709 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130634766 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.096961777 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.336223526 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14391218 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129127528 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.153530218 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.139407813 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.098469143 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.571054056 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099877904 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130476734 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120053308 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.096674936 seconds)
  done (took 3.715182989 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.334532321 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549896932 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.12445402 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.253426683 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233395796 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.157978629 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.763694038 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19122299 seconds)
  done (took 12.67381949 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12857249 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145647568 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145020498 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.170778405 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.128205354 seconds)
  done (took 1.786084474 seconds)
done (took 122.134472921 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102303757 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131827106 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102875735 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133721391 seconds)
  done (took 1.524058536 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114142738 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.085483748 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.11834288 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085175423 seconds)
  done (took 1.463870842 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432879385 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.116424814 seconds)
  done (took 1.649341732 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121109438 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139951715 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.112777929 seconds)
  done (took 1.441392621 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108936372 seconds)
  done (took 1.180051665 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103154565 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105092566 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.147319425 seconds)
  done (took 1.427550253 seconds)
done (took 9.755553864 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117986602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.438541097 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390080286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14363244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728152219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385371184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031500242 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163290857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145259142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124649337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113350407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704024029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.050031309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350604239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.035350394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.347215017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699014418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129179422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130080195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09940589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012042317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095687535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096996957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127434765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696545448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428565877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096056482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.390659838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123549776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101014124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413938328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097076889 seconds)
  done (took 17.066508216 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102422491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186215126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104225423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126703267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100629615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126868662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106421238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139757656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187733248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095809729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143087667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095707351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130244999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096400883 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144889681 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09562619 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12788403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098253707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133099038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097982986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145424461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094990085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126616639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098443678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125479774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108952739 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126301464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109986332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126505118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100764492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131257795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097138946 seconds)
  done (took 4.908067059 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148055946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195057371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133943124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131984874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176634471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126592652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.182255637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165366196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191256849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12533599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114302668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124770713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132976599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127083322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11752163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.125946537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099912745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128331791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103474703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127934831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14404235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096874013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097736898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128198882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096120535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140301824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096798443 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139172428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125414399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102280239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13033108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098074229 seconds)
  done (took 5.253776541 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105236629 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135049308 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114482229 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142519081 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099699986 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133242205 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.10498755 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128271594 seconds)
  done (took 2.045729696 seconds)
done (took 30.346141001 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114758393 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.102490873 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.139980539 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.110393664 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.13792049 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.121234609 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125401136 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108776961 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139045763 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.106400975 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142309837 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09696951 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12815114 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096468801 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.138304333 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102644322 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.139544901 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107085932 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.146730956 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113121337 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126923103 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108968911 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105960862 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147418981 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.145308285 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.118222445 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142253292 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102934811 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126798498 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098154248 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140330691 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118808393 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128720694 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113677224 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131298568 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.101603802 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126644506 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099172647 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.140514354 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108662451 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.131742478 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109157111 seconds)
  done (took 6.160664934 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.124720049 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.169800825 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097170508 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.128575084 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098150495 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.16494116 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.161989488 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.098317823 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127155452 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.122831995 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.152557931 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.09903848 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.127469289 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098933696 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126197536 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099157972 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.149949551 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.121976067 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.156200518 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.127839761 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.170763263 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.158383026 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.131570205 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.150395648 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.168725148 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.1609708 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.119176041 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.162476366 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.124486799 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.127510581 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.156751986 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.128854293 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.12591898 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.097852891 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.166748267 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.132496403 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.154952458 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.16625262 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.156696081 seconds)
  done (took 6.401740913 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106241807 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140260734 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119203617 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19343915 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136298653 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.140837303 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107651564 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145755884 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113854363 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.128087294 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.107300364 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157688989 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142808864 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105726859 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104700981 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141499666 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.146617043 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099397763 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130843429 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116752727 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.143970029 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.111124704 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139165972 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108015076 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126341575 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107139447 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.129151374 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113342919 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131949741 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10599196 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131084945 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102711621 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134385822 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109686569 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.139727244 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106428227 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149734826 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107683284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137022507 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.131670458 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140232134 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102236403 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150219156 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167850898 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098954944 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135075009 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104261353 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135464412 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097732363 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145178807 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10904811 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097773433 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144408433 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12641932 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097056397 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141982261 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098954391 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100529815 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136966413 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104220685 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147503639 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.130505415 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11367555 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098450426 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132296017 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097612581 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127502655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102864913 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14881217 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100463375 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166618972 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127430305 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.104099747 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134629526 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10416359 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135921488 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097648997 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111038742 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139064349 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102065375 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137211635 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101654847 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130523166 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115395829 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142462895 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134968364 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104514426 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133428101 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101735757 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127561914 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112779321 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129235525 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102623774 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115620695 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.127973402 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.10160579 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134131058 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10306183 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126947894 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110740435 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.132869508 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097359497 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137251092 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098190226 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131240308 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107548451 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132213982 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097607631 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.131741778 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105017148 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127659285 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101230925 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.13168296 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100892489 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140834139 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10562945 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130194544 seconds)
  done (took 15.403297257 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.24603057 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.226282796 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.201271352 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311672169 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.150002255 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125906193 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222310398 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.179859186 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128810335 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.138363042 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183526451 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.194764289 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.18379991 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.194983719 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.185981841 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.129361107 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118123186 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.180710265 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.226962259 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.309805595 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118728474 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.144280778 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.170326737 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169463449 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.117879956 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.144887004 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.151586374 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.121259898 seconds)
  done (took 6.074833243 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115940301 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.164746367 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.106509192 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155069643 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156357446 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.100145428 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.133385245 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099416527 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.141809289 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113542871 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.13085883 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106534298 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135474972 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107890034 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.130180022 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108430357 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.139221263 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108166338 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133021829 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103411355 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.143611932 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116485209 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135979979 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.10132298 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146620303 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131256657 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102102568 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150537861 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.136626088 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125272923 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.126387299 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107624792 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.143513599 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098262815 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101134546 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.132922669 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.10046279 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131165667 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.100547676 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126282539 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.099469298 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.119252924 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101313842 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145469772 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106790038 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.127205633 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104431898 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134270046 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106094573 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126141168 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100451686 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101407032 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134859586 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.606344195 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.132748149 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105867209 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.134785157 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10048301 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.139078022 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.101332107 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.12647149 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.10124407 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136057478 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.102991508 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.137521062 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.104808575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130719882 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.100656276 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.13537483 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106396371 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.131344187 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.107621923 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.126355247 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101093339 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.139170077 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108088742 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.133139814 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100943822 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131794737 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098410874 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087413673 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.127964893 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086065063 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133444469 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098138237 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130417312 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102247062 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134425834 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.116099592 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.138073599 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107126116 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.13017814 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101586284 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.13364412 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096817576 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133179104 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117013398 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149938619 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09864631 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.128040649 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11521103 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131545065 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097416678 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121271617 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109360929 seconds)
  done (took 14.174745493 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139680287 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.180163669 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130303569 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11871686 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.164733582 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.171464026 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107935731 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.137667663 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099447957 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119305417 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.132840895 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108035469 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133273004 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.113486496 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171220171 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139305664 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099846977 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.14425872 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104795597 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.183614664 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148839251 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138706281 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.169994213 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.133038376 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104590002 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.167574277 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.174651504 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113414289 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.142079899 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140382051 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.143597482 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.17394115 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171697982 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105627697 seconds)
  done (took 5.848045669 seconds)
done (took 55.138494936 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.203812332 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.417108241 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.1769519 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.175600318 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.242485501 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.217822444 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.176909512 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.391309354 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.947576028 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.167079957 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.174634468 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.176509996 seconds)
done (took 27.573619886 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.283055042 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333713968 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474641065 seconds)
  done (took 3.915873 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.178271242 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.176427246 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.420854494 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.182128083 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.176273744 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.193861076 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.193953881 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.18060814 seconds)
  done (took 15.626047443 seconds)
done (took 25.106977712 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.239358896 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.35445093 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.434157142 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.206840982 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.176776137 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.190247563 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.179659218 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.22855822 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.187182761 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.178264868 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.183983294 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.434967889 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.213739228 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.556184616 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.18745928 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.191990368 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.196013948 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.409681198 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.192937405 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.22866792 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.165543371 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.16826946 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.201760646 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.216824724 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.187864149 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.180726125 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.232815749 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.178510178 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.384035588 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.191821611 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.222820809 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.180014546 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.232755198 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.188069507 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290720724 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.209061196 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.385207161 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.188669612 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.166935951 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.190363292 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.377761649 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.586413989 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.179210381 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.187808926 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.179092827 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.236104323 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.167760433 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.905402099 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.179042318 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.180667785 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.230858364 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.575050451 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.189351229 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.194427754 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.193105553 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.427253106 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.184700905 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.228441251 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.222333033 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.193799641 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.179217382 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.181074714 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.236251705 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.198677789 seconds)
  done (took 142.252764586 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.180193125 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.183856381 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.184849391 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.203443694 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.185508707 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.185748706 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.181345726 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.180754367 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.184681145 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.189178033 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.184803316 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.185224359 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.185703314 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164143092 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.184500743 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.2034014 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.187546468 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.203162091 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.202202844 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.181742526 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.189314274 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.185500697 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.203241154 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.185660252 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.183841542 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.262351421 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.228399695 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.186737758 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.180052953 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.181835152 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.185601192 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.189427521 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.820770203 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.034924238 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.196191159 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.210859425 seconds)
  done (took 79.474114263 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182908755 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.183011094 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183060344 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.216623382 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183505855 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.760465126 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759096146 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.923777451 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.6604378 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.615536739 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461079684 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.184042541 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279469211 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.182787147 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.197655201 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189472839 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.199579139 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.208602338 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184252273 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183892414 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778472091 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.200525179 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.412415324 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.362008616 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.200483246 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21647962 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584492833 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185523112 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217439258 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519699012 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.239190044 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183859435 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.600447454 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.292631537 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300241229 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186215164 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218033857 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.186000625 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469385001 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185763526 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.185674853 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.187965493 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871302783 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.185454401 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.763428421 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184336959 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.153793697 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.186672004 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186494165 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.205363021 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.934153723 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204004691 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.185607765 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.187907567 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.186164974 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185748406 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.185553238 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218364883 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.191136312 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.284334268 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.187481528 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.189919548 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219163895 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.186782056 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.206038662 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205269353 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.892847332 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262304492 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310571163 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782529937 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190572433 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.187575902 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28528567 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30877844 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187479647 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187255386 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187186933 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.187291216 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298649131 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.18784506 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.618695313 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.366362845 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203372689 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.61539137 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291489347 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188887374 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608105179 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193083198 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.187157043 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950081522 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286617413 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.188548778 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.188843879 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18727409 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.620256239 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.769143129 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.450693536 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191724313 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.384031419 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.193131534 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.628261717 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757096361 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.871616176 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.189270677 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304311818 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.367363884 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.206415191 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.187970259 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.627929653 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.194579851 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.244596058 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194238311 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188608874 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.589421557 seconds)
  done (took 365.353118701 seconds)
done (took 588.187768629 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.883173687 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.837988018 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.973819953 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.865682584 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.83697935 seconds)
  done (took 10.511560509 seconds)
done (took 11.625920622 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381298204 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381857051 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250588373 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.3847189 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222931748 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400755291 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366299132 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211751881 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.296883043 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275108026 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294601373 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244878924 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224933106 seconds)
  done (took 18.050946948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549467193 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192228643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272575707 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516654085 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231371962 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52319146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402838064 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.209400495 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.391922538 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207671852 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205154821 seconds)
  done (took 17.818796765 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535374579 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192078959 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2743743 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532488439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231601603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540404369 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408748766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.211472109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.40615555 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205125792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20514681 seconds)
  done (took 17.85971202 seconds)
done (took 54.847083654 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.231865883 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.361742378 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218953362 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.204676341 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.201310597 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.20478064 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.207903723 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205762424 seconds)
  done (took 10.952272245 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203121712 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.198391863 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198113301 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.199668203 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.2025756 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.201367694 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.199749395 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200344548 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197527609 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.198485421 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.201628514 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.200932367 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.198470539 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.199197697 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20124073 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.198573559 seconds)
  done (took 20.317217392 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.200798044 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198169701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.19966776 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198688573 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.19904707 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.200088767 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200117662 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.198781349 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.198641053 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199178912 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199994963 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198705212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.199797088 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.199385516 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.2010924 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199834898 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.199955439 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200443163 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.205001458 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.198633631 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.199923439 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199802053 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.200458259 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.199947141 seconds)
  done (took 29.916706162 seconds)
done (took 62.302226939 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.202476774 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.213379537 seconds)
  done (took 5.534723601 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.261142444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.263200959 seconds)
  done (took 3.646655214 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.203574481 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.203284251 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.202745229 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.203694055 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.203162521 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.203116336 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.204224167 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.202538087 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.202043878 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.203769009 seconds)
  done (took 13.151785611 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204856456 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203641886 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.200722677 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.204312092 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.203953402 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.202438719 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.205164046 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.203933524 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.203261244 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.201038387 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.203854973 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201249582 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.20442648 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.201521132 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.203327442 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.201642246 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.201690258 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202736703 seconds)
  done (took 22.774475441 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218482986 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226010674 seconds)
  done (took 3.564933497 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.331883762 seconds)
    (2/7) benchmarking "second"...
    done (took 1.243208442 seconds)
    (3/7) benchmarking "month"...
    done (took 1.320857848 seconds)
    (4/7) benchmarking "year"...
    done (took 1.299407877 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.243804062 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.223905167 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.243331827 seconds)
  done (took 10.027907904 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20581297 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408081364 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.51934723 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.771023911 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.206320473 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.208824931 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.061530992 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.209278591 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213398889 seconds)
  done (took 13.925444605 seconds)
done (took 73.746110795 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.201320409 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.227696814 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.206687224 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.210740749 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.540625409 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.222198449 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.197362923 seconds)
done (took 15.929258636 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.187799729 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.201730866 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.186154669 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.195762775 seconds)
  done (took 9.891287082 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.20530496 seconds)
    (2/2) benchmarking "read"...
    done (took 1.514868562 seconds)
  done (took 4.840584713 seconds)
done (took 15.852150008 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204029841 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.203284623 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.200584061 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.203641565 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.201528683 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.200329997 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.203619631 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.203119631 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.202537488 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.201582975 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.204013175 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20378122 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201472719 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201789675 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204866822 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20188893 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.201830893 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.205463452 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201736246 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203080813 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.204335202 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203933154 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.202214736 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.201817266 seconds)
  done (took 29.986975157 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.205596952 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.201393681 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.20406562 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.204510298 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.202944364 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.20388134 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.204908459 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.203057053 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.204987752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.204902804 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203094434 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.202262953 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.204803586 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.203182979 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205214384 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.203752869 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.205210886 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203342492 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205885833 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.202416563 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.206258676 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203206547 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.203761604 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205976649 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.205403477 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203153291 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.206132991 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.203580009 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206260528 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20420194 seconds)
  done (took 37.2501914 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.209660804 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.21388682 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.205055944 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.206267591 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.205876907 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.206548461 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.2069706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.207562512 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.20705839 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.207934974 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.206300481 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.205431878 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206899413 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.206736885 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.206260638 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.205877142 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.206980112 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.207417165 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.207310115 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.2075482 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206985593 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.206645301 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.207015243 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.208463503 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.208694359 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.207715856 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.207127851 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.207068817 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.208920358 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.208800936 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.207508431 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.208424488 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.207238226 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.207713897 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.209012076 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.207542969 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213106877 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.214382383 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.209321907 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.209112075 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.208567388 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.209744215 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.208411733 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.208604636 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.209828946 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.207938395 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.209161779 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.209110045 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.208499953 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208581449 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.209416018 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.208818659 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.209541158 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.209773297 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.208017888 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210622502 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.209923704 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.21161224 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21009204 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.210260688 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.210335277 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.209460903 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.210023351 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.209217062 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.20990056 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.210032983 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.209586619 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.210136357 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.210061315 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.209434932 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.210903876 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.210678139 seconds)
  done (took 88.145311462 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.210502684 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.208564921 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.207962991 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20743375 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208397381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.210627393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.208223035 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210722848 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208664635 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21099549 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210267501 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208281226 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207577595 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210919033 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210029085 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.20848903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210715901 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209443093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.21138739 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212708395 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210843279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.20927911 seconds)
  done (took 27.73853924 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211758975 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211737107 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.209236011 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212336261 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210555098 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212520042 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.212646926 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212981616 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212058133 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209731182 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209697205 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212014778 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211689001 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208715072 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209458602 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211732701 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212916774 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211079483 seconds)
  done (took 22.929477499 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.210174418 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.211360924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.21312886 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210066917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21123046 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212866947 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211753887 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.214310564 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.213807152 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.210586253 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214321047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212748986 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.213830591 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211087036 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214847889 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211971326 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.214315247 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21165982 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214476204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210157529 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.211462041 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213712951 seconds)
  done (took 27.802395577 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214237336 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.213643513 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210545496 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21154464 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.211789946 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.214803802 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.214145981 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.211025952 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.215066879 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.214189061 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212729542 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.214660357 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.21297208 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.21196197 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.213234212 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212098305 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214080326 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212073515 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215241419 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.212854618 seconds)
  done (took 25.392824778 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217156432 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216529528 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.216109186 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217020035 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216000224 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.217964925 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216015851 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217103114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217756147 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218096084 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.21693868 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.218011117 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217507416 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216577031 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218209288 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217854661 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218171593 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218732584 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217578805 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218554932 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217814616 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217790592 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217747008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.218334691 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.218686868 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21878361 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218951178 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221436194 seconds)
  done (took 35.228579434 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219773883 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218238722 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.216412204 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.216984466 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.216254396 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.214899665 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.215184187 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.215276273 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218350426 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215717473 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.218210911 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.21927377 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217672513 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.219115218 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217997822 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.218964436 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220820772 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.218359812 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219859834 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21818437 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.221301146 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222433759 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222342816 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21932292 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2207754 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222593715 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219537477 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219360183 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220990297 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218854173 seconds)
  done (took 37.699238691 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.259136472 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259400105 seconds)
  done (took 3.653073137 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.216840396 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219934432 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.220001376 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217465673 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21726438 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220480347 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219310401 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21771558 seconds)
  done (took 10.882769862 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.220119852 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.219535547 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.21979308 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.220338789 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.222984212 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.220850038 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228382125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240891998 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.221383343 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.222550421 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.227959218 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.229563931 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.2236213 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221778206 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.220859268 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223237486 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.221197771 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.222278869 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.221552249 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.221774988 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222911285 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224542717 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224232628 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.21999065 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.224589839 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.232711651 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.225622825 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.221479264 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222463389 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224043124 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.222305026 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219204211 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.222303827 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.221959512 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22340659 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.222282259 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229692121 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246418518 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.229902008 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223092443 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224149258 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.219278029 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.22349619 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.223236775 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225340547 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223223408 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.223756261 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.220661868 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.221868988 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.227253971 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.229415313 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222030114 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.220278255 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225243555 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.223483645 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228106065 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.244291059 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.228246842 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.232468896 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.235756707 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.236613188 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250174117 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226029009 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.224097129 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235637025 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.248144379 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230269072 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.242500185 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.222316475 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.224799467 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.232309105 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237933893 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.252204472 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.226680655 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226860422 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.226897389 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227021904 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226056988 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23234176 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.247809618 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226072361 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228057172 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236096213 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249931903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227502846 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.22698982 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226679965 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.22709597 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229630164 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236391212 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247806717 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.226932054 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.225306016 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.227650325 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.227823261 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.227029801 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.22657445 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228854988 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225347011 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.227226215 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226765536 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230691282 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237220076 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228082503 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22975276 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.233539045 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226821025 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22711924 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232834686 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.22774937 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228593355 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230604192 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.234117889 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225418814 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232343352 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.237074081 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.227584211 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229988496 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.229161816 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228651837 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238281828 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257414816 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229360373 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.227392523 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.234002968 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.241853051 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229278571 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23261316 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.230331975 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.227121188 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.226088677 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.230561053 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.229198291 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229697365 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229632052 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229629927 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.227628968 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.229485691 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.230858287 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.230317305 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.22941552 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23396771 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234217163 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.235375732 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232710694 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234823844 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.24005733 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.235656701 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.237653814 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236349479 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231394121 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234881094 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.234903464 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.235841741 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233818787 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234975907 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.231942367 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.232233852 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231720555 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.232525825 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231273436 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.232541374 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23699563 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.23148375 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.235645474 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231054314 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.229838236 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230919012 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.231606579 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.230739509 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231472996 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.230137896 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.235738436 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.240612551 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.23215099 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.232595438 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.234211518 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232169868 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23226257 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233728218 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.235534641 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.240758906 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.233923458 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.239421748 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.232338473 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233857158 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.231347058 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232585379 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.231463341 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234183138 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.236249049 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.240627724 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245473072 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2594644 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234369891 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238376087 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.234680301 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.237806043 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.23779051 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.232958416 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.233929575 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234592054 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233648039 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233540757 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236254909 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234641099 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233433638 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.235194869 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.235898291 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.235744823 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235324715 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.235297982 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23534212 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.232590031 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235994187 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236070686 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235290085 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.232297792 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235442529 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235674417 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.236256318 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.236915674 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.242500238 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.232887355 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237561725 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236449565 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.237270125 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.235637634 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.237022146 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238043249 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23623476 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242359329 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.255688619 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.236719079 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24120603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257581543 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.234278949 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.238604543 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235788892 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.233973004 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240851334 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24353737 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.237782833 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.236614336 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.237421991 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237405188 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23712774 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242371156 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.234485239 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.237961948 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.237565068 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.238298513 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.233844222 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.237804497 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.237930739 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.238090518 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239152407 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238081189 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.238063191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237523846 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.238123998 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.238014321 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.239180262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241295493 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.246293192 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.243191097 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.238041946 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.241120999 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.239595262 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.241296342 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.238337565 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.23962818 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.23856007 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25093638 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.26561396 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244720334 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260523773 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.239602321 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244262373 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.2596928 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.24244427 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239392903 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240032751 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.238509768 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239048357 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.236877238 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239494608 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.239781787 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240065967 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.241341122 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24380742 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.239544083 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.239630308 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.240767029 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.241110773 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.240773786 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240981256 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.239711698 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.242495113 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242800179 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.239455412 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24075939 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246491061 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260719788 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242077111 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240725253 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.242185519 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.240973628 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.241071344 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.242648451 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24561099 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.249168191 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.244774363 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.250664012 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.243897484 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249658431 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.242170969 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244598029 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250868937 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239373778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.240510949 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.241810861 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.242199471 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248844001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.263006031 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.244260077 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.245315135 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242296805 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.242789834 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.242303813 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.242058382 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24168211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242354685 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250385357 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267161135 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.246286573 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244436561 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.239678319 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.24357632 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.241639997 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241443391 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24655413 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.242256203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24388413 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.242979306 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.242545708 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.24295318 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24300325 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.244912414 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.240222875 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.24375547 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249608243 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.266342212 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249524748 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.242851254 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.250560181 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245404134 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249838804 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265422163 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.244168885 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244355811 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.244438294 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.244913669 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243534195 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.244722823 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244515735 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247067313 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248841959 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24615059 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.246237766 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24400915 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246297706 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.245082851 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256141501 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268708193 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.247235125 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249950164 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.242609914 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.245680079 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251007801 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245123241 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244073979 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248563474 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257113035 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255193628 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.245644779 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246574146 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246993243 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247038665 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.245366864 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.24607715 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.246707891 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.246815553 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.245978477 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.246414875 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249730049 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245468927 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.244800897 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248043936 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247514769 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.256244044 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.246780204 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.24778458 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247803498 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.247666166 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.248083356 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.246703045 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247687796 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247210238 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247865614 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.248324199 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254679421 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254657576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249551068 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248673397 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247450476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.249036981 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.248322477 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248999298 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.247627056 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248015701 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24727392 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.247380254 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247361694 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.246885921 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.247108924 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.246726383 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24798772 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250338962 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255331222 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249244106 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245571659 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248184058 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24749964 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246415376 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.248523141 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.256616042 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252037835 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.260124187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258933982 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.25309677 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.250352079 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252258216 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.257386699 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.247614624 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.250473452 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.250473704 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.250498468 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.250729591 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.253761913 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251002809 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.257003588 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.250612522 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248161774 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2579204 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.273593313 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251215276 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.251196858 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.253233904 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.250482488 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.247189359 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.250738786 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.250461538 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257096299 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.271722785 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250459097 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252787 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.25091199 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.253166019 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256597741 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251813883 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.252054945 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247586483 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.252145971 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251018645 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252383829 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.249626092 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.251692037 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.251361391 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.255912828 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258793638 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.249302441 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252710187 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.251561717 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.252087081 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25264011 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25234973 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250100383 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.248806055 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25143392 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251805215 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253058307 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255113135 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.251865978 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.253766015 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.254226643 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25292525 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256706996 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262781134 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260780508 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.250154832 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252234756 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.253282666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.25604915 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253721451 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.254562097 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253777159 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25402122 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.254783218 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25330175 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.253984188 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256482048 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267801459 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.277998649 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25397941 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.254294783 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256066156 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.253261845 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.250930186 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.254033294 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.255434947 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.258867761 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262018695 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256106459 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260851491 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27470927 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.256769237 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259597248 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.257956292 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263608825 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257367774 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255729669 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.258083099 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.261102013 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.272283517 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256778885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266106744 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287722493 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276442969 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257430538 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256130562 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256352784 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257609249 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258595888 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.256411769 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.25738011 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257075715 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.257622314 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.25797049 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262245133 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.257695729 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.257286752 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.256924077 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.256475768 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258079226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254460609 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257079842 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.255386782 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255901556 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.25715184 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.257539511 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.257336214 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26804642 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.286529335 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25676373 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.257877414 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.254164868 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260298356 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.261531254 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268755595 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.265483592 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.258050766 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.258223739 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260402469 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258547231 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.257631249 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258364869 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.257596912 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25738511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.254833321 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.270871771 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285644273 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.262426342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.25792259 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258834239 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258263375 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260613504 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258664625 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259621465 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259494159 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262565765 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26424703 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.258719515 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.258783817 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262306488 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.266891452 seconds)
  done (took 741.956631532 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256590824 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25759349 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256437215 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255858149 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25724112 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257724578 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257350487 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256977627 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257917349 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256636905 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.255889886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256415111 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257208541 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257595587 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256617515 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25689744 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25803338 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258108813 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255528074 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258089606 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258033459 seconds)
  done (took 27.569406936 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.261287909 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.258311786 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25775031 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260325723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258592756 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261523722 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258456371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26033499 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261082266 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258788957 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261125591 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262585027 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258148484 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.258540823 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259539288 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261502831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2610415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258747109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261320038 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259318351 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26139616 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259814423 seconds)
  done (took 28.890772923 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.262929517 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.262970749 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261537539 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.258649367 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.261969753 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.259937118 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.263029568 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.263258703 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263751061 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.263100941 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.262298737 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.264212706 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27015903 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.269249428 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.262246929 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.263640152 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.263937126 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.264470122 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.263195868 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.260420386 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.269444686 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.282555634 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.26022335 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.262670131 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.265133435 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264738886 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.263709166 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264959865 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.264536088 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.269368213 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.26404581 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.264948686 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.266140091 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.263890535 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.266622768 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.268313445 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.265762549 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.262191575 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.264703509 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276017375 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.287612588 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.266134045 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27145314 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.286843372 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.265586973 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269612157 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.274699455 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.263421777 seconds)
  done (took 61.955502048 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.265124859 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.266055081 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.262395094 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265545863 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267028342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267201374 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.265939708 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265724812 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263598768 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.264038659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.267271085 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.264078338 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265454646 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.266783209 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.267615555 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264379379 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264900125 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264545829 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.263605158 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265824904 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.26349794 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.2670772 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.26664385 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.264564766 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268182723 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264363395 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264657465 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.268038139 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.265453826 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.264854496 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268304319 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267591848 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.266946348 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265002859 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263753249 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268274513 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266444928 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.264188549 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266939929 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.265920753 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.26798543 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267060259 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267238614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.268565289 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265523736 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.26474265 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26648589 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.266095851 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.265670101 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268791029 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.267653062 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.267539458 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268488809 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.265756434 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267393384 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.269576119 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.266366255 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.266385292 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267748886 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.265641237 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.265960611 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268821761 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.26583411 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269503596 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.269072408 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265630593 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.265971159 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268972628 seconds)
  done (took 87.286973139 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269889515 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.270343597 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271141822 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270031007 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27068988 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271192241 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270973511 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.270962322 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270911259 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271506489 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270727736 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270851039 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.270715986 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270594678 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270740311 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271995476 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.271503068 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271879903 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271454861 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271469386 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272639063 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272032641 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.272872803 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.271938968 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273363235 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271908903 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271796184 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272535746 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27201463 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272522583 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272173741 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.272028277 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272944877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27286086 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.272193732 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.272806922 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273316667 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272403082 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.273213808 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.272856364 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273614969 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274033618 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272110846 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.273126049 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273187474 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273112886 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272991679 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.27294789 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27212936 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273532388 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.273098183 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273243783 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274853323 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273632518 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274671554 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27377507 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273458201 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274052294 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273036028 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274744389 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274561931 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.274678284 seconds)
  done (took 80.069205298 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273135906 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273082371 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.27154431 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270333776 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274918062 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273193454 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.273513584 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.273435836 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.273660125 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.274421119 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275759716 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272538603 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27333555 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276208948 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272685674 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273397044 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273394441 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271627373 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274441221 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272373335 seconds)
  done (took 26.649855683 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.274361581 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276020124 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.272180075 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27314905 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.274909326 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272704734 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.275929553 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27447019 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272482043 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276846255 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275683199 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276013821 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272655396 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273478076 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275782748 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274549917 seconds)
  done (took 21.57606311 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273709451 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.276484951 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.276281107 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.276281325 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.274151518 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.273590127 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.276093055 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.274165725 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.274360376 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.276841881 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.276826764 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.277200846 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275607981 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.27739702 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.274065042 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.277111088 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.274538028 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.274969027 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.276470897 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277616073 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.274322489 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.274097422 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.276614911 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.27746145 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276055177 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275346864 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.275157636 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.275455515 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.274757711 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.277832822 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.275105484 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.275546014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.275232735 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.275734891 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.277896852 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.275766291 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.277431267 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.277565195 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279168872 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.278642615 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.277210747 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.275535445 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.278157584 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.279432315 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.276972793 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.278333837 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.276177076 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.275486789 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.276269383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.277186581 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279358481 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28046769 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.279085919 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.279558669 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.278532676 seconds)
  done (took 71.393374727 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279411546 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27976608 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.276730314 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278497445 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278231339 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.277167022 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.279896928 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27839823 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275869902 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280181422 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27820558 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280938915 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276822561 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279209274 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277555817 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278847106 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277529679 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277079695 seconds)
  done (took 24.198946535 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278867087 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278526889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.281593563 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278166393 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.27733093 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281893209 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279040548 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.280191018 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281965304 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279791753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279087735 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.282391612 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280803975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.281435407 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278727546 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278314655 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281786241 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282034107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279296331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279294888 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281717058 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282437577 seconds)
  done (took 29.354802459 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.280654682 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.280162597 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.280250637 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.29752757 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.302250472 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.281711084 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.284003269 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.280752604 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.304683582 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.33533775 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.329350826 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.30143412 seconds)
  done (took 16.749015487 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282302573 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283133364 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278935245 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281128311 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281062579 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279393714 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279862887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280659947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283927823 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279653928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280548553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281456972 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283195221 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279018478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281805579 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280886315 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280426592 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279299434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279695306 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281170435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279337201 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28206683 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281601939 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280865865 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280055786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280440721 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282310029 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280899466 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280097248 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281922184 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282420385 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280877777 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28393326 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281554998 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283842761 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283897555 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280166606 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283243028 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282412016 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282203347 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282387223 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282974786 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281768024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27990733 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282787267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280908502 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279438684 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279653383 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280915853 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28298179 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283900754 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280501101 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283242811 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283748271 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281769881 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283553255 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281226211 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279773787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283074816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281401942 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280659026 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283564004 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280054995 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281071054 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285141854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284815045 seconds)
  done (took 85.776389182 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281826458 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280968844 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28105602 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28167542 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282104327 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280225291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281355333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280600573 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281630075 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281084953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284002176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281016615 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279507766 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280849385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281373667 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281783565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281336829 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281049661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280778909 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284009912 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280389816 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280759113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280516975 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281182797 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280261654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283657692 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280402787 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281865638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281128055 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281123855 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279593466 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281111469 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280370967 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283171433 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281968786 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281294062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281059999 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281705122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281361933 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285109284 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280509272 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283856321 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281335382 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282415258 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281261136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280855143 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280645512 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280965075 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280577576 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280922815 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283211116 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280448981 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282263632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281025905 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281561148 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281276543 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281542001 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2806315 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28251643 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284568754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281228776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281728118 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284348927 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280932891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283491333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281483016 seconds)
  done (took 85.775145802 seconds)
done (took 1737.031347232 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.445506349 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.402441739 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282533762 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.295412426 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.282946497 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.306976699 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.293793319 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284126168 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.283465193 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.283200286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.283894034 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.472541227 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.278625857 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283588564 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.285313496 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.379173086 seconds)
  done (took 26.337310663 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.314493419 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.292491458 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.410899575 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307692851 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314454863 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.487073588 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.348150789 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.292671778 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.470712148 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.33375578 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.289353964 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.313576337 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.289725632 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.286587778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.307820442 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.489435105 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.545512173 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.290758697 seconds)
  done (took 28.579615503 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.768669639 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.28647181 seconds)
  done (took 5.249262459 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.310626683 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.291458104 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.291100954 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289274981 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.288457915 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.280524209 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.289439065 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.284827002 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.2814389 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.427517344 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297039041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300357271 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.312464312 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.291184586 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.287038575 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330186516 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464433871 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28912836 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.286865006 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.295321565 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.291525263 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.39596836 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.335661313 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291606809 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.42500176 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.287734215 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311808555 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298121932 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.419797868 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.290434094 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.289077946 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.291264038 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.292845373 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.2343875 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.813042002 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.283581457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.3182778 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.30123988 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.288623852 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.440256054 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.293281644 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.299336217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.284054798 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.784783489 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442316325 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.418887964 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.317827628 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29550172 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.295989249 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.362886965 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296051056 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.293780911 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.337115461 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.107705794 seconds)
  done (took 83.116631262 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.336031393 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.284086916 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467530888 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.30684192 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286983237 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285986823 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.30302244 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.593966936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.286081083 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286196142 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.589403563 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.861100507 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307563027 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.321891532 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.16910787 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.341356042 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288390277 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.287635605 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.287897388 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.286269939 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858738258 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302546573 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.285368219 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.364383838 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.326873526 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825836644 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.286205538 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.307762872 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.288377012 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.286807628 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814632388 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.310824885 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.339525718 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.292727711 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.577096777 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.690420879 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.645899756 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.290245014 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321598087 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.289513794 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.288519317 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838926603 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662328581 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.287211107 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30241502 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809655371 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.285006196 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.289373797 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.290529562 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53414579 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.286213084 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.291793479 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.293780275 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.285161103 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.286740156 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.28898535 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.348423441 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820798196 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28565907 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.290103751 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.29469444 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.284889849 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.292783217 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288464062 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.289445108 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663156129 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.450654895 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.291791515 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660467712 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802703643 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.301809326 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.88895517 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.303805749 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.289294463 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.465933981 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283843777 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.289898483 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809699075 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.286328276 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285806033 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.642624712 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.290557253 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.584893175 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.304464827 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285747828 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852357387 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.294472953 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.356970042 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.284399661 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286306421 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301515562 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286937187 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.571667809 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.314062218 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.284816534 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.28651273 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.310940944 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28601695 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.286503565 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.29370756 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868075338 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.302106934 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285596867 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288575127 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286792599 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.28518707 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.286140546 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284337691 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554544297 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.28494609 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.285688032 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286038763 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.284293974 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.295733859 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348578051 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.289764449 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.609179697 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.286148146 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285989006 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.285906044 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.285044184 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324597488 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288096384 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.292299439 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.175856434 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.625413232 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.304510216 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.283703308 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283846568 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290410483 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283090859 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286373853 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.311870278 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.289142654 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040842415 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.313793285 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.307098419 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283589747 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.29745069 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.285640109 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.290398132 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285162571 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.5792567 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.566181988 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.459755002 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.288976279 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285556834 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.036336621 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.325088455 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466932766 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305078886 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.286177185 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574533168 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.478996177 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.287110343 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.284564353 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.288560041 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557838007 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.285784767 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609908493 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.824612084 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303905354 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.289723749 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.039126474 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.988722184 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.288041122 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.292156196 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.576629049 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.30655076 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.286233775 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.286150888 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.288048356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.286615644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.305681273 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292544167 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.286614934 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.287779717 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.325207656 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478285711 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305151492 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295738364 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803943304 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.376142475 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286583395 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.296018409 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.291284083 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.28707447 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.338697715 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.290186092 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.304760615 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.289131332 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.293793203 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.896368101 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.288227914 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.289427197 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481390224 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975709201 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.304697784 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.300078315 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.287343716 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.169801998 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828944859 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.305525828 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.604008583 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.289638506 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330256943 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288293047 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.345574303 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828757153 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291929218 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289723987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933071735 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.303294118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.710352218 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.289875168 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295041364 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864963201 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.305547077 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.292986157 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.285594609 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287164743 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.586854494 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.287944836 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.311522171 seconds)
  done (took 488.105465149 seconds)
done (took 632.582041127 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.289486493 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.288960052 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.281148906 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292662413 seconds)
  done (took 10.351526907 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300432136 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.295610845 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.296112866 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.294667651 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.299448167 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.295136775 seconds)
  done (took 8.98417231 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.289529676 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.288353887 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.293747593 seconds)
  done (took 8.071770356 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.499324336 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.30799352 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.623789393 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.317481375 seconds)
  done (took 8.952264342 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295400828 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.295804661 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.297005349 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.29824915 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.300422492 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.300966735 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.298551134 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.297939409 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.301549766 seconds)
  done (took 12.885880363 seconds)
done (took 50.444588542 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.292052605 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.28987388 seconds)
    (3/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.394556943 seconds)
    (4/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.287294064 seconds)
    (5/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.420419977 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.565174897 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.34908605 seconds)
    (8/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.316085551 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.315536236 seconds)
    (10/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.315653694 seconds)
    (11/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.319225095 seconds)
    (12/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.633108454 seconds)
    (13/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.307488427 seconds)
    (14/286) benchmarking ("sort", Float64, true)...
    done (took 2.291672042 seconds)
    (15/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.289715256 seconds)
    (16/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.873115432 seconds)
    (17/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.30250674 seconds)
    (18/286) benchmarking ("sort", Float32, false)...
    done (took 2.291071702 seconds)
    (19/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.306966597 seconds)
    (20/286) benchmarking ("sort", Int64, true)...
    done (took 2.296350421 seconds)
    (21/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.276947541 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.419325277 seconds)
    (23/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.539453334 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.410477244 seconds)
    (25/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.374426121 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.276266531 seconds)
    (27/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.463811675 seconds)
    (28/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.276466897 seconds)
    (29/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.295502899 seconds)
    (30/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.316620674 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.302258118 seconds)
    (32/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.378582929 seconds)
    (33/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.885371395 seconds)
    (34/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.28186184 seconds)
    (35/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.277105124 seconds)
    (36/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.277861832 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.322563494 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.279778696 seconds)
    (39/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.383259131 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.402889004 seconds)
    (41/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.374849792 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.30180927 seconds)
    (43/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.119672067 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.583442247 seconds)
    (45/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.314426842 seconds)
    (46/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.297680366 seconds)
    (47/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.283386135 seconds)
    (48/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.246913773 seconds)
    (49/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.039871563 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369880161 seconds)
    (51/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.342641547 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.356492836 seconds)
    (53/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.318585548 seconds)
    (54/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.37686496 seconds)
    (55/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.290945011 seconds)
    (56/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.292448091 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.309078598 seconds)
    (58/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.29210904 seconds)
    (59/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.057857752 seconds)
    (60/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.359258346 seconds)
    (61/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.316975063 seconds)
    (62/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.420243775 seconds)
    (63/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.278871957 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.310544805 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.278133546 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.299884302 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.28778531 seconds)
    (68/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.301028458 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.28039064 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.625035588 seconds)
    (71/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.177034752 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 2.294402018 seconds)
    (73/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.394733725 seconds)
    (74/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.279866932 seconds)
    (75/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.387008561 seconds)
    (76/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.632754606 seconds)
    (77/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.357805136 seconds)
    (78/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.278812554 seconds)
    (79/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.430585001 seconds)
    (80/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.438776203 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.280785124 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.286774693 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.280226433 seconds)
    (84/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.295578844 seconds)
    (85/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.844271984 seconds)
    (86/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.303345692 seconds)
    (87/286) benchmarking ("sort", Int8, true)...
    done (took 2.292542662 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.061690047 seconds)
    (89/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.287776994 seconds)
    (90/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.284445582 seconds)
    (91/286) benchmarking ("sort", BigInt, false)...
    done (took 2.294694443 seconds)
    (92/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.919219221 seconds)
    (93/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.79736902 seconds)
    (94/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.123622969 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.935530641 seconds)
    (96/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.281216665 seconds)
    (97/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.322056718 seconds)
    (98/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.279322743 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.285535866 seconds)
    (100/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.289552802 seconds)
    (101/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.282004001 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.208147928 seconds)
    (103/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.399723364 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.515395668 seconds)
    (105/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.39064289 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.297933035 seconds)
    (107/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.352512517 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.319814062 seconds)
    (109/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.280126567 seconds)
    (110/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.3007791 seconds)
    (111/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.286620058 seconds)
    (112/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.280130607 seconds)
    (113/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.833466748 seconds)
    (114/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.297725209 seconds)
    (115/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.294434397 seconds)
    (116/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.491862961 seconds)
    (117/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.378742402 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.505611229 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.933200546 seconds)
    (120/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.320673189 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.809201544 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.321334783 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.572637151 seconds)
    (124/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.185545975 seconds)
    (125/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340269489 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.044468722 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.556666006 seconds)
    (128/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.294111461 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.200726472 seconds)
    (130/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.904424358 seconds)
    (131/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.30217215 seconds)
    (132/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.308674248 seconds)
    (133/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.286152498 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.397777573 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.116517246 seconds)
    (136/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.443137958 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.054931372 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.322493355 seconds)
    (139/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.281381247 seconds)
    (140/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.32313105 seconds)
    (141/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.31773304 seconds)
    (142/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.161730178 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.142062971 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.296462032 seconds)
    (145/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.287581376 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.84987825 seconds)
    (147/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.307147126 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.317964947 seconds)
    (149/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.304197663 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.049831587 seconds)
    (151/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.283305103 seconds)
    (152/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.409243951 seconds)
    (153/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.282968721 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.284716435 seconds)
    (155/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.315264901 seconds)
    (156/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.361837814 seconds)
    (157/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.242337907 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.289799687 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.29700637 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.693558095 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.07334458 seconds)
    (162/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.305879968 seconds)
    (163/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.638294695 seconds)
    (164/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.644937197 seconds)
    (165/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.304071226 seconds)
    (166/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.187663086 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.343300308 seconds)
    (168/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.310075105 seconds)
    (169/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.324815842 seconds)
    (170/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.409538186 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.284420999 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.339623431 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.308407981 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.290461649 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.321724539 seconds)
    (176/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.297148393 seconds)
    (177/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.761770649 seconds)
    (178/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.404490817 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.424710261 seconds)
    (180/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.285952018 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 2.344479764 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.357514358 seconds)
    (183/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.894370077 seconds)
    (184/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.30093898 seconds)
    (185/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.3051539 seconds)
    (186/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.285936381 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.595055434 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.313462703 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.289254586 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.500123547 seconds)
    (191/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.301799126 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.319870702 seconds)
    (193/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.288242486 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.296379762 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.286292366 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.425725659 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.699688032 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.308927777 seconds)
    (199/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.325312062 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.132150603 seconds)
    (201/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.310254726 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.305124993 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.300762159 seconds)
    (204/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.493343164 seconds)
    (205/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.286850788 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.323888846 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.288002784 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.713511325 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.621136221 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.304075743 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.342534101 seconds)
    (212/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.746825873 seconds)
    (213/286) benchmarking ("sort", BigInt, true)...
    done (took 2.30156031 seconds)
    (214/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.318015662 seconds)
    (215/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.288601084 seconds)
    (216/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.340923449 seconds)
    (217/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.303032988 seconds)
    (218/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.366902126 seconds)
    (219/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.317047231 seconds)
    (220/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.291256876 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.343783723 seconds)
    (222/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.13198072 seconds)
    (223/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.288057939 seconds)
    (224/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.289157877 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.632221489 seconds)
    (226/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.297735268 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.387226369 seconds)
    (228/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.326084711 seconds)
    (229/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.895418723 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.432020819 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.318721955 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.303603744 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.138710873 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.287560123 seconds)
    (235/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.292697225 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.513674175 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.219725431 seconds)
    (238/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.031605157 seconds)
    (239/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.302552415 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.289628769 seconds)
    (241/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.318879944 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.388751116 seconds)
    (243/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.656908746 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.333609538 seconds)
    (245/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.384431985 seconds)
    (246/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.302231956 seconds)
    (247/286) benchmarking ("sort", Float32, true)...
    done (took 2.30368771 seconds)
    (248/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.640645047 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.693397841 seconds)
    (250/286) benchmarking ("sort", Float64, false)...
    done (took 2.301627278 seconds)
    (251/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.451183172 seconds)
    (252/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.29051159 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.290005089 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.294667338 seconds)
    (255/286) benchmarking ("sort", Int8, false)...
    done (took 2.304956056 seconds)
    (256/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.032247196 seconds)
    (257/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.479057143 seconds)
    (258/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.301375848 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.695623359 seconds)
    (260/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.436015516 seconds)
    (261/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.290673831 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.385445563 seconds)
    (263/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.152666036 seconds)
    (264/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.304101334 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.405760539 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.302560689 seconds)
    (267/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.295337489 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.413949487 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.301172277 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.304782185 seconds)
    (271/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.059015446 seconds)
    (272/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.445480544 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.34548527 seconds)
    (274/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.322000183 seconds)
    (275/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.305047888 seconds)
    (276/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.330838059 seconds)
    (277/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.291141593 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.344816038 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.203954556 seconds)
    (280/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.307164765 seconds)
    (281/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.320789651 seconds)
    (282/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.09976531 seconds)
    (283/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.291044781 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.291441949 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.322928247 seconds)
    (286/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.317822456 seconds)
  done (took 556.172561716 seconds)
done (took 557.37430057 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.338771504 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361063822 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.315827238 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.338506601 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.430629051 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.493992791 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.327082233 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.319914797 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.365584626 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.366175118 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.323091171 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.492538784 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.318260297 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.319052627 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.317423197 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360141627 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.307989865 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.318770942 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.334976272 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.329301501 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.334343864 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325283019 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.36720199 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.494250218 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.321651786 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.319994845 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.322097839 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.338701566 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.433350583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.32202891 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.319671791 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.328788745 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.309358884 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.317802989 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.3141096 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.339539154 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.332734116 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.329653828 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.322192478 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.43099829 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.308469433 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.328472179 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.321026769 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.319775357 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.320453299 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.323781941 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.321008765 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.325399651 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362116296 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361530553 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.317127069 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.335113308 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.330606896 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.320190883 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.331638419 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.320863739 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.324063954 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367158347 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.340300609 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366275244 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.319426361 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.323631942 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.323516348 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.338001006 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.328169425 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.322227167 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.315839574 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.325149366 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.310083023 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.328042573 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.320867622 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.327126283 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.322956754 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.335373192 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.354133779 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.309487822 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.317238652 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.319931668 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.329625359 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.319746031 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.332179159 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364191117 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.326232716 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.322525722 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364943747 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.498037791 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.332829765 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.323575125 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.331437504 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.341897778 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.331633948 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.335868023 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.326202567 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.317512899 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.331462554 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.327231501 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331330461 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.332675814 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.328802789 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.333904506 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.312170471 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37230323 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.320464385 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.320838232 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.322779145 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.44589235 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.313152967 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.326507459 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.345992445 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.372939904 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.325752915 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.324332188 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.333306089 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370900135 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.333877894 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.327356524 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.319984861 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.324483869 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.323076841 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.448047702 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.327030871 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.330934502 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371888173 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.32664342 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321123956 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.313987845 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.326901523 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367771054 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.446590029 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.33699334 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.436126107 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.324324361 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.327724975 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.360918386 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371431743 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.358205301 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.329437069 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37292056 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.346341935 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.323008442 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.337477664 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.337376223 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.326812143 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.331454734 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.320910102 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.357592739 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368247419 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369420343 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.347184786 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.44802643 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.324729323 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.329872132 seconds)
done (took 221.298616814 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.384186326 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.321384675 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.423733675 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322888789 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.424123005 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.421568992 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319720413 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.31971941 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.319944308 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.702990429 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.321358107 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321555602 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.321952908 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32018976 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.403798008 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.324068734 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.321055509 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.665609416 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.324122027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.395036109 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.317971916 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.320852754 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.322798401 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.703048039 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.323121446 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.319199655 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.395105546 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.324051968 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.668224698 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.318492028 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.322276227 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.670185452 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.413754755 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341252612 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.335256031 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330925269 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.424613516 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.341875435 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.404355543 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.404569716 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.425310694 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.363635257 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.320900846 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.323659901 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.325915755 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.326266511 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.322366475 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.352110839 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.324333879 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.322726573 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.666373285 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.334739143 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.323789469 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.323307118 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322967863 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.354303281 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.323988978 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.325855494 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.415295608 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.327699993 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.387775377 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.705170356 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.706610215 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.327220288 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.323481331 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.324010412 seconds)
  done (took 103.807560224 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.392108546 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400331657 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.43975659 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342653565 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377384911 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.445170636 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.344569246 seconds)
  done (took 10.97060409 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.333250299 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327848305 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375080812 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375765183 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.328069464 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.540323843 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328293147 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.340183151 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.324764992 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.403684952 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.329183704 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329322165 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.335172675 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.32818477 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376657392 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.338773969 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.441995195 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.329268081 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.328900048 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479579375 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326614115 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.334315203 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.401065403 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.34012955 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.330863706 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.334958069 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.283007429 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329654988 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325650757 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.327911736 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326432899 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.437074145 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328771467 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.327812084 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325611611 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489045006 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.329906893 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326592668 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.328670533 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.329640133 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.32950952 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.329425432 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.330344606 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.326175978 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.328731712 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.353382483 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.32942986 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.328513979 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.32968109 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331263863 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.403344611 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330712355 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.327518438 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.327274211 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.40717879 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337094209 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.331127565 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.328342517 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331946038 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329090572 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.481904433 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379404806 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.331374431 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378295642 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331948339 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331645979 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.331859383 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.329528467 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423172893 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.331852938 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379669893 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.329454254 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.551643147 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355673676 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.333493856 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.334255561 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.334573432 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333747791 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.329666417 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.338469531 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.330823255 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.334841255 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.337378449 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331311712 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331373326 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.519618716 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.488924122 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.330354785 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.346382612 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.339658226 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.330730288 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.406989776 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.333132812 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.330905547 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385543682 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.448224451 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.409977402 seconds)
  done (took 137.788288739 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.338099423 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.341537004 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.336894649 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.358928933 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.337996913 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.335149512 seconds)
  done (took 9.282984517 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.334919247 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.335090493 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.332664033 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.333527286 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.333726984 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.334462494 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.336003558 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335599176 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.339562928 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33492054 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336104433 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.336744704 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.336232312 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.334680447 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335713307 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.334854118 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.335766829 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.333351268 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.334332903 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335907551 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.328018219 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.33475407 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335673413 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.337260335 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.340367484 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.33816145 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343199273 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.337160018 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3361031 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.34452846 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.359555272 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.336638408 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.338507466 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.341954993 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.340763122 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.338368924 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339876459 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.337226362 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.33318136 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.337021576 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.338702593 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337294023 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.336751763 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.338672029 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.339358975 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.34198076 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.343416118 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.34585968 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.337915143 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.339480611 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.340810877 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.337847388 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.339108052 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.340410261 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.340202272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360435143 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.341959377 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.338103136 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.336675142 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.339420453 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.338519783 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338969336 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340513961 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.3437209 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.337605309 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.340348235 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.340985508 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342333616 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339634603 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.338501093 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.341467933 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.336326217 seconds)
  done (took 98.612939869 seconds)
done (took 361.686880269 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.782317198 seconds)
  done (took 4.022390948 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.431832182 seconds)
  done (took 3.6753318 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.565999064 seconds)
  done (took 22.817337284 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.340856251 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.394372456 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.348157715 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.334362313 seconds)
  done (took 10.662431237 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.61075574 seconds)
  done (took 3.857134229 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.3405572 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.341695766 seconds)
  done (took 5.936913279 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.670772576 seconds)
  done (took 3.916158543 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.755890665 seconds)
  done (took 4.014382823 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.350975699 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.362877499 seconds)
  done (took 5.973985632 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.33118518 seconds)
  done (took 3.584124488 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.403636672 seconds)
  done (took 16.658287487 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.342373979 seconds)
  done (took 3.595477121 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.371154634 seconds)
  done (took 3.625835969 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.006896679 seconds)
  done (took 6.261139058 seconds)
done (took 99.839838629 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.346229574 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.345053937 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.343877639 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.341315119 seconds)
  done (took 10.628891625 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.384016755 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.385228169 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.404079089 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.394411167 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.387612189 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385029242 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.377541131 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.379115061 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.393843761 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.389570054 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389972437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390872301 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.384480949 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.378332616 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.388404655 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.388616005 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.397542664 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.387276934 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.376469522 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387685243 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.354285104 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.396374962 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.388357458 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.355334476 seconds)
  done (took 34.495300783 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.847658826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456835353 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.505330717 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418695937 seconds)
  done (took 7.483311081 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.401934299 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.40618211 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.418145709 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.45226225 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.47857521 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.416335389 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.374899129 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.370659054 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.358784342 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.405861809 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.482096536 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.422318491 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.486439509 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.35224104 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.545550408 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.354214029 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353439649 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.405190142 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.456315033 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470150157 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.351481737 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.403782784 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.407407937 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425495951 seconds)
  done (took 35.254930733 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.354914502 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.372392457 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.35647521 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.353674451 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.362267315 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.355079488 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355052444 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.354914406 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.354509522 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.359449095 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.353454764 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.366473795 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.359039106 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.356055877 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.360752557 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.35710784 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.36142781 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.355687353 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.355498333 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.362219981 seconds)
  done (took 28.418052644 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.348837338 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.347468208 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.701270382 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605361463 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.355058605 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.352399375 seconds)
  done (took 13.967139161 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.421738785 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.583421468 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.358929073 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.709239061 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.791647269 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.354171752 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.354948814 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.602683393 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.916202034 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.897090281 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.415485046 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.426259913 seconds)
  done (took 20.083195978 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.355829184 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.351383498 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.367317979 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.366193632 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.408897069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.37561467 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.364590065 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.348522964 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413394715 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4319205 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.376675519 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.413284228 seconds)
  done (took 21.82583179 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439761429 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352028832 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351304376 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399815086 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354655658 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191974033 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389625853 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095211593 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.375217219 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626407651 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364678513 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442866902 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609349898 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352449024 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355733023 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.344209898 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579907228 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843189323 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357102508 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351058231 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381178185 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3603554 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35615168 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57256134 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356166494 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351166724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.616884825 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35169989 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634930268 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369927577 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360776903 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353965868 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62908749 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019354468 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468997948 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564504977 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357754925 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352971352 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.343027593 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.357169347 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354334685 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354523151 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364026012 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352746671 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355162482 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364279152 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112197716 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379838458 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.352019041 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354561624 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613760082 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453451054 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.358902823 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35396858 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416500758 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350963635 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.360358675 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450476636 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936149972 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361594121 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368209562 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.357282257 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355840182 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370528488 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984482955 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.360383576 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360910961 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359614175 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356098042 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353037525 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37270667 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357313174 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.381866687 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356109241 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057769588 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361295141 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375751232 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930774904 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363320824 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.35917134 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584402138 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356007384 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354299228 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.355494963 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356641193 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076401319 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368946886 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.342370776 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399782272 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.122625958 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594396465 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376847359 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383916592 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.581616546 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.342315322 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358107556 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.371694783 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361643759 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377441005 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.095053894 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373835897 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360883097 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615593046 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.570970024 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358747763 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355321901 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858917977 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387213718 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.376745188 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369412871 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578018186 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.944209493 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373252209 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360197236 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373049681 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35924691 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115618079 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372553501 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.464503256 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360666858 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650289274 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.164864188 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362910995 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426927067 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366165342 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359750621 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363351341 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358568239 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360455464 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.566141747 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379939336 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.375400421 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.364234494 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36016647 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.355653825 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362439805 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.366252019 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58667654 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374049042 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638701731 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363573349 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361445165 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357377019 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582392974 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.359022647 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.700530495 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621982553 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361262081 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365492029 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391930967 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383115783 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463626702 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384678839 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.369484246 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621330201 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.367015178 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367640717 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369783007 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366302296 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36927631 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37028217 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363013703 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965290141 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344963643 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370383778 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254345268 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.375848856 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432111196 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371515226 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581619174 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.374236814 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366495263 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.369617384 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.361462941 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58891444 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37420393 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.367492722 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446558955 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.858801329 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968424369 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378084498 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.364903627 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.360620774 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.3619073 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363042843 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365662085 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364777619 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5815502 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380970166 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368651503 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965251494 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370319455 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363754013 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.367507561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379826511 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.374564875 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365881696 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.373229903 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373748309 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381322597 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.378871107 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512963027 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.380338129 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367857499 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.882875744 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371888916 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367717415 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368420737 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399572991 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368669512 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185293075 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623980006 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368309607 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622129967 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374970735 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.383466544 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.365448902 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365883247 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395583189 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.37298464 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375589696 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.379033032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375426457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369814534 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937541457 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098395045 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904043594 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3823155 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.376729658 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371412384 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125450363 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388300843 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370352164 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607436845 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140669068 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388432332 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868781226 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.383809698 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128305971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629927553 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603513898 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386148159 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.385423504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631069231 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583732936 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403389033 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367107583 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390782218 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.352709823 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95492898 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39270393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453026807 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125547861 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400534872 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371899649 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.443811629 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371808184 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781070699 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387440724 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374674482 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380898209 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371978188 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268251129 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37664102 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371019995 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007833015 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374638834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.867021639 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389562859 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587946609 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.386540099 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.373833576 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.365766725 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.384709948 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.627227738 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627252468 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372449319 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368934167 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914705626 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23112962 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375888686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370783416 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123699107 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377250703 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657801191 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.374864738 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.37735899 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37733459 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370553054 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369767524 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.368490714 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375606869 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350998996 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863023077 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.380377135 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379848152 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373113712 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221259052 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629512286 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.384271475 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952911754 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600659177 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37209169 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397406964 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.375563951 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371447689 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.363732275 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37255596 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370884821 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401714301 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591814928 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368520231 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.379034108 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453320329 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599164331 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370704888 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376501501 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620390112 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.37230252 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.380229962 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084678768 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400539186 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371991219 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377741371 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383056452 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395542449 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443451042 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592006612 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.388918303 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.384156478 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787780566 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393314874 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37576385 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.38792716 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46837801 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387526741 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.3822319 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.149279138 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96196858 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118329754 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967518254 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634776204 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38007184 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378092827 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37412118 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522073463 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374578141 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649097794 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375113786 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.373264405 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402688811 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375134875 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384932427 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587721221 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65001802 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374877815 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386099435 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378292839 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.374667555 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38705754 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.586716592 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873496245 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942343321 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381154079 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38024853 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131601954 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669329751 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376465617 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3772686 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376456971 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.385035873 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381527364 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.386796778 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384830821 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527537725 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634773781 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055059972 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.406867807 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.402701173 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.151279584 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383583997 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636990871 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373018367 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599942919 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967312402 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08523593 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644598674 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445473666 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594341848 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.377796498 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525746193 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.383924686 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380222489 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377088327 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224432532 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.374187505 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.390541996 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970325117 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645415196 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.382866935 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.384107799 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406124487 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.389499183 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602903445 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107264428 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605244581 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388505947 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384693295 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379528899 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975003114 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644002975 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380838105 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.379964793 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624535314 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382558765 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40458568 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.834376754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.376023 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950904235 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.353354722 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402595081 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39515999 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085301555 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974934595 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.395995983 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881364528 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383785178 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381744328 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657489682 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.386171288 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39178336 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658063212 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.384941726 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383298198 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603898442 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.969784574 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147666082 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.391061523 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398924176 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.385986507 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379403381 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440200465 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378983955 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386028152 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.811008996 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401996634 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379973853 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389637607 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.386982721 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398185614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.38162241 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382016172 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385475556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.37546456 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.371883367 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400121511 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482989265 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97719497 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410074044 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.051644841 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.718374798 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637839031 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38419135 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.37101417 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386868577 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38382178 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383288522 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380263645 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387328036 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950251517 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.392546934 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.396336989 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387807323 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.59873635 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594095391 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386972212 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604461659 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386988816 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401740676 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.370806493 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381525065 seconds)
  done (took 973.493062297 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.424495571 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.401459115 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.397097025 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.415068841 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42243074 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425232473 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.46740992 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.401533234 seconds)
  done (took 20.637330728 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.39465383 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.395421456 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.386925433 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.396498603 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.384049307 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.86453695 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.409614944 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.396766399 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.396082483 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.385303953 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.395549905 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.092638845 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.413119787 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.387780635 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.375911858 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.394965807 seconds)
  done (took 32.760988538 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.360725111 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.526152299 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.322445658 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.424439565 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.385779025 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.388248265 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.629480921 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.396009276 seconds)
  done (took 26.717153226 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.397555467 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.395539489 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.397184306 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.396372319 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.396463208 seconds)
  done (took 8.266910084 seconds)
done (took 1235.286074371 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.390777979 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.391379263 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.390701304 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392442902 seconds)
  done (took 6.84904139 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.373519096 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.371092426 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.374022607 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388146577 seconds)
  done (took 9.792064482 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.098285484 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.03021612 seconds)
  done (took 5.412730657 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.389693135 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.149307913 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.123185469 seconds)
  done (took 7.946765827 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.688302346 seconds)
  done (took 2.974873206 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.792837669 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.756769103 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.578345653 seconds)
  done (took 6.412023169 seconds)
done (took 40.670241676 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39944807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.635061668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.541645233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.389967745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.544877477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.542927853 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.121119065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385933166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.405937116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396639015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391958674 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.544130337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.174729148 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.630592444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.174292416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.634436861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.550486818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398969983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.39528423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.38771798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.134834274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396828738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.38442955 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.384124261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.567000718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.535194563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.388640298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.632022605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.385209423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383805127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.535099243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.387919842 seconds)
  done (took 83.046832415 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386874644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.401694758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.386491515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.406195884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.386064426 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.399584187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.386324569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.384679071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.389073321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.401476474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.384537931 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.384818263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.388144496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.386638952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.406749673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.401116301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.386667984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393382365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.387188699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405603561 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.386566222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396620214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.385602027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.387923669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.391276924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.398627589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.38641118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.414991534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.386930206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.38566561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.419963475 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393048205 seconds)
  done (took 77.875435392 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39969328 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.392155748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391955817 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392396505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39099359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394509803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.393857763 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392144816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395602925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392022553 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.410244816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.398573021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.394822587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.394264048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.39043631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.388349973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.390793204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405320809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409888484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396349959 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.390534597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400806492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391879057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411361205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399335536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.390467235 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.394242575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.38851121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.39412351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.40637747 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392565433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.396049135 seconds)
  done (took 77.960966792 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.58718941 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.400104244 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39975114 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.367048005 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.402326966 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.400032935 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.393711683 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.590129508 seconds)
  done (took 14.831558394 seconds)
done (took 254.999142126 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.396449791 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.400860921 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.602053725 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424280732 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.403921844 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.423027383 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.421550682 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.616708797 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.387162801 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.638887111 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.412448971 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.417838824 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.39313174 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.417425108 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.676211023 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.543607804 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.300652511 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.393723096 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.742387565 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.420335436 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.669593495 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.402463084 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.669762579 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.358387212 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.413240879 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.395492688 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.402496618 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.281889638 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.43936661 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.745570374 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.403876151 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.385133833 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.479682969 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503573433 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.614312848 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.560011357 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.397335979 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.498579073 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.62534265 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.406101195 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.390991836 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.19232601 seconds)
  done (took 83.95946768 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.403585878 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.51990615 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.401411919 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.403137643 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.403583882 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.525281187 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.499488203 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.403721019 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.405261972 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.402389928 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.402358901 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.402413674 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.403840812 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.403335245 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.407413605 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.40476327 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.402346747 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.40426835 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.406832916 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.449760392 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.528339751 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.427879059 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.40285834 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.403359443 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.50710578 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.546056631 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.404431047 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.395843696 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.448892494 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.405908193 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.406798169 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.453224966 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.405969649 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.405756947 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.52654156 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.50757988 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.427000997 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.407638362 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.522052381 seconds)
  done (took 57.284711421 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.411071361 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.658726342 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.837549231 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.415913858 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.406788564 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.409602347 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.484355328 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.407534539 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.410841628 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.40792721 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.5754039 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.410685121 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446295687 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.860074443 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414107119 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.406486643 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.406938013 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.408851991 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.666493216 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420091824 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.501505076 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.410721792 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.486448768 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419363353 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.428160552 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407594418 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.414629501 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.994714639 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.413124469 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.580141928 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.200771587 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.48459406 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.960277905 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.847360653 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.209579341 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.411809735 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408438853 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.584799096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.411838777 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409717537 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.485742431 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411351787 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.842105208 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.088688735 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.428533692 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.408205163 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.018362648 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.584843943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.652729432 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.42166806 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.872194623 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.416770554 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.410390218 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.411237622 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.65150802 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.421927446 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.411883664 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.023092052 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.435437862 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.491112093 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.413159145 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.413148318 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67564225 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413441626 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.662323011 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.417160819 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.418856469 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.429304752 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.848054083 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.418272747 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.093230848 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.432677802 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.411503712 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.580937635 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.668569151 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.057032647 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.417888974 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.679534843 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.972634797 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.491175101 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.419640296 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.990823178 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.493120735 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.419521606 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.412220238 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416164776 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.411483135 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.465813966 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.486997851 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.029990452 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.092022513 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.044220035 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.510020824 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.428553239 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.412794794 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.022680227 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.432187571 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.413255313 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.845763341 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.099054569 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43384928 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420576396 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.094054176 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.439715617 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.492592127 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.423177917 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.855502592 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.418320314 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.466043753 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416467046 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.4216596 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.436199423 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.49444958 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.418400909 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.414002776 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.070469066 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.60921029 seconds)
  done (took 186.128091571 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.411461416 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.419667311 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.40890238 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.419399005 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.409144371 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416911487 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.405371644 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.408228108 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416300563 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.405857813 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.409798614 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.411405583 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.408156933 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.416275709 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.418935252 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.411183935 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.405882312 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.407872385 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.411260775 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.405824142 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.408205536 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.42948561 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.409552055 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.40729887 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.409390516 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.411332528 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.409580618 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.407248216 seconds)
  done (took 64.823019836 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.415344024 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.970999846 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.415822882 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.543769502 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.438235239 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.412600098 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.545519281 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.472719666 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.420525783 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.410974194 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.414302712 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.718608254 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.417393647 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.932540514 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.607480604 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.562722714 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.925932739 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.430866557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.414343065 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.411307224 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.548168725 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.430056318 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.71849635 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.968806892 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.416106956 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.973827034 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.405848237 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.418766195 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.416837083 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977039249 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.413230831 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.721101753 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.495209146 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478293898 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.98161025 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.934415104 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.953531655 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.568081192 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.414275734 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.417061014 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.414859526 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.409189305 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.97880555 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.415840669 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419242738 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.970741845 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.432081863 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.419438421 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.423491673 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.417812074 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.476214752 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.480891066 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.723608981 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.984854951 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.494417011 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.433809067 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.549687075 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.808205036 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.423354262 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.935862024 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.426220872 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.980560645 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.436842624 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410540515 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420604537 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.423229575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.568281835 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.552196972 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.936303207 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.439292651 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937954076 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.586299537 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.420587707 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.418423732 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.421479378 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.980911507 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.936180862 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.586930133 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.556009085 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.611248039 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.413501339 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.419533959 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410811916 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.495910969 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.423429678 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.983138181 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.955338301 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.439332002 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.420527324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421572174 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.421773284 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.596163033 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.000630343 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.495590442 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934705352 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.744164097 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.722523914 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.420868307 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.483138831 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.436674167 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.727474453 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.421376051 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.48172455 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.892565743 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.727917928 seconds)
  done (took 168.393261809 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.662314932 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.444431506 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.517122983 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.572084277 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.027022343 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.015471391 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.417882099 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546229489 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.533369992 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.686018199 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.424176068 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.510599149 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.63650389 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.503196354 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.136759904 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.492878925 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.517186255 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.574171806 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.565281248 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.432503511 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.064977123 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.718512671 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.613133364 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.448176392 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.52831562 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.198194541 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.008062633 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.958245181 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.606201246 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.429752401 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.950190581 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.42175674 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.347622755 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.094183514 seconds)
  done (took 65.915029428 seconds)
done (took 627.794707035 seconds)
SAVING RESULT...
DONE!
