cset: moving following pidspec: 16371
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.170400653 seconds)
loading group "string"... done (took 0.452703962 seconds)
loading group "linalg"... done (took 10.217549621 seconds)
loading group "parallel"... done (took 0.224023334 seconds)
loading group "find"... done (took 1.874944647 seconds)
loading group "tuple"... done (took 1.96680699 seconds)
loading group "dates"... done (took 1.325494969 seconds)
loading group "micro"... done (took 0.455677714 seconds)
loading group "io"... done (took 0.437789346 seconds)
loading group "scalar"... done (took 44.292415045 seconds)
loading group "sparse"... done (took 12.335860677 seconds)
loading group "broadcast"... done (took 1.042282847 seconds)
loading group "union"... done (took 10.456354168 seconds)
loading group "simd"... done (took 4.255329786 seconds)
loading group "random"... done (took 8.221022539 seconds)
loading group "problem"... done (took 2.441292057 seconds)
loading group "array"... done (took 24.289480055 seconds)
loading group "misc"... done (took 0.898743815 seconds)
loading group "sort"... done (took 3.340012341 seconds)
loading group "collection"... done (took 14.679397264 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.596992761 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.111013342 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.173969657 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117396498 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238985671 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138554245 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139186724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097501704 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.822388851 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18092664 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122302795 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.359896332 seconds)
done (took 6.060923742 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.231825651 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.081764523 seconds)
    (2/2) benchmarking "String"...
    done (took 0.148433184 seconds)
  done (took 1.164009556 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.08893659 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081581884 seconds)
  done (took 1.107385588 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.085158068 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.32982389 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082059982 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.472373548 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.140199392 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.085253302 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081632314 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081180272 seconds)
  done (took 2.208802755 seconds)
done (took 5.732676103 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.379763693 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.840589606 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.48794638 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.13819255 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.27435794 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.23016947 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.203332417 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.215854166 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.087512285 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084408328 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168824447 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.424910115 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.293410274 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.754082567 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098643299 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099156631 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.135962377 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.769913853 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083443975 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131977802 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.363096735 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116256783 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.106997743 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.144815577 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189615231 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108614797 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.156945346 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.082974486 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.679132705 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.122216337 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.207639268 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.086303998 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156461206 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.12696249 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177416586 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.117732548 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684235087 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.19216988 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.141904849 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.084936573 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691438682 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.101483436 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.169852663 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.096873541 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085607124 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.170112418 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119620147 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082765294 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.106517536 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08298007 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162909478 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480338217 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110595533 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.183016721 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099100277 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.705957447 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.105956416 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.251874371 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131814657 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109023181 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082825953 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085132369 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.149210151 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088273053 seconds)
  done (took 19.369569492 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143970173 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13554561 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084922047 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134418631 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097235396 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083178773 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082390969 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.087307649 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091044631 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1404434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088797471 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150942732 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082618265 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085013543 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146022541 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202653559 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088154924 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094960225 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086094693 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105829856 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112097443 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.088504427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083705049 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083867596 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.142872278 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212104089 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11367324 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11514242 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.082316621 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099490855 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133692444 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131528111 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.083454993 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08194254 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121288149 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127503626 seconds)
  done (took 4.984921348 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18675188 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099710405 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16255912 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.137322623 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111452929 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.149678096 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152136142 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230374513 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.674728349 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.159032007 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16674649 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130691276 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098138771 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099975717 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085491083 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082599307 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.551043528 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139434643 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112344643 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166157294 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083769306 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084943429 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.388536804 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085950194 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082262961 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083201901 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085029063 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.174948085 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162401357 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099973926 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.564054718 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105678763 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081577744 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128740779 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215417684 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088510354 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085815006 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118771592 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083452716 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082155816 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.083757265 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08586389 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097127842 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091416197 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117656303 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123984234 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096419711 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091254013 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170199455 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082670315 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090685043 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.806629658 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171597354 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.147361081 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0827155 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.160755517 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102252279 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0826101 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081932277 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.149462604 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087848767 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.085895284 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0817513 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083150928 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082948008 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085046625 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083037166 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.212433074 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086476227 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.101912904 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084276143 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085557844 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.356277369 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086633103 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086969796 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102291426 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084364547 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082607477 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081702552 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083297781 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083586879 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105783971 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098731901 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086591771 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083914191 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145335025 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083398467 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104729586 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112094334 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097426876 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081981503 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114941882 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086233697 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083650326 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.154032515 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08178073 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119504766 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087149897 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146112654 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08326447 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170802475 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083808293 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105933872 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085514705 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127771984 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083242874 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084299211 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086766811 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08547055 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08208553 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144749552 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083082857 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085034207 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08615945 seconds)
  done (took 21.143437334 seconds)
done (took 46.43829622 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338508107 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08277357 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083179937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083016608 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085707036 seconds)
  done (took 1.686431394 seconds)
done (took 2.673664779 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.177328724 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103046418 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097147029 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.099031182 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.104225793 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.103825506 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081623817 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097562007 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119327778 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096444183 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102284472 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.082957889 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096834577 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100323362 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098686248 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084143245 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098534061 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099949095 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115071178 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.082806999 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082918882 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10170161 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083064254 seconds)
  done (took 3.323031279 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094091795 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099782798 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092069567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095410591 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08105961 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093714513 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09298717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100016286 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095314025 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087388903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082377635 seconds)
  done (took 2.00834638 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094721632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098139202 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083967353 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096476436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082659213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095817111 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096296908 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09917455 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097646178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089125764 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082568158 seconds)
  done (took 2.010643694 seconds)
done (took 8.334037039 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.443584096 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.685207433 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151911825 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204785709 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.241118122 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.179177208 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283192725 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.165857194 seconds)
  done (took 4.459008051 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.184580218 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084696658 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084169944 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084810262 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086656156 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088720437 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085250523 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08673819 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084806552 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089774362 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085717246 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.107474947 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084739503 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085143181 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086701203 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08449069 seconds)
  done (took 2.54400321 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.129171407 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110084381 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087507274 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087475461 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090063923 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090815191 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092465316 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088411448 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086976427 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088202383 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09175741 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107393921 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089457679 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08746097 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089683345 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110507896 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087405558 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089871093 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107764542 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089245584 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087940641 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.085594622 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087279163 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087846918 seconds)
  done (took 3.341670246 seconds)
done (took 11.342824175 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.101287147 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084226577 seconds)
  done (took 1.188736975 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.15923416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154817828 seconds)
  done (took 1.325137263 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089926381 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082869482 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08730588 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084977944 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083175125 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083032482 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086618016 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083282757 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083369914 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082909025 seconds)
  done (took 1.865101325 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086039597 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085066179 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086674922 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.150133662 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08522681 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083201446 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084049125 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082952849 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084090477 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082226572 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084726609 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109388999 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084207417 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091999044 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083797626 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084325252 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084098084 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084425029 seconds)
  done (took 2.63073892 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083592988 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083788677 seconds)
  done (took 1.184585522 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083387466 seconds)
    (2/7) benchmarking "second"...
    done (took 0.082369524 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085056134 seconds)
    (4/7) benchmarking "year"...
    done (took 0.082343544 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083208414 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084061862 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083407971 seconds)
  done (took 1.599352625 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438494845 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.200219801 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.288435863 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101378895 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083775412 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.290426125 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084627672 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083604105 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089656698 seconds)
  done (took 2.712567385 seconds)
done (took 13.520121799 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095375153 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.161723876 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.486958433 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.104891268 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084368966 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.149863601 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.200506669 seconds)
done (took 2.310176398 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.249095598 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139655381 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.109109407 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085399307 seconds)
  done (took 1.599797116 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086622291 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092240375 seconds)
  done (took 1.204875265 seconds)
done (took 3.826122596 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084259608 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106929084 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083173983 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.083109632 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083205356 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.082589584 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082508899 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084272265 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082291043 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083717983 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085909027 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.083087877 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083063302 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101911294 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083415194 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083499939 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083920161 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083436386 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.083108502 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083460496 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083315876 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085748203 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083337754 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083036544 seconds)
  done (took 3.106368736 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084535179 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084158604 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083356429 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.082851502 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08303866 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0828951 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082872783 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083167292 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084602242 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083090808 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082857351 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083461849 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082305251 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083258423 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100898678 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084667907 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083691757 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084108848 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08393754 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086182206 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083716201 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083751181 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083052495 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083219653 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083156752 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083701532 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082853801 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083324222 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083226753 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100128459 seconds)
  done (took 3.573374335 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091280814 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081439684 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083961916 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086547185 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083353597 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083356208 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081608829 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08400367 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083811804 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083293469 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0841866 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086989545 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084138759 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083538092 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101488362 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084741777 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086112595 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.084917803 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08377093 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085959455 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085455182 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084433561 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085523207 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083921932 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08526995 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080119907 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083809028 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083072518 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.100925021 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083933302 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08431906 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084454926 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083891609 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090947718 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085016482 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084828842 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085483521 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081756554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085722523 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081443076 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082182279 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084739378 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085277717 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10530448 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08785092 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085610008 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08536148 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085494704 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085947523 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086565704 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085069879 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.084738507 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085599667 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085521643 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085730386 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084638204 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084605046 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.101690141 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08617116 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085175418 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085218094 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082623545 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085736212 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.085273432 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.088963451 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087121293 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088920129 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08555575 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.086171003 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086009503 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.086354865 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088270948 seconds)
  done (took 7.224685425 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084318279 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085468689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084998015 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08452442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084000248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086692952 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083633361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082952427 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083466923 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084797072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084638949 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084835064 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084854317 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084878453 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102676537 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085284599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087021283 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084816536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08399929 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083949407 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08356931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083906143 seconds)
  done (took 2.920279115 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085908376 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088355555 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.08484208 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086726903 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088269362 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088464185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084724637 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085916726 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084348258 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084487005 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084851806 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08491175 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08614732 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086906707 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10169592 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086848547 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086897833 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086806469 seconds)
  done (took 2.607859329 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084654008 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.084278942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083627645 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084446211 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084046524 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084217411 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083456047 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.083845182 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084090031 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087423265 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.084916081 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084865196 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084862729 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084962634 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102273715 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084888964 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085786521 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085802518 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085332604 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085651158 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085690965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087379754 seconds)
  done (took 2.929001782 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085455493 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085002617 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085439981 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084560439 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084754732 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086050494 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085017257 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084209722 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087468176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085369636 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088084476 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085727199 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088791876 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085783471 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103168219 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085748916 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086343842 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088902617 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086493132 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085983542 seconds)
  done (took 2.783718235 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.142994149 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089160247 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086620248 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087036475 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085758896 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08689985 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08686894 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086393879 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086623904 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08731222 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087396488 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088192636 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109680102 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087956621 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089101978 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087648775 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087909861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087991764 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087887544 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08833777 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088317055 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088197839 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088696355 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090404847 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088127163 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088112468 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10764929 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088206652 seconds)
  done (took 3.60297298 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086083008 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084942774 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085174272 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.086642735 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085896918 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085662659 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088903541 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.086225759 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086075032 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085395967 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085660822 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085863346 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086072978 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085117785 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102927476 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085637163 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084387903 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08801487 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086009059 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084481104 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084372372 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083841855 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08493201 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083979025 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084254646 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084043727 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084613177 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084324468 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087106284 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103324655 seconds)
  done (took 3.650778638 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088727345 seconds)
    (2/2) benchmarking "in"...
    done (took 0.087936893 seconds)
  done (took 1.228057314 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.085697463 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085310994 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085325324 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085549656 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08544872 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084587017 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085040565 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088543963 seconds)
  done (took 1.737441851 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14540037 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160683451 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087249795 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101238157 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161333991 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157319075 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119752577 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087292306 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089278873 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086951765 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.145453156 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086548426 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090258405 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088681858 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09032418 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110620175 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084780348 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091590458 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08687771 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086601192 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087973687 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093900571 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091911504 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08937392 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088615836 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104615828 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091432272 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089778781 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089290132 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110550794 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088739838 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088378388 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089758833 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085847653 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.085980652 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161288632 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09472028 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089318555 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099246921 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088299053 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090743547 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.105917945 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09082448 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092928005 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091476469 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087294257 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087138594 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085512718 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086515506 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088400522 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08538461 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088669 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08573498 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091677458 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094252094 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113214966 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086593395 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089963732 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088270245 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09191952 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089417747 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089401825 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091861984 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086379652 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091236164 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092674696 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088929081 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085260817 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087457231 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.104932781 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094687236 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116055711 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092525136 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08666 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088447763 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087494109 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094755431 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089311315 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091019098 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090123065 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089685395 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090152373 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110855512 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089425574 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090825165 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08933877 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086885126 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08942071 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087361084 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095228731 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087684682 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086452583 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087199768 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090302431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08832217 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.088606866 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087044219 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110151424 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089045196 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088052366 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08770052 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090228082 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091693871 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087721418 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088771326 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090897496 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.154131215 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109842545 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.095100319 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091761108 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087676891 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090380336 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09127287 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.086076329 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090296948 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086985975 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088648618 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090459899 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.088150284 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088858241 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093299732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095783371 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.109257382 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087969551 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09272759 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088778591 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089034155 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090936936 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088474737 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.087006002 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087848636 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094374164 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.091377272 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092426875 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089309176 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091831794 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.108518231 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.089416781 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089272573 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093933408 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091479895 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092066682 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09374242 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09292343 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089433111 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093554828 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089882281 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087283964 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089110087 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086906496 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.104268302 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088533669 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089902594 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087681218 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091203922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086995177 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089961053 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086759493 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086598693 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087664692 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086797707 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087138844 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087027197 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087092844 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111311537 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09032368 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086443507 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087817812 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090987243 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090142533 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089008501 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090015192 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092624866 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089027856 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.087798773 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08945995 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095722955 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09692323 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094227715 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110504035 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094049707 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093853191 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090260184 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094534467 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08983655 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089747773 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089266544 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094219196 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092022051 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090470781 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090841491 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089350387 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093753327 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110961774 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087977778 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086239648 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088161317 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088658813 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094858641 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088519999 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087824949 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086952978 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089843297 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088277883 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090243489 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086983473 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08789291 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107560295 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.090266714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092358454 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089598219 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093432283 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09147985 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085866506 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087644101 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08640167 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091022982 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.086441775 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088579217 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089297481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.090506536 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.106973969 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095235204 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.086957211 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093152809 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094821612 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091832952 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090928231 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088683856 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090313562 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091180455 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094030627 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090388453 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093419718 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093371228 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.110572388 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090751588 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094703671 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089761351 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087861627 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090774825 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089020877 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094450574 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087679814 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087714364 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091931191 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088982522 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091623542 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.085514585 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090035469 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.106550219 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088193886 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.087126756 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092975944 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09325808 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090065054 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092011562 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089562947 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087664031 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091554898 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088512548 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088494555 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087815501 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091503688 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109517537 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092643681 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088468636 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088354524 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090575849 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.089551334 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093386181 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090455159 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092393637 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091683377 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091247202 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091316244 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090458362 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088487083 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086932579 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107537291 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088824687 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090974282 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091936975 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090147995 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090582588 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086381499 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093525951 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087610827 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094039561 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090498352 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085858159 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089435633 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090842839 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107582731 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088281038 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088760829 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090221736 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089679754 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091020158 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088591977 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088481268 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091199586 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089653232 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090636939 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090914708 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091199911 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089990687 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107580939 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090528717 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088354738 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090393816 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087856337 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090436272 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091141708 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090506271 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091919994 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088645536 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090714926 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089216158 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.088581941 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088271328 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107277995 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087720383 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090274116 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.089293899 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091764502 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087970559 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087983225 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087647084 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08626466 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089646067 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090434095 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088186707 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090570208 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088053747 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091272051 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10888541 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088024142 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087533143 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086145361 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089063374 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092778265 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091233498 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092318137 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087788841 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088514746 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08683378 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088795647 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088940911 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089884238 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.106963103 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091675331 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091803574 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091761242 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088975974 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092420105 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087976019 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0906419 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08893281 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088167145 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08800876 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.086609523 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08776731 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088520706 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113157146 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088383768 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089424695 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.090814766 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0876951 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088279159 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089312955 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089471112 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090541188 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093103127 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088481387 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091663686 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089041967 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.087421745 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108546745 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089747842 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089361253 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088689907 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089942452 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091354236 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088085127 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091963976 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091134299 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091121941 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089406955 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086595604 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088621092 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088764376 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087849538 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108727147 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089604192 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09438173 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086935093 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091005658 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088590472 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089022517 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093060196 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088480929 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088342876 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089873342 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09178527 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090861654 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09227833 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109371293 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09429626 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088628397 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090914208 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09292279 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089043732 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090469378 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09089848 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088841915 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0909643 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08915539 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089471829 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091911417 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088415703 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113048958 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088664477 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089449803 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089165678 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086724951 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088394472 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088786238 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089475512 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091611572 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094435592 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.087325294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.088018487 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089133464 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089174719 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092237505 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113661476 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090830285 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092731078 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088091502 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.089075083 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095188436 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09016601 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092549857 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089758076 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091724997 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089124645 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091887553 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08803058 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090196411 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109335335 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092572604 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094420738 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089689271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090470857 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091078031 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088836913 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090568007 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09161133 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090614236 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087217134 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08914101 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08843946 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094038212 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109039722 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089972921 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09134905 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091347304 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091377179 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089013406 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088748011 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090217914 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.087147331 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092287571 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091645448 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088887546 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087007758 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089218806 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109485189 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092246864 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089343624 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.088000649 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090819261 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0916074 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0888706 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090971585 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089324953 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08760717 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087617404 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088854098 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089361672 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091060231 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090224139 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109400325 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089485999 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087998782 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092638581 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091366375 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091291495 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.088075819 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.088299557 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08867761 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089349791 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089857154 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088551642 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088602873 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091773544 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110551223 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088839164 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090859929 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087570525 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091868473 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091018956 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089025448 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09242772 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092817128 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09429331 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088626392 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091508939 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089277578 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088809168 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091586456 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109404521 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090526581 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092622979 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092228564 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089218734 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089753559 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090990559 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091527093 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090590264 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089106115 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089683949 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091478908 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094024242 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089846621 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112904813 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092613273 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088550884 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08917532 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089728637 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093472489 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.088544416 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088348988 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089999932 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089450782 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089022146 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091120107 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088897197 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090377909 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112018691 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092901111 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090230948 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089309487 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089954631 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.087679568 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089268599 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.09228968 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089633346 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.088775102 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.089061976 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091962315 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091629351 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091103655 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089409044 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110431071 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.088820993 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091106259 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092304985 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092983555 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087900157 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089373948 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090156595 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092024029 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09271665 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089461458 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091760941 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091392378 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09188398 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.108278291 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092603715 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089596598 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093622154 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090933505 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089799283 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091570918 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093142749 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089842457 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088725555 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092999199 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093614353 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089057658 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.091944046 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.088532325 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111509569 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.089022782 seconds)
  done (took 56.047984647 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104025756 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088878889 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088340644 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088689038 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08810966 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08851709 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088382397 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088006691 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088879656 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089158917 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088644814 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090576905 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08790576 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088566504 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107755494 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089438905 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088351174 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088182797 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087709571 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088107886 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087843755 seconds)
  done (took 3.011463848 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088709754 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091097285 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087601671 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087811903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087808299 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088000629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088722811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087752321 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08789471 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088266438 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087952587 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087800615 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090603807 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088139438 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108214349 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088855203 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089368777 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088867711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.087740338 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088400799 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088240783 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088772729 seconds)
  done (took 3.08403717 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090778068 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.093060876 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090425837 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.088722483 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090410573 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088573461 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089747734 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088087225 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091002851 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090802054 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090181742 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090303378 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09123248 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088503043 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10910561 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.089143222 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091237548 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090002229 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089532669 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088977632 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090487903 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.088731461 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088130631 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093205136 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089775446 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090995602 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.088386237 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.09004522 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.109741842 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091380963 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088574938 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089641174 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091151279 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091328792 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09360145 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08938384 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089572854 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.089201566 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.088252677 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089876389 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088399007 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090008666 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090011795 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.108476216 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088766368 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092317774 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089614727 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088193336 seconds)
  done (took 5.497259853 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089464144 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113427506 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088959704 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113700363 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087963627 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.088760729 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089290401 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113656987 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.091315178 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088155788 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088046217 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08850638 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10933744 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088594267 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089506731 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089059774 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089047565 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088852391 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088580218 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091754831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087957203 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088801871 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.088341758 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.088335683 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087868267 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088391202 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088414871 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109687979 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.089207669 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088934503 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090704857 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089206323 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.088971098 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089584462 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088567057 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088614865 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088590682 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089154543 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087937362 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088881833 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089366472 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090207955 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110907414 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117680589 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089382826 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.089399951 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089179848 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.089443823 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08920355 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091474027 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.089031907 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.090719125 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091619967 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089589183 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088683688 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.109237091 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089503989 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089432928 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089144357 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09034866 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089584131 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089033361 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.089082868 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088984035 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092592038 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.090509887 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.089296208 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088314018 seconds)
  done (took 7.482322353 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090389361 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089526929 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08986114 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.088834731 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089256384 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089544977 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088711671 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.091290264 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089063718 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.089188046 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088700766 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089002475 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088922452 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088504127 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109585363 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090098127 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090427902 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08879684 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091528879 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089721323 seconds)
  done (took 2.942085294 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08996734 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089664421 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089707902 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089878231 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089076581 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08948114 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089388325 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089554396 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089623743 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092246289 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089450741 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089810197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089338377 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089836213 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110346345 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090306955 seconds)
  done (took 2.58986809 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092705259 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.090517743 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.168121147 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090025956 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.091962031 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.091496137 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088940702 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.088990726 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.090296978 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096679298 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089195542 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109949412 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101431281 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089988138 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.089799415 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093952797 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089617573 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.090027133 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088909515 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.171221709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.089192828 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089585483 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110363772 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091915494 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091148577 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089821571 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091647288 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.089965461 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09350984 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088779012 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089484703 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089143467 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089241346 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089484635 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.091599969 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088762414 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089535826 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113961227 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089444589 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.09008161 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089066107 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.09024468 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089110091 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089836712 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.090191921 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089150312 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.090301879 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089339658 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.091147325 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090116697 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088722731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112057401 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089956606 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.090640729 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090059943 seconds)
  done (took 6.355005212 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089876731 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09014425 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091014881 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08989238 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092382626 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089886404 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089984131 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093544491 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08949759 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089447746 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089670474 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094055119 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089797922 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089533208 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110744683 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092739578 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090816051 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090397904 seconds)
  done (took 2.793751531 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09190702 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090674776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.089423213 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089816706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089811788 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089273794 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09018367 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08925843 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090919289 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089561906 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089658348 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08907132 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08982467 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08933091 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109504841 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090382188 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.090504517 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090191527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090009717 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092094112 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089633955 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089083145 seconds)
  done (took 3.141277145 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100789234 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.15867961 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101375948 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.164844303 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09260422 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092487249 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.098978333 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092250057 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128685316 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.093698953 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.093663018 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.092853902 seconds)
  done (took 2.45376877 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091261691 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090363172 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090332866 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089892941 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090421036 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090583198 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08941393 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092640811 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089557561 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08958464 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090106842 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089672441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090251023 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090527205 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110704114 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090480515 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092026985 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093058567 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093280184 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090032421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0906332 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090528339 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091187113 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090009629 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089938719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090708111 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090498327 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090126815 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089990732 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113680414 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090172776 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091484863 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09037931 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090978114 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090132589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09002573 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090421787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090336269 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08959478 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089820841 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092408823 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091390207 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089838793 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111348008 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091532296 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090790433 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091124186 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090554992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090503572 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089874076 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091215862 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092772401 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089701135 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090379149 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090108091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090290652 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090891271 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090631391 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111917447 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09122826 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091031041 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090901339 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090910987 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093520873 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091032537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090767806 seconds)
  done (took 7.227127174 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091034997 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092711183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09132598 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091501696 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091122234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090637032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091986044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090203066 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0928672 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090185031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090198813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090257938 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090219451 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090421164 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111596217 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090932288 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090983116 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091355674 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091120529 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092610061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091408991 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0899139 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090585176 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09102315 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091278114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090414248 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090995907 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090661936 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090445455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112175202 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094544423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092113409 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091429181 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091078389 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091145278 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090898958 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091169645 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090941874 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090683551 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090091406 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091287416 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09275308 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091473885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111560334 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091148359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09201259 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093046616 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090839984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090800444 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09094225 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092470753 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090410183 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093536496 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091619864 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091421332 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091568273 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091590007 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091564765 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112732734 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092311419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090987511 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090861295 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090461412 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093913936 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091387945 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091045413 seconds)
  done (took 7.270665431 seconds)
done (took 146.286057537 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.162166947 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.18583266 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.244046859 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.153485701 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.140189089 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122851885 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094029501 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.092334728 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.096139057 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.113040743 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092952903 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.094318467 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.16412101 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.191993465 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092625157 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.12484104 seconds)
  done (took 3.317352412 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181641615 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.266199468 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106181342 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.093604307 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096408086 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091859106 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091826334 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.142385629 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094351366 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.093160724 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.091632475 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091189163 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.091822416 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091623366 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095768781 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091694554 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.091762423 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091866591 seconds)
  done (took 3.157701697 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108929327 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13280655 seconds)
  done (took 1.409212464 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115488555 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.125529501 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264770895 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119487937 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106615074 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098261267 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119649452 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122146322 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.166158521 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.091461743 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.091462189 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093100802 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108583738 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091249379 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100290233 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092981346 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112725535 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09093452 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091662826 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09171145 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134362875 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092888699 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091383382 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091810756 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.158183197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.092259973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093360671 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.094484462 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092353993 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091660495 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091304939 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0921611 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.091889991 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.114175075 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094794358 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093618719 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09345526 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092563322 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093756032 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09159085 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.091858789 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091477655 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094123694 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093208319 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091405612 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094261864 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.092276342 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113318918 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092391895 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096364421 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091928071 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092048383 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.092245745 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09310229 seconds)
  done (took 6.75735695 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.496562899 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126982391 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093646766 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.549536707 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094560866 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094031868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.47873222 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114983198 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198439167 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.51735727 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106995302 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091436489 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105771983 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.199402911 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.145048559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.2246437 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.413122759 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09721458 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.117806249 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105769097 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092121575 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094417683 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094837202 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.690856701 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091573282 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092916635 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091673971 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091403171 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125580965 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095301674 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091778154 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.109071389 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.21582005 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.102084041 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091980771 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093174626 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093228251 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.103184578 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176633118 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.105022095 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16960954 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091889475 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115467636 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092938379 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09622058 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092360434 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093953587 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.108121154 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.104833007 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092013854 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094734014 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092793174 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092523661 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093964257 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094106693 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.227002237 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.2497575 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094118027 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093945229 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094313503 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175574182 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099835407 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106029911 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107526314 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.102778183 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093301674 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.044096711 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106170856 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093421356 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091412554 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114474605 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092900836 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095482319 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152639633 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.67052054 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093345688 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093276617 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093683894 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.165802009 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094590251 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092517707 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.101502313 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092147947 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096094653 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114179616 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092888885 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.105664831 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.188931249 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092281825 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092785357 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09241521 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102052503 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092057508 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188209148 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096317213 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.094961345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.179255659 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092455391 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.116717915 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105434717 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093259066 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.105591302 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094018362 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095745761 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092199013 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096955 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.1011516 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098533229 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092011264 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09262208 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104711526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097773967 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113713848 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.106950348 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.691721597 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.105245169 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09527841 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100226477 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095072465 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.104104519 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09371199 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.179425889 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093705251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102004319 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092050913 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093345072 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115544054 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.094853415 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098202652 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093147981 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092497958 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095810353 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.198395946 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.101717335 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093039093 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174623927 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175060088 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092550674 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1091986 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096715301 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.12839228 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096309732 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092361393 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093220515 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.04202081 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096883993 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094157099 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093219152 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176293156 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094042378 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101980684 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094159227 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093100868 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.046389724 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097673003 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.116123234 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099625738 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092729964 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093142779 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093281407 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092272621 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.097906358 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.106266417 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091803704 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092571168 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093583976 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.10278206 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092707658 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093816143 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115360355 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09450418 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095261647 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095787134 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099703604 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106635877 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.095073802 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095337663 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.86893498 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093680025 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093840752 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.10660326 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093053837 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194039208 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11706224 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.103682227 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.102022481 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093953849 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226167855 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.103298641 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176716283 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097456525 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10610117 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092701424 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093472318 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.097180016 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09362865 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092480266 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.094473149 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115094868 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.092989253 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.147643371 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094207777 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200818261 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093490137 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.106806787 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095330471 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093752017 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.19568961 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093974382 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097483972 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.095009937 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092386092 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.117077523 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.864491023 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094640354 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09621855 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095792354 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.095242463 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.10286968 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093124493 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09338208 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092819467 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.095969409 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.179850168 seconds)
  done (took 40.738721454 seconds)
done (took 56.544001081 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.161065361 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.138195599 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185473562 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115231562 seconds)
  done (took 1.874320457 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179914327 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111105099 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.173022203 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.093307084 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.175006109 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.115705078 seconds)
  done (took 2.054448658 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.123177084 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.112687315 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109122102 seconds)
  done (took 1.542824895 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.153292891 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.147213845 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416272425 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.339299291 seconds)
  done (took 2.356170742 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208905732 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095275259 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094530949 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.174688184 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.204076613 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.108276166 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097736759 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.10357385 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099658209 seconds)
  done (took 2.434235012 seconds)
done (took 11.463898765 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128424326 seconds)
    (2/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.10673606 seconds)
    (3/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.297775588 seconds)
    (4/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.110850782 seconds)
    (5/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.222675902 seconds)
    (6/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.109795746 seconds)
    (7/240) benchmarking ("map", identity, Float64, false)...
    done (took 0.16982305 seconds)
    (8/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099660414 seconds)
    (9/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.176714535 seconds)
    (10/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.449462868 seconds)
    (11/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.108575084 seconds)
    (12/240) benchmarking ("map", abs, Float32, false)...
    done (took 0.16943529 seconds)
    (13/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.168394368 seconds)
    (14/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.204351721 seconds)
    (15/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.15034995 seconds)
    (16/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200661138 seconds)
    (17/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.110646556 seconds)
    (18/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121128299 seconds)
    (19/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111481032 seconds)
    (20/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122483071 seconds)
    (21/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.234884463 seconds)
    (22/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.234630145 seconds)
    (23/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.195316375 seconds)
    (24/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.257285371 seconds)
    (25/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.229706339 seconds)
    (26/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103037562 seconds)
    (27/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.106512623 seconds)
    (28/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194500613 seconds)
    (29/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11809518 seconds)
    (30/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189556955 seconds)
    (31/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092676827 seconds)
    (32/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.179671924 seconds)
    (33/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.178263351 seconds)
    (34/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.132242105 seconds)
    (35/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.106295025 seconds)
    (36/240) benchmarking ("perf_sum", Bool, true)...
    done (took 0.104997943 seconds)
    (37/240) benchmarking ("map", abs, Bool, true)...
    done (took 0.171647215 seconds)
    (38/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.096932528 seconds)
    (39/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.184797049 seconds)
    (40/240) benchmarking ("map", identity, Float64, true)...
    done (took 0.120433246 seconds)
    (41/240) benchmarking ("map", identity, Int8, false)...
    done (took 0.227637674 seconds)
    (42/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.179328019 seconds)
    (43/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.093906935 seconds)
    (44/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.103820629 seconds)
    (45/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.09727385 seconds)
    (46/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.102915464 seconds)
    (47/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093967764 seconds)
    (48/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.233073595 seconds)
    (49/240) benchmarking ("perf_countequals", "Int8")...
    done (took 0.104612389 seconds)
    (50/240) benchmarking ("map", abs, Int8, false)...
    done (took 0.140806015 seconds)
    (51/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.179070319 seconds)
    (52/240) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150856657 seconds)
    (53/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.130692361 seconds)
    (54/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.172661824 seconds)
    (55/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.175766527 seconds)
    (56/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103173034 seconds)
    (57/240) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093118899 seconds)
    (58/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.109992953 seconds)
    (59/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.221854123 seconds)
    (60/240) benchmarking ("perf_sum", Float64, true)...
    done (took 0.105401628 seconds)
    (61/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.107592558 seconds)
    (62/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.094866902 seconds)
    (63/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095372365 seconds)
    (64/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.166565534 seconds)
    (65/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.203960266 seconds)
    (66/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.13343322 seconds)
    (67/240) benchmarking ("map", identity, Int64, true)...
    done (took 0.156839889 seconds)
    (68/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104772702 seconds)
    (69/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.109741786 seconds)
    (70/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.150598436 seconds)
    (71/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097704322 seconds)
    (72/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.135895499 seconds)
    (73/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.188231709 seconds)
    (74/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.14363722 seconds)
    (75/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196873488 seconds)
    (76/240) benchmarking ("map", identity, Float32, false)...
    done (took 0.138994939 seconds)
    (77/240) benchmarking ("map", abs, Float64, false)...
    done (took 0.140532799 seconds)
    (78/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.26626977 seconds)
    (79/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094648497 seconds)
    (80/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098491385 seconds)
    (81/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.137736231 seconds)
    (82/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098537676 seconds)
    (83/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.121936333 seconds)
    (84/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.117598793 seconds)
    (85/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141671246 seconds)
    (86/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.140140059 seconds)
    (87/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.133820681 seconds)
    (88/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.108348403 seconds)
    (89/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093381585 seconds)
    (90/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098039607 seconds)
    (91/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.200592672 seconds)
    (92/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.116445995 seconds)
    (93/240) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128701785 seconds)
    (94/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.113207624 seconds)
    (95/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.099609305 seconds)
    (96/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100981214 seconds)
    (97/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.149601824 seconds)
    (98/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107291731 seconds)
    (99/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.164750809 seconds)
    (100/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094852566 seconds)
    (101/240) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094013594 seconds)
    (102/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.133941045 seconds)
    (103/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095720369 seconds)
    (104/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.098427522 seconds)
    (105/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.22099498 seconds)
    (106/240) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102356815 seconds)
    (107/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.099834477 seconds)
    (108/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093226907 seconds)
    (109/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.095871942 seconds)
    (110/240) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09264022 seconds)
    (111/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.125616924 seconds)
    (112/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.097973915 seconds)
    (113/240) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102907726 seconds)
    (114/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.108085464 seconds)
    (115/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.138301171 seconds)
    (116/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096124564 seconds)
    (117/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.109528678 seconds)
    (118/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097501992 seconds)
    (119/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120157149 seconds)
    (120/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09327534 seconds)
    (121/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.094252832 seconds)
    (122/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097943143 seconds)
    (123/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.097805531 seconds)
    (124/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.099841226 seconds)
    (125/240) benchmarking ("perf_sum", Int64, true)...
    done (took 0.103377203 seconds)
    (126/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.135554554 seconds)
    (127/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094583761 seconds)
    (128/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.183446923 seconds)
    (129/240) benchmarking ("perf_sum", Int8, false)...
    done (took 0.106359843 seconds)
    (130/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094085712 seconds)
    (131/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186331365 seconds)
    (132/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.133015736 seconds)
    (133/240) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093397188 seconds)
    (134/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.093783418 seconds)
    (135/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092310553 seconds)
    (136/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.109842343 seconds)
    (137/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.096028125 seconds)
    (138/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.185900468 seconds)
    (139/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.096588642 seconds)
    (140/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.113932815 seconds)
    (141/240) benchmarking ("map", abs, Int8, true)...
    done (took 0.107244446 seconds)
    (142/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.110176876 seconds)
    (143/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100698458 seconds)
    (144/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.096624856 seconds)
    (145/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105071969 seconds)
    (146/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117377158 seconds)
    (147/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.096714384 seconds)
    (148/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09448005 seconds)
    (149/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11298578 seconds)
    (150/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094749242 seconds)
    (151/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.112561834 seconds)
    (152/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096818111 seconds)
    (153/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.113431885 seconds)
    (154/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099071311 seconds)
    (155/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.097583658 seconds)
    (156/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.120844132 seconds)
    (157/240) benchmarking ("map", identity, Bool, true)...
    done (took 0.153694642 seconds)
    (158/240) benchmarking ("map", identity, Float32, true)...
    done (took 0.107624958 seconds)
    (159/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.094036863 seconds)
    (160/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107431561 seconds)
    (161/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101335422 seconds)
    (162/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099757281 seconds)
    (163/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093242826 seconds)
    (164/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09323598 seconds)
    (165/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094672799 seconds)
    (166/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.125740989 seconds)
    (167/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.105896689 seconds)
    (168/240) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10315604 seconds)
    (169/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094044658 seconds)
    (170/240) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094249126 seconds)
    (171/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.0989031 seconds)
    (172/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.134053354 seconds)
    (173/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.112371658 seconds)
    (174/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093794238 seconds)
    (175/240) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093856407 seconds)
    (176/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.113264233 seconds)
    (177/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117514556 seconds)
    (178/240) benchmarking ("map", abs, Bool, false)...
    done (took 0.095466572 seconds)
    (179/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094842557 seconds)
    (180/240) benchmarking ("map", identity, Int8, true)...
    done (took 0.11141809 seconds)
    (181/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.09726955 seconds)
    (182/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.097620038 seconds)
    (183/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.113213764 seconds)
    (184/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095721411 seconds)
    (185/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.134787762 seconds)
    (186/240) benchmarking ("map", abs, Int64, true)...
    done (took 0.175718839 seconds)
    (187/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.114287438 seconds)
    (188/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095275445 seconds)
    (189/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.094766844 seconds)
    (190/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.099584831 seconds)
    (191/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094100704 seconds)
    (192/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093516843 seconds)
    (193/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.096857198 seconds)
    (194/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097806558 seconds)
    (195/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093197226 seconds)
    (196/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10131537 seconds)
    (197/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.117046745 seconds)
    (198/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.100358587 seconds)
    (199/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096282245 seconds)
    (200/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097147951 seconds)
    (201/240) benchmarking ("map", abs, BigInt, true)...
    done (took 0.151179795 seconds)
    (202/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095624838 seconds)
    (203/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092684153 seconds)
    (204/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094894201 seconds)
    (205/240) benchmarking ("map", abs, Float64, true)...
    done (took 0.10752179 seconds)
    (206/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104368952 seconds)
    (207/240) benchmarking ("map", identity, Bool, false)...
    done (took 0.1193634 seconds)
    (208/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.114564156 seconds)
    (209/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094171297 seconds)
    (210/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096498793 seconds)
    (211/240) benchmarking ("map", identity, Int64, false)...
    done (took 0.094749276 seconds)
    (212/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.099748101 seconds)
    (213/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.113111706 seconds)
    (214/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107763304 seconds)
    (215/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.113830273 seconds)
    (216/240) benchmarking ("map", abs, Float32, true)...
    done (took 0.108287158 seconds)
    (217/240) benchmarking ("map", abs, BigInt, false)...
    done (took 0.119575601 seconds)
    (218/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.097434837 seconds)
    (219/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094376057 seconds)
    (220/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.104513218 seconds)
    (221/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.112996189 seconds)
    (222/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.096276916 seconds)
    (223/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096372311 seconds)
    (224/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.114929139 seconds)
    (225/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094222438 seconds)
    (226/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.113311923 seconds)
    (227/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118022898 seconds)
    (228/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095077971 seconds)
    (229/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.097632518 seconds)
    (230/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103712737 seconds)
    (231/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.097521642 seconds)
    (232/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.100251734 seconds)
    (233/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094655078 seconds)
    (234/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093536605 seconds)
    (235/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094384389 seconds)
    (236/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095427009 seconds)
    (237/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116759843 seconds)
    (238/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097357757 seconds)
    (239/240) benchmarking ("map", abs, Int64, false)...
    done (took 0.094472768 seconds)
    (240/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.097568005 seconds)
  done (took 31.044459602 seconds)
done (took 32.257246906 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.110319936 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17312322 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.105422766 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.174809943 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105839402 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121136693 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.10376943 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10895809 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.133813842 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109531405 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104755641 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.099360919 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102379879 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105218159 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104003325 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169021412 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12154879 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101923372 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118713218 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.094639222 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.095250773 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095315024 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.094306377 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.099945031 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105271206 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104574151 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099965442 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.10316295 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093963761 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095105002 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094080636 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.102894278 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119722767 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107298467 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.102758141 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097097843 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102756664 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104805697 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.094605054 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094980436 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.105298899 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094701544 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.101141253 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100423774 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094224773 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094563139 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122263617 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109784138 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170904184 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099284161 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.105434672 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104094286 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102135093 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.093883702 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094451157 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094784473 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094756921 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.198935092 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094787588 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099678782 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.107132417 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.102744477 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093944678 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095047131 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094921284 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111976145 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.106908465 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119369495 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.114582725 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.095332629 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.095087055 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095505843 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093914283 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.096225413 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103875746 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105489285 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.094071436 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094114281 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.102236381 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.101125029 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094377486 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123846005 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094442216 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094551656 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096832697 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099840272 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094220404 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095500683 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094402155 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094999077 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097257196 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094421636 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094575299 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106923801 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.09546629 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120291721 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.097162463 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095199881 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094770908 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094734205 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.09552619 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101318191 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101956339 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095294368 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094872892 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106318992 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095541597 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094994356 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094396094 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11891507 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.109500326 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11315202 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.097736926 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099903309 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.094885809 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095078624 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.094329262 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095627626 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095402918 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09531444 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095238394 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.094802898 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120874319 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097898406 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.110725696 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.094782055 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094890435 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097176087 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.095250209 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.101894912 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095149095 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.095003812 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093933114 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.111452189 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098000546 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.098519706 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118658099 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098653061 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095381347 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094742427 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096058475 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095037918 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094697301 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095523937 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094572542 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100582185 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102072803 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097147477 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095424897 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.095039214 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093791857 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.119681145 seconds)
done (took 16.982107973 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095880386 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113486976 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095132026 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171157763 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.156303339 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.098669738 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.09481715 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094669646 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101888186 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11882777 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.098682569 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097391128 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094962243 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.09550652 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.095004998 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100384993 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096664104 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096275345 seconds)
  done (took 3.171737717 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106329455 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116374282 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10685811 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107245501 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.096131589 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094882507 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09474128 seconds)
  done (took 1.985096428 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096577961 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182923732 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.169819197 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.167038258 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.199326502 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.172001854 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095847079 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108070981 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09645004 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.179782342 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.20985211 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094795727 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101749551 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.172841228 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095584609 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.163803638 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095803138 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121273494 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.166699306 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09605075 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107982048 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103712153 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096174594 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.176992399 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.098042395 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097126023 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.122411923 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097822572 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.12181836 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.177960846 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.099125464 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095611291 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.172286541 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09701985 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200522266 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10050169 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.175150296 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.099711793 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099204405 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.095302612 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098334791 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.182844996 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09605039 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09878335 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096816911 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183918035 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097358959 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.17729249 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095836737 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120970152 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099357319 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096881305 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097001308 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094921563 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185376747 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097722195 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.16298569 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192385164 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.178125176 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.163709053 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096992883 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204215741 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.169989581 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.097868747 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096492959 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095131905 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.16447887 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094995224 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.101786161 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.187077953 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09671501 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.16936953 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.168269136 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100026961 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095891478 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097795362 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.122151854 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.16925638 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095693428 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099744086 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164304638 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.094454723 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095577257 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096732921 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095313435 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126603971 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095720913 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095164409 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.165879739 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.164787977 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.098003466 seconds)
  done (took 12.918984647 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095795069 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09637242 seconds)
  done (took 1.500484178 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103268852 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095818174 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105251331 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095628617 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101792451 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.18075785 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.18023486 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09543978 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.127210233 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103091141 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.180865327 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.18147514 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.180202505 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12250137 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.182091473 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095519785 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.180811928 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095588913 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101871378 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098850705 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100360565 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095789922 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122298188 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.162545182 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095667086 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095679576 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095982402 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101972784 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102241721 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095986826 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098277316 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095947437 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096122689 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095275816 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.207452834 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096336192 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094889354 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096364661 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095935745 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095858612 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.182865379 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098889757 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121892415 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096361066 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096787328 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096429077 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096221971 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096325801 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.181093793 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096693745 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096493046 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09665257 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098007801 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09644167 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122529038 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096619401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096528379 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.181565627 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096107336 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095805063 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095279506 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096363506 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096399078 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095962513 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.098237395 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097187823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122786702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097454544 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096725419 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095664414 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096102122 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095412113 seconds)
  done (took 9.478845165 seconds)
done (took 30.325016109 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.128535648 seconds)
  done (took 2.428464594 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.637914628 seconds)
  done (took 1.938607082 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.791305093 seconds)
  done (took 9.1213695 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.366341077 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.282307937 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.866554762 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133956048 seconds)
  done (took 2.952575938 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.147889824 seconds)
  done (took 2.470696822 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234826595 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193998818 seconds)
  done (took 1.73661484 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766315758 seconds)
  done (took 2.089073108 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.318477911 seconds)
  done (took 2.625513383 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.191882354 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161786612 seconds)
  done (took 1.677912785 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53109009 seconds)
  done (took 1.856523586 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.848378755 seconds)
  done (took 9.181135347 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231417624 seconds)
  done (took 1.560989374 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.260053447 seconds)
  done (took 1.596498556 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.108200379 seconds)
  done (took 3.445696309 seconds)
done (took 46.000213166 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103503246 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.107597408 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108579852 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.10498363 seconds)
  done (took 1.747315405 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102252079 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.104276501 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107499126 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.10311224 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10284399 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.101266188 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098587266 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100867814 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100659986 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100107105 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100504116 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100313641 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.102928378 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123939362 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.097384396 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.101021379 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102813712 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10069175 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.09963581 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100779896 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096284028 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100425255 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10045286 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.104867686 seconds)
  done (took 3.793595123 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104313169 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.103172272 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101315582 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.101435349 seconds)
  done (took 1.754235814 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106625111 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107676061 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106151735 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.105449528 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106642793 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106366411 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101187152 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096392897 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099506143 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.104770444 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.108364938 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101585733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132507375 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105023257 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106671259 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095801444 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.104424184 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109737536 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.105312591 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105066641 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101827547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.111472503 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095813242 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099390707 seconds)
  done (took 3.866767341 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.167040641 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.108156104 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.120538724 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.123228903 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.099406604 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.12261198 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.121797635 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.096227491 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.10333787 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.095551997 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.096839868 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.122356282 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.124010998 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106232087 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.096808541 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.098803073 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.096376272 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104282 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.105011466 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.09655351 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.150137339 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.1094707 seconds)
  done (took 3.808890899 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105709506 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.101542359 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097324275 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.096924933 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10979544 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103261803 seconds)
  done (took 1.969125216 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102413089 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.098390776 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098705154 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.098220066 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100710967 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097532252 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.097748129 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.098280873 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09824624 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099065133 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.097091367 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.0969884 seconds)
  done (took 2.535961052 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.210107571 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118118013 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122049831 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097074117 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100725441 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.097424627 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109261965 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099343597 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.099977395 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.097084837 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097129253 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097959299 seconds)
  done (took 2.700841579 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147565732 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102135362 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161042367 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.45765813 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112460535 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156835259 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.392179676 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149495712 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.130385469 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110838835 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130637234 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113032458 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147204181 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139031702 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110069199 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.37559146 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152615289 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148137257 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116094421 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143956569 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125489529 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165453014 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132623684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116772075 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139719305 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114762144 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102151064 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103842914 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120216863 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122964488 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145091144 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116444634 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107460022 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133230208 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113543113 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119889824 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210572814 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104877597 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.235053856 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132165028 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145141258 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134576719 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129764296 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116998723 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106924761 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139701616 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110450955 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.129957923 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108438149 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113309275 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154991951 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12524595 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.119538121 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108499859 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.429794391 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10604808 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114652613 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145419763 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141708495 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137815483 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130352637 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101932241 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170964438 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130558207 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127235209 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.11187365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.115880315 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099269496 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160090246 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165722776 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126201106 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158008173 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.139386486 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109018894 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126149384 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122573125 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148488837 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131389506 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124819732 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101724744 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145057972 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107169812 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10571094 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16910962 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102320055 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167104608 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10914825 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.30796965 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137729409 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119620796 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117325475 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123450101 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154249102 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120786092 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.141863577 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11509987 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.115237629 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150561862 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10173502 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117736505 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140863433 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100723766 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120618527 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12942957 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125029969 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132564983 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119262489 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133381832 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111735818 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134589177 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140472398 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125810119 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123003947 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133221586 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105766785 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107447253 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137350336 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129820475 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108264108 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151142003 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132324298 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.140063141 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106375103 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1072408 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181966383 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114135484 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160896331 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108291306 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106011469 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.128735702 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129750082 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116323297 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12513925 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105118728 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122294403 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157308864 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104119273 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111307056 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13432717 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128492751 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103074533 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137233304 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106925312 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.116971591 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.122168108 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.112007329 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146974875 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128484707 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126939189 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110009946 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133171962 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113587093 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105695063 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12986003 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147721998 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100350264 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126732023 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133440514 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103884059 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175184475 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118567608 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176904 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126637987 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106061076 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177624936 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129013221 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102981983 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105370824 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121918519 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118505459 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.126151767 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148400106 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.143609126 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121487862 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119184323 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118371693 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.157274122 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116999939 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.108020037 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127610976 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125274304 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101388398 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097199595 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102613871 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114687674 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103125133 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135742201 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121795294 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120378872 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14680457 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12626361 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108140401 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160004348 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101091907 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120922586 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126717829 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110423907 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.125824858 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131203519 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132770675 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105947054 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136925735 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.105353836 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102600023 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.104003991 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123860737 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10943001 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106093094 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106850152 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132086787 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122980509 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140202453 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151148008 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149046293 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142150178 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102286634 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143190798 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116297167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128581222 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177402498 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106633677 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.118121778 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13499292 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110937347 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140448204 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126389988 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15345926 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130839171 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129870174 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1044143 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109562814 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159751318 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105905095 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113952029 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108251159 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106386372 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109303909 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109320947 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123740316 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12487098 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114186367 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114848169 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.139222458 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11587726 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105239618 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106713433 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131618231 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139347801 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.122432428 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121772236 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117365066 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113234537 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13737849 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121299762 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104032945 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.429796737 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127432647 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124713643 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106168493 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106520041 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1590148 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113191981 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113339967 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176535088 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1114631 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12840361 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155295115 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.107120245 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106967602 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11491758 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115364029 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128173632 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097812001 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121995645 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140881465 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12541243 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139840263 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130765518 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12574901 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121549298 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.122116991 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109492387 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164873072 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127655529 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122977451 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128740964 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.113310409 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176173607 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128008913 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104097269 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098277183 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177059326 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106207974 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128522234 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.175190366 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152875006 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131093743 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158566981 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138053839 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102811597 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125767301 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139723207 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152044219 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105819437 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106684326 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155001177 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139330673 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130294649 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156103045 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.408846053 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143088112 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119323125 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120114945 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.435249796 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104968236 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104649441 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114991523 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119308203 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103219039 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177437561 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127975864 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10927886 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113735892 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104939727 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174484218 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138942327 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107139149 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120688165 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106872285 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117919759 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112045208 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118512865 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141302539 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.116974378 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114950577 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134889376 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122496232 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102405238 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126371161 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126546336 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126217566 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114056688 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136546279 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175982317 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107336844 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113591047 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1047725 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098322809 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149852671 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.150292537 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129552663 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118833222 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125681979 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107214247 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100453965 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10931126 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126800453 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108456936 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104429202 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151099251 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106056599 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127973606 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128651765 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105875779 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129913225 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107382181 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098372701 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107660872 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108647435 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106362129 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170206251 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12138508 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099103123 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119580815 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111814071 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120035225 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112411756 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135229734 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.528571477 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104668299 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131994832 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147419161 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141116613 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114286411 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128835106 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12746646 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143231402 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106561909 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108678241 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206846967 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109948919 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122355017 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104452512 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108780936 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142699146 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09870981 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116224248 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152253772 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112259654 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106175067 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122037734 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111806065 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132376189 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115328557 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135132317 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146788942 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126000512 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176542008 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106548981 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153122553 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114283185 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103807305 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117545688 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120265159 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145235252 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110794392 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106447787 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.108857625 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128583376 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105563982 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120528852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153348055 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126136807 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128425579 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.09934253 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12555049 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106046386 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126240383 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098553765 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107301447 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155723395 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10712226 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10363939 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131679798 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109862398 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126145178 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098582216 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169423949 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13411513 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103141876 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10559409 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400818168 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152040548 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204336048 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.130777027 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10841418 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140042157 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115689981 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122179322 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130189027 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099484547 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106074744 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.100470216 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.239726585 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.126173158 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130402856 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148132205 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11265289 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176565595 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111624437 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276446683 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115104814 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131947735 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.149572541 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103177568 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111271646 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104654456 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109234802 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173650528 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129549298 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128500996 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107569431 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104009128 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105342248 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106842721 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114874406 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110744002 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154794997 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108692674 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.119083305 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108173425 seconds)
  done (took 79.907501065 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150460171 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135898585 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153005649 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220227493 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167622504 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.282888533 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.238084436 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249728673 seconds)
  done (took 3.036458654 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.101983855 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.122724406 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.120279899 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123931808 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.102364443 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.30791087 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143069165 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.099596594 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143014808 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.126435232 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.101615557 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.455044826 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099703563 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.103883692 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126968306 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.101563316 seconds)
  done (took 3.806977127 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.53331139 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.349442621 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.684326092 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.219321603 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.436245373 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.123909353 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.544796671 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.102646969 seconds)
  done (took 10.434018847 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13616396 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.128539198 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.214185191 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.231034679 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136074093 seconds)
  done (took 2.287875598 seconds)
done (took 122.974705587 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106178022 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.10856151 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109325367 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.1069584 seconds)
  done (took 1.857923584 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.155827894 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100347339 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101762861 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.102817552 seconds)
  done (took 1.905691333 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422991669 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101496583 seconds)
  done (took 2.007771103 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131863092 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12515716 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.124653313 seconds)
  done (took 1.838052952 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113992145 seconds)
  done (took 1.56514674 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107055218 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.106246014 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.175427775 seconds)
  done (took 1.839546667 seconds)
done (took 12.462306749 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.205956404 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.949081505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411329765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153163165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.702789732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.394373757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.409801159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100933979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110822496 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100866951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101101939 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681846845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.354647275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875871364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.392902351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.870998241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683114467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128349736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101450275 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101677539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.357030218 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101321534 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100498147 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10102733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679615734 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400760806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101051532 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.878457582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10046954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127978702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.386879787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101162181 seconds)
  done (took 20.702014584 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13364602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123137264 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10608515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102372839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100978586 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104065285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10645199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.10162842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116741478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100890566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101974139 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126918745 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104318429 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10236123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118280043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101251556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101622778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101316755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104074745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101248139 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104553279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101222713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127758144 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101491428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101153918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110894783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102044716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101302444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10234686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10363583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102868147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101898659 seconds)
  done (took 4.879296078 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143951447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.138618998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106616892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13278939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128583394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104209971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.157449241 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101603462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147402072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10273417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102554771 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.102225516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117741874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102604921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11785895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101612924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10185996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101178486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101638919 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129528178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106425159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10173849 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101744324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100802647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101811874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112342525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101842159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101676973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102300735 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127108365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10642354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102525258 seconds)
  done (took 5.071857139 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101331604 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.110537523 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134016531 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135934491 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101079327 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101566287 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101081403 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100238004 seconds)
  done (took 2.348521771 seconds)
done (took 34.457101335 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.112910379 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111015954 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.112606616 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.111342342 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.168792172 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100042474 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.111289173 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100501574 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108174128 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.113850162 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128713734 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102235685 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.114594119 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104355493 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.17033319 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.11034436 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.171507652 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.201839853 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102106246 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110192352 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101132552 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.170297377 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103501216 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103600727 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.19503901 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.105844731 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104969117 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10406429 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103740282 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103260284 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.170231042 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104274579 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102371848 seconds)
  done (took 5.484657746 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.172685252 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.102870962 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101063899 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.100532927 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.099418027 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.099692613 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.17631361 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10061602 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128564148 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100463581 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.100146494 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.188427529 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.102245687 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.101181052 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.103405894 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.096703427 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.099921957 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.102595458 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.205533323 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.101227498 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.102678365 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.102278877 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.097014452 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.10256818 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.195668716 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.096865614 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.100792133 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.100574865 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.129258979 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.101224197 seconds)
  done (took 4.989304936 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105127704 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.121486829 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119355735 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.124605458 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10385147 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101855956 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.11553726 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111697917 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.105369995 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140338635 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102107828 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10595844 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13140668 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103177794 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.113966819 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.114608205 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.114975522 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.104069171 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.112663227 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.151890155 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109092447 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109463943 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.108525055 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.105532652 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107081342 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.142285806 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.124513572 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.102056655 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.102023396 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.110513348 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.100830603 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103046624 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.125626459 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.114335699 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101683867 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105573649 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111127923 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.105379659 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.137956179 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.113706201 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.104636255 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.102309576 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123728218 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.10249801 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101378854 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.100602511 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.111563387 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.115615901 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.114170419 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.102241269 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123109294 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128791157 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.102646333 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106575235 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.102034875 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102652596 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.122163595 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.111976102 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106381849 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.104487707 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.102188804 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102647243 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123062761 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.114094353 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.103162991 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147716279 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.101929483 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.101467129 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105392031 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102295719 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.119016987 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102020467 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109418926 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.104229558 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.122410784 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.100744848 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.102511586 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.101832765 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129587306 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.107634469 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110193988 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112450931 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.103707376 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.103010458 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.103000367 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103186206 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.101304405 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102955063 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.101118842 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.101449364 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.10284205 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100896027 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128950488 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10524791 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102672127 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101109616 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106941662 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102918908 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.102768651 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.102010684 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110543505 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.125282589 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.102288458 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107026012 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.109991831 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102691353 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.151557157 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10099771 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102882122 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.114793384 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.102700016 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.102439098 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110725737 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102929849 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.101989376 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104669291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129784511 seconds)
  done (took 14.401483162 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.176561455 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.234050129 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.282701585 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.246540194 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.188437957 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.163551162 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.256273606 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111685403 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.231185172 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.112200098 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.154002111 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233776504 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.115165786 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292536197 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.106645998 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126581326 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124696425 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.102984926 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112448819 seconds)
  done (took 4.86913881 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.102526384 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.124270611 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.103457016 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.102681025 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.102340633 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.103566391 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.113535162 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.107482446 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.10237518 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.105163277 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115938048 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.113624132 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.108551024 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151116083 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.108421564 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.102610987 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101583063 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11071826 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.103905483 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123827931 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111919891 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10684277 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103277632 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.105728434 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.100974754 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101612766 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.101148731 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130504302 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102595768 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106907556 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107167305 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.100611459 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.107847275 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.107117442 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106452469 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.1073291 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102602724 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10707102 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.21398201 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102724076 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102249528 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.102464641 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104566192 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101196631 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.10155296 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.112787171 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.101198849 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102098922 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.111087384 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101616809 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.10270341 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.102509714 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.133887786 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.10342633 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105239305 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.101614183 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104476567 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.114076389 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.102581366 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102440308 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.103820859 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.109856969 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.104082135 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102236006 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.104343122 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.106421263 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133207748 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.115284458 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.102148502 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102569705 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.101150562 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10744059 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.101706456 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101814289 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101813456 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107701451 seconds)
  done (took 9.769177208 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.102404309 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111398471 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.117558534 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105716472 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.111411562 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103079225 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.112930751 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.116656391 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115177627 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102571848 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115125509 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104489634 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.143897788 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.113034434 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.112532809 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.112439533 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.112977405 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.104961959 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.108295911 seconds)
  done (took 3.638912601 seconds)
done (took 44.61659082 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.492084527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.687713565 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.481030132 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.479895544 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.522061389 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.504201856 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.478462854 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.482386714 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.184051805 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.476482535 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.475617106 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.475106178 seconds)
done (took 32.22944952 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.535290946 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.47951331 seconds)
    (2/2) benchmarking "String"...
    done (took 1.480459788 seconds)
  done (took 4.763304708 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.480770151 seconds)
    (2/2) benchmarking "String"...
    done (took 1.479118358 seconds)
  done (took 4.450887982 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.473770457 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.490659682 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.475829097 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.655043852 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.518663189 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.473686096 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.47374469 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.481205794 seconds)
  done (took 19.062278026 seconds)
done (took 34.778542469 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.506024848 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.667345262 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.753734007 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.475732002 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.476553481 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.475393275 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.474952754 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.496876177 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.474746874 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.475059791 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.839416949 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.750574473 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.484205885 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.87259726 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.474392669 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.484971333 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.473627735 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.712723746 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.474511247 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.518589325 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.47831765 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.475466171 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.49494681 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.493827693 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.576804476 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.479697899 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.536340011 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.476185536 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.655563388 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.483055247 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.519400474 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.476873829 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.536865956 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.474930718 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.48541027 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.490323103 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.660167669 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.578399516 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.496915176 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.475219441 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.663087695 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.486967492 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.473391675 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.4764162 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.474969546 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.513907747 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.791597919 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.574480057 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.476669069 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.475672187 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.528818525 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.862341789 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.491898017 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.486261035 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.479505016 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.695765989 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.486417712 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.513167985 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.496339831 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.477717301 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.483934115 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.475241552 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.503303324 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.484177346 seconds)
  done (took 162.073650551 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.474123754 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.474878137 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.475416032 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.47754351 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.475769428 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.47444483 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.47326355 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.473402612 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.476814156 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.481990706 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.475253039 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.475096482 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.475467512 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.419437884 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.473957798 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.494290658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.475586815 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.47599121 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.477502982 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.474230752 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.482726191 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.475070052 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.47538124 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.475603163 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.509304641 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.532559718 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.493525621 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.482409613 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.47584677 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.474089992 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.504916006 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.479177728 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.992645933 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.326831382 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.491937927 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.4983234 seconds)
  done (took 90.1376551 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.472957865 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.475034722 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.473317098 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.500479756 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.473637955 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.959612237 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.956944544 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.451740685 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.58784025 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.894949511 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.582995247 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620594232 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.473314321 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.561719027 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.488183955 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.474125291 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517059757 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.498852939 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.475287712 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.473701819 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.958523932 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.48655195 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.655991591 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.633599289 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.47341389 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.501249316 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.905613239 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.473815281 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.474388845 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.500125485 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.859706353 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.501751611 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.473768338 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.715048083 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.49949977 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.580578317 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.473328626 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.474956468 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.500572195 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.473029739 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.74462421 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.473343209 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.473825716 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.479279556 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.013881318 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.473490428 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.959314689 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.474611172 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.344479742 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.472980415 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.474407685 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.985597334 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.946564615 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.473767514 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.474093138 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.476363292 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.473681124 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.472862444 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.500624114 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.972345849 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.476609912 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.616725803 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.473885113 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.477030914 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.500566895 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.47384585 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.47346753 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.49304164 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.534744299 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.246795718 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.955273339 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.473739765 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.576616764 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.563622309 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.594294414 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.473911905 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.473261788 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.473845833 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.474498433 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.579231724 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.473707133 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.840769418 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.473860368 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.634551597 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.475376082 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.584415768 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.566493274 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.473209695 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.734510125 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.474927035 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.474966304 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.100003567 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.561967202 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.472482747 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.472498128 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.472715296 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.839666793 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.956869935 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.646739154 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.473295965 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.9826687 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.477286153 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.836838036 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.945183793 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.051078083 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.476607758 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.581039953 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.634486371 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.476468053 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.474934411 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.584696195 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.484870787 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.536518148 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.473364531 seconds)
  done (took 397.309489837 seconds)
done (took 651.012058569 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.484573849 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.48167196 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.48047068 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.485318829 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.485745233 seconds)
  done (took 13.906622491 seconds)
done (took 15.394169971 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.705445943 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.704679151 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.53845454 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.506112603 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.603636836 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.659933658 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.515520576 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.706746901 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.704172704 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.656574259 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.499668154 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.522497904 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.604881191 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.601863434 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.703039371 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.544790603 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.707449195 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.705278155 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.602277736 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.551573751 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.518828183 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.708135857 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.500698853 seconds)
  done (took 38.573864255 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.840169299 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.862732943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.529390311 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.847594256 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.512075645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.862282506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.730706909 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.7119184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.694128563 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.537199832 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.494556438 seconds)
  done (took 20.125171274 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.793619456 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.798470297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.530985347 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.810992084 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.514150641 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.80015874 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.678648677 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.680499947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.669245568 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.507416902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.494734444 seconds)
  done (took 19.781864613 seconds)
done (took 79.981572137 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.509205387 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.562021012 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.491196262 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.490841182 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.488590306 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.489443738 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.494260497 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.489861187 seconds)
  done (took 13.516980042 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.490923459 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.489646252 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.490024069 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.490986257 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.490214576 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.490954219 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.488975247 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.489057588 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.49024287 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.491931905 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.489060424 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.490157653 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.492968546 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.488352981 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.491168812 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.491058781 seconds)
  done (took 25.348889613 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.491955332 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.490848668 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.491984654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.491357903 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.491281195 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.489466646 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.491108374 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.48893688 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.492725799 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.490166681 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.49058517 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.489276129 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.489001687 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.490874598 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.490014541 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.494712314 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.490890075 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.489930733 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.492553372 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.490408942 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.489942456 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.489988341 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.490327456 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.489130502 seconds)
  done (took 37.280970056 seconds)
done (took 77.64677749 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.489061829 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.483819274 seconds)
  done (took 6.473395252 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.893168661 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.950841019 seconds)
  done (took 5.349850175 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.496006536 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.492194986 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.491947403 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.491241579 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.491166868 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.489872522 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.493275343 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.491706597 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.492172667 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.489167525 seconds)
  done (took 16.425297223 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.491586956 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.490222036 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.492105515 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.491240416 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.491260537 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.490808198 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.490926283 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.490258391 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.491357197 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.491855464 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.489749078 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.492358555 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.490062971 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.49069741 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.490825634 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.488835648 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.489188254 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.490602611 seconds)
  done (took 28.33632847 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.504138245 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.514998606 seconds)
  done (took 4.522510052 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.624115059 seconds)
    (2/7) benchmarking "second"...
    done (took 1.530746054 seconds)
    (3/7) benchmarking "month"...
    done (took 1.598954057 seconds)
    (4/7) benchmarking "year"...
    done (took 1.588066719 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.530503403 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.519641768 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.532486483 seconds)
  done (took 12.425738269 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.49267297 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.74606319 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.890009647 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.229621181 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.493713258 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.494734907 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.263612742 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.493118804 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.494713385 seconds)
  done (took 17.099665813 seconds)
done (took 92.132335731 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.492310224 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.489448535 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.496284334 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.490515491 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.896955651 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.513928904 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.482495986 seconds)
done (took 18.358516353 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.489291418 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.487180934 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.48854698 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.485256969 seconds)
  done (took 11.443331827 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.451198271 seconds)
    (2/2) benchmarking "read"...
    done (took 1.80790281 seconds)
  done (took 5.753293801 seconds)
done (took 18.688791177 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.485037083 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.484551897 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.484287741 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.488531122 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.487045801 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.485286565 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.484837778 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.48526884 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.485089623 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.484333228 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.485173326 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.48486729 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.486583646 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.484726039 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.484325178 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.484750009 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.484478918 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.484883171 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.484620797 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484849688 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.484731946 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.484884694 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.484613742 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.484742317 seconds)
  done (took 37.13928204 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.484178779 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.484729964 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.485119166 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.484983769 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.484720349 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.485823188 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.484241685 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.48347471 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.484162447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.481940807 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.483927998 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.483427036 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.484140575 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.483466584 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.482935703 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.483037493 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.482725037 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.48244269 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.483007759 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.485395613 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.481780649 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.481343714 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.481196938 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.481067439 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.481140216 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.483661111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.479594926 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.48067037 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.480809849 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.480794887 seconds)
  done (took 45.987237085 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.484290776 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.486053256 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.481433126 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.479723257 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.479207249 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.480095243 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.479058202 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.479483037 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.480619186 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.480062837 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.480690155 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.479619976 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.479566428 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.476040239 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.48071874 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.4826223 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.479415097 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.481198474 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.480439609 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.48518651 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.478451962 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.480672586 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.480194869 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.47937587 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.478828597 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.481472721 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.481283437 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.478780739 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.481884474 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.480123473 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.482279734 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.47834566 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.481000308 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.480490957 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.47936592 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.481233365 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.482467787 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.484917774 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.478523722 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.481631846 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.479965804 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.482276545 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.478920802 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.478969906 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.482799424 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.482412442 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.480869969 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.480940304 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.481276323 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.478767604 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.481069047 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.48161484 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.480116303 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.480033781 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.482010073 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.483240271 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.480709066 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.482121582 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.478950225 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.479531132 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.481291377 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.481139261 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.479573234 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.479996275 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.475985738 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.479451226 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.480517913 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.47956694 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.481651514 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.484270545 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.481745942 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.478266522 seconds)
  done (took 108.101653108 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.48377499 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.480035222 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.481444489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.483497129 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.481931901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.481892671 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.481051094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.480885696 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.483113493 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.481780897 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.481486737 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.482102698 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.480422612 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.481449909 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.484430223 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.481045516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.482355168 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.481073599 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.48184626 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.481353686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.482072033 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.481489144 seconds)
  done (took 34.084372379 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.479059052 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.480529514 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.484263126 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.483567783 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.484078519 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.48170465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.482812313 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.482683908 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.483832811 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.483702007 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.48176489 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.482028393 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.483388136 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.480546709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.484930933 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.482451474 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.481069593 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.484678696 seconds)
  done (took 28.169947358 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.480629626 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.483153596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.484356705 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.483487869 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.482553023 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.481759169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.483000215 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.481338616 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.482785488 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.480187849 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.480769959 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.481022231 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.482040224 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.481935114 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.480508663 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.478601222 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.480057382 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.479911155 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.481454489 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.480639497 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.481219911 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.482422096 seconds)
  done (took 34.079161324 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.481579391 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.482858128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.482914806 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.482332139 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.48135186 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.479903771 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.479993824 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.479185689 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.483247848 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.476966703 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.480863552 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.476922266 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.480458668 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.47800321 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.47872064 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.477788104 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.477341088 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.478986161 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.479663974 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.478321615 seconds)
  done (took 31.082938559 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.479693034 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.4798175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.479715972 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.480387335 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.48248182 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.48021817 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.47979237 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.480117697 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.480540366 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.481472355 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.480445394 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.481006287 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.480232005 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.4804706 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.480580103 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.480441359 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.480504004 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.480206826 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.483178972 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.479886601 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.482048202 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.480114308 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.480064951 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.48041405 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.48133022 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.479450451 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.478822566 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.478853772 seconds)
  done (took 42.943901007 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.476287909 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.476477683 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.4808556 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.47685258 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.475059427 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.476979492 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.477204578 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.475872037 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.475749417 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.475363727 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.478813836 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.475270699 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.47438628 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.473385116 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.474811434 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.475279903 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.479313069 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.475048746 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.475451676 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.474840067 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.475730268 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.477369284 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.475364235 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.476145774 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.474889176 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.475540687 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.475232244 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.475685775 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.474801487 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.477044417 seconds)
  done (took 45.768179067 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.539373874 seconds)
    (2/2) benchmarking "in"...
    done (took 1.541201039 seconds)
  done (took 4.566943573 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.475325555 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.475783238 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.476415527 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.474975973 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.475924068 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.475145797 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.475277856 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.475294613 seconds)
  done (took 13.291338484 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.478201689 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.475980597 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.475113688 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.47524532 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.475174018 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.478054025 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.486046611 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.479737136 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.477722503 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.476897415 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.479382578 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.481766009 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.479478385 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.479768222 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.477172685 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.482300305 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.477326357 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.476152343 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.476049436 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.47519096 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.478477518 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.478526411 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.480680663 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.478280711 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.475710622 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.485862397 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.484337224 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.480831459 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.476002829 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.481431287 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.478286695 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.47597662 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.475462961 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.478044839 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.474829728 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.47544969 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.485856576 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.481779079 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.483726628 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.479029709 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.476067642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.47515316 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.478659405 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.478665912 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.478975853 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.477916685 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.473845357 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.476322383 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.473685348 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.477476209 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.475866933 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.473670053 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.473591247 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.480343031 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.478233962 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.4847166 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.478738191 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.476440444 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.478819383 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.481472447 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.491223636 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.485895684 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.479791487 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.475611693 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.482967602 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.484980381 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.483072377 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.477703195 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.474181558 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.473113381 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.481144668 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.495304898 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.493056717 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.474850676 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.474047164 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.472710797 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.474151746 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.473194807 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.482700849 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.482037131 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.475971314 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.473834209 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.483250818 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.483286338 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.474938747 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.474724401 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.473698682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.474303679 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.473665401 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.482062345 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.479350602 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.473239309 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.474400769 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.475515372 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.477104388 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.474168458 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.474136086 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.476452179 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.474914551 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.472771169 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.473394037 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.477373832 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.478868748 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.476814379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.473487554 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.483151843 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.47683569 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.474115856 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.482746421 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.477312749 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.473863395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.47630727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.479528254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.474607092 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.476636505 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.478527749 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.474748894 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.475323458 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.475486829 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.472955751 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.481835848 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.487581496 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.475861386 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.473136422 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.478611129 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.478898575 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.473987095 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.477628631 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.476114457 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.472737281 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.47291533 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.476585177 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.474995782 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.476820972 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.474680064 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.47652 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.47388864 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.472286428 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.472807649 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.475882718 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.477349414 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.476107431 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.476985332 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.478220163 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.474580602 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.476185924 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.484412003 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.478045973 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.476085333 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.477699682 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.473840648 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.473617316 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.47554869 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.474690361 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.476700477 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.474910449 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.474324517 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.474363112 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.473381983 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.472361524 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.472634933 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.474328964 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.478965488 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.473949142 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.47917725 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.475798298 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.473511592 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.473558641 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.472501975 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.474758716 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.47444717 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.472979449 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.476886915 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.475953339 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.472646662 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.473182961 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.476530362 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.47513584 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.473883561 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.473073169 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.476452548 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.47766068 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.475294894 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.481145289 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.47720421 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.473320324 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.47278187 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.47450413 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.474708685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.475146732 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.476251907 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.478462016 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.490932373 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.490701938 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.476299415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.473258728 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.47416076 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.473148419 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.478497256 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.475702517 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.472082268 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.472439058 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.473266885 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.474085889 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.475048353 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.474671836 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.472940088 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.473082489 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.473229383 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.472806605 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.472235775 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.474535917 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.476497774 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.473530768 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.472628231 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.473191958 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.473420464 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.474015496 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.473064016 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.47410847 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.473434201 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.472757407 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.480662757 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.476699171 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.475655668 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.479408786 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.476406826 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.473819771 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.472112457 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.476193403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.477773566 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.481709513 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.479762188 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.475099684 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.482375041 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.48054877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.474120202 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.478182156 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.474886847 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.471913839 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.476124137 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.476201094 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.472886329 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.474426368 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.473597993 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.473728254 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.474349732 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.480342362 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.477095548 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.474091814 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.474642174 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.476694442 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.473981961 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.475553118 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.478140568 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.477733882 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.478252717 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.476550017 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.472502315 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.475947522 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.475057489 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.473320543 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.473107113 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.477033155 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.477852054 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.480088703 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.48085146 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.477293617 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.475086842 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.473154784 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.474575587 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.475653752 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.476013485 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.494493582 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.488472156 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.488023114 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.487019535 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.474400279 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.479600603 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.477045086 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.474218495 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.474122374 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.475865713 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.474990873 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.474709162 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.473139346 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.476418869 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.473203534 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.475749809 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.475959064 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.472972805 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.472529935 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.473715778 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.473840237 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.47260304 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.472065504 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.472673164 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.472733363 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.476215957 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.477497145 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.476503889 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.47548239 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.48288649 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.479329772 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.476965566 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.476278464 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.47483197 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.473959347 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.475942328 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.474202805 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.4767791 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.47615012 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.476558652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.478757668 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.474792902 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.480077123 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.478183468 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.477014942 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.476264786 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.473467422 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.474588394 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.47476156 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.474411695 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.482588977 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.479303652 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.478264238 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.475799422 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.4732983 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.474296756 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.473087306 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.47387987 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.473045922 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.473361958 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.48316214 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.480584697 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.474789559 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.477749236 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.474835287 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.473017467 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.474980909 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.473253255 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.479355371 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.475095901 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.475406721 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.476960188 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.474502474 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.473493503 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.476655436 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.473632859 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.474276923 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.472624124 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.481921486 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.480292769 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.4760752 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.473330598 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.483002345 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.476735819 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.482096577 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.479313751 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.475272696 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.474780607 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.472682437 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.476026766 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.474600902 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.475874702 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.474472983 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.474916709 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.475161513 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.4734335 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.476446116 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.476662696 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.474756824 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.473762118 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.48220956 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.482426292 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.473395985 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.473311817 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.474041729 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.473540528 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.473996707 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.472946332 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.472866901 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.477109179 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.480811084 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.475517637 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.474074209 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.474466293 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.474811004 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.474983688 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.47277131 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.472919184 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.473100576 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.473032003 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.475210493 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.474071411 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.47920663 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.475362623 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.475444665 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.476354074 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.475377718 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.481864202 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.477702301 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.475518617 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.475071249 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.474124782 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.475463697 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.475738061 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.474981379 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.477550946 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.473956105 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.473893462 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.477444489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.476399668 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.478375395 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.477065513 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.472611678 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.47227192 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.47314929 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.472115115 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.471076053 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.467139697 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.466751547 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.466411343 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.466058577 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.46559928 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.464785509 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.466997644 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.463384917 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.464963082 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.467769912 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.464609216 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.463118323 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.462472917 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.46377323 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.463856921 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.464401051 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.472665989 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.470130942 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.467982051 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.467899688 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.463767789 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.462376312 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.466039896 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.466415384 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.463950172 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.464440611 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.463516247 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.466594634 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.464738282 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.465394702 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.463843964 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.47111278 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.468354307 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.464358731 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.474545852 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.470076437 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.464326801 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.463325926 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.464635789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.464784653 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.462957104 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.461824622 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.463257486 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.473124054 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.470270344 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.464404605 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.465140779 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.467236416 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.463490844 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.464760426 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.462269319 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.464795307 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.463874411 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.464371535 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.464276491 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.461987683 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.461521671 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.462580977 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.464035686 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.465858837 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.465328648 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.462534456 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.465933872 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.465413359 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.464957655 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.463684831 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.461447221 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.461545035 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.46182223 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.462988455 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.462923664 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.463581335 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.46685008 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.464779144 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.464355641 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.462503274 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.461818572 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.465580567 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.467982704 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.465854502 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.464547443 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.464429445 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.465150831 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.467805499 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.464285675 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.462051658 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.462966655 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.466575067 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.464271244 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.462058946 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.461409211 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.464737219 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.475035287 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.470170475 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.463556993 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.465305924 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.468782417 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.464478802 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.461333347 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.461548683 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.464890637 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.46710992 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.465997328 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.462573867 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.470559262 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.467992783 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.463155242 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.461649939 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.465532492 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.468941188 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.468532995 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.464382019 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.462403726 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.466738902 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.474725185 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.464648982 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.47217997 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.478880439 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.469981657 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.466322707 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.463494474 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.462699324 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.464526709 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.464658652 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.462906883 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.461174661 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.461718346 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.462275563 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.462163228 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.467958536 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.467722893 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.469548134 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.465642424 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.463229564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.465431798 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.462232359 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.462867837 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.462826456 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.462379869 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.462126064 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.46218326 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.465650695 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.481269929 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.480598516 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.463615836 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.462955652 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.461745931 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.466838871 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.467919567 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.468606022 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.464804202 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.462273631 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.461741898 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.464764563 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.463541851 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.462104445 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.46328836 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.463443752 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.463470137 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.463009878 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.475461158 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.472522784 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.468242203 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.466178024 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.463558521 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.461796303 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.464571475 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.465140974 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.463082438 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.465197584 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.466157037 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.466819207 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.46284807 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.462329487 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.465773939 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.464851847 seconds)
  done (took 879.5481468 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.464263241 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.462189572 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.461767523 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.461560354 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.463376041 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.462661105 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.461760892 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.462467984 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.461525184 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.462974542 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.461263345 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.461058671 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.462821093 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.463235579 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.463563424 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.461810659 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.460438822 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.460697908 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.460213627 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.460556362 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.462001172 seconds)
  done (took 32.175407831 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.456576798 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.456866086 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.457271673 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.45698202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.456803023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.46248669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.45424685 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.453413627 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.453789749 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.453210061 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.453862067 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.454044845 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.453792107 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.449465283 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.449268938 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.449603323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.449711325 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.449105256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.449361389 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.450257523 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.449112343 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.448875974 seconds)
  done (took 33.436912898 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.449205134 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.449191074 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.450705299 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.450083897 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.44917105 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.448666124 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.449296087 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.449210042 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.448540437 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.450479409 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.450408526 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.450901724 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.453742527 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.454125773 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.452310093 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.450614475 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.45001364 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.449645491 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.449681271 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.449201823 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.457420518 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.452774346 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.448913471 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.450330887 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.449940059 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.449499849 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.449758649 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.450657162 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.449927619 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.451074247 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.448973311 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.450485861 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.453396059 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.452907923 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.450557939 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.449564133 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.449524003 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.449365937 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.449395472 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.457595325 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.458132613 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.450093138 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.465316951 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.459692736 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.450708863 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.452728424 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.452574925 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.448690114 seconds)
  done (took 71.124795844 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.449063699 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.44870567 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.449482496 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.449228554 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.44941071 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.449327141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.448771933 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.449230144 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.448624606 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.449612258 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.449457987 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.449274122 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.450185071 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.448784276 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.449121643 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.449023146 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.449185396 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.449530867 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.44884623 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.448853719 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.448809148 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.449031862 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.449217047 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.449599721 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.449034364 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.448974646 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.450640651 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.449161581 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.44969428 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.44889226 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.44949775 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.449385577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.448869673 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.4491147 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.449344727 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.449295522 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.449615434 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.449322697 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.450859743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.451604435 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.450802064 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.45023608 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.449687273 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.450121199 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.449215119 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.446069991 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.445854082 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.446351544 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.446140772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.446356025 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.445567066 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.446804809 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.442492474 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.442786116 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.442960102 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.443134943 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.44308711 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.445047188 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.440402725 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.440273394 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.440468451 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.440101242 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.440667705 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.44002052 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.442133755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.438666663 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.438560199 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.438223878 seconds)
  done (took 99.867203738 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.438152198 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.438522859 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.440468624 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.439508742 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.437952965 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.43874462 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.438082631 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.438095257 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.438821968 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.438289169 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.439449575 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.438829861 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.439782427 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.43912781 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.438726263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.439950343 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.43911619 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.438763335 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.438629636 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.442910375 seconds)
  done (took 30.230237935 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.438411957 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.439086209 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.438205305 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.439476164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.438167872 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.43862741 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.438811344 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.438523722 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.438671564 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438122221 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.438859062 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.43924895 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.438960967 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.438812523 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.438799666 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.439864405 seconds)
  done (took 24.468684135 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.439413357 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.44014703 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.439175222 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.440744782 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.439082694 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.438584096 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.439490622 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.43899652 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.439786736 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.438738633 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.439121641 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.439331009 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.438678107 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.439713975 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.440975208 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.438843162 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.43773991 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.438203491 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.438930264 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.438873118 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.439519763 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.438674247 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.4390581 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.438117946 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.438771725 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.438883984 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.4381163 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.439041782 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.438218559 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.438548401 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.437936662 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.438983183 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.438140253 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.438862418 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.439890756 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.438604102 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.438875895 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.438645531 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.438512189 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.439104822 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.437689451 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.438971348 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.438413037 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.438610618 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.440231297 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.438379121 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.439191793 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.438984042 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.438769415 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.439630426 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.438639688 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.439136836 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.439421823 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.438947605 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.438653179 seconds)
  done (took 80.592855541 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.438819647 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.438722545 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.438378567 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.438356211 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.438332123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.438292528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.43885239 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.440131163 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.438091425 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.439226718 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.438135546 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.439918512 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.43860321 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.438276039 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.438810838 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.439156735 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.439206889 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.438866235 seconds)
  done (took 27.34676423 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.438858058 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.439221815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.440474382 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.440218443 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.439269971 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.439313705 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.438603319 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.43875456 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.439303366 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.439314459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.438882671 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.440131009 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.439753583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.439881868 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.439845397 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.438648834 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.439064777 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.439419206 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.438714054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.438720228 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.439290595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.438743631 seconds)
  done (took 33.113105052 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.438899632 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.439466065 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.439176074 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.448880211 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.441861936 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.44096058 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.437774254 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.437414026 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.449838828 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.455022534 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.452939996 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.440047124 seconds)
  done (took 18.770979533 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433203625 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432331694 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.434320074 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.4346955 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435012889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434185593 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436976587 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434216355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434441803 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434544156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43680581 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433641296 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433243359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434008517 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430549702 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430163817 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429851752 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430942614 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430459873 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430221254 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431790844 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429808387 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430797159 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42991229 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430988488 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429991333 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429666024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431379058 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430316301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431443448 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430021017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430697461 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430293959 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430854263 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43017698 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430013056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429963247 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430063461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430129397 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430481901 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.429980096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430069749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430260211 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429739588 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430155858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430475875 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430943198 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430126587 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430622899 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430488847 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430745951 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430193294 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429529543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429582095 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429500589 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43067286 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431111766 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429550355 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429527474 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430907943 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431272517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429904332 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430061791 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43077066 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430059717 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429696902 seconds)
  done (took 95.906448875 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430162602 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.429674716 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431671852 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42689782 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42620171 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426036819 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425952528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425896018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425640298 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426278941 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422532973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422872317 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422149378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422676982 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4222497 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422392347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422970405 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422753285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423202921 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423851264 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423056632 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42393173 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422394552 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42371961 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426218504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422383574 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422938859 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422731329 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4226467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42293911 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42512648 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419980926 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419796693 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420093554 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421235978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420036025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419923106 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421003174 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417059799 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416914689 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417165063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416828648 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417513332 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416683669 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421679102 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414385332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414850478 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41406744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414219266 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414220441 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415590716 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41732549 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412643497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411740741 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411658641 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413135444 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411361799 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410910082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414672427 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408292515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408144103 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407600034 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408872999 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408850417 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40852223 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407729803 seconds)
  done (took 95.116891819 seconds)
done (took 1948.408367125 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.571108269 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.630737604 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.44438478 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.413548701 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.402548284 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.419156805 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.899297773 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.593020119 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.854842569 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.059464793 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.728180737 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.527332509 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.402651751 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.667186741 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.50125081 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.407028218 seconds)
  done (took 34.937631292 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.427124838 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.417368446 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.504534276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.41566793 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.434523464 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.56555599 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.460826362 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.420763078 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.407779808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.438311078 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.417576659 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.433333952 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.415483163 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.29103144 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.755823308 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.565929337 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.625830141 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.406080791 seconds)
  done (took 31.819674073 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.754873605 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.629385789 seconds)
  done (took 5.804695799 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.42656197 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.411232327 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.415247513 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.408950864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.402213652 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.40395959 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.406429369 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.401090587 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.403604319 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.504149341 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.408961437 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.421323004 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.408615849 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.409119609 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.408472095 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.451133849 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.54275682 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.4068341 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.405947388 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.41381019 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.407471776 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.513098752 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.443298618 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.405528532 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.504324132 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.407025675 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.41140106 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.415522904 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.537767956 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.407151097 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.406579988 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.411848187 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.409580229 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.171348765 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.864832462 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.401237421 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.419026387 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.41814244 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.406411308 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.56279527 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.408929322 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.414629788 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.41014856 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.854502292 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.527437253 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.515880617 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.403579074 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.407853066 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.410531263 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.47752838 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.407936521 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.410392709 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.445693366 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.226433216 seconds)
  done (took 89.125716894 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.4529687 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.401255659 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600488483 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.406157458 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.4013627 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.401768873 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.401834593 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.62070126 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.4608408 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408478689 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.66063507 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.876834807 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.41374313 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.468682685 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.453258854 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.471045876 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39860882 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.398533861 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.400525753 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.409042057 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876617585 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399289317 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.396481116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.592868154 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.4321476 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.892955491 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.392996321 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.39327682 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.393639077 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.393240422 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848226113 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.400305177 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.451976024 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.398234604 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.637818866 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.72054345 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.693332055 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.399663543 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.39159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.394475994 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.396271493 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.881580173 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.717434082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.392148211 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.391156719 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.88286652 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.393544107 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.398657627 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.393624924 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.657653573 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.391708129 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.393563139 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.392279371 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.391901403 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.392186534 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.464019205 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.476891321 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.891150582 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.39152565 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.390742683 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448633057 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.392674524 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.399172688 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399025083 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.393140246 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.719080449 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.29418494 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.39920315 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.717391314 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.834797872 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.39035929 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913961203 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.391437053 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.404464028 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.546550994 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.390899012 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.390641508 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.891699589 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.409083541 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.390795274 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.692063718 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.398188416 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.652903745 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.390796177 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.390499821 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88440644 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.396648401 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.450725201 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.390927618 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.391058754 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.391348577 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399112652 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.639519619 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.442515539 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.391542943 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.392104543 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.420179619 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39094063 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.391030337 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.399158008 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913420949 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.400729194 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.391072913 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.394875388 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.392270066 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.39089165 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.396718612 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.391210182 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.667694457 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.389577537 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.394878254 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390419727 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.390585056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.397982486 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.585247382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.394596094 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.633598069 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.391314878 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398420386 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.400368999 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.38888816 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400482026 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.390067919 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.394354954 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.38917768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.710860907 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.390790224 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.390618639 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.391060001 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.390302844 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393725118 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.392044226 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.44442716 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.391034924 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073597762 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.447319101 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.454018861 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.390568599 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.402046356 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.390148329 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.398354893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.392104453 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748447392 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.635647591 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.28666981 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.390249115 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.39061041 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.140905046 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.409412163 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587916186 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.393887696 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.389659074 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.697944053 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.297299521 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.390520928 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.389468472 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.392364451 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.665068567 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.389741323 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.749255167 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8629976 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.390256391 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.397856046 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.134030551 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.389646207 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.39086911 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.392914039 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.645575928 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.38926642 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.389710722 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.389597198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.389154219 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.389326934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.396477542 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.394830697 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.389958602 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.389689407 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.939658245 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.595214665 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.391070663 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.396597837 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889855819 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39572097 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389505738 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.390180393 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.393905069 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.39016852 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451256409 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.392132385 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.456037539 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.391103719 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.396632803 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.99513764 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.38935326 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.391054322 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.597376488 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984774951 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.389542142 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.38950551 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.389448351 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.444305895 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.920336411 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.453154758 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.638817023 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.392822291 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.424176549 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.389525256 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.403726855 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.917258973 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.390904929 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.389630471 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058967821 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.389456397 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.158260478 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.389389516 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.390079421 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977184871 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.391228238 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.394914209 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.390463192 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.389931494 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.715170018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.389683254 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.422941573 seconds)
  done (took 515.311589208 seconds)
done (took 678.417233599 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.38986761 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.394067642 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.39442677 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.394061097 seconds)
  done (took 10.975731123 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.396350462 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.395969531 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.394674307 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.394410463 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.395623886 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.395529408 seconds)
  done (took 9.777853686 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.392672152 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.3923285 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.395043146 seconds)
  done (took 8.583546215 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.567333617 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.395825648 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.686865874 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.390295073 seconds)
  done (took 9.445753973 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.395899861 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.396230986 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.39568505 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.396123995 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.396067618 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.397150249 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.395952974 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.395860549 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.395468976 seconds)
  done (took 13.969598304 seconds)
done (took 54.156199499 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("perf_sum", Float32, false)...
    done (took 2.389222641 seconds)
    (2/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.395115596 seconds)
    (3/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.393983045 seconds)
    (4/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.408559574 seconds)
    (5/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39246737 seconds)
    (6/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.395382385 seconds)
    (7/240) benchmarking ("map", identity, Float64, false)...
    done (took 2.392793712 seconds)
    (8/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.50659244 seconds)
    (9/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.397435459 seconds)
    (10/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.394539988 seconds)
    (11/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.391809975 seconds)
    (12/240) benchmarking ("map", abs, Float32, false)...
    done (took 2.395804265 seconds)
    (13/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.396565153 seconds)
    (14/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.402970953 seconds)
    (15/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.394474378 seconds)
    (16/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.39217172 seconds)
    (17/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.390673999 seconds)
    (18/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.407024562 seconds)
    (19/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.39885556 seconds)
    (20/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.504679233 seconds)
    (21/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.390268349 seconds)
    (22/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.393764098 seconds)
    (23/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.405225708 seconds)
    (24/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.394589247 seconds)
    (25/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.398488673 seconds)
    (26/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.39116907 seconds)
    (27/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.406410432 seconds)
    (28/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.410590263 seconds)
    (29/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.397725958 seconds)
    (30/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.394981934 seconds)
    (31/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.397648389 seconds)
    (32/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.396591537 seconds)
    (33/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.396826273 seconds)
    (34/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.396031801 seconds)
    (35/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.394591025 seconds)
    (36/240) benchmarking ("perf_sum", Bool, true)...
    done (took 2.393217822 seconds)
    (37/240) benchmarking ("map", abs, Bool, true)...
    done (took 2.394172901 seconds)
    (38/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.395273804 seconds)
    (39/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.404132226 seconds)
    (40/240) benchmarking ("map", identity, Float64, true)...
    done (took 2.396175422 seconds)
    (41/240) benchmarking ("map", identity, Int8, false)...
    done (took 2.394519345 seconds)
    (42/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.38996197 seconds)
    (43/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.400004663 seconds)
    (44/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.393458602 seconds)
    (45/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.392428338 seconds)
    (46/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.405942592 seconds)
    (47/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.404853444 seconds)
    (48/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.397668056 seconds)
    (49/240) benchmarking ("perf_countequals", "Int8")...
    done (took 2.219485661 seconds)
    (50/240) benchmarking ("map", abs, Int8, false)...
    done (took 2.39021731 seconds)
    (51/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.389273882 seconds)
    (52/240) benchmarking ("map", identity, BigInt, true)...
    done (took 2.390728741 seconds)
    (53/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.39103535 seconds)
    (54/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.394044321 seconds)
    (55/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.390164262 seconds)
    (56/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.39812504 seconds)
    (57/240) benchmarking ("perf_sum", Bool, false)...
    done (took 2.393686463 seconds)
    (58/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.395574159 seconds)
    (59/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.404032402 seconds)
    (60/240) benchmarking ("perf_sum", Float64, true)...
    done (took 2.396288108 seconds)
    (61/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.394842316 seconds)
    (62/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.39706193 seconds)
    (63/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.390547942 seconds)
    (64/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.389827975 seconds)
    (65/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.395611269 seconds)
    (66/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.402970971 seconds)
    (67/240) benchmarking ("map", identity, Int64, true)...
    done (took 2.395219169 seconds)
    (68/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.402283438 seconds)
    (69/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.394528433 seconds)
    (70/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.395028105 seconds)
    (71/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.512904066 seconds)
    (72/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.391548933 seconds)
    (73/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.394773308 seconds)
    (74/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.394322573 seconds)
    (75/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.392633907 seconds)
    (76/240) benchmarking ("map", identity, Float32, false)...
    done (took 2.394311158 seconds)
    (77/240) benchmarking ("map", abs, Float64, false)...
    done (took 2.394047672 seconds)
    (78/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.393083673 seconds)
    (79/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.396966152 seconds)
    (80/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.500656965 seconds)
    (81/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.389801621 seconds)
    (82/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.487506847 seconds)
    (83/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.389729197 seconds)
    (84/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.390230226 seconds)
    (85/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.411091073 seconds)
    (86/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.390200462 seconds)
    (87/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.393583255 seconds)
    (88/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.414780302 seconds)
    (89/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.393202289 seconds)
    (90/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.396243492 seconds)
    (91/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.390583073 seconds)
    (92/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.394968076 seconds)
    (93/240) benchmarking ("perf_countequals", "Float32")...
    done (took 2.289687353 seconds)
    (94/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.396854853 seconds)
    (95/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.393735083 seconds)
    (96/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.396964526 seconds)
    (97/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.39574537 seconds)
    (98/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.404196425 seconds)
    (99/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.395456539 seconds)
    (100/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.410888811 seconds)
    (101/240) benchmarking ("map", identity, BigInt, false)...
    done (took 2.390790655 seconds)
    (102/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.400550343 seconds)
    (103/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.395225278 seconds)
    (104/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.483634658 seconds)
    (105/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.390015771 seconds)
    (106/240) benchmarking ("perf_countequals", "Int64")...
    done (took 2.234427129 seconds)
    (107/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.401402376 seconds)
    (108/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.405415088 seconds)
    (109/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.396679989 seconds)
    (110/240) benchmarking ("perf_sum", Float32, true)...
    done (took 2.398938658 seconds)
    (111/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.396764461 seconds)
    (112/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.404171348 seconds)
    (113/240) benchmarking ("perf_countequals", "Bool")...
    done (took 2.218097362 seconds)
    (114/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.390438708 seconds)
    (115/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.405568222 seconds)
    (116/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.392199005 seconds)
    (117/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.392223322 seconds)
    (118/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.397023948 seconds)
    (119/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.391411821 seconds)
    (120/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.504370592 seconds)
    (121/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.399396161 seconds)
    (122/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.484948819 seconds)
    (123/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.396634646 seconds)
    (124/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.396220141 seconds)
    (125/240) benchmarking ("perf_sum", Int64, true)...
    done (took 2.393063635 seconds)
    (126/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.396235444 seconds)
    (127/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.389872849 seconds)
    (128/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.395521995 seconds)
    (129/240) benchmarking ("perf_sum", Int8, false)...
    done (took 2.394395801 seconds)
    (130/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.396711376 seconds)
    (131/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.391328468 seconds)
    (132/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.394406824 seconds)
    (133/240) benchmarking ("perf_sum", Int8, true)...
    done (took 2.403492273 seconds)
    (134/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.405774782 seconds)
    (135/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.504708425 seconds)
    (136/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.389950866 seconds)
    (137/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.39074663 seconds)
    (138/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.39586555 seconds)
    (139/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.396401844 seconds)
    (140/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.391846635 seconds)
    (141/240) benchmarking ("map", abs, Int8, true)...
    done (took 2.390717023 seconds)
    (142/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.393929604 seconds)
    (143/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.401966382 seconds)
    (144/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.391951113 seconds)
    (145/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.395123021 seconds)
    (146/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.504652144 seconds)
    (147/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.390343405 seconds)
    (148/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.405430068 seconds)
    (149/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.390985667 seconds)
    (150/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.404758869 seconds)
    (151/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.393829355 seconds)
    (152/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.395006421 seconds)
    (153/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.392141288 seconds)
    (154/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.479336228 seconds)
    (155/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.39020705 seconds)
    (156/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.402572258 seconds)
    (157/240) benchmarking ("map", identity, Bool, true)...
    done (took 2.394089194 seconds)
    (158/240) benchmarking ("map", identity, Float32, true)...
    done (took 2.393247467 seconds)
    (159/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.394672241 seconds)
    (160/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.395450443 seconds)
    (161/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.394057123 seconds)
    (162/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.403057813 seconds)
    (163/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.391421519 seconds)
    (164/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.486397915 seconds)
    (165/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.390078333 seconds)
    (166/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.414082786 seconds)
    (167/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.392206757 seconds)
    (168/240) benchmarking ("perf_countequals", "Float64")...
    done (took 2.280756425 seconds)
    (169/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.391317229 seconds)
    (170/240) benchmarking ("perf_sum", Float64, false)...
    done (took 2.395679323 seconds)
    (171/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.394425738 seconds)
    (172/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.396183183 seconds)
    (173/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.394344799 seconds)
    (174/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.390073357 seconds)
    (175/240) benchmarking ("perf_sum", Int64, false)...
    done (took 2.39010103 seconds)
    (176/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.403241716 seconds)
    (177/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.394735823 seconds)
    (178/240) benchmarking ("map", abs, Bool, false)...
    done (took 2.395560048 seconds)
    (179/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.400122099 seconds)
    (180/240) benchmarking ("map", identity, Int8, true)...
    done (took 2.394984493 seconds)
    (181/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.394898698 seconds)
    (182/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.395637444 seconds)
    (183/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.394718794 seconds)
    (184/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.40887855 seconds)
    (185/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.39214944 seconds)
    (186/240) benchmarking ("map", abs, Int64, true)...
    done (took 2.396155775 seconds)
    (187/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.400756749 seconds)
    (188/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.389972324 seconds)
    (189/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.39891852 seconds)
    (190/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.406500804 seconds)
    (191/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.398288479 seconds)
    (192/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.390515843 seconds)
    (193/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.397138362 seconds)
    (194/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.397063615 seconds)
    (195/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.513880807 seconds)
    (196/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.390874432 seconds)
    (197/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.394498734 seconds)
    (198/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.395214837 seconds)
    (199/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.39747523 seconds)
    (200/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.396886416 seconds)
    (201/240) benchmarking ("map", abs, BigInt, true)...
    done (took 2.394637884 seconds)
    (202/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.39705094 seconds)
    (203/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.48829656 seconds)
    (204/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.393720865 seconds)
    (205/240) benchmarking ("map", abs, Float64, true)...
    done (took 2.395712125 seconds)
    (206/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.392735833 seconds)
    (207/240) benchmarking ("map", identity, Bool, false)...
    done (took 2.392093882 seconds)
    (208/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.391399487 seconds)
    (209/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.478629361 seconds)
    (210/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.409964849 seconds)
    (211/240) benchmarking ("map", identity, Int64, false)...
    done (took 2.390530445 seconds)
    (212/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.409599538 seconds)
    (213/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.402159874 seconds)
    (214/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.394264515 seconds)
    (215/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.401428454 seconds)
    (216/240) benchmarking ("map", abs, Float32, true)...
    done (took 2.39637558 seconds)
    (217/240) benchmarking ("map", abs, BigInt, false)...
    done (took 2.396059352 seconds)
    (218/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.405358257 seconds)
    (219/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.390446693 seconds)
    (220/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.394794647 seconds)
    (221/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.394614331 seconds)
    (222/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.401012626 seconds)
    (223/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.406075883 seconds)
    (224/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.399164961 seconds)
    (225/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.393763055 seconds)
    (226/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.394783983 seconds)
    (227/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.397047319 seconds)
    (228/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.401932233 seconds)
    (229/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.396219495 seconds)
    (230/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.395329143 seconds)
    (231/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.390417701 seconds)
    (232/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.392249585 seconds)
    (233/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.406435034 seconds)
    (234/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.394994707 seconds)
    (235/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.396293196 seconds)
    (236/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.395170549 seconds)
    (237/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.478947597 seconds)
    (238/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.390843896 seconds)
    (239/240) benchmarking ("map", abs, Int64, false)...
    done (took 2.399825184 seconds)
    (240/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.395960129 seconds)
  done (took 561.36227568 seconds)
done (took 562.766171179 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.409824164 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419160633 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.398605774 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.399538547 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.414975711 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.39095711 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.421341483 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.404215283 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.406192817 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40018734 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.398753251 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.080299284 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.401082841 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.400980485 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.398739487 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400512239 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.391358858 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.406056758 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.398509317 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.412527309 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.398547985 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.399298707 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.400095066 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.078695249 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.40340076 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.404375079 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.403488935 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.404761616 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.41496179 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.404028159 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.404355304 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.415115137 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.390708347 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.412906457 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.396946601 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.404534587 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.414850817 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.414272902 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.403238773 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.406072476 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.39132062 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.403978912 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.404679787 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.401278604 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.40031308 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.406321172 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.401474711 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.409489094 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399881167 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400217814 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.406488807 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.403868496 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.404025194 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.401341244 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.418391704 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.401566404 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.408904534 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407125549 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.41404509 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407321305 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.391038964 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.410134842 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.40432711 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.399123862 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.408336762 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.391039288 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.399416682 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.40639919 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.390713492 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.405524836 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.396224594 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.414059264 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.403156848 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.400809153 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.406528365 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.3904183 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.402157975 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.398717112 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.408590557 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.399638759 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.413351815 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400159361 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.40395386 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.399842738 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400475179 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.390955156 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.421285091 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.402325728 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.412822811 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.414187325 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.408983148 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.415072747 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.405073287 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.398783451 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.412601757 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.40977905 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.403798817 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.404520837 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.404794023 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.416338764 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.401645633 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407347925 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.396438119 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.396740566 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.399048947 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.400637824 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.397375302 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.401560414 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.410495936 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.4066075 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.402725019 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.403679004 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.409612935 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419261086 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.412061923 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.403880714 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.398001411 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.391250001 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.396142137 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.401916112 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.401240734 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.3993486 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.419307614 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.402807776 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.397864728 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.394862441 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.406524864 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.4008604 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.41316725 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.416783077 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.406237544 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.400951675 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.403235732 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.390989378 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.42298298 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.40595215 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.403309437 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407817943 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.399367613 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.396752007 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.416211559 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.418294793 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.401090963 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.408912191 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.397025502 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.390461761 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40487429 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40022374 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.399761476 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.413245156 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.39728552 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.391032247 seconds)
done (took 236.184383872 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.396229951 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.395992578 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.525765395 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.396102517 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.536803867 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.396086765 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.396418878 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.405422298 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.399627825 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.396064139 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.527333636 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.396341812 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.527040585 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.537290134 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.525502684 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.397538907 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.397424339 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.398094375 seconds)
  done (took 30.356148969 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.472557115 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.469601405 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.504547762 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.398037021 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.448661343 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.501933742 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.397395669 seconds)
  done (took 11.597923367 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.404708067 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396564767 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.460610076 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.460093174 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.397002615 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.587601486 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.410579195 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.396549994 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.458283836 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.396978159 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39737668 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.405714433 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.396368726 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.460119176 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.409725595 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.516546056 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.399372344 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.396547255 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.572565882 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395833057 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.405883553 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.459088731 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.409524254 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.396425666 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.403479934 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398160531 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.39644829 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395959843 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.473293788 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396228433 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.39341784 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396033341 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.397257249 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3958023 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.396451352 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.399292751 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.396087546 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.396579199 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.395829811 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.396207424 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.396157061 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.420747201 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.396288599 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.396324527 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.39614201 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396526739 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.458289868 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396042093 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.396301349 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.396838649 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.460397841 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.405396325 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.396790649 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.39666759 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.396165252 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396664779 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.574467651 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.460049313 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.396403275 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.461298845 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396359707 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39686614 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.397265313 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.398109053 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469089519 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.396540135 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.460288987 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.396544461 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.587371769 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.420920553 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397502368 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.402440515 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.401678823 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.400142425 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.404351288 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.395652035 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.400469613 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.403849133 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396040995 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395995323 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.58920654 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.396255331 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.415809788 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.405506928 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.395982964 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.456700314 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.398023807 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.396527452 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.48307807 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.515986157 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.457612587 seconds)
  done (took 134.848236683 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.41527248 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.401092139 seconds)
  done (took 4.221546647 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.399596558 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.396431775 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.396418765 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.396972555 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.396983534 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.396599723 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.396991681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.398813519 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.397472951 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.396797315 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.3959513 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.397656961 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.396754249 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.397204369 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.396660152 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.395834418 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.397326787 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396725537 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.39592249 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397445755 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.006490354 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.397315207 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.397280263 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.397081029 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.398375286 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.396397321 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.422638996 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.396539754 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.396294875 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.403762447 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.398467857 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.396372013 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.397355897 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.39935402 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.397553199 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.397811701 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396834079 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.398018942 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396280955 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.396768553 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.398331147 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.397183451 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.396395406 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.39843761 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.398493354 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.398334677 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.398222989 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.422265124 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.397456049 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.398235523 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.398457168 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.396126064 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.396712164 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.398299435 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.400944779 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400607908 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.399541464 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.397215355 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.397352255 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.397496246 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.396847477 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.396162999 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398314333 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.397641196 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.397129679 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.397901418 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.397792328 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39740766 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397410903 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.397906271 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.398652054 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.396627516 seconds)
  done (took 102.691071154 seconds)
done (took 285.122074196 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.305163841 seconds)
  done (took 4.709955187 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.698099158 seconds)
  done (took 4.105129994 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.128760453 seconds)
  done (took 10.533685732 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.402956348 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.393678435 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.406984053 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.394437024 seconds)
  done (took 11.005360634 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.057093101 seconds)
  done (took 4.462679131 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.394167583 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.391306682 seconds)
  done (took 6.193475803 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.624708835 seconds)
  done (took 4.030561945 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.520187394 seconds)
  done (took 3.92531628 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.411822102 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.393720042 seconds)
  done (took 6.218082319 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.392200245 seconds)
  done (took 3.797194973 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.811495962 seconds)
  done (took 9.219344591 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.391133671 seconds)
  done (took 3.798322246 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.423765516 seconds)
  done (took 3.830080449 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.161556555 seconds)
  done (took 4.567078653 seconds)
done (took 81.803008531 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.391210661 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.397739989 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.396863224 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.395815948 seconds)
  done (took 10.986766716 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.462622054 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.455430692 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.471674952 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.450747909 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.454665489 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.456124141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424443352 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.422293551 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.456840784 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.452457616 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.454576446 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.448017821 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.464742062 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.42247663 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.452482998 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.467196962 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453435328 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.461556554 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.42340012 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.448698756 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.397738279 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.45735305 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.449807622 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39802919 seconds)
  done (took 36.114869731 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.791309867 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.468579891 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.579244343 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.448744384 seconds)
  done (took 7.693898644 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.491647473 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.500252698 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.501215432 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.543289504 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.569413335 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.502085467 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.423480444 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.418761089 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.404890765 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.500627465 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.579568992 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.397453882 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.671441003 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.397233119 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.689433113 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.398347042 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.397815554 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.492612411 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.540863309 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.555760994 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.398677492 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.48651137 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.495031688 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.39895256 seconds)
  done (took 37.161689977 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.406080049 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.415134083 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.400779389 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.401093529 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.399424464 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.400223273 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.41312628 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.400168478 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.404922813 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.397536257 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.398321775 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.399034247 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.412109642 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.399193451 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.398579511 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.405886404 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.40182588 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.405147755 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.399027971 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.398729204 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.40846007 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.405585794 seconds)
  done (took 32.277874968 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.392756268 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.393541033 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.744275212 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.647714877 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.394129607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.393293908 seconds)
  done (took 14.372808606 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.450926717 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.47493865 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.400307522 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.659653897 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.720188138 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.398685418 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.399392719 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.502374073 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.719543837 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.789645317 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434157803 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.438584652 seconds)
  done (took 19.797515853 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.401089686 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.394898691 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.401775088 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.410961331 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.438084966 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.402908058 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.405432144 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.392013094 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.442967474 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44266839 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.40118342 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439832168 seconds)
  done (took 22.380827718 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132114096 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280411552 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392226232 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536515186 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393144076 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408442087 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.524169774 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.798721601 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.431776481 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668072785 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401129058 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018152892 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404503287 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395692094 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396629239 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.393301959 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395250037 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111214908 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394776424 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391779039 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394619755 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391893286 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396726829 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568767747 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406875362 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392859477 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.654781359 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392954936 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634615428 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607451482 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607908013 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398137503 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669306363 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736743262 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533393753 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569082188 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414126168 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393391368 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.423146113 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.40256309 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394114815 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393748693 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603776301 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396884655 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392055339 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397705155 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80389429 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399530242 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.392584421 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394332348 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608470976 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049476523 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.397580728 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39177865 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568965598 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392561987 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.397221084 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589104605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391420916 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404890086 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393667363 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.396697982 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411172271 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40677428 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983955348 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.399674463 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.397561759 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396811711 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392508247 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393583491 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415293404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405229998 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41138769 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392280505 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041364169 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40408308 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405283108 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071768283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395533957 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.39512093 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392025806 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393874724 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391684095 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.392812422 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392103165 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147318761 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401986403 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.392217287 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411380754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.797055207 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56708976 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252494101 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.404860883 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398622129 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.404948592 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397540332 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.392074909 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395449842 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415598169 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.799044601 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39536228 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.398382133 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391536697 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603326892 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39982184 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.406650373 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804738147 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39174997 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.420989519 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394395846 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56701684 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.905331059 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607238941 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402260869 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423968627 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392005226 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216809974 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395422032 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.401728827 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391514762 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637087398 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.392957072 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394925209 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513150566 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414417902 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394430623 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392000052 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394130497 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392004485 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.637187329 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398424666 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607619488 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.397360407 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391782948 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.391648527 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395241142 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.39401952 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397180843 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393261751 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6710467 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392350799 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403767254 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391837968 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.407526997 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.401268212 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.397424551 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402695434 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397730909 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395569914 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609502626 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422907687 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535816555 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419615263 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.391770704 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396684974 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.39746506 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.397802091 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392065178 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394716183 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410446892 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403078794 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403343256 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893714115 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376937983 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412914151 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283863653 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.407360849 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51289261 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400473815 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564617715 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.3975779 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403014856 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.40278717 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.392983028 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398818906 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604094938 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.41008084 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564140515 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.796966441 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892501583 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824075919 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.395986212 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.392303428 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.392081242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392799617 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392303882 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393459027 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567159937 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611242479 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405779845 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914673045 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39708874 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392459518 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.400682491 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607043827 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.403082182 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39280916 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.39248051 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394742244 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39894087 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60949211 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668287391 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.408717866 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391945162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.911206367 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400462873 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392989636 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392227788 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423223933 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392580444 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876236394 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401882715 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401745337 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611017724 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397661394 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.410063679 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392485014 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40213925 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397459452 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.415909497 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3980652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.565745065 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394255634 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394905485 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392441732 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075386484 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850664887 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398660427 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.396367461 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39444836 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.800246115 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403183093 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392421214 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592085369 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800117487 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392822971 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799902656 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393187141 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995111071 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609051882 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405761397 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40014585 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.393515652 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609299576 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607333882 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424248389 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392750399 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405328014 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.396868458 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882148003 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392817994 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570118427 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800602532 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392322999 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394610475 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.475111992 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393975368 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70879447 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392389442 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392191189 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397250573 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40684672 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880810246 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411679299 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397629464 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004833108 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401462708 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.805090352 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392380162 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.566263961 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607024035 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.681887549 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.39644822 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.392961655 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.393230589 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608666153 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410327471 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394454695 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879868775 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.236551282 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.399911071 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392746918 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218436688 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401489109 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637626751 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.40282631 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.396728493 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421723004 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397071989 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393045015 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.392612338 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411177858 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371128166 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965702961 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.409771118 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398570675 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399923126 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408247346 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406278151 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.410028211 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.890908453 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396511922 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400774108 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425113097 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.397482619 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394759186 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.413698577 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392277052 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408951211 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570004579 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396634834 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411715057 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.400555249 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537674944 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605918167 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392685172 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394291856 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599021464 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.392888208 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.413280561 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089049153 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.398732306 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392073423 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394654854 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394831391 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412229246 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516138083 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565210562 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.606587495 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61215946 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708722182 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392259731 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396411369 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.160961097 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143311961 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396234414 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.395374886 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.396392196 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898771825 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054428936 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919900654 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610976737 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400158415 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40431801 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398026481 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707460276 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392106302 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668177228 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402285623 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.398426274 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418423742 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396410908 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395901605 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606063971 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666788983 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392545471 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393058323 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396954828 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.392696981 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608729244 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.608828518 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083310363 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065807235 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398377938 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399610555 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803611927 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667785066 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392800162 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392701099 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393212694 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.415015608 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394370273 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405425149 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396858376 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670035714 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606203572 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741703667 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603152578 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.284052568 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.268088332 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403794643 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396396182 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392964146 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569576426 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884607835 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.000136815 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402600343 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516582353 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567243304 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.393289056 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706623229 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.401911392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393838572 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393029831 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40843091 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.392668786 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602207048 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921148854 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404704399 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.400778783 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.394314778 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.3935091 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.563462101 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398885054 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151700223 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414706551 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604437957 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415452705 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397151335 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905670849 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609610248 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396932482 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399201153 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594846026 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393856284 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427919871 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.271712417 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.392479536 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213124949 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.606299128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248705541 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392277195 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024587299 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918823095 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.400827701 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99008375 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39567128 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403594867 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672379554 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.400119918 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392833996 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68332889 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.398708635 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401922165 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572216603 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.887836781 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000844369 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.426549621 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396446737 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.406237472 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392870951 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528484407 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397049585 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40724269 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.796934189 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392754552 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396524475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983599143 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.396453687 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392573236 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.399885153 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392848539 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.400796309 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.416416673 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.398918564 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395462344 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592064351 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874498038 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399083408 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.019925921 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.72689087 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400437206 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403188453 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.395789155 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401778297 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392040242 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394755528 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393929148 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399532549 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210799972 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.402407857 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.61132623 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403205418 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.603084199 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604060349 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393418535 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566605872 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396653644 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415037395 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.400124024 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398007098 seconds)
  done (took 1026.933993938 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426796686 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.395860703 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.411081678 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.452369293 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422645354 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.460620288 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.472955616 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444756799 seconds)
  done (took 20.894304279 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.400792272 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.405610107 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.40256341 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.406936641 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.397258993 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.643061241 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.393483437 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.40387398 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.411285605 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.394075378 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.397970365 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.775379972 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.403402683 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.398630316 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.396245406 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.407423827 seconds)
  done (took 32.446132645 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.138577126 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.466043234 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.567002455 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.43539979 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.394931406 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.394735909 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.576434523 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.397055655 seconds)
  done (took 23.779417014 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.413796771 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.410006321 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414639836 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.410596098 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411608609 seconds)
  done (took 8.468384199 seconds)
done (took 1294.715603785 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.399659954 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.39983243 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.399988308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.401094685 seconds)
  done (took 7.007326802 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.394393775 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.394950967 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.39853066 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.811456601 seconds)
  done (took 10.406108328 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.713194771 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.841892447 seconds)
  done (took 4.963366439 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.400632356 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.39635146 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.393819977 seconds)
  done (took 8.600077257 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.806321719 seconds)
  done (took 3.216080519 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.881012273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.84275279 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.543769437 seconds)
  done (took 6.677024421 seconds)
done (took 42.277491792 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393170047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.16756117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.552228596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.401942505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.553940318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.552880886 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.621137046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393809834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402176135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.403029618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401363319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.553409807 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.612838695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.165767802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.608388944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.163360686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.554320687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398821248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399777804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.399809774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.622115319 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.39844374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.399048645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393303532 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.555283447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.537190494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393878214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.164481365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.392970983 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39652371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.539869348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392949868 seconds)
  done (took 83.293058043 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402325291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394033473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.393984378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399619864 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.403496411 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.393947564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.39360396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393473086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393164114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.397921763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402446381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.393251997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395885386 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.403178319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.394954487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.398730553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.392518332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393779945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393898582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394198383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393535692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399674272 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393755309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393761917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393919687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395663694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393596624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.39404341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.399005469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.393838851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.395678927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.394602588 seconds)
  done (took 78.078134005 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399974989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.393572304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.397265419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400034994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39401054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.393800912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394336338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39410896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396193132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393596301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393762898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.393665118 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.401528049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.393782867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.405971215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393659094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.3942479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.396375337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393356549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.397172292 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.397623764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.393624226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393396705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39319999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393694753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395509621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393430786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.394132913 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.393316601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.393716454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.397026547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393785814 seconds)
  done (took 78.061928802 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.624729206 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.40078643 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40306166 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.393965138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.401292504 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.399276277 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.394671855 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.624963591 seconds)
  done (took 15.050873348 seconds)
done (took 255.890928585 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.393912424 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.885959431 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421136222 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.393870862 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.426047884 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.423462451 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.559111463 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.421983743 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.5439203 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.394656745 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.42097275 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.394401397 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.135273234 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.505177455 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.245523046 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.352981936 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.205911722 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.395087916 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.948824664 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.567959329 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.420252768 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.394143478 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.246813936 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.216359 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.407905943 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.404358886 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.40475718 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.512285229 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.483149622 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.405143676 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.890373616 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.396581562 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.398814315 seconds)
  done (took 64.02616121 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.399267313 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.398870196 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.399058998 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.398452157 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.398955811 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.398940208 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.399127194 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.398675013 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.398845627 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.398561405 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.399400833 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.399013907 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.399708791 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.399565221 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.400090361 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.399108001 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.399563815 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.404202324 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.399003505 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.399008353 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.399478149 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.404594906 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.398990688 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.399614462 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.399039826 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.399300882 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.399025134 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.39935842 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.399809271 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.399233936 seconds)
  done (took 43.395188257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.399668511 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.087714683 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.395235093 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.405981614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.721724851 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.701389024 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.249572471 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.622375491 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.406341519 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.478740967 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.395668365 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.403067107 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.399536191 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.078661029 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.432314009 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.020185527 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.472323839 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.75575158 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.547233641 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.395655266 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.545886681 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.529099863 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.403800345 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.408437891 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.432200697 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.405369373 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.80880658 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.409136813 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.409066111 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.408386215 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.404598364 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.689243663 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.394301493 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.398606203 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.81148148 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.403808966 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.993433409 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400500841 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.652460471 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.4058837 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.400129997 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.407334167 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.395547526 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.409504568 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.794432778 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.402696359 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.432087373 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.697618118 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.403702542 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.399355419 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.397019193 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.795613324 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.408563797 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.394315049 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.408364859 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.796057492 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.409819115 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.247263492 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.695674581 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.408320404 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.408278046 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.396791361 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.398912364 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.475467102 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.394272467 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.397646999 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.396704094 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.407921959 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.412568384 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.797790023 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.399011286 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.397809517 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.596863504 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.400687225 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.394854675 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.403246975 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.405544296 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.409305945 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.400266884 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.400036129 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.498523621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.525720354 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.697844468 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.698427554 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.407012506 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.534896328 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.403838889 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.689390825 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.399359642 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.403763324 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.404285299 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.399500671 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.21981664 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.404959616 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.400650743 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.399835794 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.537252107 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.809873762 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.411886824 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.407500865 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.542542775 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.4049245 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.399757643 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.70154235 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.399795703 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.393751179 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.399131328 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.536709024 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.399250267 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.410470025 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.404412312 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.403468378 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.617910395 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.696878371 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.406091951 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.395081193 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.735622718 seconds)
  done (took 202.395215722 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.401240939 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.400161375 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.393824645 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.39465553 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.394651787 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.395317188 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.394777296 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.394670294 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.393716024 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.394309248 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.395928276 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.393699399 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.394131691 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.394564912 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.395522219 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.404375846 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.402556876 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.399500813 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.395320042 seconds)
  done (took 44.942208101 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.399297526 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.782164748 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.399191231 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.399038777 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.440720471 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.399314757 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.39465915 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.523372194 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.404102187 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.399732118 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.399902598 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.393683505 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.406010673 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.807329181 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399613589 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.809975677 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.39941478 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.399652817 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.3994183 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.80760075 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.394246118 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.691761262 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.442831967 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.807914393 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.400110186 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.399547842 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.399425112 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.807834984 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.399705741 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.813849783 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.40151171 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.399586517 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.443096905 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.442954203 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.39472666 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.693740651 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.421732223 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.510544837 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.402530156 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.401555533 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.811243202 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.402011935 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.402417552 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.405160826 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.783234157 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.784236157 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.403429331 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.399896843 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.808193084 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.781706514 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.781863053 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.525602268 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.401513673 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.399529701 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.690067552 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.400059748 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.809328757 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.403429357 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.400456312 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.40002755 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.39926811 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.403070428 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.522817648 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.811256712 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.691006757 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.40314448 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.395389371 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.395063129 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.4015957 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.44314858 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.399862714 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.395323159 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.402980523 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.442287652 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.714134077 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.401374145 seconds)
  done (took 124.06090698 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.492496574 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.827729037 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.394768785 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.395198351 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.512261536 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.494781498 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.599164793 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.459431425 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.451388554 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.492502044 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512839087 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.80762016 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.39471622 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.473733845 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.968580168 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.62072285 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.192518961 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.398100308 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.530441695 seconds)
  done (took 35.428221346 seconds)
done (took 515.656235914 seconds)
SAVING RESULT...
DONE!
