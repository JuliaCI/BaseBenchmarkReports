cset: moving following pidspec: 12544
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345684684 seconds)
loading group "string"... done (took 0.549237938 seconds)
loading group "linalg"... done (took 7.044552521 seconds)
loading group "parallel"... done (took 0.159409131 seconds)
loading group "find"... done (took 1.12833713 seconds)
loading group "tuple"... done (took 1.784066536 seconds)
loading group "dates"... done (took 1.26735876 seconds)
loading group "micro"... done (took 0.223399722 seconds)
loading group "io"... done (took 0.91626124 seconds)
loading group "scalar"... done (took 36.256754208 seconds)
loading group "sparse"... done (took 11.044717436 seconds)
loading group "broadcast"... done (took 0.88835464 seconds)
loading group "union"... done (took 11.961496207 seconds)
loading group "simd"... done (took 4.207279372 seconds)
loading group "random"... done (took 8.47377047 seconds)
loading group "problem"... done (took 1.735380541 seconds)
loading group "array"... done (took 19.862552357 seconds)
loading group "misc"... done (took 1.654686351 seconds)
loading group "sort"... done (took 3.130022655 seconds)
loading group "collection"... done (took 16.286739846 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.500370781 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126705812 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117607451 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121754091 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148067164 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117097693 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125913017 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085766164 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.828341744 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149356269 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120291729 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421510896 seconds)
done (took 5.263755177 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174409114 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086004387 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081880923 seconds)
  done (took 1.379562809 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066402417 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124979499 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066879896 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066858198 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066801191 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065976629 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065832883 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065925194 seconds)
  done (took 1.73618408 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074424254 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068201741 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068100359 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068398198 seconds)
  done (took 1.493630052 seconds)
done (took 6.075893723 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76947414 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20582866 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183413379 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.404844812 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129965935 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153573217 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.633796583 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.298253133 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182767923 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081520889 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104370281 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3178581 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107044533 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.620034957 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073636725 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089498943 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137738444 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413698385 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06711338 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081784886 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088659938 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127859126 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084778997 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074231731 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141032956 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06730359 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129411223 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080706112 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066287062 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206616378 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172029864 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.64393719 seconds)
  done (took 10.189273221 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098799353 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098528305 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068346356 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135818647 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09572451 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069140509 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070297329 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067057655 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086297321 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127393077 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087820878 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10069656 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065324533 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068607021 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083797703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203919243 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081209976 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080714149 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070384428 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074553181 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11615397 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077391937 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077558383 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0771173 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128456348 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18014007 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096834254 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096969771 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066651095 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079962424 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114843738 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125465723 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064762968 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066174589 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12319354 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094131219 seconds)
  done (took 4.670463587 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.303950253 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139363507 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09054481 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131275093 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064841445 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106579003 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065086338 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080363498 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202213591 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351278823 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577661246 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110788785 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103243112 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067714342 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068567099 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066499782 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.353151479 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108440679 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104926742 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080837792 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069916336 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068889959 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361434822 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069843222 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064062462 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068187556 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057594442 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123761609 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068236301 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109250149 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925265264 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124630247 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065885495 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100208245 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161569545 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063633392 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.217219569 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142274699 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06851643 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064019094 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150015646 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070550202 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068725553 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083549365 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103161902 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11253806 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065625194 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066879202 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163043958 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064679803 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078700038 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.99409353 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153460137 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076980766 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064243624 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246772535 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085674952 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068801503 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065292217 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.205068155 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132941865 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067158342 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066433157 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06781636 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068783456 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362466429 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068574386 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.032104956 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067729407 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076791918 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068755585 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069414266 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072371003 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072875083 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08503935 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0655365 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074965479 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065341331 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065445816 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065805491 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064086434 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083408496 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.361073861 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065994906 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067829577 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065002691 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085534542 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096836886 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066269235 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064784362 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100285055 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067718033 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.169969091 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.109771765 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066916563 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084422194 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069418167 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113330669 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068785541 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.108983856 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06510286 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096861284 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069754369 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098916577 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080968888 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068106862 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401388744 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064939923 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06513733 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063697883 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064700507 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068438313 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065815045 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067387359 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079189495 seconds)
  done (took 21.367600169 seconds)
done (took 38.744626543 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270318104 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074778343 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074880098 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074956559 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074845627 seconds)
  done (took 1.874531308 seconds)
done (took 3.164131088 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118934596 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099437215 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064939715 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095454815 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06402897 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09941681 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099050544 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080629463 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098931731 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064013224 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096508239 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064309859 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064151106 seconds)
  done (took 2.415938163 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083275754 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083479181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069599148 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082042166 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062944875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082054463 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081130503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0877891 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080573881 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071951013 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063562401 seconds)
  done (took 2.128034541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082361684 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083558902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068762608 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080870911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06375508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080703922 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080250275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085275376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080951396 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073037137 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06319526 seconds)
  done (took 2.120121524 seconds)
done (took 7.93863971 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079021844 seconds)
  done (took 1.345813721 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587100217 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.074871368 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081224999 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111687414 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183815818 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118677549 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277582297 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086392834 seconds)
  done (took 8.973390189 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091460568 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082004046 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069391719 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068462383 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067834439 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070939863 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071528455 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069304618 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069456992 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072103402 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073217307 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073235553 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070123813 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073016908 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073702983 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070818376 seconds)
  done (took 2.514130025 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092630984 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091687019 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074232295 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0741895 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072159644 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07199377 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073995779 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073495555 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070478813 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071470591 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074374955 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073442469 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071192983 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064651176 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073624038 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074991854 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070319466 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073305281 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074285746 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074320891 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074316279 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06404743 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071103284 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07328274 seconds)
  done (took 3.15385218 seconds)
done (took 17.263807568 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114587349 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071156636 seconds)
  done (took 1.458170591 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08402515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083735706 seconds)
  done (took 1.450295896 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085761307 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06534919 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092302954 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078001728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065844088 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066204761 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088561971 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066432623 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065624558 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066016823 seconds)
  done (took 2.023427338 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069796473 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077878523 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07023173 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081376438 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073350068 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064197262 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07300125 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067802808 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078081963 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062461222 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071821443 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082613161 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070893126 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083924136 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072393102 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068135821 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070769335 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067284422 seconds)
  done (took 2.592393217 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068451544 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067588121 seconds)
  done (took 1.433565262 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068722618 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06542416 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067298541 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066508192 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063159876 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062356356 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063085424 seconds)
  done (took 1.748083321 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393552226 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110143264 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297387282 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072675501 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083626796 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25625899 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066881367 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072326711 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072010682 seconds)
  done (took 2.764504067 seconds)
done (took 14.760903111 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080321612 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087632471 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095725713 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362939156 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091238205 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067633497 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115469442 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192648532 seconds)
done (took 2.401828958 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217329512 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.62178628 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39282654 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203119779 seconds)
  done (took 2.512252187 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327160924 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086446917 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059846606 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067922564 seconds)
  done (took 1.846858804 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067442754 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070215472 seconds)
  done (took 1.44336508 seconds)
done (took 7.326995624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068095339 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06695512 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064521949 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068053406 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06464193 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065278878 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067039842 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081914694 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065413123 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065414383 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06798366 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067025153 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065055288 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064499084 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06648897 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067094088 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063272514 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066029249 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064155502 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065281947 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062982238 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065188963 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062922539 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063058216 seconds)
  done (took 2.929026973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085019032 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068625356 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073386874 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071245908 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069654037 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070564745 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070448408 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065919354 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070866652 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068965306 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070201355 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071117383 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069459656 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071455333 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069392346 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071293679 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07209687 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068090091 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069435624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071556338 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07220289 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067766681 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071036085 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072313537 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070124724 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069081146 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068989621 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06587644 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071167264 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069233821 seconds)
  done (took 3.431620076 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071427894 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065091763 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064266792 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070587745 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063308678 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064670018 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0629326 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063627418 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064136237 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062946865 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064755745 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062995767 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063060389 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064313309 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064005912 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067114737 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079081488 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064111734 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063442386 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064191125 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066888514 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063386216 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063296218 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062861215 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.174841833 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062882998 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063417857 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062941768 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063955971 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062947585 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066182107 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066692942 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06306752 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06969187 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066233293 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06259174 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066552591 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062353147 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063322607 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062635782 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062568035 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062762632 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063477102 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069669752 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063267309 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064660098 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062939599 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06431071 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063460718 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066051071 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062841806 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063222593 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064866803 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064155799 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066998084 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062852714 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06351368 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062546368 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063705095 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063198955 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062517847 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062590785 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064799836 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063433668 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077048836 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069393308 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06299576 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064565072 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063865124 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065622671 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064779814 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076511145 seconds)
  done (took 6.102969252 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094010147 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088918662 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066874969 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066690284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063849999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065358346 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068062271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065605081 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066940822 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071916287 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065964242 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066600304 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066008666 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078710215 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066185437 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066515571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070950348 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063126276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065285245 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068693104 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065554244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069344237 seconds)
  done (took 2.859038948 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157808155 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071161344 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106395613 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073436023 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066903515 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072114092 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069574856 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069410119 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069648724 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067636544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067865077 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069235642 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067281493 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067391832 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067982827 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068522563 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071457054 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0694859 seconds)
  done (took 2.694617785 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079530097 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06790393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087709939 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06748244 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066929739 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069281391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071977194 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076138051 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069538417 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067050641 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075579597 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069845075 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070029084 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067273655 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069967951 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067037757 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069545017 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067139456 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075528395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071706332 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071938041 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075101829 seconds)
  done (took 2.8959026 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08138933 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068757084 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082442348 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067792308 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061994718 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063447709 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069609699 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065674589 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069173942 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066997311 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06543639 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06410282 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068676307 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065386147 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068816391 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06519334 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067026855 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064972408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066819645 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061204799 seconds)
  done (took 2.677446622 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088209769 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068907277 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068340535 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074942142 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06655888 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066774707 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074467468 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067081322 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066758545 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08714529 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067112136 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066575873 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074066335 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071309342 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066797531 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074291282 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074296956 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07430935 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066945832 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066433486 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086130049 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06644312 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073798389 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066647154 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066474774 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066421772 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066610642 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071217523 seconds)
  done (took 3.319955766 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067741591 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06722466 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063883734 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063282888 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062719257 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063407171 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062623567 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062957823 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065443304 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062842661 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065143358 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065764332 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06558649 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065580312 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06548682 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065894652 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065340357 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063062425 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062918302 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062695848 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065534162 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065314151 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065277874 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062813479 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062972637 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065324309 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062894044 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06306228 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065071519 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062679792 seconds)
  done (took 3.258936625 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077125859 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074457328 seconds)
  done (took 1.480433679 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065026207 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080322454 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062571251 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069944263 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069074973 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066693251 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072805052 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069048781 seconds)
  done (took 1.878335205 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083247885 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078956432 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067625787 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079617253 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075785921 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082217491 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131358642 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06674619 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072394514 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063822294 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078935287 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065171153 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072142196 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065871873 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071672918 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071962917 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063696665 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071537162 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068015032 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064132885 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06683174 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074680512 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067944175 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061505071 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066615889 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087012159 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076397462 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065218068 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06823432 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073088924 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071795636 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060043198 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065828958 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066161684 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063371948 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074795766 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080564005 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068161271 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0739268 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066205746 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076082497 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060918561 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070060541 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071884108 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07617816 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066444457 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066322335 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06087319 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064316681 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06973388 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062055683 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065656001 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060662587 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075081266 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069361989 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076452912 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065391041 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068528872 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069797719 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070051023 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072267013 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067866493 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068314965 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065625974 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072359607 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070257968 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075140538 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061042364 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060612707 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064426878 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075385811 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088066911 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072305099 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066533009 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066680446 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063654633 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069049632 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066441079 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071835354 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074168501 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065932876 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071051615 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073267984 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065924923 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06877455 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073688876 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064255232 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06868753 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064044234 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081714643 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064708307 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063941831 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0640005 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076484457 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069232262 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065788378 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06396656 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073280148 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060265468 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066763901 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067190281 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066647121 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076629632 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071373701 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07142348 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074893176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073614102 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065924513 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068686254 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063044086 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067216714 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065365107 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073227788 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059836181 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069032617 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067128489 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066260493 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198962885 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065566285 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066504733 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074298163 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072426127 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065679525 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062871426 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069351648 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066907476 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070126529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074846713 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064675953 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061773323 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061917359 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069125449 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066557535 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070856646 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070846212 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069118491 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061359755 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064536105 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071394364 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075371469 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066504842 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066814408 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07214818 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06733845 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065265331 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073115342 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069290746 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065767756 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072086841 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067203783 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061928973 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068936649 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069672027 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064967665 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069564187 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069628231 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069123276 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06725825 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064873433 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073974016 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066667215 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065643107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06639053 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064667032 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076590956 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068832959 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061181849 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063104917 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075865342 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064372829 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065361716 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065401925 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068978041 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066748438 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064623621 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065540217 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068782316 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076333412 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069867917 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067985593 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071837748 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077513023 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06632951 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068458245 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066139243 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066449798 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066667608 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075184231 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072131533 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07077404 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068871606 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062614734 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07123288 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07311421 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065018564 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06368492 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064625194 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069929294 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071050406 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069575299 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066398749 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063540507 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066421568 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068824366 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06805551 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065208321 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064865584 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072368172 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064027381 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072412677 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066542909 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075761147 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069296475 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061130387 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068781036 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06396574 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071717309 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061066469 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063819168 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065130843 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067394356 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064921756 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068649837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060436096 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072931649 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073373589 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066443 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065605832 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06600914 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072466178 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06761243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06997098 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068895332 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071756437 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076279127 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065283411 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068764403 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076007824 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065756767 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187940051 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072414568 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065352367 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065288089 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065498738 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064327967 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07016584 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074931399 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072492168 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06071446 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068743554 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065105262 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065120975 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062353653 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07118849 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068919718 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067756243 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073689171 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06762346 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067455238 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070248924 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065936715 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067684696 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067472891 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069317345 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067327393 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068614305 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065714712 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069832363 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065749686 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064096475 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067715258 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066201806 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066869077 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071260789 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065547995 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066886116 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069476257 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066996371 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067545494 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067103932 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065901402 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069562287 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067221064 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066614292 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068855062 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061953534 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0736211 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06633402 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073777939 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06664502 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063107592 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072846546 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069760751 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072419375 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066952783 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067006306 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068001145 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065925574 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069765359 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073453457 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06428678 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077457116 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074208537 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067080538 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069217225 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066812532 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068354483 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065434977 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068023392 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066955752 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067048366 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066181649 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070949258 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068713697 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066555756 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067650435 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066659926 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066560041 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067153109 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060696838 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065594094 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065588683 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065873265 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075453495 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066446697 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065643689 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064668907 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066869273 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065025367 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062692856 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073495166 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074786277 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066303808 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073123618 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065261743 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067192589 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076388679 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060190715 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063974184 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063489227 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063944583 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072768775 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066268674 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075123333 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066083567 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.0650463 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063090321 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066711904 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064210957 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060521812 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063554216 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069103331 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065026787 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064571714 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065432001 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068109415 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066397509 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074820639 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064713028 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066266869 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065633651 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062565411 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064920531 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065207043 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199591853 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067939507 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064078925 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06367538 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066446022 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067499575 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067795209 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065448235 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067822307 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076502967 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066017058 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069975099 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070019098 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060894023 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069959964 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065926583 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06634863 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065311824 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07003999 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07011871 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067421033 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075949924 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065909889 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067087431 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066238361 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064188848 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066129033 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066244132 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06649298 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065588222 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067540828 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07508545 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064897747 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069034624 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066431501 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066646023 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07312026 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067105518 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069429392 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072528293 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066967788 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068563103 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074311255 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07027606 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069496423 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067347558 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068326448 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071884589 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066015192 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072872363 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066648231 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06709702 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067660234 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064275928 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065911829 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066195349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065572062 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071762233 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067279325 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065836343 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067047619 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065450927 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068751742 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07179555 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075073023 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068938666 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068880663 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061000651 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063292585 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067069855 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064018141 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068168129 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067983706 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072107033 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067760624 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066221253 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064234253 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074719277 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071784991 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069192175 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063929776 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069355076 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066325643 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068034598 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066846143 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066369794 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067214631 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069569789 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067377777 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065234197 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072600788 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069439907 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066523077 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067524233 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06657313 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065976834 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061163888 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066449884 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067579459 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071071552 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067927367 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066199062 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076200357 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063565235 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066133673 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068796541 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064960589 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070585894 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061084827 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067365307 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066874934 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066639692 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061063261 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064898671 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06364367 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067625137 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064748982 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060546661 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075479146 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074071945 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068303673 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064503294 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065257895 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061187949 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061113388 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195385986 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06778405 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067592533 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076037294 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065291413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065173486 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06161369 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066237699 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069309078 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07005347 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063653159 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061830331 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065495496 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069460101 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07212463 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064809806 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066595789 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069276044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06803628 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064414833 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069893165 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063002214 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069978216 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079551355 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067330989 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067180283 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072868967 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073565048 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067215408 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062149957 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067799481 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068687927 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067175734 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067212384 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066926121 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081643568 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069607289 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066354033 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064782318 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069139132 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065539111 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075221685 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0676053 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067485827 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071187597 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068283267 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074860966 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070009962 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074121395 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069714995 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068940825 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064650842 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065871386 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064520911 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065890338 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06717559 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066979456 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071905751 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074523012 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065946849 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077351827 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075733289 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068199421 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062649626 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065516535 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066151773 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061824872 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067108554 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064226702 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064111509 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064239665 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065030251 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066917063 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071425484 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066708271 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066263085 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065626071 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060240672 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067952775 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068519017 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066452363 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062797735 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066006521 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06688571 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069714277 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069409735 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063430378 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067405822 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067631861 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06680465 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061266908 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072229486 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065168903 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068115407 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065352636 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066215642 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066871744 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069288657 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071155549 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066965711 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06824177 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069666981 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068277872 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063753028 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063625165 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071307363 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064077769 seconds)
  done (took 42.489347053 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103356017 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063237433 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061811056 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061766222 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072685402 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062316638 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062083077 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062774325 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062560624 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064914358 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061768937 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061750177 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070184766 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077476074 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072983666 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066055438 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061587196 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062366899 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061283301 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062820833 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070165573 seconds)
  done (took 2.820149964 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075681662 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070833482 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071831125 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075035839 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06679975 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070396233 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07166369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069692334 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075136064 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066477331 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074984954 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069844532 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066247105 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066370881 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06621932 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070278312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074934592 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066914239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069704768 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080448227 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070094044 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071923045 seconds)
  done (took 2.952438311 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069144748 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067163732 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06718356 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060718291 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065967681 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060910032 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068981846 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063941772 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068561188 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064823822 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06457592 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064705756 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067404509 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060972511 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06557961 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06331676 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10691166 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068774759 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065690099 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066120342 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061013283 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067472577 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061515391 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061460857 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06452094 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068967402 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066302631 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063753879 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065720037 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064549861 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065211325 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063433295 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06688834 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065707291 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06425483 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064455434 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065152528 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065079528 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060801245 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063363827 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065912938 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06125284 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065323958 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066602541 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063409589 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063056146 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066462337 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064614483 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06074203 seconds)
  done (took 4.612850172 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082052386 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108635623 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067745087 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08769018 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079251212 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074724638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068555987 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088333318 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062748438 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063701974 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080785133 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078623637 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065069338 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069548827 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071704266 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064997919 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066654231 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064076838 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069115382 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064498048 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068961045 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071705466 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079165202 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077863164 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068947478 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064211614 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064664882 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069638926 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077720447 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069219294 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069931943 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070379702 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080025267 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067051105 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064750926 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067106506 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080905895 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065418597 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067550945 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062594871 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066898528 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069265754 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071052983 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080646472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065426173 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070158743 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064550261 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062279656 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077165091 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067186516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072436138 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079281637 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069028542 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064916051 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069244656 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079113475 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064983507 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063515935 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067656156 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076749038 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062775283 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068279074 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078403617 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066811725 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071952814 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078790984 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070670444 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069068711 seconds)
  done (took 6.387913771 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078129145 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072456804 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080394769 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079239332 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071412789 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071881221 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072413311 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071517077 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071268811 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07591536 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071610436 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093103918 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068649021 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074275039 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071988121 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071438398 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07171937 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071229866 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07145219 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071392125 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071877318 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078833945 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071695904 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079721934 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097993243 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067182613 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071671215 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071519918 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079718683 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071468086 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07888191 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071485483 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072015536 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079210015 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07887549 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071460433 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065658473 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071554068 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072036307 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071301536 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06693258 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079160491 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071181362 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066722777 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071511307 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071139742 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07886508 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07832577 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074194437 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076009933 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071287482 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079272951 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071011997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071053738 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079015742 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103649973 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078953614 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079016998 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07143548 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078481314 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079079298 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085578473 seconds)
  done (took 6.074826697 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086191749 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074559545 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076249441 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060937118 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063432567 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069452193 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063536657 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064083522 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073938723 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073394071 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076023385 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069102466 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071978489 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075867936 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06950397 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071941924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069224301 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069138382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073488978 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068975455 seconds)
  done (took 2.839578635 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076159954 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08477759 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068641081 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07280608 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070225672 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07339934 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069935954 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071264251 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068491965 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070845117 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077290584 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077493989 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068632337 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073072061 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077472327 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073627273 seconds)
  done (took 2.585077028 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077076798 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074128382 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082007165 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068786746 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065981484 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063857009 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067127404 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061706548 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063909321 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079568344 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066771853 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067879012 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065630249 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064872517 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064256358 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070120394 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063989166 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064885279 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066987783 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080128982 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077893753 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066271972 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068007364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066660208 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066381661 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070184097 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064501882 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063105383 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063016147 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065812821 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066104167 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069222352 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062789083 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063249167 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064735884 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063072734 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065130423 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065822023 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068757093 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065868437 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063524087 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06528981 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065674356 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066533948 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062199081 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06786628 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063698987 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06997795 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065069429 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067992707 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067473934 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069802952 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068538632 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074284741 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070593514 seconds)
  done (took 5.127892991 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081191281 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071154613 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063858965 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065758073 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071120114 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069209001 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070945924 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06917227 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069524114 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065861695 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069718317 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0702404 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069600692 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071075937 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069687498 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071432309 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063653604 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069498441 seconds)
  done (took 2.675367903 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073203145 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067632273 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075429921 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067457971 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067654654 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06989949 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06330689 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066172049 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066636985 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067482093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067486688 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06974149 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065857639 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069593878 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067842508 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067626055 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070043568 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066027634 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0676013 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063723558 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06969644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06642482 seconds)
  done (took 2.912951228 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074413067 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094526215 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.141102587 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.086622847 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082424817 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078615649 seconds)
  done (took 1.974863953 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093243214 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080513622 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0667748 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088242289 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073245771 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066957446 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067840236 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067130668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075166806 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075806402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06691903 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07550505 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075609329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074756872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073036727 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074133959 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069226332 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06902329 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068337956 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085965948 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069276847 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077011381 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067262874 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066881496 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067277002 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075218284 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075876068 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07572625 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066982937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075760549 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073088415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067359973 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075897388 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075454896 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069029678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075429993 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067641882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083304252 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072273474 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074496128 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068213796 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072494954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075577029 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071559703 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075490439 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067057976 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071563246 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066914038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067305519 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084969095 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072617251 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074400479 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072795888 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07534837 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075223932 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085131035 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075400044 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074540069 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072810096 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078390581 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074628409 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072500211 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074240655 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075434471 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072886479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074514928 seconds)
  done (took 6.284757307 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083398435 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088499565 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069681196 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079272491 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077152515 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06946924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069319322 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069201512 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069365601 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068796201 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109702062 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069602467 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077270354 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077000076 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069747243 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069130339 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069242021 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075535339 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067099077 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085161304 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066909639 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074480429 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074826813 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074865222 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075961005 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072858334 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067190848 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067628837 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066898783 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067252277 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072240322 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067317492 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075057747 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066882901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074510412 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067339774 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067211815 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07171745 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067268619 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073068222 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075504028 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083045652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06705228 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067001676 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075429337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067049199 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066777098 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066402545 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066797208 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066391906 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07549274 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075060747 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075734189 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074648426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066903418 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067045989 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06679731 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066736475 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066834874 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072305065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074760313 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067090468 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08508434 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067013658 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066820658 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074695427 seconds)
  done (took 6.208201283 seconds)
done (took 130.779635054 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202461665 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177601152 seconds)
  done (took 1.792943568 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070869923 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099735 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078960425 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129901203 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06661289 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100520614 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09975286 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07726419 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065890808 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065881464 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065736916 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068186843 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131420647 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06580637 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066009582 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068611484 seconds)
  done (took 2.753806933 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100430885 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158838823 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099254249 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064909895 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096799703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07258128 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064287255 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074904197 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07093984 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064932297 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072472624 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070507924 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064688728 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070707229 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070707911 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072650278 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064904752 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072482266 seconds)
  done (took 2.860040801 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103289887 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09057149 seconds)
  done (took 1.627659493 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157581053 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105130854 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150462082 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344722006 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166763632 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229583696 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126727182 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12661954 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117364622 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122515108 seconds)
  done (took 3.076359369 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101006544 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152981662 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254509546 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116530069 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072101602 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094102239 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115961358 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077315733 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080574889 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079639058 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079994395 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075667779 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098322644 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072925399 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072783522 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076161869 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101706746 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072153716 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073503172 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076369614 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099010607 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065488187 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073440435 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071940063 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077297663 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077397298 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065708035 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065222731 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076210481 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073765909 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076671827 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093365124 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076534056 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106622727 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070303682 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106815884 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076025101 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073685005 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073960039 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073452936 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077977699 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078369908 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071910108 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075717753 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065267008 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075874884 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065077367 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065204468 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077349574 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066249265 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077077927 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076155878 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1062758 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066446164 seconds)
  done (took 6.023367377 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104612513 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104463782 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071533137 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109943918 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099752381 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071072233 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100726081 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092629851 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102613135 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069597559 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068560383 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070208101 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081681994 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082601833 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111756741 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103379953 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072908962 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070318282 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103299219 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102520837 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068329331 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095086484 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089299646 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101604178 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067311553 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070396053 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068108585 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070126971 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076553588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078198788 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069569 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080439422 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084637149 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077998277 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066949878 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067673645 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068050721 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079372309 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079336163 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07837431 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077490366 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067392325 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067661286 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070887939 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070040579 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067080932 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078277814 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08003011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078569033 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06909921 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069920715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067938152 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069142162 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079811291 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077454376 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080799024 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079742103 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068401689 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068423725 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072046773 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080922939 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078796497 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078946131 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06914881 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07896482 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068159824 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080248841 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084692128 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068506207 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069995099 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068107943 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069344918 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069608853 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078003701 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077899166 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069659341 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069232019 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068180367 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079497548 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077992346 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068015 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076346431 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067207656 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068079854 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069360008 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069698107 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077374536 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079254336 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070021628 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068321691 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069267598 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068545995 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067130641 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076757187 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080363278 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078910105 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078299109 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069085915 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078575165 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078251214 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069279603 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079180872 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068173663 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069684245 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197592803 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078782938 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077940698 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079874079 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069951839 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068752074 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079019768 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081678231 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069340128 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079135805 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081481308 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080090483 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068523775 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081607586 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068825371 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079529251 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069818744 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080777073 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068419466 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079905867 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069537958 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068983908 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069386297 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079719486 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069290852 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069385919 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069955366 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070052665 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080919516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083264694 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071448583 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080984872 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.0789386 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070684687 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07898168 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068421941 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0785595 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069941994 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070435794 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067538345 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082182888 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068641256 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068551066 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069693778 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080636232 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068142558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079334595 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078154764 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06820475 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08101578 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080554183 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077147156 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080384378 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070446633 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068199426 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068148302 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069544534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07839159 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0796057 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070573258 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068684738 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079036051 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.0793622 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06771408 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078178938 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078438769 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078625599 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068194385 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069041961 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07989978 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080373117 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077867646 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077802947 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078297028 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067928551 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077536912 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077947209 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067876014 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084471049 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067593037 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081891221 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078797272 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076569722 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07831136 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080294543 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079763629 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079971798 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082860729 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067797966 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068058715 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079427241 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067693439 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069327011 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077995535 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069382445 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069594687 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083487535 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068429051 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078698479 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066984054 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077837187 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066645346 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068776064 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082450723 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067808974 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199818113 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079698201 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070307669 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078714236 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080978982 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079100366 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068578724 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07066622 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080160917 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079119 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067929487 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068357886 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070136546 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078647241 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076411767 seconds)
  done (took 18.69713549 seconds)
done (took 38.271283792 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211903813 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149665567 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179158913 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117248281 seconds)
  done (took 2.185893042 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125205202 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103677095 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096568367 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066286476 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101842509 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064276211 seconds)
  done (took 2.024849189 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318377667 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212730314 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186400786 seconds)
  done (took 2.17636567 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203496615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187588907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39972295 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252723026 seconds)
  done (took 2.620191264 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14688828 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09175369 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068879922 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085702339 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137668485 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165359483 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103038257 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125165337 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077349246 seconds)
  done (took 2.520958335 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145827419 seconds)
done (took 13.139246686 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.228072946 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110894716 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.1033148 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.193798126 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.15540205 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074684733 seconds)
    (7/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075123614 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06817271 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09268086 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084173367 seconds)
    (11/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185297176 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098470228 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076451796 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072326895 seconds)
    (15/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.174376075 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.194097328 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084808362 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120094588 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09167874 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115100278 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113127974 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09370246 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141938771 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198555423 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082209772 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101264235 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075637827 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169480024 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09146468 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078810263 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074845922 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071220629 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137546033 seconds)
    (34/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.107441884 seconds)
    (35/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.13561658 seconds)
    (36/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.115704193 seconds)
    (37/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071372377 seconds)
    (38/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.095091037 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087202186 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.178107817 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.151174528 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.197515098 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075680925 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07369397 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072213602 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069710517 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176860297 seconds)
    (48/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.159197184 seconds)
    (49/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072978227 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082452721 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064901936 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183889149 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066497693 seconds)
    (54/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.136035266 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077816109 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182104921 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064246333 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.188720768 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155067668 seconds)
    (60/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.215934982 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083340834 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07321936 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063718235 seconds)
    (64/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054116888 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070180348 seconds)
    (66/309) benchmarking ("sort", Int8, false)...
    done (took 0.142221968 seconds)
    (67/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100822702 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.151681254 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053082142 seconds)
    (70/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072464861 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053273492 seconds)
    (72/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08156517 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077985583 seconds)
    (74/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066390004 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168862348 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.0652538 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062072391 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06459942 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07164101 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.176617661 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106087829 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.146881389 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130428323 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089951421 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.259723565 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089947439 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 0.347870291 seconds)
    (88/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.159974008 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064314346 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.173204908 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054233763 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168449046 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100463343 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079204921 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075429297 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051279589 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094133631 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194944947 seconds)
    (99/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075444326 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089796216 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111143463 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065771275 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067034196 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.185752673 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072079248 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052228114 seconds)
    (107/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065891752 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067275289 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068939576 seconds)
    (110/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097020409 seconds)
    (111/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060978557 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139449743 seconds)
    (113/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068079868 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183053683 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.175587062 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107528286 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.163600756 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193820713 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.132439882 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073359386 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069600236 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085277103 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071705562 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052353335 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072133975 seconds)
    (126/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078661119 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070698787 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08400722 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074769801 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050765955 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051738703 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051729697 seconds)
    (133/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060060278 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11790002 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087332103 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149095911 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070781471 seconds)
    (138/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060914747 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.171979581 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071849016 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09012319 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051052981 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084862979 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064732059 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071770737 seconds)
    (146/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156811669 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05115865 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.148959178 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111098942 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064583234 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068231454 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05081892 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193136392 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072848814 seconds)
    (155/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052043716 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171011895 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075002578 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051044458 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148023516 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072444501 seconds)
    (161/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098691413 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073596501 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068754972 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050793815 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060552261 seconds)
    (166/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052130991 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064735171 seconds)
    (168/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051478698 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074888631 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067594426 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076669273 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051748419 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150556183 seconds)
    (174/309) benchmarking ("sort", Float64, false)...
    done (took 0.127366803 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061811321 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065487925 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086431473 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14477493 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052379786 seconds)
    (180/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105934398 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071682378 seconds)
    (182/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065956151 seconds)
    (183/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08602991 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135214078 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173466264 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072065941 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072308507 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071027286 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051154953 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075003587 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097394845 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072439018 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.267085874 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051674882 seconds)
    (195/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072174021 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108937599 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051730423 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136737638 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067319799 seconds)
    (200/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051666756 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150390206 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064242014 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.075480384 seconds)
    (204/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075147024 seconds)
    (205/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061080574 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.138213109 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065521116 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069124029 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142524632 seconds)
    (210/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052715305 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067616419 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072837597 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065567679 seconds)
    (214/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073392003 seconds)
    (215/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069048974 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051610987 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050729992 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074275072 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07216244 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065675472 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065638398 seconds)
    (222/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065141636 seconds)
    (223/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070578834 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06537432 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065260258 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066946605 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091054291 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086556018 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071067649 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179763665 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053667774 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051363168 seconds)
    (233/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062487127 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073115535 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050985775 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051335763 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064284706 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066156965 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052246563 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087817855 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135193671 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09088583 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072282388 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067015599 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064811347 seconds)
    (246/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05099147 seconds)
    (247/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075703721 seconds)
    (248/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070596101 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065194654 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088222429 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065573406 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052181682 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065317778 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08977084 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051210056 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050947838 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14028898 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052838333 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071170219 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051428643 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088575837 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099310009 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065462241 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084573042 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064790246 seconds)
    (266/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067846002 seconds)
    (267/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061596818 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070712875 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087616254 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137300489 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05300157 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072130102 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088538419 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093176678 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064842027 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064704679 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087260541 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125716957 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077102688 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123515587 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070736136 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052398804 seconds)
    (283/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064273274 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091086237 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051296259 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064286193 seconds)
    (287/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051590942 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071603289 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066091448 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065179598 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051223781 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063197819 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063457135 seconds)
    (294/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063689231 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07222527 seconds)
    (296/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071495117 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066673663 seconds)
    (298/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061800879 seconds)
    (299/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063049529 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086550026 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07058543 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107108426 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052171772 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05120719 seconds)
    (305/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072707715 seconds)
    (306/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052290018 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064794949 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070041603 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079737877 seconds)
  done (took 30.483852467 seconds)
done (took 31.960373159 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087022428 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095506812 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076814383 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094755205 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081973655 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078659108 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073387327 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080146311 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081360757 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083059567 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080465382 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056475791 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075371076 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07353913 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073305441 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09012065 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077159601 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071787782 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072519314 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06421581 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072576315 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065106769 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066554171 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05445752 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07685498 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070908389 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071645383 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073441609 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065288305 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065388378 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06846982 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072044671 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064903581 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077220971 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071119761 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072291609 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073727003 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075571583 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066688761 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065165887 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073338191 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065482848 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07170508 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072157617 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070898206 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070069018 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072141499 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076880886 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090274121 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067584524 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073543829 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074826388 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07513987 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071372018 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068577398 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072206982 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069668343 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090078107 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072648655 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067285388 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073013508 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073063335 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070197701 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072051022 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072130897 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074249094 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074312376 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070371095 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073878352 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070398531 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064746961 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072039005 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067838021 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064688047 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074736434 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075774484 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063617874 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070233656 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071667154 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070336052 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063896113 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066481839 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066099565 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070665231 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066537568 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054471055 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068405876 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070462209 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063544435 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072032162 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070483169 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071047697 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066232307 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074742215 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063718719 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069548687 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06494249 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064695283 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066006202 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068151982 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064137475 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066627959 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073065289 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065671004 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070437919 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07795995 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064401211 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070963578 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063543548 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064154786 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078273622 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073339735 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064945939 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067168783 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063663728 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07204664 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064107565 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064778797 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064127605 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064660591 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070335399 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064951289 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066751292 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071453483 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076880376 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064225944 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067697456 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066133158 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064553338 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069400656 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064120634 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064433059 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.19935839 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06193694 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067813831 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065677993 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072547686 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067309312 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072002559 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066239858 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072932969 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069529328 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070457824 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070651165 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064020223 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058419938 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067681645 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067393519 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067148297 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064742169 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066296157 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064593262 seconds)
done (took 12.426657918 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068701119 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142951313 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099069327 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09456975 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084669273 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066060456 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075032721 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101016785 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067439674 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101468348 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086308009 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083979758 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111138731 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064473422 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064894788 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069476461 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066617316 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080820377 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100007181 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085371661 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11470459 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064589221 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09327831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088978458 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08628391 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100747788 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066073888 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.0687235 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068632529 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089808556 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085417016 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068587557 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065641129 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099169304 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091446944 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082053261 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06561317 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081668178 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066165588 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065277343 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066551115 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096843004 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078832131 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07946826 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069010292 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068125687 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.0662823 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082617313 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088153596 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077960292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085197356 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101677698 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067852884 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064865518 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064272958 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084167688 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06506543 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067767176 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065845194 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067445791 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065378504 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068274494 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080250476 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080957334 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068679242 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079344482 seconds)
  done (took 6.805419324 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085528184 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090397846 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081840268 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082877 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065913231 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066200236 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065835469 seconds)
  done (took 2.101802977 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069066649 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087698911 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08880771 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088025113 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083295114 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087205112 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074822598 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066014482 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079736743 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067160069 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086561236 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101333132 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066563987 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07214074 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09038784 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066012061 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089409496 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065972469 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068661178 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08884278 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067824102 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081226417 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069195202 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066360571 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08023283 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06597753 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112240402 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070083417 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067427337 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068711897 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064051871 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105386631 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079147391 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074743333 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065844601 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079838506 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079800503 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063985916 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081702093 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070636788 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078901073 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066155999 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066610853 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063508906 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069786833 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075871968 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066519987 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066454361 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068150476 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084829141 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066478036 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079031161 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069124432 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068513615 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067245433 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070271164 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075710508 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067171403 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085969313 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067493959 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082601212 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081849345 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079140514 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081743495 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067863919 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079110368 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079184879 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068238017 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067474791 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069014277 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081418666 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064104671 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067055892 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076321361 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067962082 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088300014 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087884571 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067497807 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074556044 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066223653 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065827092 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065934632 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088258843 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068126024 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066119084 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070225079 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069060364 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064281478 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064957022 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069561645 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064086998 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067460997 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069041344 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068768697 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068858876 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082378859 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068219228 seconds)
  done (took 8.757230966 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070314647 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068505715 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069798091 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06712012 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067040253 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06756483 seconds)
  done (took 1.999854303 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095355306 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069516991 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079394574 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072648988 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103803911 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085951248 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086415952 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077783708 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083137679 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077911773 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085905588 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087383175 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092146326 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071946162 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085779919 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071396528 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086306479 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075372172 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078124723 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072640441 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086169966 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072027816 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072592127 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081249183 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075579759 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071994086 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066667658 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077912038 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077870204 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078212366 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071895075 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075383875 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070280508 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077595142 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086096556 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070176533 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071633978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076532588 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07200483 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074740957 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087281571 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0720359 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074078002 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076431539 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077512771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069978834 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076367537 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07523847 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085480546 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076511073 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076645332 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070716442 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074823537 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076433649 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069798775 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077696218 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076573419 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085900973 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071640964 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070513881 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068677577 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074545069 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076977922 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074836129 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078005278 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076355781 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069898297 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072028638 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072351834 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071444192 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076617343 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068621142 seconds)
  done (took 7.112242169 seconds)
done (took 28.328157843 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545079891 seconds)
  done (took 2.097843769 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601647921 seconds)
  done (took 2.180760082 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.659696133 seconds)
  done (took 8.235580577 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393936985 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471859547 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.688441431 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130000256 seconds)
  done (took 3.305435884 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.668668058 seconds)
  done (took 2.257064937 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210875339 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194705261 seconds)
  done (took 1.999502573 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380320732 seconds)
  done (took 1.957875417 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.126477394 seconds)
  done (took 2.704279652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265704475 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163001069 seconds)
  done (took 2.012440132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47210498 seconds)
  done (took 2.052868469 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.875244061 seconds)
  done (took 6.458794676 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217538146 seconds)
  done (took 1.840515581 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24262198 seconds)
  done (took 1.824036981 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.687447009 seconds)
  done (took 3.267461246 seconds)
done (took 43.779393605 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083295001 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081595472 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081117244 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078316555 seconds)
  done (took 1.890997462 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079441853 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074259921 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076478778 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072396352 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076731785 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072793832 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073814259 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076854083 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072701606 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072422018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072301002 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072535115 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074971508 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074260499 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070773474 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074893823 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075562863 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072073401 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075181317 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072199492 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070395856 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07437318 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074465636 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071780426 seconds)
  done (took 3.357543864 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080286894 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074021477 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074615679 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072040164 seconds)
  done (took 1.893563215 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080188175 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093281701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088723413 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077536066 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091419023 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086022012 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068863389 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068944981 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073035988 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077171923 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067693703 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095599177 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087397493 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076238319 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078691172 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06554704 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068534456 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086381625 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077155158 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077526533 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069943397 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077036351 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067955092 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087393084 seconds)
  done (took 3.475450208 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080870707 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104360327 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077347802 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087572755 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089493812 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065350139 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074329417 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089238441 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122894237 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065194725 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070057994 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065475514 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072211881 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064924067 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075809297 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104597978 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108077678 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068103477 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095277675 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065569524 seconds)
  done (took 3.246764539 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075855257 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071527461 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066417267 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068635503 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077933144 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072633732 seconds)
  done (took 2.034043524 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07043742 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068373439 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068763897 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067504188 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072108959 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066897163 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066108153 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067124467 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066829233 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067016638 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066259149 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065548723 seconds)
  done (took 2.40765727 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.433412569 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071336981 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06917332 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06557428 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070636163 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066155571 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079659891 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067851653 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090316961 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066536732 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06647417 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068591973 seconds)
  done (took 2.814519277 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20971422 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077220883 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238736793 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137216447 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111042516 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114871849 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103571198 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112963867 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142681124 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101287934 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167260345 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164998436 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106710135 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136684941 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089516242 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097788345 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155270102 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161467845 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103385337 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165030351 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143543438 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124490991 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146840596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100832994 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105480411 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121605211 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070865401 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080023314 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16957555 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13056288 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145518729 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110616068 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093226277 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175949147 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170372186 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142579099 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134406326 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086683987 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105110196 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135552075 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19867451 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088695318 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163905361 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246106646 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081957286 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133967587 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121262875 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120044185 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10618716 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09002406 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146238455 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184264163 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137699991 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087572228 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11104927 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115262368 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115968843 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103654785 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182634589 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161570717 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127083825 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071293076 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099034012 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152583088 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132589014 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109240678 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125925382 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093284082 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13306048 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154795508 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118871282 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143756619 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128719622 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088421672 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118954334 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139379503 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128068069 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169841486 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124952127 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073003815 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125031813 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103381674 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081541108 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142427308 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075649511 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175040022 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098276719 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10599147 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112430899 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108535786 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108764204 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161351688 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143359098 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244402837 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066440768 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104898722 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120322832 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147810869 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087621944 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108508804 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11654896 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078102797 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138391565 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075393101 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122826808 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075448128 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12491711 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133537452 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07591062 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122554829 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100546597 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100355796 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133344173 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159413359 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088804147 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082970938 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166022827 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122048204 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105039122 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144083029 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157054106 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099018185 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102142058 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149947624 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17919153 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089668003 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162480077 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107482882 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083686744 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087918085 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123564247 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112735077 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12248724 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081963015 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118297823 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167483996 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075169334 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094829847 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133849274 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07898181 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081077854 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10335227 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099607281 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094113999 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099642487 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103586689 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136636516 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122679001 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10471438 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270642376 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099138979 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171373469 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088938727 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100830303 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104084872 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070056578 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137706555 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157433238 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079533907 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163915318 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123391379 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105948192 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11935149 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083155919 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139788812 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078970269 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070404251 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144075113 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111510321 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110543945 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152010628 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104571034 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127493198 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119401392 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134044589 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131878019 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128649269 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10469833 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087976046 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111164623 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125307475 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072685575 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091049618 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079964108 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104085509 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095162494 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083330342 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141994835 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124501588 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100300663 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111420101 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096624787 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14644038 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076422687 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128838128 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119134403 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094485683 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151114859 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151378254 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130565354 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099055564 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144139654 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070201732 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073907545 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089065302 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266993352 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084479816 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084370087 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118406784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147907581 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130116863 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138334469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111111353 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121237846 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154706367 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069707638 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116535922 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14860799 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121559149 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104221651 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09038846 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099535091 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14252587 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108324893 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182128148 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113982037 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126586122 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153744977 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099401095 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079972298 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108992649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134745408 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104408931 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144509814 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099627972 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087824962 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109598454 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073984334 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099715359 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126917306 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119237239 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135272547 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114483904 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132647354 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077315617 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116866632 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120787106 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122432911 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064274885 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120344099 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160102952 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093567904 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118142252 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151972524 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079304616 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124002529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320718092 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146842154 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084709859 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110164959 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11921655 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128574944 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121271687 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141471968 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10877677 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135569634 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10936387 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085969893 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087246024 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096605404 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104939352 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094776386 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107409247 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113805323 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094667296 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131839947 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103066262 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109780354 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118142467 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096723693 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089804884 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096968974 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174654221 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119957451 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171376603 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098880291 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145689915 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164232962 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074853594 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079204339 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078018697 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139536094 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083650484 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130475724 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097613571 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105650029 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123696683 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141650984 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095165316 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068628102 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108511969 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134182603 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112082449 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098503566 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104542143 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162084336 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100071896 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079182303 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112849254 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104208816 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10144515 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171125904 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.204330524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098689093 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077301266 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081491926 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128598432 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154058718 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080277026 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10363061 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119979812 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110251852 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1286762 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101166324 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099683728 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114348081 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149499052 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128893872 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089886215 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111982882 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129566637 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156938322 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105839652 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095596003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171113136 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152550271 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160433465 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088648033 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114924556 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131644669 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107912044 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139180357 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083441868 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163199934 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082095058 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135764235 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103920239 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089893538 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129468993 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098820272 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088254247 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147899013 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118329091 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082675782 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077699683 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117221022 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120745624 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106785281 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075484747 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137982689 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072304769 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131287787 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167281399 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080830286 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104116002 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240048653 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080526129 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10890663 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103604272 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089540667 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099307501 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173304901 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088922085 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150075962 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143799247 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113207153 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137397025 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099875526 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635826553 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078049903 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151515827 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117445431 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171959089 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096744587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117915328 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109127235 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12373683 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144473381 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1047267 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177200784 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13173586 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116333206 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080434965 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10258954 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102896291 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089325292 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105062431 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113526549 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11610831 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093544633 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115736197 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123011724 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082331662 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095058133 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155954422 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117256279 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144009464 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139924571 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085046896 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117839753 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138666283 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079782649 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121026861 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150750105 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105899506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097533457 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079737311 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247007235 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171461128 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07500369 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163896042 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120638012 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111678903 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113146311 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114253901 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132025321 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10761785 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121878346 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093860756 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110516242 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113404317 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081683454 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077114389 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104470791 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113151948 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097311459 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098403808 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098247578 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151792466 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07123444 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095770294 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103676133 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145286481 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174237296 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088521352 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082824903 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119574906 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112780032 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113125671 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120151595 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079432092 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082072737 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081457896 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077029953 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108356222 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112080407 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103926145 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11196324 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163702997 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082698664 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22591652 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095317831 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104457937 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069652285 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078572942 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09613446 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097034668 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108290151 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100711571 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170024409 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094493763 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089586175 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092185898 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073024993 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082380962 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127065325 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254703887 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119596194 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097450611 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062986419 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109300405 seconds)
  done (took 58.955100834 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111703462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.092834358 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.108444626 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.167438774 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131413977 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219468421 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.168870228 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211730842 seconds)
  done (took 2.912707084 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071452826 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094377503 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100097173 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083598658 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067395303 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069414557 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227209523 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080530986 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066327109 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08890054 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080189278 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069646896 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423044172 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066370579 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068037198 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063356344 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067536119 seconds)
  done (took 3.496429407 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373023119 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.362749356 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373124726 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073397288 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.901734198 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090380111 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.091791465 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097349351 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072310292 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.270349512 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703842062 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094753249 seconds)
  done (took 14.206949178 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080191294 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071052095 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084054689 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084286822 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072450808 seconds)
  done (took 2.090043364 seconds)
done (took 104.422913251 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084219912 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403636128 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054922434 seconds)
  done (took 2.185420246 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086632209 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088419335 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087930472 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083249081 seconds)
  done (took 2.057816969 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077667818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077771998 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084523285 seconds)
  done (took 1.942012794 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22430988 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139912635 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087406969 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085700427 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07826112 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079375141 seconds)
  done (took 1.950665126 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075223766 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075801701 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072679324 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076459281 seconds)
  done (took 2.000773283 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079131589 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055051528 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055084506 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056263186 seconds)
  done (took 1.948803304 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089010761 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079851737 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078080063 seconds)
  done (took 1.947152583 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105395852 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088108255 seconds)
  done (took 1.893786426 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085502113 seconds)
  done (took 1.784992042 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101142844 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113927076 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129341639 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109395033 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136808134 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109213189 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085459943 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086452891 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076927354 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087199106 seconds)
  done (took 2.735981491 seconds)
done (took 22.677797557 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082283293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36923212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359844346 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089832131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666651045 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356762773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.979586208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092720468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113608541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06769596 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084424272 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650050125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970478753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.337376642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955946003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413626276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6488883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068429746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067802419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068436835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965471424 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067677572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067848955 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068647881 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648019231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371149034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068564981 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413647546 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067945673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069920821 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355229616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068219278 seconds)
  done (took 16.36293861 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073774834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118432311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073899595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084577994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07137901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070462544 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072047075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06958309 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119984007 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06804956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084783449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068274343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071635315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068687757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087311709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068419792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068905759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068468527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06836034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069004798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086716249 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0680317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068503236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069087424 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068345669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080001338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067991708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067796531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068375861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069964652 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070774998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068780745 seconds)
  done (took 4.113600132 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119861838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128457047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075378645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103624224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112239326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070640998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144121633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093181625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127656926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068737614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084981953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068502564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101242237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069139181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087585937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069053248 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069997528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069352616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069010634 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068751983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08774157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068201011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068877685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068990465 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068439136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081745902 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068710694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06910757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069244483 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070357998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072403242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069322416 seconds)
  done (took 4.38303943 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075310208 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076567129 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083134297 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083660859 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069955234 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073002461 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072935828 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070396815 seconds)
  done (took 2.326788812 seconds)
done (took 28.896045958 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082503956 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070771317 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073231132 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081166405 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074211982 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078974085 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067694581 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075125908 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072902079 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073159174 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075130729 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06814668 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071597555 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067095002 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074279274 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06798634 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079500659 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072035195 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079207779 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079621893 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07002273 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073813561 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074603424 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07927558 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079100669 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079187995 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077500694 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072907525 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069564381 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070623438 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076907203 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084147237 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068373519 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079095068 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068115296 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068238745 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071806912 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067894086 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079298304 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077195329 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069707006 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076130458 seconds)
  done (took 4.814457305 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092086503 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0954128 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088438653 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063768157 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067104335 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065228451 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088907477 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060433796 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059857785 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088040329 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056189544 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059650672 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062648191 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054317224 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059363208 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056837073 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062285585 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056173036 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059255294 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059866141 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058053075 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054159001 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060380759 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065564782 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056692585 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062385751 seconds)
  done (took 3.437206704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077396877 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085061989 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089197244 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127255588 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105079515 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077272195 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078310609 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092584557 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085420085 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067181512 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071280943 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093157356 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088192375 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074018997 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067907465 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084720555 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08250855 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069686651 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074174456 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091110602 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084755303 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08416388 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092985809 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080837699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067181367 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069626471 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071205109 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081142471 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071983398 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076537035 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07112124 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071145259 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.080615971 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078940714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071672227 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069322962 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090848662 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07733754 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078327048 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068097171 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070655056 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068696256 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08967764 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123050079 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067409524 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074267287 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075369559 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076853862 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068095893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086339972 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079072824 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067611317 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070542602 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06699762 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067616566 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080541966 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069672719 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070322402 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076985369 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07066215 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086217842 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071663725 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082695643 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067790463 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075178652 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066872406 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068282869 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066568387 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092492281 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06923976 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108213721 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069422186 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068937529 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076523503 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07500995 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073512754 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068078924 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082520456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077757845 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070980054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07622035 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070839063 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070418573 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087799432 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070045267 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06910337 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06884762 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073877867 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070363485 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069080726 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080598936 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067904165 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070305516 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084029855 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067439 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069372237 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074046721 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072723024 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067574238 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078979374 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072542729 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068662378 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076860209 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068012595 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070801684 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078149936 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074275988 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067170637 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072431987 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07383386 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068605672 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069408424 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070895538 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069646077 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076012757 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07402502 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071855987 seconds)
  done (took 10.666455364 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166937489 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156058154 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07117905 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145405266 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076362346 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079225126 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147774559 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094572605 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068245265 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068828708 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069024659 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110062531 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107017387 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115546104 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079067123 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0680725 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083813593 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113655721 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149664515 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143785607 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083794274 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077262447 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070353507 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069458602 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071211604 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078591622 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085597828 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076735538 seconds)
  done (took 4.490203939 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08462174 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097135503 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074124238 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088988809 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091768931 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0680051 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070168451 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069735357 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08109643 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078792073 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067981914 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073865271 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074633094 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071840976 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069040935 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074933684 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075273677 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069260852 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07125457 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073034698 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077882398 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080979811 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071991113 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067418473 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07424208 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067489399 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064706515 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084255669 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068420197 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09048507 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066013085 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074947104 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081622559 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068884144 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068076981 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068075968 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067712086 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067460858 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069675427 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066604649 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066298468 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057806658 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067193592 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079392939 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073921676 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056960933 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073109585 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07315779 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073230934 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065618886 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070749674 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070584024 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070617 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074941254 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072702351 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072718086 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068774048 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06598384 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075667113 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067792333 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065127938 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066316352 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072224665 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065893999 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075433675 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072091193 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065947599 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067255256 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069679422 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073570668 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067580557 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07088975 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065270405 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069352762 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07253508 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06917284 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068925392 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065974337 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067429572 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067861347 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056004748 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06754835 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053493617 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07102321 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065720369 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066138369 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067690248 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072202189 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07973479 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068926964 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073686361 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068283017 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066674945 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071056951 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060712299 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070286635 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083366837 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082695812 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067800978 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065399683 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082240969 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072567461 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066505631 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056361706 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075067783 seconds)
  done (took 9.232873928 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097441023 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089140087 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070564443 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083951604 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091950189 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087175641 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075618187 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077208042 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069528833 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082548503 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07381464 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076451943 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068606883 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077576931 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093804991 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077149079 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070174354 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077162569 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07221203 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101272065 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083268171 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082479553 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075373271 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06895923 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076373838 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08053271 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089394655 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080689409 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078246908 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075490254 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080516233 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090190615 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074648911 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072362345 seconds)
  done (took 4.487339136 seconds)
done (took 38.841871415 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.80334113 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.976074665 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.794509561 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.179874623 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.111837176 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.822607031 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.872154997 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.791036384 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.04269755 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.840313061 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.027375062 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.832396333 seconds)
done (took 65.826077662 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.858238793 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.930134185 seconds)
    (2/2) benchmarking "String"...
    done (took 2.065212387 seconds)
  done (took 5.725045262 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.09843676 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.465109951 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.032918213 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.788324299 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.791171058 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.095356445 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.598866987 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.316862802 seconds)
  done (took 30.81879598 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.103117818 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.003587132 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.537679098 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.579909203 seconds)
  done (took 16.013546202 seconds)
done (took 64.422891467 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.800914456 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.831188366 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.799482475 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.772631989 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.847054267 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.809510126 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.95670179 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.011889203 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.786068421 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.776815509 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.789055038 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.225017146 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.795209323 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.934835583 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.787900624 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.791878854 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.843983694 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.266765474 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.946444654 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.810792825 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.800137873 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.842175953 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.791826197 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.804314059 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.833690692 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.789356231 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.241743303 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.796551068 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.419122792 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.79264237 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.82063797 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.123613369 seconds)
  done (took 205.365577732 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.794954968 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.910980678 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.963697422 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.809816202 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.319068214 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.988901811 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.928652892 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.347736387 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.795515823 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.803182835 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.092096875 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.791900792 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.113149291 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.744792145 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.802299504 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.803450663 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.049733101 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.100977995 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.79387415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.068736975 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.806537831 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.924599144 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.889374576 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.051071431 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.809616334 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.882481605 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.806216673 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.813677989 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.983085683 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.032056412 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.812134214 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.825160886 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.922331849 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.66572113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.80118048 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.794058693 seconds)
  done (took 171.575335432 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.080560188 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.793216814 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.791846076 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.792889603 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.806059466 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.791312063 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.965307171 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.919364646 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.256547785 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.188864559 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.846581044 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625630568 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.789992564 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.861424235 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.805146927 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.791574652 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.807801759 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.821249862 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.79036121 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.796011733 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.918625467 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.80406442 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.811034746 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.797761346 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.794211359 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800201373 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.163618937 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.790634197 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799872743 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.792374705 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.055297622 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.789959682 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.795192392 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.688752519 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.439944177 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.798459437 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.879606714 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.793582551 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800460544 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.794891731 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.015343726 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794266782 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.79600684 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.798978084 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968908587 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.79260271 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.922586585 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.790293622 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.297126619 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.791914701 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.793755666 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.606730089 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.465388583 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.79277507 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.795136561 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.798833374 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.796063665 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.795524052 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.800373495 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.474932496 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.871418847 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.797957698 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.801271517 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803260935 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.796063791 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.002207113 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.79687867 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.176479619 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.857139427 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.017479085 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.918402666 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.79702226 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.865999582 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.889651745 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.795030591 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.797328514 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.797735804 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.797123359 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.87943462 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.795553319 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.797369054 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.937352157 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.802731264 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.797997071 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.849177868 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.868372709 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.797273023 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.698053737 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.796222693 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.797157262 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.113993465 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862380809 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.797029168 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.7961805 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.796215105 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.011503153 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.917394989 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.595608608 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.797497457 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.584081367 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.799779064 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.007135265 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.797489169 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.972047607 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.79608018 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.881056001 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.800822081 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.801426008 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.798730073 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.800060943 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.79939987 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.832079021 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.800114797 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.860860917 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.168014416 seconds)
  done (took 404.959983346 seconds)
done (took 785.772534052 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.500669657 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.460625673 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.562245684 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.471976863 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.453761573 seconds)
  done (took 14.185045579 seconds)
done (took 15.922321133 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89056411 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.89340115 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825219821 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.891992956 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.82147584 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.890041252 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.871701256 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.826786838 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.857161669 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.827056347 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.858229403 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.825569922 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.812352875 seconds)
  done (took 25.82836986 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.029439591 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.03693069 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.87122658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.060795525 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.8482915 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.033291542 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.964409323 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.953169271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.951602586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.817467936 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.814239883 seconds)
  done (took 23.11975672 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.036950929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.035350475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.875575373 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.045334829 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.849404063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.038949846 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.965059699 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.952198112 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.952365941 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.81703084 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.814733792 seconds)
  done (took 23.121801036 seconds)
done (took 73.807287283 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.811599306 seconds)
  done (took 3.549254986 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.832815895 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.969206969 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.818892409 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.813850093 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.812421418 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.810668984 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.812822317 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.811792884 seconds)
  done (took 16.423470803 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.809100433 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.811278603 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.81051275 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.807666044 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.807245967 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.811046495 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.81051414 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.809620696 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.809023397 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.810427253 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.811654277 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.81117798 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.808788814 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.811930685 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.811399743 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.810053472 seconds)
  done (took 30.701734349 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.810264169 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.80797317 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.808611015 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.808958834 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.808073665 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.809849402 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.810134355 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.807668403 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.808494216 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.809565541 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.808326431 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.808473836 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.810558143 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.809104632 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.807595004 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.810876369 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.808917044 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.808676341 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.814102479 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.809220915 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.810130261 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.809568214 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.809106946 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.808985832 seconds)
  done (took 45.16742027 seconds)
done (took 97.580541368 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.519765919 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.263827691 seconds)
  done (took 8.522852396 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.813666269 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.812837315 seconds)
  done (took 5.406199006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.813402928 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.811400428 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.811734304 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.81255862 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.813330785 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.812225857 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.813559812 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.811423518 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.812401679 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.81282351 seconds)
  done (took 19.867294995 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.812498645 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.814073 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.810975665 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.812918605 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.812243093 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.810980781 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.813277635 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.812162859 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.813786372 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.810425198 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.813530393 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.811606448 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.813400121 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.811115826 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.813650422 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.812787966 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.810148596 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.813219502 seconds)
  done (took 34.365803577 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.815252032 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.815174027 seconds)
  done (took 5.37370896 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.812942542 seconds)
    (2/7) benchmarking "second"...
    done (took 1.810811982 seconds)
    (3/7) benchmarking "month"...
    done (took 1.812581239 seconds)
    (4/7) benchmarking "year"...
    done (took 1.810397396 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.812982391 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.811323386 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.811744902 seconds)
  done (took 14.426520587 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.815376487 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.984803629 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.058592768 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.548046827 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.815890089 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.818031334 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.7730565 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.819099149 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.82087304 seconds)
  done (took 20.197554231 seconds)
done (took 109.900975291 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.652186002 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.809469399 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.158673957 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.862874418 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.862422689 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.108838626 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.811219971 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.057010296 seconds)
done (took 43.066950057 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.90768869 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.359577491 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.391948257 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.117792684 seconds)
  done (took 12.611229651 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.79361671 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.327613108 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.84743993 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.407115052 seconds)
  done (took 20.140203944 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.174358238 seconds)
    (2/2) benchmarking "read"...
    done (took 2.168093709 seconds)
  done (took 6.089205871 seconds)
done (took 47.492199686 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812380645 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.810369761 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.809557963 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.8132787 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.808956493 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.808408073 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.812747329 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.809125275 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.813658289 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.810745829 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.811952616 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812137599 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81073083 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808435288 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.813098144 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812509481 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.810262721 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810258883 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.811024293 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.812340917 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81148953 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812531061 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.811468756 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.810719924 seconds)
  done (took 45.20860369 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.814702015 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.810873235 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.813306141 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.812974469 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.810551017 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.81448404 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.812421156 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811994394 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.813911803 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.813166408 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810703511 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.811345727 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.811977751 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.8107798 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813847712 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.811975808 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.814467001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811932877 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813338391 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.810533526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.812978467 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810606611 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.810188598 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813285036 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.811661036 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811645816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.815573031 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.811140779 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813845473 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.810814717 seconds)
  done (took 56.114211657 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.818774875 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.824106155 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.813395724 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.814886163 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.815398505 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.814501165 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.813204686 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.814212174 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.814804259 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.815378997 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.816269132 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.814005088 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.815332436 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.816167886 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.813187872 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.813943095 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.816649218 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.815500019 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.815522008 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.815636716 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.815122555 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.81686457 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.81495252 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.814291383 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.815212514 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.815734974 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.816253004 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.816801959 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.814048809 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.817563502 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.813860769 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.816050258 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.814893576 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.815575399 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.817189867 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.81578864 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.821435561 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.824068654 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.816343901 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.815807029 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.816514793 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.815614128 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.817834483 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.816318048 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.817074743 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.817578568 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.817708241 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.817187306 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.816452764 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.81647435 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.816183037 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.816447329 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.816262765 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.817073626 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.816876035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.815789504 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.817592114 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.817075405 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.816887651 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.816351262 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.818138979 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.817202541 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.817122079 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.818189334 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.817760025 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.816701 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.816935239 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.818192351 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.81858586 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.819196199 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.816493482 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.819267305 seconds)
  done (took 132.534418218 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.818657275 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816138246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.816843852 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.815809759 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816337244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.818399903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.814594951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819782559 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815846081 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819126074 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819512644 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815745648 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815640814 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818177494 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817758545 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.815581616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819759195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816165001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.818393201 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.818738654 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819430927 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.814742936 seconds)
  done (took 41.729336288 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820421669 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819267087 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.815537463 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820560291 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818362438 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820183691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.819287695 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.819100531 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821083383 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.8174792 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817589053 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819100547 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.817347578 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817228934 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817245516 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.816472405 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821272096 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.816748364 seconds)
  done (took 34.483857896 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.817760634 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.817461713 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.820396916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.816953068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.817293302 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.819894943 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817538069 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.821733385 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.821208197 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.81855902 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.82106331 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819865285 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.822584169 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818300172 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820737472 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.817835285 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.8222867 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818652262 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821803878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81809771 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.817745026 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821059121 seconds)
  done (took 41.777699317 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820261155 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822819678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.819409332 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819409105 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.818022369 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.821650611 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.821612539 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.819763623 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.822008491 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.822388334 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819286451 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.82199664 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.820663813 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821099344 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.818754371 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819529244 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821978273 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820651772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822156538 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.81812658 seconds)
  done (took 38.161582801 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823644154 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822901756 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823817548 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82450769 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823794246 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.824863329 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824080277 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.824648038 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824338153 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823694143 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823367365 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824105737 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824489491 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824524521 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824891626 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824671673 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825522399 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.824390205 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825184567 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825858021 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827806196 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825655705 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825909141 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825989531 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826205217 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.824804106 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825964378 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.825215392 seconds)
  done (took 52.847250319 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824490924 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825407277 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.822827413 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.822400043 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.820824795 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.821025818 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.821136969 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.822995681 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.825389773 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.821594508 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.82370072 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.824818961 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.824775707 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.822955398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824988308 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.825371469 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824668533 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.822835605 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821779814 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821953189 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.824323963 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82540755 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.82571763 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.822900314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822082166 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.824376001 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822325534 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.822841514 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826089522 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.822515003 seconds)
  done (took 56.459030315 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.843313123 seconds)
    (2/2) benchmarking "in"...
    done (took 1.84475257 seconds)
  done (took 5.442862851 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.823753878 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824082405 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.825564368 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.822988571 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.824002309 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.826729908 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.828116149 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824442861 seconds)
  done (took 16.354401567 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.826728683 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.824976576 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.82512835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.827298282 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.827718728 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.828489328 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.834517892 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.82665697 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.828759785 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.826845851 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.834814944 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.835292488 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.8297317 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827798035 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.828483717 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82797312 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.827266647 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.827655814 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.828019618 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.827221798 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828671667 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.830499633 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829192708 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.823769934 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.829120565 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.841999331 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.833692408 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.827290353 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826647076 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.832344262 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.829373391 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.823634158 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.827581639 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.828623429 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.825975574 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.830076741 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.836401494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828929709 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.837563686 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.829237047 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82793285 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.824614302 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.829980497 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.831483426 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829932616 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.829900704 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.828127186 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.824661452 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.827324055 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.831008047 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.834426983 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828538034 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.82616315 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.835402746 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.831093311 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.83708949 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.830075846 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.832031668 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.839186682 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.841570155 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.846543213 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.837980967 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.832056877 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.830401573 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839841801 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.855215044 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83676054 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.827295038 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.826477155 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.829090148 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.843220672 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.845404276 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.839703022 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.830861411 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.83194592 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.829516224 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830978243 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829433071 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.83673214 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.833612811 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.83058592 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.831560479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841801339 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854672532 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.829288513 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.831105525 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.831149516 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.830667642 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.83149763 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.84101356 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.831907594 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.828972059 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.8322457 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.830204573 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.83421764 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.833896081 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.830419863 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.832637925 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.828442222 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.832409422 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832933892 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.833491566 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.839595274 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.83254148 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830817008 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.840822882 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.83135923 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830517561 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.842953126 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.830984238 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.833635475 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.833063107 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.839965094 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.830032008 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836318964 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.841398223 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.83448943 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.833640805 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.833569097 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.831778847 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843318814 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.859481975 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.833253029 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.831528768 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.838715625 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.84696064 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832755774 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.838684922 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.831783159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.83004598 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.830185648 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.835379615 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.833224732 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.834251389 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83496316 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.834709594 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.830630876 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.832509851 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.834903979 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.835280621 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.835233086 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.834841067 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.835781793 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.836483081 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.834527831 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.835286536 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.842327788 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.834680164 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.834930892 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.834883531 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.830452958 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832753087 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.835416425 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.834730741 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.835768588 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.834972844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.833386342 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.835464762 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.833841529 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.836270484 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832866519 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.835839069 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.839414213 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.835862342 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.839560437 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.834906334 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.831178669 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.83383386 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.835964388 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.834802462 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.835691603 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.834921278 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.838405101 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.844219531 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.835321044 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.835658709 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.840240812 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836715572 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835680755 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.835380665 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.838175799 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.843851873 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.836045516 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.843458416 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.836720125 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837226633 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.835509409 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.835286163 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.837279427 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.836859709 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.840078425 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.845688429 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.850734424 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.847286719 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.836419137 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.838623092 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.837764349 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.841690884 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.844190802 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.835978712 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.836791904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836735194 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.83630363 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.839053146 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.839045365 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.838257827 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.836208261 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.837786644 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.835888713 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.839020353 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.836012951 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.83859297 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.839735006 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.833984331 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837316603 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837643745 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.837184312 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.833993066 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.835863977 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.835782601 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.837196815 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.8398336 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.850041253 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.834088611 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838261464 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.839638948 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.839139517 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.837296615 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.838572794 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840684514 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.838400615 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845704515 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.840862997 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.840620583 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.845178126 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.838365199 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.837718828 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.841705916 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.836687983 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.835546979 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.840342824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.847061912 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.836706769 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.83917542 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.840086393 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838872707 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837228429 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.846688988 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.835447757 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.838289479 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.839127725 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.84194797 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.835709793 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.840783751 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.83903138 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.840228442 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.84159879 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.839394083 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.841140338 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.842009973 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.842672463 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.840845498 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.840572093 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843387187 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.849264661 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.848428791 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.840014117 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.844931188 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.841747297 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.844704324 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.841148306 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.840702071 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.84060819 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.857041681 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.849975771 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849082461 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.844385136 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.841652753 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846800917 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.84147658 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.845597518 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.840152312 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842991107 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.84379959 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.840774807 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.839925866 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.84229411 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.842098018 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841278932 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.842333572 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.844537298 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.840666161 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.83951779 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.842763685 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.843436299 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.840209434 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.84088075 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.839888791 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.844247599 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.843678104 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.84094911 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.840917931 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84812685 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841704341 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.843482393 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.840300137 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.841050139 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.841723454 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.844911742 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.842036677 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.846455103 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.851207901 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.845587865 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.851977471 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.842242364 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.854153555 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.843378838 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.846513047 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.852439058 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.840553553 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.840556695 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.843679556 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.842246312 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851791676 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.844632564 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.844208184 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.848675424 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844249689 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.845436195 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.844531254 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.844854923 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.844930636 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.844831459 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.852823546 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.845369841 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.847102992 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.84664143 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.840164228 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.845866899 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.842968903 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.843255335 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.848738003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.846089882 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.846041652 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.843689006 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.846342185 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.844231825 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.844541944 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.845340589 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.840041923 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.844014524 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.851076266 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.844898589 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849716408 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.845907399 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.855505186 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.845008928 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.854833277 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.845038212 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.844789354 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.846441921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.844257154 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.846764943 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.843675014 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.847288463 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.846377441 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.846541908 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.85031893 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.846530734 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.849079284 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.845787757 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.846488762 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.846076809 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.854947463 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872177503 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.846396285 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.84904374 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.842914794 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.845639021 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.849940697 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.847158163 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.846099635 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.849660088 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.858248658 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.856720348 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.846455662 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.847266512 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849262205 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.846923833 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.847041414 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.846801076 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.848121401 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.846809173 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.848626824 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.848774284 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.852880566 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.84586603 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.8487888 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.848383905 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.848371594 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.86127786 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.8489932 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.846808901 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.846282566 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.847638368 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.848684644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.848489745 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.848613092 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.849606532 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.846905563 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.849341266 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853698668 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.853897673 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.851076041 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.846744316 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.848170728 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.849989719 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.849239474 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849648956 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.847894601 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849180593 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.849679436 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.849502649 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.849480937 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.847673819 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.847844614 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.851463658 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.847898983 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851456955 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.855837962 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.848670358 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.844321437 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.85012672 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.847942646 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.847534996 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.849514432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.859659978 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852466144 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.861331296 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.857845859 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.85483846 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.850511678 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852811129 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.860422012 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.848342559 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.851207557 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.850676978 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.851830243 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.849937078 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.853460666 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.851187863 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.859348897 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.849181749 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.849451848 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859747613 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.850904108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.851575927 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.851735009 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.854365496 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.851789947 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.847934991 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.849564104 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.84929354 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.858983248 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.852858229 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.851561054 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852656187 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.849875989 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.849770143 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.855950285 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.850371613 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.851011625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.848036365 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.850052393 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.852321657 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.851173541 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.847660231 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.849958668 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.850940487 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.853852796 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.858629236 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.848098051 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852685998 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.851729354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.851521598 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855579263 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853498561 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.847499495 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.849179233 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.851403552 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.852335769 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.854046539 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.855297748 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.852393193 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.853429553 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.852543618 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.853668487 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855013795 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.863524247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.859952993 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.849172081 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.851515608 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.852936241 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.856864568 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.853625797 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.854614752 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854580319 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.856674907 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.852953583 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.853243152 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.852591321 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.856368675 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.869673212 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.852910316 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.853748156 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.8537556 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.859624504 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.852660782 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.849730128 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.853739382 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.856554109 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.856494077 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.861630105 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.855217098 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.860424068 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.853818767 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.854563509 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.856550159 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.854905137 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.862545201 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.857792709 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.856375173 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.854892967 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.858773475 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.873406222 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.852656529 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863976115 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.886241366 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.853284249 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.856461447 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.85422525 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.853495807 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.854876625 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.857548199 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.856845461 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.854204874 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.855874029 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.856653972 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.856296445 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.861540846 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.856915107 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.854857748 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.854259379 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.855991086 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.858862929 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.852156221 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.856985216 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.854702921 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.857569566 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.8582336 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.855260274 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.855920573 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87070228 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.867597583 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.855982702 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.856214251 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.852745284 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.860303225 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.859098386 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.867472606 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.863782848 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.856498568 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.856785208 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.856497761 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.856265945 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.853826705 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.855596852 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.858013072 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855301584 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.853509152 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.873691564 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.866137777 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.863224443 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.857698834 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858778013 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.856314581 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.8588742 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.857518582 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.857694912 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.859243232 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.857526877 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.86229871 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.856793036 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.855184853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.860072458 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.864831369 seconds)
  done (took 1100.83926072 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854921164 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852899255 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854105597 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854617194 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852841021 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853339394 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855214337 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.854306848 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.853114321 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.853537433 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856283686 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855716382 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854451366 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855896567 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854395519 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855453226 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854404195 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855582258 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.855013758 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856090772 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853909738 seconds)
  done (took 40.73060091 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.857365854 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.855548323 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.855364677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.857365738 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854336811 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.857084427 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.855566242 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857952483 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856453976 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855474564 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.859687812 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857928527 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.857224378 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.854807605 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85579558 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.859347958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.858695352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855737685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.859723216 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85503798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857985852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.855335266 seconds)
  done (took 42.637225784 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.861655925 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.860198078 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.857917256 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.85669929 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.859129367 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.857839047 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.861633015 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.859838762 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.858813589 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.860588017 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.858434819 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.861790969 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.86681474 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.866108506 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.863636046 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.859726729 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.004410527 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.861038054 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.86196872 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.862200673 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.858185599 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.86893799 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.859260638 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.859556111 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.861303581 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.861604885 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.861061096 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.861531314 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.862929331 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.862667013 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.866831124 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.861024531 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.859742156 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.863936847 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.86152659 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.8622925 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.864516248 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.862603656 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.860101496 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.861940127 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.871744865 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.88457819 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.862495992 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.869597584 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.861567309 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.861287992 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.866390819 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.871590091 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.858573473 seconds)
  done (took 93.197946579 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.863590518 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.860786904 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.859830994 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.861700235 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.861727252 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.860892127 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.862218247 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861764294 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.859878177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.859250112 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.861660787 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.859274606 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.859988634 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.864429422 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.863680634 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.86006236 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.86056971 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.860854995 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.859114276 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860324759 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.860522772 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.863595689 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.863497941 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.860897999 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.86391825 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.859432987 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.860674174 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.863845461 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.860677506 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.861101202 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.863493643 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.863929598 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.864661456 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.861671873 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.860383662 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.863159443 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.863542152 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.860980737 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.863088993 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.861916119 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.864735478 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.863591653 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.863938423 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.86399787 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.862362983 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.862130771 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.860790892 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.861226918 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.862627627 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.866367976 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.865623442 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.862735566 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.865854876 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.862512471 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.865244588 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.86303883 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.862188661 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.862657606 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.866058041 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.863770271 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.863194472 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.865124388 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.863294115 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.865800035 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.865778541 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.863863889 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.863621313 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.86548543 seconds)
  done (took 128.445037432 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.866127456 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.866795743 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86812663 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868275699 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866133483 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.86699298 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.866680171 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.867126242 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.868233204 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.867947499 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.866197143 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.867010458 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.867169791 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.866997526 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.866819949 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.86831826 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.867369532 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.866852432 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.867196195 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.867053182 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.867508419 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.86889992 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.866877978 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.86709337 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.86786188 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.868378571 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.869679852 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.867449441 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.867563181 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.8694769 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.869711879 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.868414929 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.868986934 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.869494807 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.869483454 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.8676717 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.870942288 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868032955 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.868072589 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.868763425 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.868403425 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.869838998 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.86893715 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.869062018 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.868400458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.868596716 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.869222499 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.869512647 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.868697269 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.869091254 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.869200027 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.869767079 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.868932001 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.868708345 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.869274943 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.868607469 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.869533405 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.87095398 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870070864 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.87096489 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.869657864 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.868971112 seconds)
  done (took 117.634003793 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.869897992 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.868799153 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.865693943 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.866916185 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.869049177 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.868450992 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.868306372 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.869690194 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.868144071 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.869921019 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868152537 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.866472097 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867567131 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869007609 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.867264492 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865388664 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868057452 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.86687132 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868687361 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.867039148 seconds)
  done (took 39.157213152 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.867019837 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.869325371 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.86740296 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.867128204 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.869882114 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.866933251 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.870234536 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8696023 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86656094 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870247533 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.869461789 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.869080693 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866375515 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.86741437 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8709655 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.866562378 seconds)
  done (took 31.690608424 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.86746308 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.870647425 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.87099306 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.872250339 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.869818491 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.869065463 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.870624628 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.868753067 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.868286737 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.871583227 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.870227271 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.87100896 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.870845777 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.87360604 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.868163984 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.871305018 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.868266382 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.867803676 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.870767753 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.872974709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.870009227 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.869439397 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.871282141 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.87107714 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.869347322 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.871608201 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.869650735 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.869943566 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.867219034 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.872587359 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.86863667 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.870379099 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.870779217 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.868531175 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.873391222 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.869918059 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.873843612 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.872396169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.872733291 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.872924934 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.872643124 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.869150038 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.871659053 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.871923871 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.869458449 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.873583734 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.869857999 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.869175079 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.872049734 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.871461192 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.87322939 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.875789139 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.874592517 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.87478781 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.874384794 seconds)
  done (took 104.703207678 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.872883348 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.874210406 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.871233514 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.87438027 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.874293045 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.869952623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.87391363 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.87078446 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.870977054 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.872685885 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.872555996 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.874600045 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.871624568 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.874024587 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.872535439 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.875272477 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.873626084 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.87114066 seconds)
  done (took 35.511845292 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.872291656 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873849805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.874931621 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.87251891 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.873103241 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.87338091 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871603308 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.87339288 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874253747 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.872764028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871649853 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.873657896 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873512107 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.87364553 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.871982238 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872552154 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.874404705 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874983733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.87249334 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.871649537 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.875774396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87679946 seconds)
  done (took 43.017746636 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.876596307 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.874575128 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.893413355 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.92496887 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.912914549 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.874807463 seconds)
  done (took 13.158304882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873864763 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876167272 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.87271125 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875994227 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876168374 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873768568 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873231948 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873070539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875604216 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873447309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87382142 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875957128 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877859314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874755286 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87619378 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877626485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874023439 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874152145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875497332 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87758338 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873092137 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878167807 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874420284 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874936427 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872629114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874636442 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877164864 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875509435 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874851569 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877074895 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878292465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875789204 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875810887 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876357131 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876930092 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877054062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873247248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880145074 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877087771 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874255932 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.878565061 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877480771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878640698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875520488 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877872359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876469615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875051578 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876194046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875370948 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878924036 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878671633 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876726099 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878192789 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878121931 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878969419 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878495298 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877352457 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875529161 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87957837 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875799974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876127065 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876865279 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874312252 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876809608 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878164493 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876463869 seconds)
  done (took 125.632130907 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8755631 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.874578362 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87749172 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87814848 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87700234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877588652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87741527 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877881402 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878027928 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877722768 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879630892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876843252 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875798156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877309276 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8767433 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878387789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877239769 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877830034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876228557 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878634535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878209167 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876704667 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876736748 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87789364 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8792227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881061297 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876943621 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877088207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878456901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878089054 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879213972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879546172 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878790852 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.877816874 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875885535 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877762076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879458165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877432591 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877387608 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881827873 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877957684 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881405065 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877413011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878353658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879976366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877499816 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878720324 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879892818 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880122143 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880354666 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880202565 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880681772 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879594225 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880866996 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878434258 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879677255 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87923095 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881110528 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880293436 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882113368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880082931 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878818143 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88296403 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879316279 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880433791 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880491976 seconds)
  done (took 125.796456928 seconds)
done (took 2565.00564264 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.869572877 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.914535525 seconds)
  done (took 15.593079861 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.044557722 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.9996932 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.882014442 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.921164296 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.876427193 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.897957728 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.880687313 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.874976365 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.880472069 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.876168496 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.875881219 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.065564273 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.895487045 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.874670355 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.874691131 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.965742269 seconds)
  done (took 52.693328231 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.878467635 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.879042173 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.889840119 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.880824704 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.8810872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.898683091 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.913795114 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.88267798 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.94112806 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.8928577 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.005599542 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.888372353 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.878321758 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.931810457 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.890723564 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.893290705 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.966488058 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.953369616 seconds)
  done (took 36.151234496 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.9592775 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.879338251 seconds)
  done (took 10.650841589 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.90956339 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.882379734 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.906677152 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.887746638 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.875237063 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.907327212 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.911349421 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.906714116 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.877565338 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.897537044 seconds)
  done (took 70.769264533 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.884366926 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.883813827 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.878627503 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.878066636 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.869790333 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.874357564 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.878664781 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.876976022 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.586479467 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.913094129 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.882977072 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.882373215 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.877378263 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.878586451 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.872621932 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.89870067 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.012774296 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.870783168 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.871339004 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.881103586 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.872478262 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.924202404 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.884947852 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.872567791 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.902931276 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.572958283 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.879057869 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.876735322 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.989315686 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.872627782 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.870521376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.873192344 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.873287607 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.274020886 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.21959872 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.869199324 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.879271632 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.880144095 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.869309823 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.002211314 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.871264213 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.877159644 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.864009622 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.203253194 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.95531664 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.914215638 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.249254306 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.873523315 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.87366058 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.902188659 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.874897178 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.87246367 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.884126228 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.386107745 seconds)
  done (took 133.123765226 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.866722721 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.154009848 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019228961 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.865818154 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139287545 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073924118 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.809934145 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916984245 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.866184835 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071451422 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.082500757 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973039019 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865591335 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.864311993 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.865200286 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.860420973 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026202813 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.929926574 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.860934115 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.857734304 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886484472 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068068278 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.980587314 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.856779012 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.877645287 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.069573375 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.981739359 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.966947211 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.315932703 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.854433112 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923065502 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.857166539 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.855997653 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.855143565 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011551722 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959113119 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944630734 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.853910737 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852593035 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.852558355 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.513690854 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052689239 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.954068123 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.002980343 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.004286271 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0592715 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.499200604 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.850278806 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.494145484 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015622388 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.067580543 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.068113443 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.97913194 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.853648468 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.002457298 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.852641853 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851974011 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.090403529 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997647749 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956992841 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853597635 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.851750842 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.849991979 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.098139677 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.853847411 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.948701837 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855416764 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848059295 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949610274 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.956964274 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.993081571 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065411097 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883914034 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.573628126 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.062926064 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.068234138 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920179688 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086136944 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.849223794 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848861706 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938002791 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.602119515 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.051698031 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102204384 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.074094955 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884649372 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.446610444 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.848181033 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.047099274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.033001045 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.042025925 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.998633761 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.998430911 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.153311343 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.846057495 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.848736277 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.094720421 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985489702 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.84888704 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20885891 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085132978 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.477607123 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868636695 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145470462 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983550771 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.169103706 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.473578796 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848263453 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.014442336 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885912557 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.847919092 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848238357 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.039847651 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.653886951 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847563616 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.580844417 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.910769286 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.85008695 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053171858 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.850746011 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056715759 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85083851 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086521249 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.376943096 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.882091859 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.021195204 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.998540681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.635262495 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09583259 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093183121 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967645713 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119619695 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.584086451 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.848200251 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.126153257 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850674537 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.847206117 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.016312018 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851924777 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999817445 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850468536 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080477927 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874385809 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009720823 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851597739 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.081524408 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887580157 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902818467 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852618699 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.973182894 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85101666 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.728746604 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.0042671 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851666746 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.851074502 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.263668268 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.850755773 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997546233 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.083491542 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874648567 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.924167546 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.3756068 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850142401 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94053105 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877882123 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.446214997 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.853474194 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.063976924 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.79798064 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.29550593 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.851377944 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.092647912 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084697152 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.851336508 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851744156 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.592739531 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.553770776 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849369489 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012258832 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.281520694 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.503974464 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055353734 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85474846 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979777324 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.85564687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.922291859 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.198833025 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.847954783 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.85275367 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.852445388 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.850754712 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852551663 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062102458 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.883492384 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.351238639 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.99002799 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07003831 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.164805884 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.077106521 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.898533842 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.856120675 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100247754 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.855308771 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.914516553 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.852777049 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877037373 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091838136 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853776744 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087400263 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111628918 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.756970227 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905392306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.855830225 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854901794 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.853032021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.004281712 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946935275 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.852644937 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.85555607 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.968330856 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976260107 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.047283985 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.440754915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.968687004 seconds)
  done (took 895.167456128 seconds)
done (took 1215.958781841 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.856195829 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853113464 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.842786254 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.857145549 seconds)
  done (took 29.195065657 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.87285131 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.863589692 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.865674891 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.863524806 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.868490552 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.863433952 seconds)
  done (took 12.989763792 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.956334869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854868071 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.857387898 seconds)
  done (took 21.460640833 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.933989616 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.276391196 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.978041731 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.316200104 seconds)
  done (took 10.297132695 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.868921053 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.868369942 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.868908446 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.872638425 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.874595717 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.874255111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.870104061 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.869739969 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.877137923 seconds)
  done (took 18.638625918 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.012166792 seconds)
done (took 98.380964242 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.308290164 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.85948124 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.374452909 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.143688356 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.998921697 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.751799424 seconds)
    (7/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.94748199 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.963801779 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.891749081 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.995908401 seconds)
    (11/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.035379224 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.535694194 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.913367 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.891088882 seconds)
    (15/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.851092588 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 4.004499346 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129283566 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.916100317 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.167774024 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.942664778 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.23803843 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.373007749 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.244462144 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.867701418 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.866341792 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.223562915 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.865742807 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.980669547 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.524386183 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.010228923 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.989479293 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.994205701 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.865789427 seconds)
    (34/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.89142778 seconds)
    (35/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.082876234 seconds)
    (36/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.030858664 seconds)
    (37/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.996569853 seconds)
    (38/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.993310805 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.881968479 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.849150997 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.051601327 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.062386696 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.946052813 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.974501109 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12571859 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.946124323 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.97317888 seconds)
    (48/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.942414819 seconds)
    (49/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.354995763 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.696352321 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.46312816 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 6.860780287 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.918979592 seconds)
    (54/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.020857924 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.889741766 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.862422024 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.393193749 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.164607129 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.127053403 seconds)
    (60/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.848515149 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.134373781 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.110190416 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.969465795 seconds)
    (64/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.852923362 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.989172461 seconds)
    (66/309) benchmarking ("sort", Int8, false)...
    done (took 4.840004685 seconds)
    (67/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.002752359 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.849234381 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171036719 seconds)
    (70/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.881945451 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.975393045 seconds)
    (72/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.872326323 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.977489898 seconds)
    (74/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.222204881 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.829775953 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.565626277 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.169788134 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.195260654 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.890506363 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.243240567 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.855584306 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.953696144 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.893610705 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.504886298 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.802519904 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.24755021 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 5.630783402 seconds)
    (88/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.21168839 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.003144891 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.167627559 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.855669247 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.873135292 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.010270418 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.435929119 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.016899419 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.260306522 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.864393009 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.461764655 seconds)
    (99/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.9494064 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.125272374 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.968981002 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.863184529 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.334741592 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.311369406 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.078235795 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.126080541 seconds)
    (107/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.901959809 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.045416322 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.402962729 seconds)
    (110/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.001690804 seconds)
    (111/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.064155807 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.869694434 seconds)
    (113/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.934117578 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.851510919 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.954472733 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.068894027 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.839116077 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.003769248 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 2.410435779 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.890624429 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.989516365 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.792056902 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.143421711 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.766141111 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.890618194 seconds)
    (126/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.382257993 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.092605929 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.129379427 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.867381054 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.06954025 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.267737998 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.982168353 seconds)
    (133/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.141267788 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.87386324 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.875768335 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.964409767 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.977578371 seconds)
    (138/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.073433189 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.059969618 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.952064968 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.669360682 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.240951739 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.769261872 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.092992166 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.894093682 seconds)
    (146/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.066161417 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.157873042 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.07368346 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.944090826 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.107434565 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.939386242 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.055536009 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.881200092 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.895775522 seconds)
    (155/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.38637359 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.870927931 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.966307521 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.75481052 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.167457579 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.893752445 seconds)
    (161/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.015417947 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.978539952 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.464949647 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.068450852 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.050144346 seconds)
    (166/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.465061972 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.220797314 seconds)
    (168/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.012874754 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.943720062 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.068588585 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.868202312 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.055169468 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.94620427 seconds)
    (174/309) benchmarking ("sort", Float64, false)...
    done (took 5.705001876 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.100796257 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.874053969 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.211977283 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.055427957 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.854443536 seconds)
    (180/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.380885202 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.034124708 seconds)
    (182/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.046710064 seconds)
    (183/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.953162137 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.869531031 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.876057956 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.894784073 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.894895894 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.896080418 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.207824923 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.880701538 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.214199757 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.913878749 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.859323486 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.86866193 seconds)
    (195/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.983579948 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.94758263 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.041860756 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.87046469 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.954415914 seconds)
    (200/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.473328028 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.92870612 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.93345154 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.163288802 seconds)
    (204/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.960401116 seconds)
    (205/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.381648721 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.282455059 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.169913147 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.893007046 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.871472318 seconds)
    (210/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.821513992 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.998671509 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.897525482 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.184953391 seconds)
    (214/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.006295509 seconds)
    (215/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.471435849 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.217842008 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.494590103 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.416016641 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.079402079 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.873564089 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.200302649 seconds)
    (222/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.277853123 seconds)
    (223/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.012377483 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.262503889 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.196067019 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.994921735 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.671603051 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.891319164 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.905631415 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.871534579 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.962218863 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.97166943 seconds)
    (233/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.167047662 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.881125226 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.081887922 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.183554054 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918626024 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.873369951 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.436122288 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.041426969 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.76873396 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.568122316 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.911488864 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.931099699 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.14337522 seconds)
    (246/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104631564 seconds)
    (247/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.965662145 seconds)
    (248/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.001951661 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.537466508 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.512737051 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.08068379 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.351725223 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.172539767 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.126803174 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.183398511 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.034977755 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.876517578 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.860566794 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.905336619 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.057153068 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.878740401 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.054375054 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.254042975 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.891750318 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.970545319 seconds)
    (266/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.984208267 seconds)
    (267/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.292413878 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.900910336 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.784439064 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.906068527 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.862142798 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.77904925 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.920183926 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.924785014 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.092013323 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.12012924 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.797917897 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.984602761 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.563282387 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.982130036 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.902622672 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.861287597 seconds)
    (283/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.488606816 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.912432815 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.178867223 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.039605286 seconds)
    (287/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.862993796 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.994641435 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.933818152 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.877684966 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.257161843 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.958214455 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.98541711 seconds)
    (294/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.995632608 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.035129746 seconds)
    (296/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.900099823 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.876078729 seconds)
    (298/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.216864369 seconds)
    (299/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.463750065 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.971842509 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.930602965 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.368415284 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.594100108 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.249844652 seconds)
    (305/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.885626551 seconds)
    (306/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.604875101 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.339562534 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.900886931 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.704525442 seconds)
  done (took 1023.942846694 seconds)
done (took 1025.750786098 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.915729621 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905366313 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.887636579 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.910274122 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.000202025 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.918482494 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.899677785 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.891703098 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.937444024 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.938087066 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.887377766 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.917013831 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.892050273 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.889107714 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.888501748 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906107761 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.200481045 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.914454777 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.905034037 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.898917681 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.906683971 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.887041043 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.938257153 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.916946413 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.893259106 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.892153526 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.891903573 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.90924248 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.001496726 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.891878881 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.893713065 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.901249499 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.200803098 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.910254576 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.886414609 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.909351965 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.903142166 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.899437875 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.893695853 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.923163761 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.340364863 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.894419304 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.89213014 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.891593933 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.891114559 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.896475542 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.891601472 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.896689611 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903812045 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904747182 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.334715679 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.909194804 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.894711428 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.892927425 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.901672443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.890416267 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.894009206 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907855716 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.911089248 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90810062 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.190051721 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.920769563 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.893306582 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.909965259 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.898956379 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.373990487 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.890233554 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.895459087 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.338180054 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.901887999 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.372081232 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.903394479 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.89502969 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.907014594 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.924894389 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.201739625 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.910031085 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.891583562 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.900026598 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.891321449 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.903422798 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906104884 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.897311631 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.892681609 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905597838 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.921898428 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.902877373 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.896579576 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.901429591 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.912843395 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.90017985 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.90528283 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.897910492 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.888744444 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.903107283 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.89618451 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.895511844 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.897291008 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.897616013 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.903685176 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.338414093 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912916286 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.891094639 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.890394503 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.893703894 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.907053853 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336774077 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.897684078 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.916261569 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.942761911 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.895796053 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.194111813 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.921302479 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910554706 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.903341361 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.896628928 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.8900609 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.194449778 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.36482749 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.913792415 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.897110961 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.89305478 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910349785 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.89747259 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.891387735 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.203912735 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.919005908 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907823669 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.017053997 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.906361525 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.927169288 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.893207265 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.898814602 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.928305625 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911556479 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.929234147 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.898379921 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9119437 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.910470547 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.893007999 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.907753322 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.907805722 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.898297206 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.90369388 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.8910612 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.924676146 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91075166 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909279625 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.918324708 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.018450527 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.894554899 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.195167925 seconds)
done (took 297.494675811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.963388541 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.891366179 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.99269029 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.892770132 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.97841938 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.979881967 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.889597361 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.890893945 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.890293628 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.271831763 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.88930975 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.890406921 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.890565975 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.88990394 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.975510086 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.892269797 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.890134261 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.236182983 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.894669442 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.963759341 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.887603693 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.891094981 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.893338109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.275011512 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.887800935 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.892413704 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.96509042 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.894416233 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.239581439 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.894219136 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.894289395 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.24072651 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.983738042 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.911343179 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.903188813 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.901318499 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.979494561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.89837156 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.976785161 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.974737121 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.993907391 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.935519574 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.891448886 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.89278934 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.897875808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.896522808 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.892104266 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.923302474 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.890594134 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.891733698 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.236176826 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.90401694 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.313730265 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.893029366 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.892213215 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.928324438 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.892510691 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.897643695 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.985024271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.897630562 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.957593926 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.276456454 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.275517182 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.894826053 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.886810297 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.891082674 seconds)
  done (took 186.385083632 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.96354797 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.967936853 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.964081397 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.899952412 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.945753156 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.965898071 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.899212112 seconds)
  done (took 15.425102531 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.902776805 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894880053 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.946015807 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.945321301 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.897493101 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.045800679 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894742634 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.906318859 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.891379465 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.947978685 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.897467225 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897485152 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.90167617 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.896386788 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.944259117 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.909497307 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.009480744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.898814115 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.898284134 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.052499389 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895180124 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.905232004 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.957794808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.907739944 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.899197313 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.903834513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.48771841 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.898102794 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894566458 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.896841236 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893762977 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.93984742 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.897852274 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.894298973 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89573899 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.013399356 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.899445914 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895344576 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.89684006 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.894645788 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.897762596 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.898019847 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.89782304 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.894282338 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.897379283 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.922235469 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.898013948 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.899236161 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.897273873 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.89969117 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.948500288 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.898985282 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.895523853 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.895862179 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.95498297 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.906249171 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.89861789 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.89521435 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897720516 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895983965 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.054560772 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.946400723 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.897458255 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.945786052 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.898719658 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.899349463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.898404973 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.898000196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95332858 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.898913852 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.947018622 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.896652048 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.056335004 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.923746518 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.899950478 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.902083377 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.90191647 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900699549 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.894009626 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.906496015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.897581711 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.900412315 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.907431457 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.89825124 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.897948922 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.012663697 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.008514586 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.897410268 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.910765018 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.90588145 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.897176007 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.953734689 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.899433152 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.897373617 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.951878168 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.015665283 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.963605357 seconds)
  done (took 208.595178471 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.904069447 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.908417536 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.901228153 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.91541957 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.900384988 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.900076389 seconds)
  done (took 13.253601269 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.90152335 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.901771693 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.901580999 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.899351837 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.902939771 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.903626392 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.903142436 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.902218291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.90505646 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.902574409 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.903937155 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.902894085 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.903977797 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.904413152 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.902551138 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.900170752 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.903160467 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897785351 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.903198245 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902166524 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.053098256 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.903049672 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.902489279 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.90192222 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.90791242 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.901116567 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.908129048 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.901611767 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.903574885 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.910999233 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.908197588 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.904744781 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.902771049 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.907605299 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.907769977 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.903357899 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907228585 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.902874283 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.899825782 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.903730533 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.902996969 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904816266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.902277363 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.904110213 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.9043788 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.907774388 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.906068416 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.910922372 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.904591213 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.9033261 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.904707172 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.904135534 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.905858771 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.903550577 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.90759055 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.909405283 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.906634098 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.905536485 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.904588487 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.903898838 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.904951048 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.906043082 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.906137768 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.907936787 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.902036538 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.904293102 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.905253399 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.90837966 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.90511991 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.904170402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.904780441 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.902440357 seconds)
  done (took 140.086335732 seconds)
done (took 565.579531842 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.156694154 seconds)
  done (took 8.985374505 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.024881272 seconds)
  done (took 8.952162421 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.573775143 seconds)
  done (took 10.402973589 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.910585093 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.936323493 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.927536124 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.895652108 seconds)
  done (took 29.510577845 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.266850563 seconds)
  done (took 9.095196708 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.910203401 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.895726494 seconds)
  done (took 15.701647839 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.997682686 seconds)
  done (took 8.828528831 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.030016042 seconds)
  done (took 8.865489033 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.925205943 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.918910865 seconds)
  done (took 15.688249289 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.885533196 seconds)
  done (took 8.715978661 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.612346589 seconds)
  done (took 11.452444575 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.907228532 seconds)
  done (took 8.750512686 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912681577 seconds)
  done (took 8.744963588 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.104149277 seconds)
  done (took 9.934629898 seconds)
done (took 165.457075095 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.901459151 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.89729867 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.894589633 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.896312307 seconds)
  done (took 29.419266386 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.939734589 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.93945894 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.941559712 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.950642188 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.942515521 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.940517848 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.931759478 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.932132667 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.949845057 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.942777622 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.941848266 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.941980714 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.939713592 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.93273061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.941639696 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.942059551 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.951255016 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.942803443 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.930604052 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.942394296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.906915321 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.951257396 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.943776346 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.906963538 seconds)
  done (took 48.359152399 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.104451958 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.976031397 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.060228017 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.957571292 seconds)
  done (took 9.927895116 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.959628034 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.960039429 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.972739776 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.011537457 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.037820717 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.970918988 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.934766915 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.929104187 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.914571763 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.960951133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.035862725 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.97750611 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.047523796 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.908060501 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.106295676 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.905888033 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.908354582 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.960011119 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.011532443 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.026011087 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.909048495 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.960251004 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.963344837 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.977644502 seconds)
  done (took 49.180452484 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.907310214 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.916473992 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.914740686 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.907788152 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.907244155 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.907778721 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.913572652 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.908646162 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.929283919 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.908288376 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.905970797 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.907709593 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.906985749 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.907592808 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.906603765 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.919807156 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.921352494 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.909493478 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.910098659 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.91093554 seconds)
  done (took 40.060846542 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.899658726 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.789638803 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.254160165 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.15775984 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.900701179 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.901981457 seconds)
  done (took 31.736061658 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.920219235 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.97265178 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.915727157 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.964472929 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.045396732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.913643471 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.908940361 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.976902838 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.018561548 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978320082 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.927621366 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.93498934 seconds)
  done (took 25.312752875 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.904381895 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.899664541 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.907326063 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.919675597 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.919075878 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.916183576 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.91486805 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.902690143 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.920032438 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.928133495 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.914797225 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.921189757 seconds)
  done (took 44.804721875 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99516263 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.948393101 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.928804208 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584825309 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279667704 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111948231 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.55439501 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242558527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.906861461 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177167399 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908315242 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004941498 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159709533 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419149689 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.937669711 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363647881 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20458443 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10373699 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930508345 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.57872216 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97052146 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.100248854 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.654888024 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965319801 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115930192 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.038905221 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.166460023 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904481602 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03710943 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940920167 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916022543 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906752236 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178539348 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279177388 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008459855 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916598899 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532807258 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.620821026 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.899069026 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.66472168 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.624345144 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.026794755 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916247742 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906179922 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841925656 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068310118 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285662829 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.908523154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.616763065 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906964536 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919139647 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002063873 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.911494664 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.725060804 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818688393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.90500414 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.905129827 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912754154 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477231027 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.016404448 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.115352422 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.882819247 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.001151497 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583299561 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282023044 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.05514164 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.911064834 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912031323 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84441398 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.654203993 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966286364 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258633765 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.925946838 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560511819 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214449701 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.950359025 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85061783 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167235856 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465433894 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.883412229 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138025562 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908233826 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845955668 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.857094729 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843413518 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163131068 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942505736 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.671334463 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943595128 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248650383 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920412297 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929494255 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933537664 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133687521 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.79552735 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910226719 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.685867782 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054249249 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930311726 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.247753893 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842377618 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.910066076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168755546 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.12134796 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.002869583 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.396666794 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076698954 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.503799142 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.962144881 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.081306501 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959546731 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.174776618 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964652319 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.022872625 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962644031 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911446182 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194912084 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.523039078 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.045683931 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.915741394 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037150877 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.218076935 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933347068 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993987764 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914225595 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910385294 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.688711369 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465827202 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.911192307 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.913361419 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.010918776 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959262018 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.919099837 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858698633 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.537705418 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.901627624 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.925434476 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136978332 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.511133659 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224437746 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847351995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26286816 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.998502623 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.134958276 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.553535496 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.992400291 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174054429 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009943798 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.036952299 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961124593 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932585756 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011020141 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935413344 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.076229298 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20714906 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.918981305 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.916935412 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.690416224 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945762015 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914487747 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.920552242 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665934054 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178805987 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935142856 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919235044 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.804583454 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.928252142 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979106656 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919165796 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924360353 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.45878477 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624549661 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.91997011 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.504909689 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133902385 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925009445 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.646912775 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029577157 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.005207588 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178458811 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968897075 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.848456385 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.62565685 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.609783068 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914918298 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851108917 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915652801 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925022135 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925057166 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.112230605 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183733292 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953574065 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.587419901 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.959141783 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924804545 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.919372515 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917067005 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.430900614 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026112798 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132526815 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962659603 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059171537 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.928693234 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848969353 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917420583 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918814502 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.915028687 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.916465636 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949294496 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.58921889 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295873087 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173507526 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.52477955 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929594157 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.623342187 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.973366713 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.917257779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607750747 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245497886 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.952773428 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924396336 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.926101271 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.669749386 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.627031164 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480251793 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234357459 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201029147 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340684527 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.146971937 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947487837 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.262091464 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851500954 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471028119 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976214898 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260465392 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861441994 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003568184 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.559343306 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268304179 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933121891 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146016605 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292737132 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.609217286 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05648921 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130940162 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95228734 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.083484701 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881420702 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.211232414 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061965518 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.595724491 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122941635 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253502355 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.554946839 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.038273121 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.91555448 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.575576869 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001627555 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.631858305 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.091047696 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.120524627 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.819362356 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386733112 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.924936873 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141906158 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252487867 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.093122355 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.048908443 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852901728 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927169439 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929436315 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.922944838 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.92125381 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.797214743 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.169124701 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929374906 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854382224 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.058233627 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197326036 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.819009541 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.924274565 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919587159 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202634078 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488591462 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083845693 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.040893603 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.441408073 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923916054 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852283039 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853536976 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.61028843 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927580137 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900353736 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110003486 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.016044225 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829887037 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.018326858 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003222423 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174897515 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.935230959 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183202469 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193900358 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.616030711 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944383009 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.02036056 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.568268308 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.031545267 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919571838 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157113808 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680149896 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143060609 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.931186526 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.869018154 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.918737243 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13398577 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922650853 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.765304918 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148737854 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.638190041 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.970836178 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239007872 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991553745 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.772864205 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961973248 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.009302827 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93155156 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000255157 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933583244 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.933303145 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932144845 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969381121 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.784350986 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.04148892 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.934396932 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016432689 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038560042 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.446482409 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.924804647 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187937885 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28349492 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235719967 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977819405 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92359577 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929683541 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85749428 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069082767 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.146424051 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198974192 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.050044877 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.035366911 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947420555 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.560819213 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157739684 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163611059 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195550299 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.816195445 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.463887388 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963038057 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.924296454 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933893523 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.134115684 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124550213 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212058764 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061768518 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.031475592 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.291842889 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197346911 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.923167325 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925316902 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514246675 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.983926972 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.595306844 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.962560957 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.79159284 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19525577 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932525642 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298264373 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942331433 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.077280923 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.694554426 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665747352 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.21406603 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.91085372 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984659202 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189548712 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.291348321 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233508671 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991302582 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936672653 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.035692801 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074152692 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.800599108 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926049075 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926159444 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977656743 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.6379815 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936084057 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195255003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23378477 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.922327905 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.810350151 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947133067 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.93666574 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149546457 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180781396 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174194459 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936673445 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932919442 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.740831851 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197836586 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984577054 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86109149 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.928550703 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023627019 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172322788 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948527618 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.380074007 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.640188627 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187567806 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.925512229 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948135121 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.115649431 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276663033 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242459873 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.466371058 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127579982 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.514322936 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.544866565 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225273275 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.934587031 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.113822685 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229155666 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.933846555 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.039043476 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964825548 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.190588639 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23799123 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.951238097 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606128518 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.899961903 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267383077 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486331045 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866119917 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932664174 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.990531379 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925396602 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.060923626 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937365003 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.814256833 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.110908543 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.692908964 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209058026 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.930781881 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.916091231 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.633453232 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.235384634 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961623968 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087115476 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933613463 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.60213854 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.282170385 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187831296 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.041319465 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.934730678 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.934537166 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930924664 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.917846234 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129390415 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.123137456 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193252079 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.063383658 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.964496478 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933473507 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.148808328 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142324278 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.775311034 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06491337 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028349387 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973720082 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.841710634 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.433063962 seconds)
  done (took 1696.563735044 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939863968 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.959166682 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.940351945 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.012600874 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955370313 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939206074 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.03232377 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950671025 seconds)
  done (took 57.587774975 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.930167017 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.14518147 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.941190317 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.932166199 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.93737413 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.929165633 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.101413882 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.940228213 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.939268135 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.943045613 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.93113178 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.928009561 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.245165518 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.953046406 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.932126443 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.920329599 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.939054674 seconds)
  done (took 75.468221198 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.931209769 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.966582849 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.955194417 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.946440269 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.96565939 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.938444521 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.761367173 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.936684798 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.929043436 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.062779732 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.56569916 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.938744427 seconds)
  done (took 87.760112202 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.940133834 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.938778728 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.94099562 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.93805438 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.940338044 seconds)
  done (took 11.566603376 seconds)
done (took 2209.603331329 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.199310657 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.15320999 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.165531206 seconds)
  done (took 6.180782086 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.083960052 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.13102379 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.252509002 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.258363888 seconds)
  done (took 10.591992695 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.219375565 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.309995946 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.146808357 seconds)
  done (took 8.541048233 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.338966588 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.949503486 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.047162075 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.93509861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.935202052 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.937985382 seconds)
  done (took 22.673666106 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.939666166 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.941748718 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.938754441 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.94126984 seconds)
  done (took 9.627963706 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.923713364 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.674923569 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.921969298 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.938101343 seconds)
  done (took 21.323834223 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.688427875 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.70724502 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.684167198 seconds)
  done (took 9.945129351 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.566156809 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.851811395 seconds)
  done (took 9.283202185 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.200203264 seconds)
  done (took 4.064815966 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.070531644 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.20337661 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.423000991 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.426376306 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.482072439 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.819514215 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.245576422 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.184287622 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.326086058 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.373554331 seconds)
  done (took 25.422168647 seconds)
done (took 143.051717074 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.323066647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.941226376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.134487698 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.317566777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.163382608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.133295307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.15132607 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.298423242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.783340844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.780237982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.275108446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.163133385 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.098904115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.938552935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.099012451 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.318266545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.164434205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.343038434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.966854942 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.167867286 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.15495067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.915157853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.112516502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.92834166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.160157096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.089798348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.495010944 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.309446797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.125424868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.504949817 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.08848203 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.323742124 seconds)
  done (took 170.636997395 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.868235856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.936134983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.934130154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.935418054 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.523515794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.935652695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.935509817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.936260484 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.108626713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.091654542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.935193928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.506356224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934749058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.935003393 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.935280398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.935169972 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.279619294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.921266417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945630629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.949700303 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955195003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.465559134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.956398932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.510571103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.299678574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957849181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.936540851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.963367951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.94452587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.948002836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952166858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.936639598 seconds)
  done (took 211.179570912 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.940315882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.93900352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936808999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.937197682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.936349884 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.940154597 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.941787551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.938548655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.614391102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.585209478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.938400047 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.940354631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943532349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943942967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.944599511 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937775301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.947035671 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.948879367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945658082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.948084637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.953231842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.864019662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.939150172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.883128003 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.939632882 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.944173386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.938554779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.951652629 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956559036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.956812588 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.957489335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.938311734 seconds)
  done (took 223.255993417 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.138226466 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.947614347 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.950107368 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.885186911 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.950091711 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.949488657 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.945919568 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.139099456 seconds)
  done (took 19.80341615 seconds)
done (took 626.754149841 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.387478054 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.230359489 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.130429494 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.971331568 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.192651759 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.007484316 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.96952136 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.031822414 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.699780112 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.038781843 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.623679399 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.979806265 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.716757707 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.986039549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.095249109 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.022712866 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.540776747 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.622168052 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.142733858 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.029726763 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.1461488 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.941003852 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.038482576 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.730744834 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.726987022 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.981681368 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.145849541 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.541172494 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.973811534 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.131104856 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.701323981 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.360905174 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.978511097 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.966606491 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.02172499 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.001647134 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.307302448 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.976885199 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.096922762 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.746808895 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.018613286 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.587131708 seconds)
  done (took 106.411509694 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.941313252 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.940095796 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.939781644 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.93914406 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.937788307 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.940470896 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.938091848 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.93905773 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.939471319 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.939386521 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.939201685 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.93990922 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.937848518 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.938600965 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.939726888 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.938542159 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.941484221 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.940972955 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.938309542 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.937829461 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.938800236 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.940060469 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.940572858 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.937880479 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.939835287 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.938955542 seconds)
  done (took 52.312044445 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.950955857 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.097044242 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.177912492 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.968863682 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.950224158 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.953509952 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.968671499 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.956133045 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.95274718 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.952280092 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.040054967 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.954886019 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.969092102 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.176994453 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.961822173 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.948237105 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.948780679 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.949428428 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.10056576 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965824778 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.969576251 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.953512943 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.968132081 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.961533726 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.951951785 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950321193 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.952871129 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.388627382 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.954424421 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.042090678 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.990494129 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.968006843 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.356286488 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.185571299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.001541499 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.953560805 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.949061101 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045896912 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.955058333 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.949729761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.968171826 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.951960748 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.177038859 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.441988039 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.960724015 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.950052931 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.402768157 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.052414748 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.989585881 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959605224 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.180301509 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.96448025 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.953183439 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.951459678 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.987847903 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.959325069 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.950895473 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.259902442 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.961040612 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.967832428 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.956047866 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.952026432 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.107957847 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.956439536 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.098401251 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.960059027 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.960608329 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.951026151 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.177512835 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.964818568 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.449020979 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.963098735 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.950907819 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.04308899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.102737419 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.432178049 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.961496224 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.113504817 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.364831605 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.975754891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.959638617 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.378993107 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.979851675 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.95793572 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.955393375 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.952097079 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.952529132 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.996382589 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.968027673 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.383466094 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.454136061 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.269364565 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.977080536 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.966395315 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.952508914 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.259712724 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.961135109 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.951802292 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.173491032 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.459286804 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.96489674 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.958717562 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.4300635 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.967692415 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.971812576 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.962335901 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.183392272 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.965476347 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.996103756 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.952769945 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.961332318 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.954608951 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.970986522 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.962070401 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.95364951 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.426980443 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.065144337 seconds)
  done (took 241.25960139 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.950023567 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.947077362 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.947202886 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.965611016 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.947436116 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.951707138 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.948202232 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.94873016 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.953263183 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.948874267 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.946053223 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.948362365 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.950199822 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.957826582 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.46843693 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.960350057 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.564569675 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.954423563 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.954182524 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.951986776 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.636647685 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.958164106 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.953639521 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.951746707 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.954057965 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.956768834 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.954780168 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.999443074 seconds)
  done (took 170.411394203 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.962449094 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.14424937 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.974584195 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.998673591 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.969978539 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.958750338 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.984690426 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.98052115 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.968058232 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.957832835 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.960548788 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.023384449 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.96791577 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.096143477 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.992143056 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.99107412 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.067525385 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.968089696 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.961565892 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.961486413 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.988409088 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.957609595 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.02214838 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.08399746 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.975916183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.077570014 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.965112465 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.96264894 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.960177347 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.080207392 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.972752262 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.023525297 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.987562818 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.979710956 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.084210757 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.076647964 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.068245136 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.990852016 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.965958079 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.961146908 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.962847354 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.95116537 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.077577238 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.97871281 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.964024084 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.071349842 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.97866194 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.964600953 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.971482845 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.960887405 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.975765614 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.981914547 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.03044621 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.090760714 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.99349851 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.991224697 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.988691855 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.250264257 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.972937359 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.063020616 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.955802725 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.078926746 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.979002517 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.953083203 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.962390596 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.966964074 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.991633102 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.993966542 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.068123296 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.968554483 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.062106039 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.995841724 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.968526207 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.964229331 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.966244006 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.081086545 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.079220524 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.99689704 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.002361048 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.994342043 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.962475032 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.963707033 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.953617412 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.981415873 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.966542043 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.079361026 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.080940031 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.971029504 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.965710348 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.96709461 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.966669308 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.98937619 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088256361 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.99668358 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.064139572 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.029047656 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.036444266 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.977825508 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.975903806 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.967805071 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.025644854 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.978337072 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.976699398 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.296524233 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.035458958 seconds)
  done (took 212.50734532 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.062470694 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.450099303 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.017335163 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.021564674 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.237882746 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382871615 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.782142553 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.009752927 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.013387211 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.03993538 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.173907273 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.069019354 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.026127589 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.000721901 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.42279402 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.001655915 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.01892526 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.03443054 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.019666525 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.559942172 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.315822851 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.135038165 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.013172538 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.168643445 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.992335998 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.289652546 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.33337721 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.402845624 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.050214723 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.357188848 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.363635714 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.709857996 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.218229604 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.257582346 seconds)
  done (took 77.847056191 seconds)
done (took 862.618609426 seconds)
SAVING RESULT...
DONE!
