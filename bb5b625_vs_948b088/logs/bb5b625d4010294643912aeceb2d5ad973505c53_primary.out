cset: moving following pidspec: 10133
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.929841335 seconds)
loading group "string"... done (took 0.56019864 seconds)
loading group "linalg"... done (took 9.095729072 seconds)
loading group "parallel"... done (took 0.177491452 seconds)
loading group "find"... done (took 1.309268676 seconds)
loading group "tuple"... done (took 2.057287965 seconds)
loading group "dates"... done (took 1.360177469 seconds)
loading group "micro"... done (took 0.217522591 seconds)
loading group "io"... done (took 0.619106253 seconds)
loading group "scalar"... done (took 42.68397174 seconds)
loading group "sparse"... done (took 13.239320369 seconds)
loading group "broadcast"... done (took 1.077000266 seconds)
loading group "union"... done (took 12.018737602 seconds)
loading group "simd"... done (took 2.512643191 seconds)
loading group "random"... done (took 10.181683986 seconds)
loading group "problem"... done (took 1832.380908905 seconds)
loading group "array"... done (took 25.635595269 seconds)
loading group "misc"... done (took 1.12343494 seconds)
loading group "sort"... done (took 3.770494521 seconds)
loading group "collection"... done (took 18.787379776 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.655184815 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141666934 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.171178011 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.331071987 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211538584 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161507002 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.168169054 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.562343185 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.94313474 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.218452999 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.148343198 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.548964152 seconds)
done (took 5.958988239 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.243099027 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.444147345 seconds)
    (2/2) benchmarking "String"...
    done (took 0.134548576 seconds)
  done (took 1.220873357 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08190853 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.181890279 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.116227452 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.100895909 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.115341399 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115464703 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.115819663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.115819678 seconds)
  done (took 1.507515703 seconds)
done (took 3.707040549 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.495310634 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.827383931 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490999655 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138885845 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.163855899 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.152755955 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.310886837 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.167895836 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.124665331 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110842954 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175991488 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.35143357 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.476466757 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.960097524 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090411088 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.13629703 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.104604626 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687593286 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.100297903 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140730977 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.553720919 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116212721 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.1076596 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.146458088 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.209686725 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137582419 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.156054545 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100485826 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.684065388 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111542851 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.193359679 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.108086996 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181610904 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.242649607 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.107025123 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114349019 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668887138 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187732426 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11833097 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101443087 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68326974 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089107909 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.197925165 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100155349 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113728744 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193780532 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116918719 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.103115047 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10740251 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.081583918 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167074854 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.495374066 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.113368935 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.155839561 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.118170891 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698339564 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.105854121 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.164959979 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14622003 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.112898735 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.087406871 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.115225224 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16223261 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.116945699 seconds)
  done (took 19.847404495 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.123873493 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.145838903 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10010782 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162129296 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144902675 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087309633 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.105656356 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085048516 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132990031 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.193302955 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144835436 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.149705873 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081946377 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.103915137 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125278913 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254957683 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112357989 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127333952 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104017733 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097266753 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145978629 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.118409515 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.099745057 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.116401711 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17594991 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212128483 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.12682128 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127510159 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097734089 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.120783845 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133055027 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.165353811 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098471083 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085376354 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187345427 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127145306 seconds)
  done (took 5.387117674 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.204948902 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123227331 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.198044763 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.184312762 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152640991 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.187508699 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122288552 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257931309 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.266430177 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186116568 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135293901 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101441321 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100932581 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08597665 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100376622 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.688170543 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18453893 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155632787 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.131538353 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110123239 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087021019 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380697583 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104540622 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086488038 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107832136 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.07740411 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199188017 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090786674 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.317951193 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123788556 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094906556 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138431108 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216739894 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12309744 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146407621 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109498523 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087079968 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.238345706 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115158921 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082522567 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132119054 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137173713 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120147858 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105281916 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112858935 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.245205454 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.171478317 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086859866 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126002961 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.084677535 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.206050251 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.118676812 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.087186656 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.107028334 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105416972 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11056279 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.356124574 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10565752 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.293219077 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141322045 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087339399 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.102962836 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093252714 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.102442627 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.419483481 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110978947 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.063482155 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088288082 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.167029035 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106528351 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107280103 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108482706 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090829252 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125060473 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085047827 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101437628 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085373523 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.102205236 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107628737 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102681325 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104339064 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.102095646 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150948914 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118190324 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123620893 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128970992 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091647273 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104155686 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086917807 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136508373 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101567314 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088067995 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.151248569 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109962182 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120561031 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102266918 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132029127 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099921641 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.190707601 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088065154 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.133294943 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.107891955 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117182921 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123466235 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103288551 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089747243 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.104221813 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.101449248 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086228943 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167645229 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086877112 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.106323554 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091537755 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11958665 seconds)
  done (took 24.582521761 seconds)
done (took 50.460870525 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.463085189 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.117375851 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.116549659 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099274385 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114825065 seconds)
  done (took 1.645174172 seconds)
done (took 2.355037439 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.351406416 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17485921 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12433999 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.181715975 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108219388 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190815499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16660108 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122450261 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215593149 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088899817 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194279541 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087816719 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108291073 seconds)
  done (took 2.851310968 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09958308 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122555233 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086856097 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116793667 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081675776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116432544 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099008234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144752382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113468404 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091014747 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097103632 seconds)
  done (took 1.87640012 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095554016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117934943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086518518 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111369714 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079847624 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111499235 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094231018 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120032277 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111303055 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090885161 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097063361 seconds)
  done (took 1.824495424 seconds)
done (took 7.252322749 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.031031342 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.138974075 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.126866934 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173411967 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348067936 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19990186 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.554620471 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138177476 seconds)
  done (took 11.618804694 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.152750727 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085976949 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101718443 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089555111 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102256594 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086189761 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101342902 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086193316 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102592611 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088230832 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10294691 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101937596 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087183923 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103755598 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088264189 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101222946 seconds)
  done (took 2.353174849 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.123739422 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122178618 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107791499 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112521919 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089941069 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106897441 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108113662 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092651057 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.1057865 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091522844 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111121756 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10966612 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108840843 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.089224696 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108406105 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096960941 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.105029448 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10816427 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092405411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108349486 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110767845 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.089719169 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110075229 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110547932 seconds)
  done (took 3.337953361 seconds)
done (took 18.01710668 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171713698 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106748915 seconds)
  done (took 0.99380887 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.107008284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123052196 seconds)
  done (took 0.951606043 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112107339 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101490649 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139505866 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119265496 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.087158442 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102096334 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133850903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.087454467 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.103030817 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087076181 seconds)
  done (took 1.795774144 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090970207 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.105565132 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.095249748 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.123090391 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113929541 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.089083143 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.107640001 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.105920407 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.093209616 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100712824 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095253609 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120394082 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108470034 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122920324 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09200746 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10837474 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112831057 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090963037 seconds)
  done (took 2.602736526 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.086649499 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103790726 seconds)
  done (took 0.915753087 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089638636 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100535046 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088796745 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103888038 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100596273 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08491364 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100765686 seconds)
  done (took 1.391536731 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.522314094 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.243917675 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338904319 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120235389 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.139305835 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.386590827 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.139715072 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116786796 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100256257 seconds)
  done (took 2.871563381 seconds)
done (took 12.241131853 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097481718 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.198166303 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.543434572 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.121438994 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084235435 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164828209 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262027562 seconds)
done (took 2.19877927 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.373267888 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114204561 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.094871664 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085211488 seconds)
  done (took 1.387638922 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085529444 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107540348 seconds)
  done (took 0.924655675 seconds)
done (took 3.040161954 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.117893274 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10272998 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.084283595 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099308165 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084743338 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.221192515 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.081976798 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097980427 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084845543 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100196579 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086883505 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.0994245 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084155232 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097779933 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081642645 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099911076 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082605628 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097658804 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08483977 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097445159 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082041094 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100557681 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081697977 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097797945 seconds)
  done (took 3.115111438 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104643437 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101496961 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106786275 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090185488 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106532333 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090669824 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107379014 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.102063527 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091202106 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103557562 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089592952 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105536793 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104136061 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088829997 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103707616 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088940371 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.107050582 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10206493 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08763076 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104979655 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091131762 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101589861 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105296388 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091190431 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104797852 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104304906 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087322973 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101481837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090535039 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.1046576 seconds)
  done (took 3.702496124 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093274863 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098353283 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082649478 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10998459 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082005585 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102642314 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081553409 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099790523 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083208865 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098983794 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083923984 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098656703 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.082300715 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10036164 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083521469 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.105695536 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.100358596 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.099079808 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08281152 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099868801 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.104086973 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082509838 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.102337795 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082173543 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099597858 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08248428 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098889288 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082877614 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099315852 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082472298 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103940355 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.089960685 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098842717 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.095669064 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105644558 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082895229 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108174368 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081698176 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099656383 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082474992 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.099021812 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082430599 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.098575545 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09372164 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.101182212 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084086189 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098979903 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084972561 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09880357 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085893848 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098708842 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08184007 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101221916 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099491225 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089198153 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098372138 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083633825 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.098250496 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084334783 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09874654 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082730767 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.098981677 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.089113976 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099575832 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106483141 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110753832 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083084762 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100294114 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08708215 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.106953499 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101772427 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101799187 seconds)
  done (took 7.502440743 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087610642 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110228051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084917884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10155597 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082013499 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100474432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091131303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10026771 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10162461 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102618377 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100602118 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08501371 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101911918 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088176114 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100018291 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085717093 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109554147 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098322994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083370892 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10280521 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084095931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107036535 seconds)
  done (took 2.855273446 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227225064 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110174435 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147864801 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121035848 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1197014 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100658316 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107697027 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107917138 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090835639 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109505488 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109776772 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091333626 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119545181 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110587128 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092878091 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111221799 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107067771 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094449862 seconds)
  done (took 2.825537057 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098550134 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103255775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110486408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103377487 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103782414 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089153757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109448401 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118347747 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089002544 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102836946 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09575677 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105141675 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089153518 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103106315 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105571676 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086701434 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105593116 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087041292 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114588366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110140029 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093015335 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113345121 seconds)
  done (took 2.988806683 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103050455 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105463165 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133542299 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089524545 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099485158 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085875151 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111044429 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086671622 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111926687 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104702799 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08661446 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101854822 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.092854746 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102673455 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109151937 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086271064 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104922411 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086381901 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105122995 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082778783 seconds)
  done (took 2.736443242 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130150923 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11977589 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119806693 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114032427 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119779342 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.1191357 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113138897 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119803895 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119191143 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115969751 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.12056617 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120189877 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114211786 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126784436 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119921552 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132001475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118645791 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13138273 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120771863 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103171887 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133711881 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120453022 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131001617 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10284437 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119372082 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104934393 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120229938 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127049941 seconds)
  done (took 4.113684984 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086748332 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086048719 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.100553518 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.083646913 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.101364127 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083631751 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.10074642 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.08364691 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102437295 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084033181 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.103115015 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086111801 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102884248 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086200665 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103752345 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085921466 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102792231 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083732703 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100497366 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084528061 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.102438631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0861069 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.102626206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08468892 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100408058 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086330073 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10100418 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083797592 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102685077 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083915283 seconds)
  done (took 3.542168482 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094544734 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109830522 seconds)
  done (took 0.963467644 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.084544496 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121062411 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084853249 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107887098 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093016066 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104869625 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114474685 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093251886 seconds)
  done (took 1.558073954 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.112038116 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.124897181 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093308374 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117017903 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.125060929 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.107160798 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172022148 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.110592869 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094543962 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.106297288 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.123773611 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086896649 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114867125 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093227218 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.11354405 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119536673 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085155679 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115114666 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095267763 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107268676 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093481214 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120194791 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115012099 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094843775 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107976524 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098644041 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118194564 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.117564887 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092644465 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.116978151 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111580419 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080911323 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109932676 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092654884 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102739998 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106642324 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122113738 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110410295 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096686959 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111491015 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096751821 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09999973 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098116932 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111704032 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117679223 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092835152 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.110260065 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083016783 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.105773134 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091224056 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099870493 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091170307 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099615829 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114296389 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096951678 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123068376 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.090063279 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109652783 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109121553 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091714628 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.112297278 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.09186376 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114352865 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108421485 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098072653 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.114224433 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096237784 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.100050822 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.081624326 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.103401454 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097591361 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130178294 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117081065 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092891273 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111232792 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102894135 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093044814 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111859958 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096166658 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116205628 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.109622022 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096092527 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115560054 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091986888 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109294214 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095451035 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107725735 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091365936 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.106432942 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125946136 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.090665095 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10298169 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089311538 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.116937314 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110121409 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.091843442 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106830473 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097923665 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.099074356 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093264937 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111773411 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095306513 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118336899 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111320251 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094641996 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114305442 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.099646019 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111532947 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109908377 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084673907 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111691524 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090249594 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113882259 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082392475 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110921241 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.092497921 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.111029463 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.116094367 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091304898 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110298582 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099378552 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.117168347 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108043058 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084585487 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110697101 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094288934 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114887035 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.100676128 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108233101 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.083645813 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.101486083 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.115101549 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.092419205 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.112922318 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094194281 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111000076 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.082739469 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10425531 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093821746 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.116642476 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109189736 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094627117 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.115444846 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112669537 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091797407 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.116172552 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091105475 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.106274788 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098296938 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110332499 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101252951 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09844053 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110188245 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.091310542 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110948702 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097764767 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.119174132 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111272103 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090472857 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112275939 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094373275 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105865302 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093769369 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.117187339 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10102751 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110118151 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101754266 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085514864 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112427555 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089444167 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.110188818 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088555555 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109875577 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09417703 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103948031 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.091282688 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109792008 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122722951 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101043691 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113250096 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.095987428 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.118010003 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.110172768 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094665383 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.110203934 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094175101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.111311869 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097731221 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.113702494 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112502192 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.09295903 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102425418 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09470319 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116716448 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088702131 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.104242248 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088369475 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.110725463 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.118082047 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093378922 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111216179 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090959844 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113348777 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09724981 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.111508194 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.110342864 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089632951 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110882167 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099012956 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112811326 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09526576 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117920222 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112849883 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084832013 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115494162 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092426659 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115754251 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085330762 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108305217 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090393034 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.112220331 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091984862 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.11041833 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.083430274 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11756393 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116929842 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095185469 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106856489 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.093639769 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121290552 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.11023074 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096147102 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.112153484 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0961566 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125350791 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107079821 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093366607 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.119928648 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.093402089 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100769416 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114189822 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.091545224 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.106075235 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091841834 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10933774 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094282024 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113610677 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095603735 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.100661325 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093492258 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.108918544 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089462733 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102613572 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116011177 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094225185 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.11150875 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102329219 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113738129 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.112542808 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095637682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.111343118 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.094666731 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112979419 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094521913 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115582258 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.110029638 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089329665 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112206218 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088983061 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.105925206 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092767737 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.111327786 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094552584 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114218461 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.110540497 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099152005 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112060268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.095675317 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128944053 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.109166512 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089733854 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112358849 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114667404 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093192589 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.111062846 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084758924 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11804635 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094018608 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117623098 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110780619 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.086508172 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112881169 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093345784 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11317278 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095451988 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.113556006 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092222003 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.111254611 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094171449 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121274592 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.108988696 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.101170022 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1132362 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114131935 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094604246 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113320639 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092990978 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109115451 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094399674 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.113498033 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094881472 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.112516922 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115589008 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094467261 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112288121 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092349448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.115329342 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095243414 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.114906306 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.102586581 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089889726 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108301163 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.094471436 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116771816 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.095916884 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111461006 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.092820631 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114109729 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.092667269 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.104994188 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.116808624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097222489 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.113721701 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103302777 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108650772 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.094538739 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122695839 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102345325 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092062653 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.106527828 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09098452 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118730372 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.095554459 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.119323851 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114543311 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090428995 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.105156142 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09578709 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111188942 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.085140189 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.106836652 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097491669 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.110770014 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092031329 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.113306769 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116121338 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095900808 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117436989 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.092864104 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.113338113 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.095250493 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.105693562 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090775104 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.109062412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113555919 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.095783866 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.109629537 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.087049304 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.113169039 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094526156 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114233515 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.093711145 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111962507 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119243428 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094844932 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.113834932 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099898076 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.104153016 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.095084943 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.112459754 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.093701978 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.11009407 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115522521 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096501075 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115469861 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.100021435 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.113370751 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097004953 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114423609 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088918358 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.113521193 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.114377082 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095411329 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110652367 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.096555756 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120976563 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.088062772 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113942837 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114464303 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092122287 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115514337 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09586706 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114156501 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098963504 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.114511177 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114200359 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.098878318 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.113440914 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095621851 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11488143 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093191323 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119455631 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109814202 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.101438331 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115908464 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.096478365 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112748116 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.092075447 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113674912 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09389682 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113364922 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120095097 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.096634302 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110692416 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090466736 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.108026207 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094765205 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118324042 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120214578 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095489053 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115561173 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086460725 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.107183902 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095854415 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.110966386 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093411512 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.1171119 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119446364 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095296376 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111740465 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09361811 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.1195189 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118994272 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097786316 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111075714 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.097940113 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.116531679 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094945699 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112995522 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.1137248 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096699742 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.117282651 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093310142 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.110526112 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104156911 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119391402 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117095495 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093211741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117680202 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0939977 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.105280137 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.097430705 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114784389 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118347273 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095058503 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114651921 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105887452 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110077643 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114493388 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099806112 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113994656 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.101005773 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.106063384 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095377092 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116797055 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116812905 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086979722 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.111043906 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092230343 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.115372741 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091417212 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106683767 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106328568 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.120722686 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.116062063 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094141568 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113729124 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08727297 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.107031942 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091582616 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116847807 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094593355 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123340246 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111675101 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091741615 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.106881769 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096507422 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116552452 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098093556 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.108118433 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08701169 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111846803 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.096393348 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.123329016 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114304373 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.095580372 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117567231 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096612914 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.109015488 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100591651 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.108630382 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11696402 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107395704 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.116123506 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098225146 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.119729683 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121733371 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097389906 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.106690778 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09692958 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115770936 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096480541 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.116789697 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.117459833 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111237115 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116803864 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.092449043 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.114204955 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.115962911 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09159397 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.123825821 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097440181 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117011523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097658893 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114696013 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117700999 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102403499 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11818026 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09637159 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11621046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.113909833 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095292879 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.113533336 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093562009 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.117930535 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.096949752 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115152032 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098316549 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.111844002 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126535556 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.102937038 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.117809114 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087536599 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111376264 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092515873 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107085066 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097435337 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.109419294 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.093758018 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.113003268 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114095052 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099112306 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119344189 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095640807 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.117508915 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.095635773 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.105847818 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099212259 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.11627122 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118110638 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08874501 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.117030038 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099716625 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.121201923 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120177525 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.094044277 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116165471 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095305092 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118039664 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08762077 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118958966 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094419676 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114988145 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091535642 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115718628 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.117640797 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098478354 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117268227 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098744781 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116581352 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101025362 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118239259 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.108975427 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.089023222 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119356801 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.090232003 seconds)
  done (took 63.406910568 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.158591172 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093755402 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107108154 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08744603 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134054944 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108620586 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087525555 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108738537 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088198308 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121392821 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087476007 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107342228 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128593413 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135318942 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133568435 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122484837 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087409397 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109177247 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087017826 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108135881 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10807903 seconds)
  done (took 3.132643987 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112513174 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.125962906 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124802917 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.129072247 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098774347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125148721 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123645302 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125460057 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109597042 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119584512 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128554527 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126005486 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.101176995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120961702 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119181331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102673222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128919088 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119384149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127079563 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.125070631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103069717 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124184607 seconds)
  done (took 3.442173867 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099979361 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.114665342 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100220939 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.108781703 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.094744396 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.109710086 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.10107799 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.11217833 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.099895806 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115523819 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09459945 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.11534857 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120452312 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.089822461 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.114184906 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091826146 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.120445576 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.096253491 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.117322704 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.090406364 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.136864404 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.11036672 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.090798667 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.114258654 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10486845 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.117233575 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096664772 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.115169689 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.093613799 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116139572 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.112368249 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.098161632 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118555739 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.094183388 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.113874716 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095255296 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.116277518 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09020696 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.112430443 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09861508 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.111069904 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.116827623 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102157274 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.113465025 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09231309 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.117527407 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.095597642 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.109907303 seconds)
  done (took 5.933989263 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129654675 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167089295 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09829525 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136571409 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132793701 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.129392747 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098418595 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.155242608 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093462996 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.116287477 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.140111727 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110042244 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122153041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.125666108 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100446226 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117259646 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.119988262 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095581626 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125914537 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099148566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122653982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12055765 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.133551733 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11426551 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121530789 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121172885 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098775621 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.122623226 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.128906152 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12330522 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104940041 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127171354 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134537344 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095231988 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116240742 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122053643 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.118965834 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.116632208 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124769065 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096691663 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119520665 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.101717963 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.121187708 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136330992 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121380887 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100872082 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116748129 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096137445 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128994524 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124849778 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126374408 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116152536 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123732258 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.116961844 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101921009 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133650636 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.117668977 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098258205 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.121665861 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130102626 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093743174 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121493591 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135808023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.09893597 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.131214457 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133449985 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119728759 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103227514 seconds)
  done (took 9.083658968 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103604399 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.141628484 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133867038 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133789803 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101102961 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12190596 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122864445 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101333102 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122949759 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129161173 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101621389 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.172060588 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115515717 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128105654 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102517691 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122678912 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122315806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102373232 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122625755 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102133773 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122528401 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132964519 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.12146237 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112896488 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135033188 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115496271 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122488798 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102049016 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132564245 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122692745 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134975302 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.102859612 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122328705 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133898199 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135230557 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.101660828 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112404146 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102553549 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.123378836 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123281045 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09610567 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132937783 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122849954 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.095060269 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123122597 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123753801 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133715333 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114394491 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128091371 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129116259 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123687159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11314425 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122884623 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122392969 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133158198 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141470752 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113479645 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132847748 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12249515 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135006685 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13343904 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140175008 seconds)
  done (took 8.390654482 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0926763 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092681874 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.111576182 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.090654003 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11397074 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09109809 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114547625 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092814691 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113504687 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092331342 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112964219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091230524 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110674064 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093258482 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11136601 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090621947 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111525342 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091451442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113626564 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0908785 seconds)
  done (took 2.863325834 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101532146 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.135254273 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.094164401 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122053333 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11880624 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100812643 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.116476952 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097244271 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115688715 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118533442 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106250948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127228501 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115545431 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102200036 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12706971 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122037421 seconds)
  done (took 2.667327823 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114409518 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.127753074 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.141205312 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.098671323 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.112897496 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.122774758 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.093640909 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.110663816 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.089917846 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123105044 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.099963948 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126873095 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.094260113 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.112988141 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.115396343 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.100005746 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.111538644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.098822141 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114599001 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119239772 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.120312126 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.117684864 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.094701072 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117753063 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.0960821 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12114449 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.122197117 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.094320697 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.113222276 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.094515983 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.117769944 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.122698078 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.090457843 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.120285785 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.091973768 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112470781 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.094205823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.11515731 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122353865 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.093213813 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.113480166 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.096326565 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114361276 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.095199187 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.110675182 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.095353969 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.110860218 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.121871918 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.095721751 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117615008 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093841552 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.122784146 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.100670549 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.126931832 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125658791 seconds)
  done (took 6.888060785 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1084755 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119132365 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098259629 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113056979 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097473438 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.123611939 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.119244864 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097262887 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117419326 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0918184 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117539562 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097957401 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117514724 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119221354 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096088822 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119387505 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088938008 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117080429 seconds)
  done (took 2.809001349 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099612805 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11548305 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101068424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.115354561 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.094085865 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.117602246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089343028 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.112782601 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093072847 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.115398506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094487789 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.117422583 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113533506 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.096767951 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115926264 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094910289 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117537689 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092692234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.115803571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090202824 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118140592 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093051851 seconds)
  done (took 3.165513605 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11220412 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.149086311 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.131800566 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.136137882 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.121050802 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.120581544 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108344218 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.12080735 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139163539 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098041337 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119875181 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098305748 seconds)
  done (took 2.312660732 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119572356 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153856798 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114902607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096446716 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129333553 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099790539 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120172241 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120489363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131788522 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113112865 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120833085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132684958 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133020496 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132484277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107401148 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128656635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121366059 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100496086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116841632 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143668991 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100360992 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13266525 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121147112 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100006217 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120087877 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131404505 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132892481 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134631055 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100675097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133627555 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128393781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099407179 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133691258 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133995342 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118920783 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112373684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121105271 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14210743 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129107029 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132871275 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097758835 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129021723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134053942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106981461 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133404358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120897965 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128886069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100054639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122213974 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148945855 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129918557 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133625601 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108405237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133580846 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133079384 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149288363 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135451382 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133222621 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108298694 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135930935 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132656059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129305909 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133054394 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135053677 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1071668 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132380656 seconds)
  done (took 9.053361266 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135815041 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115434778 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122758526 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135125119 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111217847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122394223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122624135 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101230397 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122056998 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096992379 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189980823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10044608 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132218095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1324005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121855718 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100304828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122046093 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133225168 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096389478 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149266555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122603355 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13359238 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132455606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111756957 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135940069 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129432698 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122315974 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10013453 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123736617 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122431442 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107855275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122427965 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13392539 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095167053 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132805109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121738659 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100231027 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129863126 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121748578 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130036912 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111225021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142919862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122271478 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136460389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100879851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122904229 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0969347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122963181 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118938767 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13527182 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114460688 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136556692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133514497 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122545112 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100542495 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121796919 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122374264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100356093 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130625988 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132981573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122302521 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149325589 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100229859 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122781592 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134560789 seconds)
  done (took 8.93941118 seconds)
done (took 168.721251788 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.113251246 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.155005684 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.131839151 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159008291 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.117470666 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130131052 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150854738 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.11197043 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.117319971 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095687976 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.11686691 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09818356 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181988086 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.117204781 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095589358 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120636205 seconds)
  done (took 2.879483798 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190980995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.299228762 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136178461 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101030074 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.125022082 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097504721 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122552942 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101843298 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.118453848 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130706761 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09769179 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.120012538 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.109162685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.12020027 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.119551686 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097613715 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.130539206 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097554063 seconds)
  done (took 3.187745695 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.127254728 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164828984 seconds)
  done (took 1.169225898 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131724599 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196831751 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321037064 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175024238 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.147380452 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116943056 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.174449223 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138367399 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204012431 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.139165929 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.140241362 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.124095392 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.127703122 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.129183831 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.129312971 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103437343 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.151500243 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.127644192 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.105067266 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.126628683 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.148524605 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102678681 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.129887954 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.127555261 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194928411 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.115816791 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.124934458 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.126160464 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.103507309 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.127295078 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131268623 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117329251 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.138998714 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.440346138 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107891601 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.19904835 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132660443 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102465929 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.12711906 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101774322 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12780315 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.129041488 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138375083 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102479831 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.126039078 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110534102 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124781584 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125449242 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109616677 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.133248187 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132933134 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107797224 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.197866868 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.134327639 seconds)
  done (took 8.581983105 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.85529865 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.144390187 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125391697 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.965730437 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154987188 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114442884 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.863703769 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12199572 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276481518 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.864170369 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120178441 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.138038332 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.247927138 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.268662347 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.165658989 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353194369 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.740401363 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.139264855 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12981278 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16741025 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130622786 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.153326635 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144552691 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434489797 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103248436 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124442129 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129782902 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113941146 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.200894632 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100663721 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126921949 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198593498 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.304989535 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.196070862 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125365353 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100511082 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123245587 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185216402 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.289275308 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.235870151 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187932153 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121201912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099654915 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136835968 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.144761235 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097327083 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204984746 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190724605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191593196 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126699143 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.138086038 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110184588 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136008022 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178531499 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122073796 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352867286 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358392997 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10124583 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132845167 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.143460076 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.287842659 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101294595 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243613146 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151576769 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.23210194 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100682359 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834124679 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185038256 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123965529 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133777535 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108823491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129321826 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136631285 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182792047 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394672039 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140408337 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104918551 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123584129 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221340564 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123977241 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101504831 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.205331323 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102992372 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133127912 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140498878 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1380797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189587141 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267139363 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138368227 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143302323 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107155463 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137076796 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126680865 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231945763 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236305362 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176725958 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.252063524 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115147227 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.204928533 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183510138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136100433 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189420967 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131574608 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142594286 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136720386 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21193452 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159469504 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124923837 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129262206 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108723365 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161708363 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128220946 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108923763 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.20884045 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46337204 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.207179581 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097232047 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129184452 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109217266 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203477444 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109591932 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279945798 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134165624 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186567935 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132605552 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098916809 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.133158387 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182642147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13905288 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133342444 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139020546 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110086502 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.291930953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239460452 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116076893 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252247625 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193689386 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134895662 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192811118 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133915287 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186712513 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135857921 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136649036 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103244011 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826763859 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13903579 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109114461 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129816564 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20888011 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124770191 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103336064 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126233547 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098015393 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829349959 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104539579 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122531102 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103635715 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134631924 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1335006 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108520157 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129896813 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180717421 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251122393 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13710161 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132590984 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101799668 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.202314407 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103000862 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12595664 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102066805 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126374434 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134201826 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105950563 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128206258 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192004169 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177789785 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.238275898 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.552514055 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102274419 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124449775 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250406109 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101884964 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3236794 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131942556 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.246275364 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186558702 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122390182 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.355561581 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187632304 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.21027733 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128963544 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190123472 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122080906 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108418777 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.203558862 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101578279 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131739156 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176961118 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14161681 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138514768 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.166331027 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101359864 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26928002 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098494896 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188440791 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126214949 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136702504 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326526068 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10126201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145282034 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180012669 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129220666 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102726092 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.634663832 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102523044 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136389927 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134536675 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.242114067 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185158099 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133827085 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133514463 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114338211 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.205177227 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231942553 seconds)
  done (took 47.858465368 seconds)
done (took 64.54750948 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315642791 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279310608 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.317811075 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233178913 seconds)
  done (took 2.132253793 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.192619773 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166724537 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.162101402 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098255014 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.168425347 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.121391893 seconds)
  done (took 1.821379375 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.49919805 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.413931773 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.361866839 seconds)
  done (took 2.188747919 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275680099 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.297283713 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.374806821 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.463126349 seconds)
  done (took 2.43316272 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.218990216 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140647278 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112024642 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.154166923 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.186218428 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212012002 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133021076 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187185781 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120431487 seconds)
  done (took 2.430003786 seconds)
done (took 11.919437219 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.173652904 seconds)
    (2/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.304223723 seconds)
    (3/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.286613332 seconds)
    (4/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.34435097 seconds)
    (5/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.195850942 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105278624 seconds)
    (7/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.129875312 seconds)
    (8/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.145776129 seconds)
    (9/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.137445769 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.129373335 seconds)
    (11/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.129139727 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.192467595 seconds)
    (13/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.218587981 seconds)
    (14/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.230620696 seconds)
    (15/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.176344611 seconds)
    (16/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.265972069 seconds)
    (17/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.251023603 seconds)
    (18/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.232902641 seconds)
    (19/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.216946478 seconds)
    (20/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.182505591 seconds)
    (21/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.103804734 seconds)
    (22/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.25396495 seconds)
    (23/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195633505 seconds)
    (24/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.139947535 seconds)
    (25/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.132542024 seconds)
    (26/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.212526307 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115440763 seconds)
    (28/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158710478 seconds)
    (29/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.11141265 seconds)
    (30/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.150425365 seconds)
    (31/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.128286478 seconds)
    (32/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.225051632 seconds)
    (33/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10351745 seconds)
    (34/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.130076242 seconds)
    (35/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.145198204 seconds)
    (36/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.217103367 seconds)
    (37/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.249899427 seconds)
    (38/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.293002307 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137505959 seconds)
    (40/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.24341978 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.132108799 seconds)
    (42/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.150543278 seconds)
    (43/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.126722276 seconds)
    (44/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.103408515 seconds)
    (45/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.235174216 seconds)
    (46/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.217425937 seconds)
    (47/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.120198319 seconds)
    (48/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.16492582 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131646867 seconds)
    (50/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.217422603 seconds)
    (51/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.203094939 seconds)
    (52/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.129936256 seconds)
    (53/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.163918894 seconds)
    (54/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120910924 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129588285 seconds)
    (56/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.249799122 seconds)
    (57/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.174189627 seconds)
    (58/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117943597 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131548234 seconds)
    (60/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.170597865 seconds)
    (61/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107019684 seconds)
    (62/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.198404601 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.15823201 seconds)
    (64/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.221418315 seconds)
    (65/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.209497713 seconds)
    (66/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.160051193 seconds)
    (67/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.226185637 seconds)
    (68/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.098220268 seconds)
    (69/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.17834995 seconds)
    (70/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.203947916 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.156916762 seconds)
    (72/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.086020939 seconds)
    (73/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.168430891 seconds)
    (74/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.126479065 seconds)
    (75/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.135125757 seconds)
    (76/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.203644626 seconds)
    (77/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.130157213 seconds)
    (78/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117937275 seconds)
    (79/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.155175372 seconds)
    (80/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.215772284 seconds)
    (81/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.143900094 seconds)
    (82/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087928878 seconds)
    (83/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.087420518 seconds)
    (84/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.124162566 seconds)
    (85/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.211438673 seconds)
    (86/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.095308085 seconds)
    (87/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.144751554 seconds)
    (88/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.218231502 seconds)
    (89/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.112956452 seconds)
    (90/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10396763 seconds)
    (91/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136295198 seconds)
    (92/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.15578293 seconds)
    (93/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107888114 seconds)
    (94/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.137577041 seconds)
    (95/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169203973 seconds)
    (96/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10664731 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13987323 seconds)
    (98/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.105790696 seconds)
    (99/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.111582131 seconds)
    (100/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.206924474 seconds)
    (101/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.09566416 seconds)
    (102/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.130014698 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100066101 seconds)
    (104/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.127035757 seconds)
    (105/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.129004891 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.087820936 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129768637 seconds)
    (108/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.086553829 seconds)
    (109/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.206454506 seconds)
    (110/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.087255906 seconds)
    (111/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.129390308 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130816143 seconds)
    (113/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.114613352 seconds)
    (114/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.21742193 seconds)
    (115/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112620962 seconds)
    (116/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.132481403 seconds)
    (117/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.112638968 seconds)
    (118/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.088486397 seconds)
    (119/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.125182128 seconds)
    (120/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.151107596 seconds)
    (121/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.11275477 seconds)
    (122/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.087311683 seconds)
    (123/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.166746368 seconds)
    (124/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.113096969 seconds)
    (125/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.087211483 seconds)
    (126/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.129632657 seconds)
    (127/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.120001743 seconds)
    (128/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.16011504 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.140355796 seconds)
    (130/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.114840838 seconds)
    (131/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.151543115 seconds)
    (132/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105433464 seconds)
    (133/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.21439486 seconds)
    (134/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.149957398 seconds)
    (135/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.088674853 seconds)
    (136/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.113422273 seconds)
    (137/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.088050855 seconds)
    (138/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.141245006 seconds)
    (139/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.11224002 seconds)
    (140/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089043492 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.13101282 seconds)
    (142/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.086812692 seconds)
    (143/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.131003463 seconds)
    (144/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10696973 seconds)
    (145/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.168302216 seconds)
    (146/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.087468779 seconds)
    (147/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.138757789 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135749034 seconds)
    (149/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.088317951 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.138709087 seconds)
    (151/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.10106251 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.131488867 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.138228489 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116283067 seconds)
    (155/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.203752816 seconds)
    (156/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.210423462 seconds)
    (157/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.088057925 seconds)
    (158/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.113584804 seconds)
    (159/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.127457889 seconds)
    (160/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.088391376 seconds)
    (161/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.087689313 seconds)
    (162/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137355462 seconds)
    (163/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.112930368 seconds)
    (164/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088303845 seconds)
    (165/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.095444193 seconds)
    (166/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.113199168 seconds)
    (167/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.171543978 seconds)
    (168/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.097828182 seconds)
    (169/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.11379645 seconds)
    (170/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10859255 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132033156 seconds)
    (172/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.105990456 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132214176 seconds)
    (174/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.125114393 seconds)
    (175/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.119612613 seconds)
    (176/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.112426917 seconds)
    (177/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.131442086 seconds)
    (178/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.140848909 seconds)
    (179/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.11270735 seconds)
    (180/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101184015 seconds)
    (181/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129696514 seconds)
    (182/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114763436 seconds)
    (183/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.121347427 seconds)
    (184/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.0875955 seconds)
    (185/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.130843651 seconds)
    (186/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101275299 seconds)
    (187/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.131484478 seconds)
    (188/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.127244612 seconds)
    (189/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.112106348 seconds)
    (190/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.088675101 seconds)
    (191/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.140290395 seconds)
    (192/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132751793 seconds)
    (193/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.087792569 seconds)
    (194/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.11318152 seconds)
    (195/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.117420426 seconds)
    (196/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.203321192 seconds)
    (197/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.13701725 seconds)
    (198/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.182924489 seconds)
    (199/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106013586 seconds)
    (200/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140388547 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107235857 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.131890984 seconds)
    (203/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08869778 seconds)
    (204/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.121801701 seconds)
    (205/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.088384805 seconds)
    (206/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125392033 seconds)
    (207/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.14012643 seconds)
    (208/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088502753 seconds)
    (209/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.096166159 seconds)
    (210/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.113215954 seconds)
    (211/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.132758404 seconds)
    (212/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089119423 seconds)
    (213/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.088942606 seconds)
    (214/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.113485483 seconds)
    (215/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089297237 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.133259428 seconds)
    (217/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.113181406 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107159825 seconds)
    (219/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.14579076 seconds)
    (220/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.087565426 seconds)
    (221/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.113161794 seconds)
    (222/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.087883036 seconds)
    (223/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.113924866 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.088705683 seconds)
  done (took 32.911619196 seconds)
done (took 33.83935094 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.416190669 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.143097198 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.139013299 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111643673 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.156761553 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.140762155 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112682609 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.140232359 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.135117892 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.102007335 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.127592703 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.112676495 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137492875 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.155622402 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114779125 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.131486462 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104037779 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.137089698 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.137806694 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.114371902 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.157876313 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105584817 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.13604022 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12942733 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.132359639 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130215083 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112679121 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137684538 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.136927354 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.102648174 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137128231 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104510979 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.138222727 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.141238378 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102272591 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.130650384 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101966852 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.120778291 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10349477 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.131334025 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.136085082 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.104751879 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139422051 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104415866 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.131519586 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.12773498 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1026238 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140359399 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102285019 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137248106 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10494716 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.141687431 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.127749101 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10232527 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.1287655 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104903273 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.138623744 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103018562 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.138957881 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102939226 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.131452628 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128498701 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.10798226 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128463664 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.104524012 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129274431 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.105646371 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.130835634 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.127632553 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105055567 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128246919 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.104844501 seconds)
done (took 10.186638572 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107346252 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18468105 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.16015938 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.16045477 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131810918 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144413591 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142558205 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15154118 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112945946 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.153392875 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.156073768 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.124789843 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.166886211 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.135175994 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144877441 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.107475764 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.136318873 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115298105 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.163064709 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153325117 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161611981 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.110434402 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157539834 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.151814392 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11041826 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163602006 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13699227 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.107939931 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.135447742 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.143413505 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127450155 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.135768688 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135817732 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123259877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.141849797 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.135554088 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.1181378 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.133301139 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10906745 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.133658807 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.163660769 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123134406 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133953412 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143609763 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.108053753 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.136543842 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13594556 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.110278028 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.137474447 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.106367319 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.137481047 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.175408001 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.110302593 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.136757085 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.135742306 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111911092 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.135961706 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.136957943 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113750836 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.137389501 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108792447 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.136011916 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.138238854 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.12789077 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137190688 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.135977995 seconds)
  done (took 9.904296163 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127096757 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.16796896 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144646842 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119352466 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.140764838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126022517 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100346536 seconds)
  done (took 1.906210211 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102277303 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.158589953 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135829084 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.161005 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.150196063 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.16519705 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119731486 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.127464809 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.153500034 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112273682 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.158542245 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184347064 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.103129879 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140665718 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.16381125 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102776896 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.165373059 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129598281 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.109720886 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.160801494 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.134250237 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.125365937 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.141747724 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.129728573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.12423175 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.130761772 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.197925181 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114396754 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129453894 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.135203259 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.108534056 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.200571495 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.149520416 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139397082 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.100523866 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15742969 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.150886281 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107441187 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.153573415 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133760761 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.124413264 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.135171045 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110242525 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.133999573 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.136149742 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.118260693 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.141084025 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.136890277 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.108833101 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.157643001 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114036807 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.151860372 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.130788421 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.107109036 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138933787 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109848059 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.143668984 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.134389082 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132140886 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.136456026 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.156443774 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130136834 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.15146683 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.156310779 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146931275 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125305393 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.150888128 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.108900546 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138056203 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.136997127 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130396118 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.132384341 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139771867 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.119015424 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138493054 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.159157341 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.131354119 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133908994 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116345185 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134371299 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.134459871 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103856015 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.145747481 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106421782 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131171489 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147395011 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115341427 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.133956412 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106906934 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.15037301 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.132948107 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114615799 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.141168178 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.133221423 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118595354 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.157735674 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140603248 seconds)
  done (took 14.10965796 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104734875 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.130868899 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109671419 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131477781 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105182081 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.131833651 seconds)
  done (took 1.708910442 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.134411896 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.136080987 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1474528 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.111642491 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191132739 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.156364652 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.159712948 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11350706 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.154200626 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.148321295 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129917389 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.159662198 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.157011009 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.14007668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.133457562 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.140827851 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.159800319 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.108562619 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.146915024 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109371621 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147813443 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.141643837 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109875186 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.153335805 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.140288963 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.113764493 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141188668 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.147456308 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.119205056 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140045578 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.141039193 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11330757 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.13817536 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.139848807 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134246357 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137633823 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135676806 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116454174 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139104028 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11485629 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.159025297 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.135677252 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.144551835 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.116608971 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141483098 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138656401 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.115897538 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139739569 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.16012643 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.115597158 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.143423135 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.1390018 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.114075364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.142430797 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112073754 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141703452 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.142839904 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.160603787 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115250442 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138556918 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.110567669 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.141652926 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141360549 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117531714 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138354352 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.142811505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111550212 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138233429 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136270366 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11362939 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.142316563 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.136040982 seconds)
  done (took 10.78652552 seconds)
done (took 39.387248589 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 9.4114413 seconds)
  done (took 10.403875035 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.872008039 seconds)
  done (took 1.866476494 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.928286672 seconds)
  done (took 18.95551741 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.557274574 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.639889373 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999765265 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181176364 seconds)
  done (took 3.373666928 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.998495113 seconds)
  done (took 2.015518887 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.327607151 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.280335384 seconds)
  done (took 1.609531525 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.858455938 seconds)
  done (took 1.86810462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.598802026 seconds)
  done (took 2.603816616 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.371574084 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.214994594 seconds)
  done (took 1.604935604 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.597438023 seconds)
  done (took 1.610651959 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.874565659 seconds)
  done (took 15.890599006 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249624179 seconds)
  done (took 1.274026678 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31812736 seconds)
  done (took 1.335472245 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.738780218 seconds)
  done (took 4.755578552 seconds)
done (took 70.166100673 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114719494 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.145237234 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118330488 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142665829 seconds)
  done (took 1.531027967 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120454593 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.140487982 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.116961709 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.138445853 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.148977962 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.113829792 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.137609105 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.145594933 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.112822913 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.142692695 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.112810167 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.139289316 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.141366641 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.111233702 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.137090564 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.114610972 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.14295961 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.140432609 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.113022234 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.141162441 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.111649109 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.140384375 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.14271907 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.113148925 seconds)
  done (took 4.140427601 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115331172 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.135779398 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111316953 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135279821 seconds)
  done (took 1.525480112 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.11936557 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.154131434 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152949976 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.119849308 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.153887887 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151757704 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.110758637 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.135955451 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.110868537 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.145535602 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.109403466 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156257683 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.153227505 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.106074057 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.148157748 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.129482607 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.105814464 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154198091 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.119386151 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.147196477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.135340881 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119448841 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.142612423 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.149414044 seconds)
  done (took 4.255484951 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.222844335 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120828149 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.15922097 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.189353421 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.161490569 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.106961321 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.161484528 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.143490358 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.111896248 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.135236078 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.107708704 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.18789282 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.143832675 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.138858168 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.109841017 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143251833 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.143101793 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.116423712 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.138086297 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120978311 seconds)
  done (took 3.884887952 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.114924225 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.135896659 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.104092495 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135433075 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.115116581 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137891468 seconds)
  done (took 1.776214361 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104329699 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.129830781 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104547022 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.103721775 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.135092342 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104157261 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129193673 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103763892 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.131593876 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104237275 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131607862 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10284497 seconds)
  done (took 2.412038778 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.232691571 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.131984569 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136473687 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108739966 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.141003643 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106993646 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.151579118 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106889532 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.21824727 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.108716119 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.15064741 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.189475648 seconds)
  done (took 2.817679559 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226997366 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113681017 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293585382 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396723124 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176036792 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184943385 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.298728752 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183447633 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203913726 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154158714 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248263357 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147237086 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171566907 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197438141 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157935707 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.203696383 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192917409 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219063441 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166775998 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261495594 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182857934 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18599537 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209254867 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170828518 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156791529 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176628875 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.109166251 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146566116 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190460324 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188434548 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192234089 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165984628 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15601106 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218040778 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259533478 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195315165 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.350013353 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125351335 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.210707496 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.236288706 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296793606 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132747306 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242623734 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173779847 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122325032 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199406994 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174151076 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.226950426 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.123046189 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160712368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202501746 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192553712 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.228454529 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128131079 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345518141 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164824756 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163592874 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197681187 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207901434 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218447781 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185673655 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.141177283 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204113176 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20957622 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226023243 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135329035 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.212127747 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115141604 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195195466 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25120964 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196516276 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187405993 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.200716868 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151920529 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184003953 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197469205 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171499659 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198273151 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17972192 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.140164835 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168800756 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127399775 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144994433 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204542426 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113784108 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260046037 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15326576 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.306558341 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225740298 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177200871 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180641999 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181957252 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185902899 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165000417 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.137110725 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163881275 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.18938812 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175660532 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121619886 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176448902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164845778 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.145036459 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170809265 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.113305837 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17784058 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.152522977 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186840079 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183296316 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.147077322 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155574696 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169525789 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177280862 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188041405 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24360349 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122663378 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150994926 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222942856 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177282114 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.154834409 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204384554 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215451984 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.191434823 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155586028 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186525917 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242084286 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132611356 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244991046 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132285476 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152452348 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170033578 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177896441 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175230871 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.174564677 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119084008 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170741767 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250176258 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.117557103 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155862489 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194069602 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145467382 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118401572 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162898771 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154963113 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.160850568 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.16895503 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.128246378 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174083023 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179784847 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172068381 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177069216 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160993017 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21032673 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151717102 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.180952854 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166081588 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.108263912 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.226249102 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21270998 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119956068 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23584146 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187718431 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215816666 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182589356 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14996393 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200753155 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148731045 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.109933245 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184176326 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17908232 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180960383 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.238177244 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212322745 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.185429644 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172350396 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167311578 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186810665 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.203316988 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174033914 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.164946243 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182273778 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184923599 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.141032577 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.114016051 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.14545641 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159452906 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120575544 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151400406 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19971808 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182038151 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235415051 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180970928 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129166947 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240314259 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.115914052 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183512817 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.191849191 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158138833 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213218264 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237851043 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185940035 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132778419 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216530978 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.109918251 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144262737 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122506015 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213675674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123808183 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153324901 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162634402 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211314142 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194963219 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168039652 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249285481 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18917445 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221599204 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.141580927 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.154354655 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199227234 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176872452 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.206672596 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151911255 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17996549 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207080754 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163456931 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214737409 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181531817 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188584672 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249562353 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.175799866 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120740134 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168686768 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187479849 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159299883 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191530077 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165613397 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125982667 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172676722 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.154833588 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145646917 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199870607 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162460501 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198182991 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186047469 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220954417 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116826482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162223621 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182515585 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165337754 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10799808 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189423788 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244245101 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162776149 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178431103 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204714891 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119677822 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.365793143 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220178998 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204858538 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156596493 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162445128 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181063942 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189079873 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183315475 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204167201 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163264401 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200584477 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178610607 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.162017521 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124833358 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166336761 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170594194 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171750249 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15210896 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17108056 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132374624 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231407466 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134254134 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179275607 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184986282 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.166167176 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174950873 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15977866 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229994848 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178293986 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198081863 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.175906042 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195831274 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207848063 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144118266 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118615855 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.146148261 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203536199 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152604164 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178689029 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203290073 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217168037 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177671446 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187235565 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157510371 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.143302595 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180440167 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13786331 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248439004 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162144634 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156142537 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219721001 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.171474506 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1199012 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184310269 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33164176 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136395283 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20131689 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.140538423 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304386896 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145106097 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121968985 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189632965 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190231582 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.151520321 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.205343596 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186693643 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164692769 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189383805 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156548089 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21036886 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228098364 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189112561 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223826344 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133096779 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17643586 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181604583 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233910532 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132517071 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.164378845 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183124691 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212668992 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.213535564 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.153130363 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183832505 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183763143 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180195071 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192832224 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154037514 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208085458 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151010644 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185175651 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158881361 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114545414 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17687676 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.231607076 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124247546 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232348124 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148559631 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152590238 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146288356 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16972453 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177815597 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133708634 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.148991171 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198828891 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.147058591 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184124462 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202874394 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119839905 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175470412 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166147209 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150916471 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16187635 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134379178 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155531937 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.19142306 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212327262 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.150676806 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206660687 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191694687 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184754376 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179270313 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163813827 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.680691774 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.118347351 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211875833 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166594677 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206870587 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168761481 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186632424 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182003582 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168742308 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186987639 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169344183 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240590407 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187475327 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17754456 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150856039 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136092271 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166687055 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.150828529 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172400589 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182972133 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133549339 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15773372 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176139444 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167134705 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.164813105 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12938247 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246334627 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138354904 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233022407 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205720488 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128427325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187663134 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226835373 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119512096 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181545673 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221898743 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132862676 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169302037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.150384791 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154509897 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199513704 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.114930308 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181118046 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180454281 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183266658 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184431039 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155162127 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179647326 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131219725 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181134961 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145873878 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174656007 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177188311 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149961939 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.117650349 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177358643 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179944352 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.179550854 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145069103 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166290064 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209775471 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.146885043 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153292508 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303058299 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180469906 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213824784 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.17368952 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154689632 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134003267 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174328818 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174424438 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179716373 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.148940598 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122543442 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.151273077 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.203783791 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.184449663 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178575215 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204396438 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181366291 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209563963 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155903575 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285211833 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129501243 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175080754 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150382071 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.148611055 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130670079 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154220538 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166056629 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211813972 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200767159 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.173879958 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.165984354 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146890569 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.118151775 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153684754 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191964894 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176510443 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179368842 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13315721 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.139125753 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163431135 seconds)
  done (took 87.351749124 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167254209 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.162662097 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.17044048 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218306113 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187780453 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277690317 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227154516 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248438906 seconds)
  done (took 2.791152344 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118307085 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156785443 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.161365923 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145663751 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.144912108 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.369062343 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155973543 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.115147788 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.202992017 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154872989 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.141147488 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.6463515 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.142014948 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142896436 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.135942378 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.115578251 seconds)
  done (took 4.174225123 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.515880122 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.578507327 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.281600609 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2758511 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.254763539 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.201543467 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.796449714 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.186037065 seconds)
  done (took 13.225178793 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.147542801 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164170489 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.307784808 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.164468221 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.179850602 seconds)
  done (took 2.105279493 seconds)
done (took 132.9992794 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.113417392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.145007761 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.113432624 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.146831209 seconds)
  done (took 1.642742032 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.127090197 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.127926281 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103697745 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.127597052 seconds)
  done (took 1.625446996 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.514168907 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097903357 seconds)
  done (took 1.778744771 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137840529 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157899451 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166979677 seconds)
  done (took 1.61001172 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.120040704 seconds)
  done (took 1.257789714 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.116012801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.15400567 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138550883 seconds)
  done (took 1.55474004 seconds)
done (took 10.607132969 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149954901 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.454905631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434298459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127620442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.742900354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426260504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.065635198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177788979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186296295 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138734847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12854568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.717940017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.044273151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.359039563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.029426286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.452281158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.721981572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111578672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144592827 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139958364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.043717053 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13769812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110626082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140611577 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.690257978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.443220672 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109416599 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.495741654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138505168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113905153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42873393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109332991 seconds)
  done (took 17.847803948 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153261655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202927246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147164321 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110737478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.143396254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111309301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149970346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15345409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202962967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109202142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159507682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108322261 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.145799402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139573251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132584622 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.138812423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111930917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141303696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116261648 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141412116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15892639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109065899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140962659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111387938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.139049347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.122034247 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139723617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.151357644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109877256 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144187557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115572236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139847263 seconds)
  done (took 5.554464506 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158981365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.212692719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14741234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.173803524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.161723318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143131624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226425476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179207217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205433315 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138568268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130007849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139363698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147142856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140501389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162240809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109445242 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141832978 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112622087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146276624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111620162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159148726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138238824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111162032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141197174 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109179763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.153761334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109725489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.152151323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139705734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114947724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.145276434 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110719933 seconds)
  done (took 5.82497381 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.118206345 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.149107581 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1269936 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.157345725 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.112294001 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.148830594 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.148805971 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.112980591 seconds)
  done (took 2.234847528 seconds)
done (took 32.606961687 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132082298 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.153475637 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.124041509 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15039809 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.144710998 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.140119119 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.122011639 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.140239446 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.11890134 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.156857603 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.139074171 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.112155762 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.154536966 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.115210754 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.156547552 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.119228984 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.163261936 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.155970586 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.110885867 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.149492884 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11127922 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.162034563 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.116609696 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.141523646 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.135372163 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.143482563 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.157992233 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.115262159 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.145343131 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112154756 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.155596962 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.116053712 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.141500284 seconds)
  done (took 5.658769898 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.138092901 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.186465078 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.138037486 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.10885904 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.181920941 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.107553519 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.16818016 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.138863156 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.108324871 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.138872064 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.108023212 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.166058713 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.141744871 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.172970863 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.188355001 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.177017474 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.135636878 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.179115412 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.163366279 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.148875952 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.171731753 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.138461974 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.142407848 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.181429616 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.138305843 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.107518968 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.183664337 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.170725647 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.152434382 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.173920574 seconds)
  done (took 5.714755121 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.119485419 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.158775403 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136861044 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212830952 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.183826409 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156313074 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.123598613 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.160668623 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1382696 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.142429427 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.152428539 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.143046419 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.158637069 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121705977 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147001423 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.156050494 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131288742 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144908104 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119088833 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162279661 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.128643901 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.156435437 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.158110856 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121182338 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.142453436 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11992705 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.147186212 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155005786 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118214799 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.151374161 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11446341 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.146625675 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113494398 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151951542 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.145476757 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118532487 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.163290636 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120397025 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156871396 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177206818 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.120323684 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146419581 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.16476501 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158810908 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143548618 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.118104523 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.153162503 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.152212968 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110029603 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.161640493 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126371347 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143689804 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.158410087 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110443515 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.14140735 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11875525 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144129912 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.113694331 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.151712114 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114998523 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162872675 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.15190177 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119034548 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145593964 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.120695967 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142375845 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111169117 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147751826 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.167191078 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117020505 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175008512 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111567335 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.148348633 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152356742 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.119199276 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151958095 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.110250037 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15071026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120440666 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147743937 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.151800354 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115457948 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.146419783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130557434 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.158425426 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.150211164 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.117319899 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15006979 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11520341 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145910353 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125792312 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.145185741 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146408536 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.122099944 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144068493 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114102578 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.150402832 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.11544894 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.14177409 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131988636 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149597729 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141572874 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129688931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.144273431 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11516867 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152223262 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12406612 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.143388199 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.147386003 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.117972397 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.141873803 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117302435 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145977147 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111352459 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.156825432 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.122836809 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149261968 seconds)
  done (took 17.501873003 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.26435849 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.245156556 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.250928838 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300397521 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.166558684 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.173131342 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.241369931 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.19699663 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111819084 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183108837 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.234344813 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.20527233 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.111254304 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.177638349 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244440477 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.337706382 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177107644 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.186272931 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183980034 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.166058193 seconds)
  done (took 5.339073508 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.127176999 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.182834563 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.172173299 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.17035449 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.112310656 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157664534 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112009441 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.158284365 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.144591424 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.118702853 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.142591481 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.121049526 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.145138352 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.115546794 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160835091 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.161042278 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.116540674 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149891593 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.160916324 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118304675 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.143680978 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.164575525 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.153992203 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142649778 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.152513796 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126514601 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143358966 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.15148631 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.109313723 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.142825107 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118170016 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.163624723 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.119889471 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.145021542 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.150352276 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.113731833 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.140731222 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.113890091 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.147179537 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.115707828 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.161276445 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.114815949 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.14473983 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.111874713 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.153109839 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108867281 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.149488664 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.150269425 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11826319 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.153281691 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.119382032 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.149337093 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151612131 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125229663 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.14188382 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.123414242 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156707508 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.150196079 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118719907 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144555679 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111073791 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.148113419 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.110939463 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.149215201 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.118762283 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.159873191 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.153982583 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113267326 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149151293 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.148622956 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116397106 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.163303285 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164471178 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.110945893 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.141304678 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134240052 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.142312344 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100728854 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.154578933 seconds)
  done (took 12.126190806 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140514312 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.145898019 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131430989 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180383701 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.15920311 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121795408 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.145032337 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132991998 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.152217605 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.121612552 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.150964588 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.160119014 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.141711622 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.157638212 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.114226379 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158379076 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.15012667 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154469718 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164097953 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.176610243 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124251137 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149891635 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126645652 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157605119 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.178336432 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126006144 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.178680256 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.149648405 seconds)
  done (took 5.342206407 seconds)
done (took 52.84081144 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.29876199 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.501306921 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.254465085 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.255235568 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.265845282 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.280220896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.275141925 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.448139523 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.019876472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.244769023 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.254822823 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.255835497 seconds)
done (took 28.534142899 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.372814114 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.855976253 seconds)
    (2/2) benchmarking "String"...
    done (took 1.579548766 seconds)
  done (took 4.617059306 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.254344635 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.256126214 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.500645983 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.255942222 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.273282939 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.27493962 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.255761966 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.258214442 seconds)
  done (took 16.257683872 seconds)
done (took 26.681595189 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.314326254 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.46109727 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.523840578 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.274658322 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.256468799 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.255675907 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.245608108 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.301761246 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.260573452 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.245494305 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.276593117 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.518168527 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.261815783 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.643624347 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.243925921 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.259167494 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.280714783 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.50678409 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.259357181 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.319493903 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.261703863 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.244620631 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.276055621 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.278899822 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.270470621 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.262683403 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.284235016 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.245048511 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.450473478 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.278762885 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.304372449 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.257810842 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.294289487 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.261100879 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.391554426 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.292974509 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.445838344 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.257002242 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.253328393 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.259055902 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.450251121 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.681330543 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.270549492 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.258661088 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.259825623 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.343237543 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.247050089 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.004237267 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.259181536 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.252361851 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.269876745 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.648239184 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.265919544 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.277228648 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.259416051 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.49802178 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.26586491 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.318244291 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.290133887 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.277067601 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.25963172 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.27806829 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.314918935 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.277194418 seconds)
  done (took 147.290227997 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.25925538 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.263408388 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.264138608 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.328859256 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.264096859 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.264220247 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.259034648 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.258785143 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.262817923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.29196058 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.264503782 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.265625014 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.265819643 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.239552766 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.260695983 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.28102636 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.265479535 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.263796357 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.283467042 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.264624062 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.267593665 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.267472291 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.285654487 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.266456523 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.272059675 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.347907407 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.324553469 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.276622783 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.263567908 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.261950333 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.269337974 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.267842358 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.932541778 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.114165129 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.27075428 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.297729202 seconds)
  done (took 82.543616953 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.260978536 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.26201437 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.262049034 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.29615552 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.262484566 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.886054075 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.887344114 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.998708585 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.703314588 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.767689266 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562867743 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.2627798 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359294148 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.278594587 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.264359378 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.278969741 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.290262223 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.269268568 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.263122472 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.885805461 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.279205383 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.299136172 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.447142084 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.281724878 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299108554 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.665941791 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265066716 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298460967 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.604038613 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.316567448 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.265145191 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.694713999 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.215603528 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380602601 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.266219259 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29880184 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.263738339 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.548959678 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265210759 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.266141649 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.266929842 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.990811569 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.267104842 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.882954303 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267525947 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247153192 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.262510801 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.262967296 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263077934 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.342996099 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.078708642 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.286091492 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.264042352 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.263334934 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.26194341 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.262707163 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.26451972 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.296790308 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.292599681 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.380552037 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.262564124 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.26631202 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296674675 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.26138979 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.469104233 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278657027 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.566149085 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.320879708 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.477063528 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865403727 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.263328184 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358379965 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383562146 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.259902766 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.260964312 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.260120257 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.258794309 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.372818425 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.26105781 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.693064351 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.441099767 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.27741641 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.714256689 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.362900961 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.260149413 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.673840751 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.263347059 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.260113449 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.260990404 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.019629783 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35910528 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.261159661 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.260389158 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.261175042 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.69311076 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.864232077 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536149989 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.264112316 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.659458493 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.261290353 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.702497838 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.83883524 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.995562176 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.265860077 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375562066 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.441286718 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.278475347 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.262825482 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.260652154 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.715325462 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.265404764 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.321193121 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.261009505 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.662226213 seconds)
  done (took 374.459995874 seconds)
done (took 605.472479321 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.965415841 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.915208384 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.051041523 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.033344712 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.907469942 seconds)
  done (took 11.058102267 seconds)
done (took 12.240337246 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459683907 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.460554541 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.32582094 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461870599 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296328734 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.480108303 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44161292 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.28532337 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.370089252 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.34827568 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.373012495 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.318188278 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298649564 seconds)
  done (took 19.106358148 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534539424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.263448245 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342548114 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529427321 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301630562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529006501 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.562780327 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.264432545 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41423092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275172918 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275405348 seconds)
  done (took 18.480893779 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518508638 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.262421853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.329752159 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518689323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304131113 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530849338 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.562747932 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.263013818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401743508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276393107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27449137 seconds)
  done (took 18.430996566 seconds)
done (took 57.2022109 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.30309926 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.432433566 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.291434462 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.272645975 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.27238288 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.274133831 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.275444358 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.271337106 seconds)
  done (took 11.582153325 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.271486775 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.267665362 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.267722895 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.270759054 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.268497682 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.267561984 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.27027725 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.268664939 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.271307477 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.271615029 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.272614517 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.269406969 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.271028832 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.27190339 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.270740447 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.268922026 seconds)
  done (took 21.509062153 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.271525117 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.268967858 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.269473758 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.268827087 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.270013572 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.269834639 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.271505909 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.268311385 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.270225687 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.269584192 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.270298826 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.268764092 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.269723491 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.269132793 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.269187773 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.27069078 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.270026427 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.269788603 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.27273115 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.269834601 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.269214887 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.269788513 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.26949469 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.269271283 seconds)
  done (took 31.668636357 seconds)
done (took 65.94456883 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.278237128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.279951832 seconds)
  done (took 5.748631436 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.33408249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.335235145 seconds)
  done (took 3.861801124 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.273375896 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.272151318 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.273121723 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.279912835 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.272869633 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.273183136 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.273815283 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.272454372 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.272651877 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.272318706 seconds)
  done (took 13.926679014 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.284221843 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.273819243 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.272179779 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.274455767 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.27456284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.272844912 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.274627043 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.277833358 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.275674491 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.272980266 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.276304304 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.274554965 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.275002891 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.273533211 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.274951186 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.273527629 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.272073213 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.272505838 seconds)
  done (took 24.136820724 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.288824292 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.295902896 seconds)
  done (took 3.777716863 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.41230947 seconds)
    (2/7) benchmarking "second"...
    done (took 1.315988159 seconds)
    (3/7) benchmarking "month"...
    done (took 1.38923522 seconds)
    (4/7) benchmarking "year"...
    done (took 1.379385547 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.315064899 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.294290226 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.31430154 seconds)
  done (took 10.61355657 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.278303308 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.469394592 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.574625078 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.850748672 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.276493032 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.280846795 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.154532216 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.28052361 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.281495041 seconds)
  done (took 14.641784348 seconds)
done (took 77.894285069 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.267309497 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.328677048 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.280752984 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.283138124 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.568442189 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.30175473 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.271792459 seconds)
done (took 16.492950732 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.268527824 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.263416885 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.263304729 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.275085719 seconds)
  done (took 10.263436005 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.284152686 seconds)
    (2/2) benchmarking "read"...
    done (took 1.620224216 seconds)
  done (took 5.102470145 seconds)
done (took 16.556801183 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.274276119 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276179824 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.277371218 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.274764494 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.276852944 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.277033653 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.274802835 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.274608825 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.276579581 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.277868245 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.278936758 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.278911532 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277493223 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276135615 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275421288 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278189541 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.275456995 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275595453 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.278106629 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276096402 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.275704363 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278731559 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.276045129 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.275763837 seconds)
  done (took 31.833429408 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.278680202 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.276927675 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.279602734 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.278044365 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.276085338 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.278467023 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.278921749 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.278464434 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.279626783 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.277871241 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276410984 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.276784118 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.280438265 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.277304565 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279551657 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.276937955 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.279317494 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275825538 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277767833 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.275708228 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.278301408 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277858515 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.277359044 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280541365 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.277976752 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276208963 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.278288643 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.276134008 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278959215 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.277479347 seconds)
  done (took 39.534542884 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.284789434 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.288009657 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.278286747 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.279773789 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.280573839 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.280000821 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.279638392 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.281033294 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.279235813 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.279024098 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.280983488 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.281392982 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.279799666 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.279139487 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.279468936 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.280757062 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.280667596 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.280004124 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.279049279 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.281145201 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.279712006 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.281019657 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.281494715 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.281177648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.279559696 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.281227114 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.281780509 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.280924847 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.281826571 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.282146978 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.281655772 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.280895787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.282033132 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.2809843 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.280675769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.283292774 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.286888287 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.288917351 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.281462779 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.282657396 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.28239284 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.284197011 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.283097372 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.284019437 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.282820728 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.284427807 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.283253166 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.28399617 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.282742223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.283917439 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.283618012 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.281548481 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.282936094 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.283306498 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.284149157 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.283620248 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.28389053 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.284642552 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.284831844 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.285812992 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.284535181 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.284348474 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.286074218 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.284598469 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.286163459 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.284787697 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.284554238 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.284590389 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.284722757 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.284864913 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.282697683 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.283684633 seconds)
  done (took 93.541862754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.284959026 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282382416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281862561 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281770889 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280932989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28357718 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.281697811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285003228 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281933604 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28354652 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284696815 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281558303 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280052746 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284796022 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284238823 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281186106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285143064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282673668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.283719532 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283725297 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285000822 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28307829 seconds)
  done (took 29.430457414 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28589568 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286326095 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.281226988 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288163301 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283188646 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.286196426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284251693 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286929339 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284958419 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282305542 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282182166 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283720442 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286641919 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281370552 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281596141 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284535693 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284689182 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286029151 seconds)
  done (took 24.32167888 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.284633864 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.28305678 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.284515467 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.28231544 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.283351684 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.286035552 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283602607 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.287144413 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.287311462 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.284132024 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.285411178 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286318069 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.284621833 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282676561 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28577651 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.283182344 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.287794386 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283663357 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286207039 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284376877 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283900274 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287388567 seconds)
  done (took 29.471111096 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286558099 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285435918 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284145054 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284082227 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284015987 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286679082 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.287098062 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.284450956 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.288182938 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.287235423 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285360287 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.287949977 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.285502646 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28518798 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.284527037 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285138589 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287805259 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285035933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286378673 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285187073 seconds)
  done (took 26.919775062 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288005449 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287957319 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290256677 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289691732 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288638836 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288163263 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288546491 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28847566 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288656029 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289887453 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288347746 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288986909 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290423595 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289105182 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289289284 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290076428 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289285474 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289547467 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28957863 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290080045 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289820488 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288897841 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2906444 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289686497 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289605748 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288968623 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289978166 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289497285 seconds)
  done (took 37.305825305 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290059069 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289856604 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286253658 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.287256016 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.286966498 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.286896844 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.287775973 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.28724316 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289538394 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28821726 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.289727964 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.289830274 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289613881 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.290983025 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291276444 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.291114319 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290401079 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.289255407 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287678847 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28802869 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.291274673 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291707261 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.291506357 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288740328 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288059269 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.291381564 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288431439 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288856527 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289667671 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288458078 seconds)
  done (took 39.884978368 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.335647734 seconds)
    (2/2) benchmarking "in"...
    done (took 1.334421797 seconds)
  done (took 3.87770612 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.288764244 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291169025 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.292828875 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288747884 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.289241003 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.292034407 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.291899281 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288407402 seconds)
  done (took 11.531179753 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.293072267 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.290849311 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.291192251 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.291572945 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.29125871 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.292697576 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2990923 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.312549324 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.294390597 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.29461111 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.299642626 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.300446135 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.296216285 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294664978 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.293263766 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294763467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.293020184 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.293788424 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.292104732 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.293130679 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29283307 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296625925 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.297527981 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.29136319 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.295355141 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.305021512 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.297912938 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.293746166 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29472274 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.297172765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.292791918 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.290261705 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.293207443 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.293703351 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.294557313 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.292626807 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.303708471 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.31794305 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.300970316 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294963886 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.295537335 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.290673917 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.296670427 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295734044 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297031571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.294632987 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.294600993 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.292696191 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.295222144 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.299088696 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.299479385 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296481192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.291652012 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299590695 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.297860004 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.303775526 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.315690314 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.299344353 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.305326735 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.306676361 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.311766614 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.321247057 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.298614925 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.296229504 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308254684 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.319863274 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304432795 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.314724111 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.293823041 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.296613343 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.303244362 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310604401 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.32305279 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.29568537 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297435309 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.296808823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297426132 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.296477108 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.306603033 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.320614667 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.296331678 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.296621031 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307761024 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320320641 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.297953143 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.296499463 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.29717184 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.296501775 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.298914853 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.309663609 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.319130662 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.297104014 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.298117058 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.297497846 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.299160431 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.297076647 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.297222028 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298347973 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.294814327 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.2986964 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.297989894 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30224784 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.306843695 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297103904 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298218363 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.305994992 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.298865072 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299673454 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.305474029 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.299192377 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.298985863 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.301841226 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.304758321 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.296013665 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303189569 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.307847582 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.298100726 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.300794519 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.297767497 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.298338185 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310515542 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.32412423 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.299811524 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.299889308 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.305427825 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.309006661 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.299554936 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.302890706 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.301840161 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.295885497 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.297610784 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.301216921 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.300220992 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.300623393 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299457942 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301868196 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.296454937 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.301320724 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.300526024 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.302019886 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.30252432 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.300798525 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.305106993 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.303379681 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.301915354 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.303566025 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.309372468 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.300738388 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.304313556 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.303809353 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.299719453 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305988123 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.303789331 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.30201293 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.303731127 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302601799 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.302025487 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.301949296 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302004398 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.303170901 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300962071 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.304844841 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30682114 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.301128723 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.793122578 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.302954624 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.299298784 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.302241249 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.301079444 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.30253339 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.303038868 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.302768862 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.307037816 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.311253075 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.302122512 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.303822759 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.30564693 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302621478 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302703925 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303228705 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.307909048 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.313668779 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.302849674 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.310703196 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.306555607 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304540198 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.304080294 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.304940928 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.303645665 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.304583946 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.308095963 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.311097825 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31816426 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331384103 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.305653941 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.310240623 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.307063369 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.309601934 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.30870212 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.304744288 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.304118103 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305147595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.304339664 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304120338 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.305688743 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.304123256 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.305354758 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.305906159 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.304125934 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.305329945 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305682321 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.306237584 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.305297354 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.303149428 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304325921 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.30558387 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.30702429 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.302917872 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.305461465 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.305589944 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.305118228 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.306908174 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.313300047 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.303134296 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30831305 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.308111365 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.305339218 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.30590464 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.306026954 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.309601734 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.307024019 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313213291 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.329706901 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.308206959 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31360409 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.327622655 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.305250128 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.308969021 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.306315432 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.304440217 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.31222158 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.313705236 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.305338098 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.306253459 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.306364294 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.307504506 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.30707203 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.313464089 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.305827761 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.308585903 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.307701435 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.309223618 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.304359626 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.31007109 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.308598415 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.308775134 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.310836807 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308652147 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.306564335 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.309850555 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.30688202 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.307378895 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.308915158 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.313733905 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.315864972 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.313452934 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.309936717 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.311462536 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.310377905 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.313244938 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.309989521 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.308433923 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.310318425 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322759829 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.335353548 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317253627 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.331230706 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.308371881 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31673066 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.332156823 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.314517281 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311672914 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.311343331 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.310435699 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.311102148 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.310922893 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311866138 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.312006773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312568188 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.313288264 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.314710073 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.311845952 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.311639306 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.310744983 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.31134309 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.310697321 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.313457117 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.310769024 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.314656877 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.314421687 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.31192492 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.312194101 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.319127448 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33290964 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.315641437 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.312409825 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.312918224 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.312753142 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.313916313 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.31238584 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.317268625 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.318647363 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.317596979 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.321385385 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.316474692 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323570326 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.313284261 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.31942006 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.318282676 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.310244797 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.313798501 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.313204104 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.313048759 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319875835 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.331698519 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.315750886 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.317765347 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312530768 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.312092479 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.312871798 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.311877164 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.312576995 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.312317181 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.32185928 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.338882873 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.315683202 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.31521142 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.309781463 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.315034917 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.312993122 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.3136744 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316822936 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.313769832 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.31517269 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.314020977 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.314620997 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.313523193 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.314117193 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.314651102 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.312233999 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.313748717 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324582173 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.338487902 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.316697145 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.313122913 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.321803253 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312775936 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322053928 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.333931426 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.313341483 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.312900545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.314473331 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.316365714 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.314194296 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.315764027 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.313491879 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.316241348 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.318019072 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.31240659 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.316727018 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.314884576 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.315249625 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.315831129 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325611947 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.336068209 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.31736781 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320790912 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.311261332 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.31696872 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.319314707 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.315519704 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.314430583 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.319729557 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325700718 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.323452909 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.316339096 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.315433124 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318300275 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.315324312 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.316566124 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.317249222 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.314802183 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.3150245 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.317106169 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.314022681 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319220382 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.31694552 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.317141954 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318029144 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.318236091 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.327605432 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.316860161 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.316556649 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316556729 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.31828361 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.318298481 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.318293648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.315315175 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318880807 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316752421 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.318195447 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325856792 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.323022639 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.319248949 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.317697985 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.317624175 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.319233372 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.318738105 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317017074 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.316906728 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317120482 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.318506497 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.316774207 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.318235927 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.31888166 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.318608047 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.31912568 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.319080635 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.321767781 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.326842887 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318479898 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.315319383 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.317012844 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.318253188 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.318832468 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.31934139 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.327531934 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.324034956 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.330797434 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.327149055 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.321915797 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.318964493 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323604493 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.326586822 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.319113423 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.321755703 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.318381864 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.320303403 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.32025472 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.324320245 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.318899619 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.327018691 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.320844607 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.321491395 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.330847011 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.343991963 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.318563796 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.321769544 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.32463644 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.318641214 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.317280697 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.319030032 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.321212485 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327467265 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.34412468 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.319897834 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322654211 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.321022129 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.323730515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323414414 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.320383963 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.320570785 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.318948922 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.32166797 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320426039 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.321111002 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.319920065 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.32079233 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.320911468 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.327225522 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.328955255 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.318255383 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.324765318 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.322770386 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.325795293 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321756879 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321968899 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.31822244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.317751852 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.322038819 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320220109 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.321298982 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.323991146 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.322573332 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.325172197 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.323956374 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.321485207 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325909615 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.333443061 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.329265844 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.321284371 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.323116925 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.321493469 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.325223116 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323379213 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.321516527 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322817867 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.324465782 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.322178366 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324331387 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.323411694 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.327848484 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339906181 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.347306618 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.326873242 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.32486726 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32598903 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.326205169 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.320816456 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.324928443 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.326778221 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.329508589 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.331529114 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.323993403 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332792018 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.345923626 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.327001319 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.32880285 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.330464549 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.332633899 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.327578605 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.324882232 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.325437503 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.333040724 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.34175764 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325950535 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.335844676 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35740858 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.346455079 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.324866238 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.324168016 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326169141 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.324093015 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.328629713 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.326077931 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.326244902 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326970103 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.325525322 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.328022385 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331787295 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.329315816 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.328019137 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.325815721 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.32640373 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.326470318 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.322608976 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.32617115 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.326121672 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.324368593 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.325823653 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.326325571 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.326669684 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.340015842 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.354469282 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.327903224 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.327356209 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.325902031 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.330216577 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.33342147 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33890838 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.333453308 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.326462047 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.328216356 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.330320794 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.328355168 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.326629971 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.328337087 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.329499953 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32953877 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.326247449 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.342414508 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.353400884 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.334198167 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.33121511 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.327401554 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.329237074 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.331081813 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327600771 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327987751 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.331528431 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.33335731 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.332687261 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.329966391 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.329226338 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.3343519 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.337275922 seconds)
  done (took 784.580264671 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.328962156 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328588766 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327428978 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.327543484 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328175751 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329110515 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328459706 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.32617843 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.329463341 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32747211 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.328351337 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328364297 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.328023786 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.328166507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327356096 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328036682 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328828661 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.328260726 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330079452 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328450789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329227918 seconds)
  done (took 29.137367084 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.333542037 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.328975702 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329605894 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.333512314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327953744 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.330499903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.328330172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332359686 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.333657106 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329946835 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.333253894 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331581101 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.329919963 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.329647644 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330052842 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331829483 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.332284312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329378213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.333809349 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.329933524 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332543161 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.329667383 seconds)
  done (took 30.527867921 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.332700586 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.330686111 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.332834171 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.329077422 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.332255308 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.329162863 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.331760851 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.333188658 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.334021388 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.333419105 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.332769341 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.334584129 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.340086077 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.338505841 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.335536926 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.333614095 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.33363673 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.333651261 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.33399092 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.330802088 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.340690184 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.349517058 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.331017953 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.333864561 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.334434189 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.334707265 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.336379632 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.33569669 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.337495531 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.338544071 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.334221968 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.336044431 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.338238571 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.336325083 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.337746625 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.338887111 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.335738753 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.332202267 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.333751039 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.346959036 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.355025977 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.336063544 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.342675552 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.353249287 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.335680979 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.340552213 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.341388915 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.333178918 seconds)
  done (took 65.393559179 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.924881115 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.962409301 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.944240744 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.942517927 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.944784281 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.938814439 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.945625326 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.942214457 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.938456731 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.939230375 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.944454505 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.943062908 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.956205426 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.946997335 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.945094105 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.945945078 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.940887246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.944544671 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.941570902 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.941444939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.941989918 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.946277043 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.943336798 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.954833232 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.944842472 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.93924721 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.943463831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.944419506 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.942634068 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.939350689 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.947166307 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.945576905 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.946339061 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.94264147 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.953882945 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.943429908 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.946971072 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.944424248 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.950786871 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.943546875 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.94925369 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.946317198 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.952260361 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.951029684 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.946559221 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.961073429 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.946358993 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.939074395 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.944459207 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.946066015 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.949772966 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.947420057 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.946453206 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.943939417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.944204078 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.953626634 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.96167984 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.943410478 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.944825097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.945237033 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.9408123 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.950846024 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.947206233 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.948464842 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.94898243 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.944242119 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.947645842 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.960477622 seconds)
  done (took 133.581339902 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340383356 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.339367861 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339568238 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339011558 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.339648056 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.340389651 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.338941238 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.340917007 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340304467 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33936012 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339922653 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.339728822 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.339303759 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.340305918 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.339700497 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.341882523 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.339843119 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.341115722 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340510543 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340870264 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.342351901 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.341850142 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.340594647 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.34076051 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341000732 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.340231199 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.339416479 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.340903804 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33947188 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.341379452 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.340396958 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.341780351 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.340666933 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.33996699 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.340844797 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.341057373 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.340664967 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34081906 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.341045361 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.342693802 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.34112544 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342448921 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.342011152 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.341806638 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.34156712 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.342763166 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.342727564 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.342693383 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.342539418 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.341164274 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.340839062 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343087649 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340328121 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342576429 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.342139001 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.342795375 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34119065 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.341798344 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34224772 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.341729273 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342815205 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.3431744 seconds)
  done (took 84.400449587 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342481978 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343699805 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.34137123 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.339940918 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.342319268 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339136633 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.342236905 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.342942704 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341253892 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.342361418 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34281955 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340016777 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340871096 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34411606 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.339218682 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340627479 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338999189 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.340591242 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34315686 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.339448108 seconds)
  done (took 28.08181423 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.343196387 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.342646993 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.341274375 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34044477 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.343654415 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.340203201 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.344272481 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344915799 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340274313 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342924379 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344027944 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344295931 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342225654 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342103969 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.34372405 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.340341102 seconds)
  done (took 22.738232894 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.341354547 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.345675585 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.34422243 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.344870279 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.341811649 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.342394967 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.345533284 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.342485782 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.342871475 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.344944813 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.345064414 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.346644396 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.344918481 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.345077745 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.343676324 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.344823595 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.344369416 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.342593352 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.346091902 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.344823246 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.34540945 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.343701142 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.346713615 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.34747399 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.344464879 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.344204477 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.343566369 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.344249184 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.34417689 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.346677903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.34282945 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.344119884 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.343622929 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.345943204 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.349029023 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.345581522 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.345914521 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.347745649 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.349030726 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.3467919 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.345031084 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.343187653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.348239507 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.347830193 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.345343441 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.346936181 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.344599169 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.345886547 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.345186743 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.346827274 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.349735131 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.346973535 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.345648916 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.348250359 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.346903753 seconds)
  done (took 75.249420901 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348527219 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.347053733 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.345911553 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.34758951 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.347594922 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.345805787 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.349626813 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.346036736 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345445372 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.349638599 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.346416542 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.350322837 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346121756 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.348764291 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.346046954 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348607814 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.347086013 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.345737349 seconds)
  done (took 25.511461123 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.347328053 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.346289894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.348166073 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.347333252 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.347401476 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.350325777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347112864 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.349347714 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348057786 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.348313621 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348023355 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.349889988 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349422741 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.351009605 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348481164 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347870428 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.352253153 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350163321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.348508801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349313992 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.350266984 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351251825 seconds)
  done (took 30.93806257 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.352049333 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.352560775 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.352122218 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.369287099 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.37120707 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.35198191 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.351278287 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.350733905 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.37498795 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.4072135 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.401404996 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.369496708 seconds)
  done (took 17.666741913 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351098064 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351898376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350717148 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35178659 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351208543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348768051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351382322 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351370411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353044975 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351167376 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349899932 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353334267 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354108387 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34937479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352141968 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354406009 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348803038 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35030194 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350455279 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354699895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349845311 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354102566 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349955225 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349261531 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35057225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350160793 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352365374 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351662129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351354037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352630504 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354130783 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349899439 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354735893 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3516123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353806366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35300286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350738443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354685689 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353229339 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35053375 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354327884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353144998 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353539803 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352285421 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353706952 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352963711 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353111676 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351375735 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350528574 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354978601 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3542097 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351999248 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354462004 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354291657 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355281175 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356344337 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351764928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351822467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355794294 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351993109 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352517839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35488465 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353012405 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352117634 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356950638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352215336 seconds)
  done (took 90.523119277 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353272372 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352285036 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351725081 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353640502 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353044065 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353381539 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354186287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354474727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350981754 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352934764 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354907491 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352164984 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352255607 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35346392 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351961949 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354722008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351778676 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353500493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353787041 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357844289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354507802 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355222488 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35458045 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354991283 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352928177 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356284192 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353234791 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353955611 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352471648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354360749 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354431419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35427247 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355263753 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.35437449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3549762 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356305919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355173118 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354753788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355018406 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356341513 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354671053 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356109992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354454402 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356376368 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355436346 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355112613 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355325727 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355603288 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354606909 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355904353 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356205845 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35617912 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355942471 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356726956 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357303476 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355034743 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359098786 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354350969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356242414 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358910501 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356733804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356578601 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359238748 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356698196 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355278772 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355627442 seconds)
  done (took 90.688368807 seconds)
done (took 1877.863405467 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.523121829 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.476964194 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.359093211 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.371567221 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.359256245 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.379484328 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.371415139 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.358795477 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.359723901 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.35878612 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.359475903 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.546031553 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.413527265 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.359261883 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.359150165 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.455372466 seconds)
  done (took 27.683413111 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.389269737 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.365855318 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.49165812 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.38706908 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.389019631 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.565408677 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.42534827 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.366431311 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.560053412 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.388917163 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.366741035 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.392228978 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.36379612 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.369556006 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.387172575 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.566206133 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.641718182 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.375291656 seconds)
  done (took 30.063464139 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.873171879 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.368224303 seconds)
  done (took 5.512552195 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.384075459 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.364672184 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.365017218 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.364397257 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.355310897 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.373697652 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.364676642 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.359215276 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.373651978 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.50637735 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.368590158 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.373325608 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.385682136 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.364221328 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.361644761 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.404365062 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.552399533 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.362406859 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.359885352 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.37312952 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.365738891 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.485265984 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.41246847 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.36729791 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.503895311 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.362450649 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.372646403 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.372259928 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.545819439 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.363192727 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.365207745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.366506168 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.368037334 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.26833708 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.885668456 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.394062421 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.392382544 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.37235488 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.362617476 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.534222842 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.366692564 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.372626946 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.372809827 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.881828076 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.523556626 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.496889586 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.382951576 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.391900673 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.368395633 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.433036126 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.371068027 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.368834007 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.410907375 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.1910229 seconds)
  done (took 87.391864061 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.361719405 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.358722464 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543068198 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.383284345 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.359866866 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.363096612 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.362514113 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.684471284 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.381406434 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.361317773 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.673535363 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96892793 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.387405574 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.403680759 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.275267915 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.417903573 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.362062794 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.37960824 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.363835759 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.363359338 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935087391 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36605284 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.382612296 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.455031648 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.403991025 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92010304 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.367956523 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.378104236 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.366266299 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.360410226 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930860989 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.38964452 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.420242279 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.361799007 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.660561281 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.790429405 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.736284587 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.369789922 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.412564568 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.364825315 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.387959914 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896121622 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.752630486 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.363450739 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.362298576 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902801559 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.362892747 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.369532217 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.368409753 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.618588739 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.365152984 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.365857159 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.385564528 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.366053053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.363567778 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.467926911 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.435079422 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.913821145 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.364151665 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.36384954 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.407811244 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.363875571 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.368717401 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.364965527 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.366520018 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.758413889 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.570813748 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.36385102 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.756732456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.92030011 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.385668798 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988342157 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.385552191 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.373458529 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.547455209 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.362535837 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.36563834 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921820969 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.401733548 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.363429388 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.738547084 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.366121981 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.674825206 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.395191061 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364988945 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.950870382 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.377653752 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.366607892 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.364500288 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.370642926 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.365318922 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.369561251 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.682006255 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.38788253 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.364209661 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.365011942 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.4089386 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.368237218 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.366026111 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.368954138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989769722 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.390943652 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.364953812 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.369856074 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36620126 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.39152681 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.366367591 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.370151366 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.650092207 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.385692022 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.371840229 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366889037 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.366244075 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.369205919 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.45345568 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.371693055 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.710054642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.366711791 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.365707845 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.391975874 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.372456948 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.415165802 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.365889278 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.373147116 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.264703392 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.634371136 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.389120385 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.366970314 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368263155 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.366573158 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.385053954 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389725097 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.397899479 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.371026614 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.170468476 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.393765386 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.384072664 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.36705512 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.378675171 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.376034748 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.369580055 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.367796501 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.672173664 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.664888926 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.582801715 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.369740282 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.368393325 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.17861787 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.40995986 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.552484539 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.391762762 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.369955341 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.622760151 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.588119477 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.372879607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.369466977 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.370658072 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.634679112 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.370149616 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685394464 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.957517458 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.39015918 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.372749453 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.171725056 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.11746871 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.375240631 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.369381546 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.675644406 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.388631777 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.369674234 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.370023641 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.371478634 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.370020105 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.371331793 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.372862067 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.370358363 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.370913727 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.696074509 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.565363882 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.38980342 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.374572506 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916638627 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.376522279 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.371020687 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.397940046 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.373680821 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.370566149 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.429323354 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.372648797 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.374281751 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.372041492 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.375988475 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.929246364 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.371697461 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.374416364 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.566397466 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.11116487 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.392036345 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.374083797 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.389737715 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.264314466 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94256823 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.404419565 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.717265768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.378879255 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.414286378 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.373941611 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.439722247 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943438356 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.374564263 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.394189443 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.063661905 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.39123369 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.796691463 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.372345431 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.372586849 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013960368 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.390243518 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.376646595 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.373967133 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400819114 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.684730137 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.375938249 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.383848089 seconds)
  done (took 507.859576802 seconds)
done (took 659.776784031 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.373181495 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.373878482 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.363870158 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.374305266 seconds)
  done (took 10.772997936 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.380298196 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.379429049 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.376716 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.377594117 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.378284696 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.378603268 seconds)
  done (took 9.558239352 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.37198678 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.373696783 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.37525332 seconds)
  done (took 8.408372904 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.608594628 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.404515646 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.743319881 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.398260601 seconds)
  done (took 9.442468666 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.37803129 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.378462044 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.380387418 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.37965644 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.382026735 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.381041619 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.380071238 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.381280068 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.382939591 seconds)
  done (took 13.708433824 seconds)
done (took 53.175730434 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.380513673 seconds)
    (2/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.463202496 seconds)
    (3/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.422388934 seconds)
    (4/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.457461554 seconds)
    (5/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.403365335 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.41401821 seconds)
    (7/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.38818475 seconds)
    (8/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.472751151 seconds)
    (9/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.400102826 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.385177847 seconds)
    (11/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.417534481 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.437234487 seconds)
    (13/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.448430566 seconds)
    (14/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.510983653 seconds)
    (15/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.519127724 seconds)
    (16/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.38662003 seconds)
    (17/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.504506497 seconds)
    (18/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.534530633 seconds)
    (19/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.528834455 seconds)
    (20/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.413301701 seconds)
    (21/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.383962786 seconds)
    (22/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.02307515 seconds)
    (23/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.532484581 seconds)
    (24/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.39520142 seconds)
    (25/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.46350266 seconds)
    (26/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.365237873 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.451015923 seconds)
    (28/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.398512882 seconds)
    (29/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.362060513 seconds)
    (30/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.574079084 seconds)
    (31/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40557843 seconds)
    (32/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.423514699 seconds)
    (33/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.385522053 seconds)
    (34/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.389932508 seconds)
    (35/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.530894856 seconds)
    (36/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.094722327 seconds)
    (37/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.366708073 seconds)
    (38/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.737238187 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.42418862 seconds)
    (40/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.139372132 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.508640317 seconds)
    (42/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.601872232 seconds)
    (43/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.384176025 seconds)
    (44/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.384950231 seconds)
    (45/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.368976187 seconds)
    (46/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.539545366 seconds)
    (47/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.367050369 seconds)
    (48/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.421128514 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.429752842 seconds)
    (50/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.56403768 seconds)
    (51/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.164690967 seconds)
    (52/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.411304702 seconds)
    (53/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.461470786 seconds)
    (54/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.401755838 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.436046054 seconds)
    (56/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.478929513 seconds)
    (57/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.427874915 seconds)
    (58/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.396613795 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.49486828 seconds)
    (60/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.452011222 seconds)
    (61/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.460819066 seconds)
    (62/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.265630296 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.573840143 seconds)
    (64/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.511253081 seconds)
    (65/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.370562305 seconds)
    (66/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.397847868 seconds)
    (67/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.277554062 seconds)
    (68/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.453110786 seconds)
    (69/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.662400119 seconds)
    (70/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.095137943 seconds)
    (71/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.411808475 seconds)
    (72/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.452724393 seconds)
    (73/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.398562159 seconds)
    (74/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.412188182 seconds)
    (75/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.589931571 seconds)
    (76/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.456719259 seconds)
    (77/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.439236956 seconds)
    (78/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.38965157 seconds)
    (79/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.399256953 seconds)
    (80/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.530288528 seconds)
    (81/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.540314624 seconds)
    (82/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.384977447 seconds)
    (83/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.496697847 seconds)
    (84/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.419439194 seconds)
    (85/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.376016106 seconds)
    (86/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.545912556 seconds)
    (87/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.385992795 seconds)
    (88/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.073779105 seconds)
    (89/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.030258569 seconds)
    (90/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.392046032 seconds)
    (91/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.459517324 seconds)
    (92/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.406284867 seconds)
    (93/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.477557831 seconds)
    (94/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.412178235 seconds)
    (95/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.379695343 seconds)
    (96/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.398879185 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.517990776 seconds)
    (98/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.390838849 seconds)
    (99/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.566422266 seconds)
    (100/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.533991598 seconds)
    (101/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.555261307 seconds)
    (102/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.410803764 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.478651972 seconds)
    (104/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.445625047 seconds)
    (105/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.396383357 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.365773321 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.49022301 seconds)
    (108/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.513820352 seconds)
    (109/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.54719869 seconds)
    (110/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.15757865 seconds)
    (111/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.414877239 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.434117273 seconds)
    (113/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.387471388 seconds)
    (114/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.566306104 seconds)
    (115/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.388262315 seconds)
    (116/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.48970662 seconds)
    (117/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.22174642 seconds)
    (118/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.463856987 seconds)
    (119/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.46180179 seconds)
    (120/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.435086623 seconds)
    (121/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.470109678 seconds)
    (122/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.401109666 seconds)
    (123/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.45795798 seconds)
    (124/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.492789948 seconds)
    (125/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.464097536 seconds)
    (126/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.414698002 seconds)
    (127/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.593058881 seconds)
    (128/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.389445085 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.450018097 seconds)
    (130/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.588896169 seconds)
    (131/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.396504349 seconds)
    (132/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.393636357 seconds)
    (133/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.098310398 seconds)
    (134/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.77575721 seconds)
    (135/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.373060784 seconds)
    (136/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.118588952 seconds)
    (137/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.145741884 seconds)
    (138/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.600450053 seconds)
    (139/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.517981657 seconds)
    (140/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.621740248 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.455418788 seconds)
    (142/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.40388129 seconds)
    (143/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.390301774 seconds)
    (144/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.411813959 seconds)
    (145/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.439589323 seconds)
    (146/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.519762657 seconds)
    (147/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.490230352 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.469043621 seconds)
    (149/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.151801563 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.409193685 seconds)
    (151/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.539753177 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.45661828 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.406244962 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.47615611 seconds)
    (155/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.394755526 seconds)
    (156/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.272290421 seconds)
    (157/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.397339709 seconds)
    (158/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.481655837 seconds)
    (159/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.389838231 seconds)
    (160/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.15640062 seconds)
    (161/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.599207391 seconds)
    (162/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.735981125 seconds)
    (163/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.037175722 seconds)
    (164/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.033396509 seconds)
    (165/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.434639305 seconds)
    (166/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.069552849 seconds)
    (167/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.36983786 seconds)
    (168/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.378195351 seconds)
    (169/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.481100018 seconds)
    (170/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.412251978 seconds)
    (171/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.565719177 seconds)
    (172/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.396012067 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.558720573 seconds)
    (174/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.481133872 seconds)
    (175/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.595423494 seconds)
    (176/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.373247327 seconds)
    (177/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.384276085 seconds)
    (178/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.605953823 seconds)
    (179/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.285403954 seconds)
    (180/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.446357688 seconds)
    (181/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.38270871 seconds)
    (182/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.64312683 seconds)
    (183/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.543650803 seconds)
    (184/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.523399251 seconds)
    (185/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.417173381 seconds)
    (186/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.464400671 seconds)
    (187/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.399732136 seconds)
    (188/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.414730269 seconds)
    (189/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.147549681 seconds)
    (190/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.487990709 seconds)
    (191/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.426141508 seconds)
    (192/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.400400726 seconds)
    (193/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.404492844 seconds)
    (194/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.483299552 seconds)
    (195/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.624736099 seconds)
    (196/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.466584388 seconds)
    (197/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.397419106 seconds)
    (198/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.509152686 seconds)
    (199/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.418362855 seconds)
    (200/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.399894258 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.447657509 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.503298244 seconds)
    (203/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.374357408 seconds)
    (204/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.487193 seconds)
    (205/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.429817423 seconds)
    (206/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.472688964 seconds)
    (207/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.574848051 seconds)
    (208/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.750104595 seconds)
    (209/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.590604718 seconds)
    (210/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.50498387 seconds)
    (211/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.436593509 seconds)
    (212/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.14521083 seconds)
    (213/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.595546904 seconds)
    (214/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.23179595 seconds)
    (215/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.038603207 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.386530015 seconds)
    (217/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.524219268 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.494326291 seconds)
    (219/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.49862685 seconds)
    (220/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.585963224 seconds)
    (221/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.049476962 seconds)
    (222/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.461192211 seconds)
    (223/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.386301642 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.376123154 seconds)
  done (took 380.526374837 seconds)
done (took 381.809811778 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440499413 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.570747027 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.411648825 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.412770354 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438091748 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.384555206 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.430471173 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.401589847 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.39733459 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.398360211 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.384983762 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.402042495 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.417007416 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.428608001 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.509010429 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.409077544 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.412793211 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.397450885 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.436952447 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.455875028 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439153124 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440500404 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.406729185 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.411968025 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443909655 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443045604 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.415609438 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.3968883 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.395414289 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.436798641 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.387270746 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.416955573 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.445337207 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.447233286 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440615446 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.39844704 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.440325423 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.573281411 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.431875943 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.432121518 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.401270462 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.445170609 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.418346616 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.404300969 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.448024037 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.408072797 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.445874193 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.51914835 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.3864437 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.399688499 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.446625701 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.459357728 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.401255052 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.39929613 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.40117362 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.519936899 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.399622911 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.445848759 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.401601281 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441497811 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.509791236 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.444214273 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.459484232 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.44519031 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.400970811 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.420013478 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.39947316 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.458140342 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.400346918 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441442529 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.441074445 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.40636445 seconds)
done (took 112.304542954 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.522923978 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.391988772 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.560775748 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.399462478 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.563215273 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.546852268 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.394804583 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.395325926 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.396452535 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.268366331 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.394913337 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.39491141 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.397819386 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.395841367 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.524825407 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.398285617 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.394661385 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.090471859 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.398199226 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.537681349 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.400181963 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.396604316 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.397784366 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.194021359 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.397929265 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.393925258 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.537789821 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.39840406 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.093413531 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.394329266 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.396912358 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.09540535 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.53935809 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.416475253 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.407873052 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.406355072 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.566086192 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.419722967 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.519267593 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.519379015 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.560565532 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.436670521 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.393319511 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.39861313 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.399929431 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.401372498 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.397098131 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.426086183 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.399011813 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.398555411 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.165127828 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.411484937 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.39753456 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.398901443 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.398157745 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.430523872 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.397820714 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.401656895 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.542193549 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.401934254 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.525506966 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.197877435 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.192482483 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.40108366 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.398289567 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.399975539 seconds)
  done (took 112.837217813 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.470451409 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.476667361 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.519790555 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.402118338 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.45406619 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.525423919 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.402029903 seconds)
  done (took 11.558110489 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.407688157 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403062834 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.451885306 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.452648767 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.401103822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.618587163 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402879142 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.415229935 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.399506475 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.481190358 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.40222552 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.402719487 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.408489821 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.398751067 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.452862756 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.416046397 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.519381007 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.404187867 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.403145027 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.560301719 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400981999 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.408241552 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.477314923 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.41490494 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.402623766 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.410158691 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.36439039 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403189865 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.400320653 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.402729335 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.398800239 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.514179122 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.40416048 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.402380401 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401929265 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.564211163 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.404635733 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401306888 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.404614186 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.405815086 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.405388525 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.403045185 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.405271511 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.400684275 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.4045086 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.433356192 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.405343941 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.4057915 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.404254127 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405448144 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.479784292 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.404468092 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.401982315 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.401996849 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.485029868 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.412337272 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.405395501 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.40182124 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405212561 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.402590372 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.560556107 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.455585283 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.405535492 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.455983443 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404282037 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407029011 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.405811244 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.403490838 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.499743489 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.404462684 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.453908815 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.404109585 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.633785916 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.433717758 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.406856667 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.411240199 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.409887106 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405897566 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.403998822 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.413864199 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.402972543 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.407760557 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.415467928 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.404168521 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.405077493 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.592559515 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.564887661 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.404264963 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.420926715 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.415336362 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.402999192 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.482173588 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.405779419 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.404903919 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460634826 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.522040803 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.486475792 seconds)
  done (took 145.15281307 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.421897778 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.419617711 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.410841006 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.43509709 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.40960778 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.410731093 seconds)
  done (took 9.821339811 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.411292769 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.410266632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.407857045 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.408318011 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.408456089 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.407336177 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.409157327 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.413297203 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.412944043 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.410508031 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.409062114 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.408608849 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.409656559 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.408984102 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.409933541 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.408993214 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.409760239 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.407349821 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.409433265 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409424892 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.408933419 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.408715241 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.409763804 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.412446376 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.414118947 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.409623244 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.432309504 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.409071356 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.409859236 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.41934414 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.430429522 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.41110375 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.412337964 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.417294081 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.414367239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.412745686 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.414506358 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.411201485 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.40677716 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.41131836 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.412328671 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.411951874 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.409993718 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.411312497 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.414228366 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.417089052 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.417011331 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.431934402 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.411544079 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.412538095 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.411514993 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.410553235 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.411981515 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.413050997 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.416214871 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.43677293 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.415208996 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.412910405 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.41314888 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.415743716 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.415435142 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.412747171 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.414467313 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.416226096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.409635822 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.413781956 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.415818278 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.416814808 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41294771 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.414195208 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.414133709 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.411106939 seconds)
  done (took 104.05861063 seconds)
done (took 384.729600293 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 11.189820746 seconds)
  done (took 12.508984298 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.519737913 seconds)
  done (took 3.839661113 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.548789255 seconds)
  done (took 24.872480766 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.409204092 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.443045685 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.433302166 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.408362833 seconds)
  done (took 11.012547779 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.778401387 seconds)
  done (took 4.09863788 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.407709417 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.411626302 seconds)
  done (took 6.140997829 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.771670194 seconds)
  done (took 4.090523454 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.831514291 seconds)
  done (took 4.156414002 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.42944291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.419326865 seconds)
  done (took 6.177101794 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.393457919 seconds)
  done (took 3.713547924 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.977267379 seconds)
  done (took 17.299465508 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.419533921 seconds)
  done (took 3.742293699 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.463800825 seconds)
  done (took 3.785333354 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.383454774 seconds)
  done (took 6.704218352 seconds)
done (took 113.457840319 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.409681641 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.408926528 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.407987331 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.409366594 seconds)
  done (took 10.956817515 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.4503728 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.45059622 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.449317092 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.460162917 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.45237877 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.467936877 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.441644498 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.441337917 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.459143047 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.451792354 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.469743089 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.452539891 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.448779947 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.442295805 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.451047963 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.451759969 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.461690283 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.461891347 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.444446317 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.453334253 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.416590131 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.462251827 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.452417734 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.417293399 seconds)
  done (took 36.133350719 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.911542653 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.490918009 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.574395321 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.47410279 seconds)
  done (took 7.774199545 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.477515165 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.49595078 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.499086662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.546944463 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.559212186 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.495740212 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.445200829 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.440233326 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.425608306 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.48697626 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.552221904 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.478728487 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.566511497 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.417608901 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.714830849 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.41745526 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.417211438 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.496712422 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.534833669 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.552307726 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.417410124 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.478540155 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.499935066 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.480291634 seconds)
  done (took 37.219970145 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.419007539 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.431712303 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.418546291 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.426054357 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.416836525 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.419177564 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.419372238 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.425499291 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.417113808 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.418451285 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.417779326 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.431627736 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.420040956 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.418613851 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.424243401 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.419931818 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.425034883 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.419272887 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.417661005 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.425263642 seconds)
  done (took 29.756825869 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.413807325 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.411818811 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.765665582 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.670607113 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.414971596 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.416894907 seconds)
  done (took 14.419471343 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.502034702 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.669441635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.420281703 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.827188058 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.907262654 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.422086848 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.421976102 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.69255939 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.058344535 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.050526033 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.490146072 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.499811497 seconds)
  done (took 21.28895037 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.428777983 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.417259983 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.423234906 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.434237904 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.482498684 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.428966163 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.428247198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.414802927 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.488720724 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.492879028 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.428130487 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.486288559 seconds)
  done (took 22.680931642 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51042828 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413740211 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415166814 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480735233 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416303356 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261825555 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475735411 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.175919273 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.440571408 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689713491 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414688872 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513911723 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673977631 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43143142 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420360036 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.409963445 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646039999 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969039996 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418182803 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417161352 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451371371 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416029854 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419801436 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668802205 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420559839 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416493767 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.701307032 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416569408 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734658119 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429767789 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428000465 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41534667 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68937063 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122720931 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536544294 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659255224 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431547868 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41906106 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.405323436 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.417889387 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422437221 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419548974 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43171402 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41581745 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417993981 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435219806 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194416847 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.44624526 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.415437796 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418095582 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71182788 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515665545 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.424395414 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418891339 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500953042 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420022362 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.421426114 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51840999 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004555345 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425038473 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439368314 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.422838109 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426607169 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434506293 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133743974 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.428445776 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.42423769 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423688039 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419211897 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420246978 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438533284 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419034714 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.440844588 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420188614 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263880589 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424840535 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420328405 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0248838 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437557498 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.42308366 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650475309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417621593 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418002617 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.418785322 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420044509 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195587073 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429570154 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.405982247 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441035047 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184306884 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.688846487 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445556432 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451528892 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.64450383 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.407227218 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42070195 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.421703124 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422561338 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443529114 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189628908 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441580533 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.426101048 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681906422 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.632638758 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432322461 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.414839576 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948711832 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460902992 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.438846098 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43052885 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672706705 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.100650049 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441299168 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430393633 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442599174 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422785333 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24009131 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437630814 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.527813707 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421268712 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720771481 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.278339887 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423985449 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490799707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42637134 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421802555 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433115803 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428278426 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422388626 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.662121456 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453810009 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.437283567 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.423267617 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421852623 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.424966352 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42580643 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.445276968 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.647075875 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438832439 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702593809 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423421498 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424196175 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424078091 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.648851214 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.429825354 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.759331978 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689771927 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433319707 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434173896 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437775135 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443320795 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529254062 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444333476 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.43234431 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68663959 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.428844145 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.429754368 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424555103 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449305799 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430009767 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.4320812 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432057355 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117926396 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400878164 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.425269739 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316320639 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.439709506 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493218727 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431541309 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.674697524 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.426933793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444439152 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.43155575 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.424113479 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671094645 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436396435 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.426484197 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523524608 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.95135851 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117316737 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444445371 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.426194619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.423049633 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.424803965 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426697402 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427576045 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428447283 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673198642 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445267589 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427786442 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105413509 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432123815 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429024717 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.434862649 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440454442 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.433759161 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429374992 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.430123204 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441297984 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438415016 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.443711765 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572231732 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.441373858 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426616704 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.945867781 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434250876 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429384733 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428410693 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461954321 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435793762 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309381473 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692653647 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43568818 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730144157 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429093109 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.447515155 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.427579816 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446066173 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435337598 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.450455421 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438624435 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.44040406 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434170881 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434496654 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010377576 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304061919 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064712673 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447739251 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.431342725 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433673165 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201818642 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450194435 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427732305 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691515736 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200399217 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450912228 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95948268 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.448417259 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307805646 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727029386 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663124723 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439867882 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.442655947 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729603837 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643692184 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464976314 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432267051 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433571365 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.418935699 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035504784 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470377095 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508426534 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202075259 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464016302 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434017989 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.445023313 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.449348235 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889322437 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.454565209 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432183244 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435173001 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434062306 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330350375 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439848764 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432212093 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15466217 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.450284031 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.964979464 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45451554 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682382102 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.448921513 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.440076093 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.430067601 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.457600321 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.691355811 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731712263 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432892776 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448977059 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07168093 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.311824689 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.439445364 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433107861 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248428676 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440917777 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760940412 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.435867898 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.454144278 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436690939 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435860359 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435380314 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.43209828 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439542411 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403849507 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988666461 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.443744616 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463298919 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439213252 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456899072 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.691355176 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.44941484 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109289102 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668389848 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433813106 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457818648 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.438674711 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434714603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.424827017 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435151181 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435360504 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44206973 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658355938 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434875519 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.423856538 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48875021 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647504086 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435153923 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434377712 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729722178 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.436122555 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.4361857 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308450584 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471642536 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434761549 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455407916 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437912415 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455167166 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507360381 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686346866 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.451471669 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.446096393 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891818703 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457925899 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458484701 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.45137382 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533148366 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436606369 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.456843501 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.209515356 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116910524 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306756804 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.129295084 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740923287 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439338144 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44551254 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435787519 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600152472 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43682012 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70984129 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436733165 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.449209202 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459923718 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437417387 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437818009 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653665678 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71080662 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438900621 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443949138 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441454781 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.438417734 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448901799 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.648442975 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000553683 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05618136 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439533256 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437859172 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220872257 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735189077 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43624512 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439252101 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438835843 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.440815837 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.458642128 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.444484013 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438984753 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581437905 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737113282 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157435554 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.472011199 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.466879785 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.95441187 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438746618 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695504159 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443837996 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.688847028 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120542343 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260517564 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709483512 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5105264 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69254502 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.442107879 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603524588 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.453144502 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.438675217 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440513699 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44178162 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.438814626 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.450933019 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130312222 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712100908 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.444157145 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.452691478 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470500303 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.451871033 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665342556 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232555683 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666110436 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452731571 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.449057115 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43964041 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124559169 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.74607959 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441713929 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.445454838 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719473339 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445663473 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463979599 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.129624964 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.439072294 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055402326 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.415538233 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46435122 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44127271 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267769314 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136157358 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.445502098 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002472062 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443875361 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447421901 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719634465 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.445377934 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442534454 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72488944 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.447945802 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443159643 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719211883 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.126566578 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314734524 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.44505048 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443016207 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.4691328 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442190855 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507569664 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443631505 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444441155 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.920374269 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.465713483 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443965781 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456383969 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.440638304 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445140886 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.445694975 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444035203 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.450623381 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.446978357 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.431560655 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473641905 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545800461 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059565229 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465666994 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.12716993 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.772516699 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.703496915 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446194642 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.435513062 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.449219572 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444006301 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444281083 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44730018 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.456482573 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060983893 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.448785476 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.460806539 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450349613 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.65998048 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657233472 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446938569 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704580924 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449749512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463523552 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.43338389 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447892401 seconds)
  done (took 1008.993955047 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.461405574 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.457824181 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.465763616 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.508323129 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.480754896 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.585963512 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.550447244 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.488852115 seconds)
  done (took 21.355393527 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.44829456 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.459861644 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.453962634 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.456317804 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.452982139 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.966309553 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.470797057 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.458544948 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.463667345 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.460882407 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.453334971 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.435746786 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.457436975 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.452413225 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.456774749 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.459155694 seconds)
  done (took 34.170177282 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.810054328 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.726192606 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.987455299 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.532765185 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.451706611 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.459019054 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.836163439 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.466599274 seconds)
  done (took 28.629330118 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.460478634 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.459661483 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.460377971 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.459049712 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.461223737 seconds)
  done (took 8.659576386 seconds)
done (took 1283.35546363 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.453676314 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.455156678 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.451215184 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.455040748 seconds)
  done (took 7.173291401 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.436894689 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.437521173 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.438824046 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.453930353 seconds)
  done (took 10.126427631 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.245789077 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.142314333 seconds)
  done (took 5.748396833 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.950782501 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.947536596 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.946685457 seconds)
  done (took 7.20308858 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.76789487 seconds)
  done (took 3.126567681 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.368773196 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.454857013 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.167530594 seconds)
  done (took 8.350882872 seconds)
done (took 43.08291346 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.450397636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.699847759 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.607422506 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.453321644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.609403406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.607288765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.288777418 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.451392944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.45454551 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.453209912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.452014775 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.613063804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.198204781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.697896672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.196647699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.793177703 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.613759332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.451812005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.450910345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.453820898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.286560855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.450962225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.474751521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.450578555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.614153455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.628971669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.462621998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.790763855 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.450662543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.467094265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.603929827 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.456388083 seconds)
  done (took 85.495203453 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.451565491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.453800226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.452187657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.482609803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.451268654 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.453066793 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.47119897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.484523242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.45224314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.485840204 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.463552827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.453490585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.462737311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.452415729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.487648186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.452388848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.476692974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.452804012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.45322625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.471230045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.455735218 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.492506105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.452517389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.452347333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.452344931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.454136169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.472728079 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.474532561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.476197229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.453655675 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.47082116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.47256653 seconds)
  done (took 80.206488517 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.454100034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.457690915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.456096838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.465009271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.453825458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.454829982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.457043563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.45964908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.462867761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.461404764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.459456135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.454318801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.455336935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.455250136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.475931602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.453558879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.46187119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.453672185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.455313815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.454224441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.457157644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.455607542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.455741046 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.454207859 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.46446866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.473428536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.456964502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.455069608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.457133618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.460195235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.474502193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.463305268 seconds)
  done (took 80.052385968 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.73433851 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.460022397 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.462138004 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.456190441 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.460855798 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.461234 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.456175444 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.736553073 seconds)
  done (took 15.590155179 seconds)
done (took 262.699026286 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.467564535 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.032360543 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.499940779 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.454055734 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.484149522 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.482434119 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.697532723 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.500474804 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.698588252 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.472381554 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.499275683 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.455711198 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.384656939 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.615596183 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.383542345 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.455524494 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.476746455 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.457121215 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.108188317 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.751116895 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.481036406 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.458164787 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.38082518 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.480506245 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.453375229 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.55285741 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.571501153 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.686339378 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.626995757 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.553008665 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.050967859 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.467909101 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.457323752 seconds)
  done (took 67.961937185 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.464765749 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.580669897 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.463793762 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.463278631 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.584086875 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.462737897 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.464770816 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.464895229 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.463691459 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.465170337 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.463781401 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.466411007 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.465223615 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.510227345 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.587756942 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.478940122 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.465235019 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.58104625 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.465803142 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.458789494 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.508639094 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.466855594 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.466535119 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.510106295 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.467952655 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.46512006 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.584765244 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.466790434 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.464811193 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.580162348 seconds)
  done (took 46.170345312 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.467900216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.149353849 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.312481855 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.47873731 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.468155168 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.47095727 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.809071746 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.471249753 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.46917257 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.472531696 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.028127354 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.474157138 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.505503187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.362998894 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.475491378 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.467167041 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.467972297 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.46920736 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.176436408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.481517985 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.831218262 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.471849969 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.809886622 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.482353342 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.492591073 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.470669377 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.474112767 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.393213484 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.473493364 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.027420438 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.410949503 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.807926572 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.35706482 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.337542224 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.403211509 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.474315443 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.468201329 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.038277781 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.476231903 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.471816605 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.80790936 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.474551431 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.336550713 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.220553832 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.49354878 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.468886754 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.411970718 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.041749276 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.756068674 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478737685 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.359811079 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.47806214 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.472922704 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.472394906 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.757386093 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.47529156 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.473248899 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.441926675 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.476257514 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.804561374 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.47263638 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.472185091 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.189547313 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.476112115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.172745201 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.475536149 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.480871762 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.494328475 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.346196487 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.479689013 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.227722745 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.496517538 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.472620834 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.038813063 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.170426514 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.470901517 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.478829154 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.164881197 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.38252083 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.812636321 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.480567989 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.372055222 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.820129488 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.479435238 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.474465877 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.472902558 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.471839028 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.55178687 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.801217505 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.151465778 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.213580353 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.460573253 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.807067997 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.482714602 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.475388245 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.441966385 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.47359052 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.473088077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.312594876 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.211175934 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.494639187 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.481156272 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.227186544 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.495628733 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.818893581 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.482178567 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.313584542 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.476473281 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.554387413 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.473894304 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.481160469 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.49861528 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.814448155 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.481008087 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.473148662 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.206372294 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.079452771 seconds)
  done (took 208.781393721 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.469874304 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.469983954 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.469706122 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.469606737 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.468075653 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.477389126 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.468288612 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.468395192 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.474548348 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.469750477 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.46899436 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.478790772 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.478471721 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.469862356 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.470806802 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.468582753 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.469457339 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.491436399 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.471334859 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.468544457 seconds)
  done (took 46.818866391 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.475432861 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.148360141 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.108179535 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.480847035 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.472256034 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.47832977 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.542126765 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.47669032 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.473901109 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.836537554 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.684817455 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.479419558 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.475129748 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.474150701 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.110108559 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.472822721 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.819595475 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.15091552 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.481930591 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.144257935 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.47224207 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.475945808 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.476510592 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.124346203 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.838203678 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.823983705 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.548419021 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.128050357 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.474643576 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.473559292 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.124091496 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.478381303 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.478285857 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.118909342 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.497094525 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.492015792 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.476216562 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.548638857 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.551848729 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.830210844 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.205538877 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.815788435 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.494367045 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.664020169 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.48123391 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.468570069 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.124344974 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.498943667 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.469988828 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.478767194 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.480845807 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.112389904 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.501072353 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.114123898 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.499063398 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.479449309 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.155507017 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.118215061 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.140992473 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.683859116 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.480102277 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.823133385 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.480576798 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.157225374 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.50354832 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.480228756 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.479673406 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.683505641 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.147368065 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.822368721 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.830249986 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.827493142 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.480256093 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.546624957 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.500848025 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.896703229 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.544681373 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916484387 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.831448061 seconds)
  done (took 136.015843474 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.782566925 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.597272552 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.935033832 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.134306755 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.474262887 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.610861321 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.597422737 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.761577437 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.484459907 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.569116611 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.211772899 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.585132227 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.292669002 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.559666229 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.584612375 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.640995358 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.918067934 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.476096871 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.154719476 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.192212661 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.477827436 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.592831568 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.059359276 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.717031953 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.492971341 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.085063491 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.50544368 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.202114778 seconds)
  done (took 57.077322163 seconds)
done (took 564.185970282 seconds)
SAVING RESULT...
DONE!
