cset: moving following pidspec: 13790
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.913499591 seconds)
loading group "string"... done (took 0.561643796 seconds)
loading group "linalg"... done (took 8.939347444 seconds)
loading group "parallel"... done (took 0.168948976 seconds)
loading group "find"... done (took 1.458984536 seconds)
loading group "tuple"... done (took 2.119765436 seconds)
loading group "dates"... done (took 1.393957325 seconds)
loading group "micro"... done (took 0.22146262 seconds)
loading group "io"... done (took 0.631091973 seconds)
loading group "scalar"... done (took 43.279186606 seconds)
loading group "sparse"... done (took 13.411647263 seconds)
loading group "broadcast"... done (took 1.092184701 seconds)
loading group "union"... done (took 12.280409979 seconds)
loading group "simd"... done (took 2.53677002 seconds)
loading group "random"... done (took 10.225342422 seconds)
loading group "problem"... done (took 1842.042960914 seconds)
loading group "array"... done (took 25.831119338 seconds)
loading group "misc"... done (took 1.129850249 seconds)
loading group "sort"... done (took 3.794437974 seconds)
loading group "collection"... done (took 18.876838314 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.62746584 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118242551 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.166592077 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.345889282 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211591998 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.148180175 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163520056 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.558789848 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01227635 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210497169 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143715671 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.548277737 seconds)
done (took 5.990601131 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.271632315 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.436931048 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113729452 seconds)
  done (took 1.215038328 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093873501 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180595486 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096498907 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112929601 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113304323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112708687 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096467282 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113002999 seconds)
  done (took 1.492003313 seconds)
done (took 3.749361866 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.495506259 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.834447914 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.546968061 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12934275 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158112266 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148444011 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313034738 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162499813 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.126693158 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08655007 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172944712 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.381755354 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.479254284 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.965889473 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085974491 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129296712 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083670308 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.723284874 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08246381 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137610763 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531505018 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119143954 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119138351 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14071633 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191239009 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131103802 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165761922 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096131694 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.673390277 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102439983 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186072806 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100243454 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164817349 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.252001888 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09836726 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09913433 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.691317351 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.177828695 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112243302 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101463496 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683991996 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080525954 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193157786 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103496737 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109582168 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189751579 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115809886 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079272124 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10430627 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.093331978 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159637688 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.458312092 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10851716 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149226853 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108903266 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693909762 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097311966 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157324275 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.139738908 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098291367 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099325374 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107075681 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153882541 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109330122 seconds)
  done (took 19.664885876 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119413593 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141721504 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096328072 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141195918 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138777054 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09585967 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083881606 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095639306 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.110053148 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185054658 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136753335 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144015054 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093998159 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083837882 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12009806 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251020859 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108073159 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123303049 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082138548 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108113601 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141622186 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095237154 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10987387 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109694603 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171003093 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206908235 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111468783 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12518247 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095496307 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100522236 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144183504 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163338216 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075228331 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094575761 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18494836 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12053851 seconds)
  done (took 5.192277471 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205997579 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118890015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197731996 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.137647023 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.131549926 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.184419195 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153373406 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.171701524 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122877907 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.272862425 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.209879403 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166578181 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131727929 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113819105 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081011699 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098516188 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079892897 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.711170274 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18228142 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153684613 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128929882 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104546074 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084134123 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099580563 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086663687 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099900657 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087265138 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.13583803 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355182444 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.183325451 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086495112 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.341798917 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100195042 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10874344 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131040042 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19958824 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135639755 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124122108 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103903806 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08006274 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.238989775 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111176472 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080794451 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128643301 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134608166 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118631618 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103325889 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113381644 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.227908347 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100552042 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121414151 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.094238982 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200974737 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098309007 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100555399 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.358859857 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118789986 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087911272 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101346861 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.304416054 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134676286 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085266159 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079723615 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10573703 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096659434 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403679324 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092226731 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.994080209 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09893268 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160604509 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10061964 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108747241 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087382437 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104557681 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082907075 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12163364 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081707591 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097723238 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08117925 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098189998 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085676207 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.119404875 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10122906 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081192021 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163127792 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102842762 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120692618 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125763517 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086614749 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09714738 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115339298 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099612243 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084263659 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148156639 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107108741 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115906997 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101423085 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129414075 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099741718 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193049546 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082374863 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125985532 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101059254 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114865485 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123227124 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099482658 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085642544 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097784516 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080729966 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164254092 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083250264 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080906556 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103665831 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114101199 seconds)
  done (took 24.119612229 seconds)
done (took 49.645740666 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.485337235 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099750401 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.117242457 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.118235867 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.115952767 seconds)
  done (took 1.680899083 seconds)
done (took 2.39894157 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.345845031 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196341468 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102794996 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.205576405 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091415077 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.211623103 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.172041521 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119550253 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20652162 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103057936 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1839076 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101633009 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090505479 seconds)
  done (took 2.879335713 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096152866 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120846418 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082343716 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111976272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077112544 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110643324 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092925818 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136015177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092261998 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103908588 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076491553 seconds)
  done (took 1.816297562 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092437345 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11587736 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083173717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107652711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077381009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090323944 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109191761 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117184541 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091605036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105099253 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077155513 seconds)
  done (took 1.783449669 seconds)
done (took 7.188794272 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.074789991 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.478848292 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118786644 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168891538 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343633218 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214674323 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.523723091 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13497996 seconds)
  done (took 11.967367979 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115922456 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100422796 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099132744 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104428154 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084247548 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103240764 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083074418 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100706798 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080218878 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099267821 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084555197 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100428109 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081370923 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101385131 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081237407 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098633277 seconds)
  done (took 2.299727706 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1204156 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119044146 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10670855 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111038595 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086371646 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104636825 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088170893 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104336638 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08482479 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103096846 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109163789 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091058465 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10611188 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083893143 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105338052 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093436925 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102680615 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104802003 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089297263 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106150417 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091868485 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103097662 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107183233 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091472244 seconds)
  done (took 3.244191508 seconds)
done (took 18.225780897 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.173114478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086498131 seconds)
  done (took 0.978359881 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104212588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122888548 seconds)
  done (took 0.951770316 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108415994 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099782251 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138702206 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116776728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084126178 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099169335 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116030171 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101085386 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082353085 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101168541 seconds)
  done (took 1.7729482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087894471 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10371301 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090497407 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.121811035 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110347074 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084844497 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104848288 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087268411 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106912846 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081734424 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108705134 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119456792 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089692511 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121580684 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087909365 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106422393 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110112437 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087325723 seconds)
  done (took 2.537623972 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083205302 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084271124 seconds)
  done (took 0.894214041 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085137627 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098214833 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085342091 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101391252 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081113288 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09798043 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081829161 seconds)
  done (took 1.357725119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.527516144 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265150345 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.346149234 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100072441 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156005532 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.377044458 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.138928593 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116111235 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115520817 seconds)
  done (took 2.914453165 seconds)
done (took 12.132072628 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094084991 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.193891587 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.558445735 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120949113 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080644463 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161007757 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.268909232 seconds)
done (took 2.206778268 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360549786 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12807866 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090367189 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081134841 seconds)
  done (took 1.386128332 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081885817 seconds)
    (2/2) benchmarking "read"...
    done (took 0.1055948 seconds)
  done (took 0.9214818 seconds)
done (took 3.047019043 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08071998 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.133363375 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079491602 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.0979172 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080290888 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096654349 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077863724 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077143165 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099367237 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080084266 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097596252 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079585213 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09751045 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080188506 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077485077 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09508467 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080702889 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095199416 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077965277 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097971978 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078187631 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097320327 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078118188 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.200257057 seconds)
  done (took 3.007620241 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101734864 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098977137 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087214751 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104784287 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084725426 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105137163 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103685902 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081700275 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104174769 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083459111 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102604776 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084690728 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10032301 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084033469 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100716429 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102224789 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086672484 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098477076 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084013784 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102562495 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087251895 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098785777 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084807396 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104603899 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102276904 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08476529 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100554252 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081529456 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104283192 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085257553 seconds)
  done (took 3.572034511 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090081154 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077251274 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096878082 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089852518 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096457435 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082412247 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095494429 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079534439 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09764806 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078449696 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097276408 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078231109 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095986406 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080145052 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079954633 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10352646 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114935976 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079943801 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078168587 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097043303 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084590864 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096759918 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081587719 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.096459797 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078848702 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096424542 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080272237 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078610334 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098179026 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078510426 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102534785 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085004203 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096273533 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092699466 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103085403 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078683761 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105470868 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078103317 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097865783 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07841537 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095831894 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07928759 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078740468 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.108132159 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081826037 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097437826 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079138252 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098148602 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079204886 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099366062 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078952017 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096662368 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081465612 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098020883 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085319059 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078485567 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099159148 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077957316 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098904479 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079764775 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096135077 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07930254 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.103815231 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080167112 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122260757 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091579935 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097704614 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081437106 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101747044 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086952111 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099303417 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098440681 seconds)
  done (took 7.22932647 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084021133 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107998155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082527511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098683535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079090351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09704379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.086660231 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096666302 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082359653 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116536454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079699069 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098929051 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081682006 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099977501 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080191413 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098760916 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090388626 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095442781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079834024 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100546758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080686122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103569059 seconds)
  done (took 2.766626282 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227651563 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107397471 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147252416 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117063672 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100068049 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114961602 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104063277 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088619119 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104742758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090410819 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107909664 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086722548 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118892649 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107738039 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090121845 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109011916 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10434395 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091693515 seconds)
  done (took 2.76274109 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096446144 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101112889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107672958 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10127264 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082472014 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103207115 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089434056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117533838 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102429651 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082481833 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111568679 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084979274 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103369651 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083032411 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103473403 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082923584 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102862147 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082379047 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112447021 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106994468 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089428779 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111455314 seconds)
  done (took 2.906794976 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099339897 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102567325 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113817991 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104985555 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078291625 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099573198 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08961913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.100728655 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109011704 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084322026 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100301279 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081690295 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108476947 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083183814 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107070842 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082717274 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103504852 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083464921 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103002169 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079081308 seconds)
  done (took 2.663061102 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127466378 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117442543 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099287188 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129168056 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11867015 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100002648 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128932575 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118501603 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100478929 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1304658 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099808025 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11883167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129290942 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107291619 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118404201 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129445748 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111241678 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129954112 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118291504 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100293494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130977726 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118633847 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11142235 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117866185 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099864625 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12136181 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117790018 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108016893 seconds)
  done (took 4.010976112 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082678012 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082846189 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09912108 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079784925 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098872626 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08014825 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09836759 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080559402 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082342981 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099679743 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083222057 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101330689 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082127425 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100338856 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082708505 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100437166 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082501867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080213909 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098003504 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080200782 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100657572 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082947105 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100373751 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080187418 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080157459 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100577925 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079967351 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098367531 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082418141 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098986015 seconds)
  done (took 3.434139418 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091958391 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107847771 seconds)
  done (took 0.952240025 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080840475 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11920473 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08081466 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105130588 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08954743 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102506751 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093758095 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107876792 seconds)
  done (took 1.532611204 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.109356353 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.123839084 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090394189 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114640719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.103876952 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.121634516 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171021315 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090542491 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109655159 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084626886 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.123172288 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083736698 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114232865 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108617074 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094438628 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117482683 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082142494 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113290986 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092839302 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105318834 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090413983 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120057288 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095433686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.11018011 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086509084 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115242832 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116205721 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0963716 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108257966 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097926968 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110416392 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078138159 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107584881 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090012283 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100430947 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.103771879 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121068199 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089341074 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114132522 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090571906 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113710619 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097947339 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095872788 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110792826 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101339634 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108345335 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09086366 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099346007 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085277062 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106752302 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079678698 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105874686 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079227229 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111861918 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094795311 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122171338 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086899755 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108347431 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089354334 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106621192 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092667472 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107921458 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113556684 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088903162 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11276804 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094535841 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111271886 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080221744 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0961439 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082764138 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112485573 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111483764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114795411 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090624894 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109373374 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082783187 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110042473 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090655137 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111987188 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114580105 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090287808 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111239928 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096123828 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106953224 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091027431 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111124998 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087682827 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106840597 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085725696 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124234385 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086785026 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101469827 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085916587 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115179353 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089492577 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.107588108 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086551453 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113985584 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079214101 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109239737 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091059809 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110638983 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097542375 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109597702 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109926302 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095354124 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.115844216 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090519716 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107269007 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081725759 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109915934 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087887165 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112885128 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079391953 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108051563 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089526395 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109143113 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096263112 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.105719987 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.090809514 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114957239 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097866385 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.106608258 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081919082 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109149514 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091074991 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113366846 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097886781 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.107173807 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080114523 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098782981 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093974098 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.108398305 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091587234 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109814335 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091565015 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09988549 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083222486 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109678389 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096638276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107565918 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110500081 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095708148 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111534432 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089146836 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113913299 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088342938 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104816964 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094738813 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108089088 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080618829 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113965703 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089376549 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.106867704 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090308302 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113562562 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09011062 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.109771691 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087990469 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.1097516 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091064687 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10442583 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090653167 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.106540363 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107596003 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109812256 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080597916 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101558495 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091816621 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10546453 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090256532 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104351862 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090329492 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.110188144 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083950154 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.107790795 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089237981 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122447447 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098423574 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110866881 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112529424 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098026279 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108380942 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093145866 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.108986884 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092202888 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.109973954 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095280386 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112212778 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091687608 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108678258 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082165727 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111566458 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096755802 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104887216 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083614747 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104875785 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090840788 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116377152 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090487654 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110507979 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088130811 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112156051 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094769458 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109736105 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090347983 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104605535 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090756412 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.114617844 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091701175 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110927254 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09834757 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111130796 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081233169 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113898353 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087411436 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113920091 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081413986 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105684214 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086855001 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.111247052 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088934286 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108259807 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080178305 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116032206 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096915408 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110740993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085821465 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.109427711 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119259988 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089535596 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112856288 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090822258 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.11209578 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105497102 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10573156 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091362956 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117936117 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090593097 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099125738 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093825066 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.108832228 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085869917 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.108885539 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088127948 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111282421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093528827 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112217767 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079863706 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10977601 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.088475961 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10651236 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082111365 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116356708 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091717964 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109163071 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099758409 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111708507 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092106156 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113223064 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090670689 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110740473 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089053089 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110723997 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.11036094 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087705405 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083097642 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106219139 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082454406 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102632374 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089439442 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110435291 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091611667 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113189738 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089901981 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11515055 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109889843 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092421367 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129436058 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106916183 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087566935 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111126625 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09433132 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110003216 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090897184 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101130591 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097224631 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109415261 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097772805 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109703577 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08422143 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.11070878 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091447481 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.1114998 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092501054 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.11196687 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090218671 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.109179247 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09168098 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119447467 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088326652 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117789485 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093692396 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113501345 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090657333 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111503174 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089009606 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10375371 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090323645 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108950753 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091758632 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.111276175 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092093922 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111167015 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.109685828 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08936312 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.109497389 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09236474 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.112417934 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081429196 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086380329 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107523964 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091396352 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117248614 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.111524387 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090071507 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089285641 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114142951 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089116338 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102573948 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096185383 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1143803 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092356838 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121732706 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106316739 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093125747 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121674339 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082274957 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10822128 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086140455 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107032305 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098440917 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.112932926 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099332014 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112164101 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087601353 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104078198 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093437779 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.108326587 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081798904 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103347189 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096060592 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107934177 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090567037 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.11103012 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095648425 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111777943 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096840853 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109917006 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092620349 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.111693561 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085004502 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.107002442 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089127809 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110267232 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.094282657 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10673925 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084524457 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090726033 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.111869671 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110999927 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091685198 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090372931 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118898572 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110360341 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092803954 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115999052 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082420878 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111477145 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.092143518 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.111139914 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088845915 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113672221 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095290213 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113564462 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098015005 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.112040834 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094734462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111339635 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086493137 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111620413 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092962439 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.11246949 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088540265 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.113051336 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100182485 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.105530291 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093776522 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112925729 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090054044 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11435944 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.093677121 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112442838 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097288316 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.112796876 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092897776 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11609974 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092195871 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113505896 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094035406 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111507082 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097008255 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108636381 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118397145 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094005415 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.11247902 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091778951 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.107317629 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092509727 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.110280966 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09146175 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117399143 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094333992 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107154786 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088449419 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086564553 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113181841 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116541854 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099548463 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112081682 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093852193 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102298284 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085618315 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113269652 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090506937 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110441725 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096872194 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116830143 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093922034 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109798703 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.091887769 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117799107 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097980429 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115903943 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089414071 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115418099 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.094887218 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113370557 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090165489 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112210726 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093239231 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114955142 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091500129 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.11000264 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121223298 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098582076 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113311762 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092097068 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11486779 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092991095 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103360031 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095045446 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111638036 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097537687 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112804267 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09261923 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123766161 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088284424 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112548155 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09794886 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112407612 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.1179824 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084698052 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093261906 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115045656 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113336063 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084498274 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088195287 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110622269 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094131106 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110207973 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083831591 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12315633 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117416983 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094094035 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11095751 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092645488 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10305442 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08506434 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088274766 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116478561 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091471329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123814868 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10843288 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089075635 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08406602 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114272411 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093853443 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116318628 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085011217 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104986818 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089097446 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114361583 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120367266 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092558838 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.112170689 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095713989 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112385922 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087372094 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116760561 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086346454 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112482111 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104123654 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110920627 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096053903 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116177752 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099903034 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.114581263 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084474609 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.114803889 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093185074 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114160087 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.094433825 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.116737499 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12931833 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096054848 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109248101 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.092685172 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113598956 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090082488 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120885227 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09716698 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.115445671 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096943824 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112746861 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097810848 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121207913 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095923465 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.11506016 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093922696 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.113094773 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093199588 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.113942494 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092192096 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.117329758 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.095042782 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11556495 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.097850349 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110462066 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124173021 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.102444367 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116362695 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087243014 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110071427 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090521293 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084518871 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.117016529 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087456467 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.113761265 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.091163282 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.11258797 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096388854 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115999518 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092976702 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.117021642 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092780181 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.104984543 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097641171 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114514722 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095538464 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105809763 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.094124765 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114541292 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117925129 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09844504 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.110099869 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095316925 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112838388 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096550201 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100995654 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09563408 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107018549 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093486133 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106236545 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094981176 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114734745 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096962935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114883602 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097156243 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114579093 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099250842 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116425709 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087350172 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105909474 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097955603 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106035648 seconds)
  done (took 61.48665323 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.158152715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091313544 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104734987 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085755099 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132676238 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086442827 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10559262 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086302378 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10663777 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098755553 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106191179 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084942332 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125914091 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133876148 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130642793 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119841743 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086175697 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106252451 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085468699 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10572902 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106741865 seconds)
  done (took 3.049315277 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110976102 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124372874 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122762448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108476694 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117077139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123990168 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102388461 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124944628 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.128219193 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11802803 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108601748 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124356584 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.118417575 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099845107 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117168659 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120193057 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107739747 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116545399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124299443 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102481228 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12121121 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12251734 seconds)
  done (took 3.368038757 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098930631 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09258934 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.120709494 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.086760557 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.111689426 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.087595715 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120417357 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09065761 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.119513581 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094247568 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112435643 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094563637 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119360191 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.087611703 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.11264324 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.090337957 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11874544 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.094718546 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.115647132 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088775092 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.134471795 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.107737364 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089357567 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.089272209 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.123905056 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.094237659 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115192152 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093502799 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111417435 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09419031 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.110939382 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096423653 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11673016 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090983536 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11164537 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.094269984 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.114309639 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.088240715 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.111036029 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.097450937 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.109396968 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.09625457 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121880886 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.091033188 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.110941268 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096726944 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.114876426 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088813525 seconds)
  done (took 5.776024647 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129189494 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168296468 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098805822 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.17106516 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138923389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118717353 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.097083717 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1522592 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.112213416 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.09323137 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129361762 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.130693325 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.095562203 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.127331424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095766276 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116578719 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118942057 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108350792 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130299625 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088833004 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12123093 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11878938 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110061009 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12815519 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119458342 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094130338 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113899533 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106274901 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12595855 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.121076992 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.100800707 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12562456 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.145171858 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.096727737 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114800221 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.117515297 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112173601 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.116400012 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097705131 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.114789124 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.117165467 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108224956 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114198124 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132220559 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09440325 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112120313 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096421323 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121177591 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132219038 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.095882794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121016141 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129530563 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100805369 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112428515 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100745752 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135414061 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.115028047 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.093888334 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.121249747 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126729558 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095452602 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129925505 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108769652 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.117754557 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.125180072 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109670221 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120141365 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120103089 seconds)
  done (took 8.889705264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103538035 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.140830587 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133421869 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110752908 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117271388 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.120181197 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102411387 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119692076 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100626112 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129419802 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120672047 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.173261999 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.094511002 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126960507 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10141851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121788817 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119804257 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101238789 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118038236 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10086545 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122239196 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13266304 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100711921 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13267947 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134077701 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114083261 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101823866 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116961498 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111817981 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122745722 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133307632 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.120660743 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101544031 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131682013 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134288286 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.101225248 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11175417 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100813883 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.120002315 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121110962 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094358729 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127051629 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100983883 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.115219861 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115585977 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101792694 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128122957 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.134186797 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127150991 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108622932 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117680152 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13338234 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102202279 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120984186 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132919001 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140701698 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113184933 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133476027 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121271142 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113140156 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134806792 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141943248 seconds)
  done (took 8.1947468 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092252731 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091475426 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.111259657 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.089759867 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113437075 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090153588 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108838531 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092767889 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090902598 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115183145 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091184489 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110929048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090146956 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112447209 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090317851 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109518382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089977439 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089074082 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112795096 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089228884 seconds)
  done (took 2.79623057 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101674742 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134162538 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.093098205 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119928591 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094576074 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.121301174 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113500538 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096250362 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113151917 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096647825 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126632541 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105662517 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117005611 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.12060455 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106306964 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122137311 seconds)
  done (took 2.60108919 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114774351 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.127471855 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.140527057 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099024289 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.112112274 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100881076 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114148092 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.089032993 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.109498888 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101728712 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.120858019 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104254524 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.113775696 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.091231919 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.11417635 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.098919626 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.109893846 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.096958545 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11431545 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119184251 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.120224033 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.117064972 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.095188515 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.115406738 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.095742609 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.119907632 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.100443567 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.114082572 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.091722696 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11439313 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.095457159 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.122518323 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.088994545 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.119997387 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09095852 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112639917 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092181548 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114669827 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098824439 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.115936218 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089287083 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116563372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090046727 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.117195779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08714293 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.114602551 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084312552 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118390292 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.092843323 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117716404 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111997922 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.102885289 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119924477 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10665229 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125033666 seconds)
  done (took 6.742749064 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109147272 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116792084 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098774856 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111696553 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097156641 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.122307722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09811617 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116589833 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09527716 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111463132 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096086347 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118628934 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095323698 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118738002 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095535862 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118987313 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088365721 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115986242 seconds)
  done (took 2.746954743 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099860223 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111906108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101885823 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114544382 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093840613 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09265511 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111158256 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09046521 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113835803 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093510486 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116693873 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.095519526 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113533893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.09614215 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114585971 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09391278 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117330078 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09234038 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.115015822 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090304226 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117219555 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092843925 seconds)
  done (took 3.102546239 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112370676 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.149038177 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108489184 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.160107163 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.120749633 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098493147 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130402882 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098462065 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139124779 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117793318 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098468145 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118818893 seconds)
  done (took 2.280590987 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121124843 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155882958 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091780249 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119934068 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128935671 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10072775 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121342685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099122149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133602497 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134072951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098991098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133740114 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131027602 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132203675 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107129391 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12964895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120618801 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100470322 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116656855 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143254446 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099076143 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128383249 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120047719 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099821362 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11573511 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131499072 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112439405 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1305505 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116395622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111459758 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130916483 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116796702 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107367831 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133435042 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112159363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132286313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100718613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138168066 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125270492 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106386902 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1189008 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122289147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112506547 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125991665 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133538106 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099892163 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128272728 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120954329 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099759017 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1486752 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12956732 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132187354 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107342938 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135672101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130816184 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149597939 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135803054 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132007303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107997516 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133399334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132861058 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127986199 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111938271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135155409 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129671491 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132631138 seconds)
  done (took 8.892393723 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136140499 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116427182 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099424186 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136864263 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133600588 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121208265 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10082283 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122258102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099843921 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118716385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170132162 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120251549 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112912531 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133036264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121773317 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100894557 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121877092 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132824639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097117541 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144665287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121341726 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132981702 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113069377 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133817008 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135755816 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129544633 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101528185 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117705811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100534158 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122423619 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129172066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10075693 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134296918 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114397732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112708537 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120070117 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100046604 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131337192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117344187 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107486796 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129678211 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138190478 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118654709 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097275176 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128969201 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11759483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100640086 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11403656 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100748601 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118759294 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133912677 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132694899 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114026541 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12877917 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122223085 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099476188 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116554688 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11820573 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101250517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123566929 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129562516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101297102 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145837659 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11853959 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101143074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127967527 seconds)
  done (took 8.729652625 seconds)
done (took 164.226322154 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.115065992 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.15285738 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.111506603 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.181626305 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087723079 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146349142 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120973867 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.12787584 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089688334 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.111442792 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091015447 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114368726 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161193688 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.111075042 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094783138 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120767606 seconds)
  done (took 2.769314185 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192777271 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.299489395 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115579878 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120913645 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102159576 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117942381 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099525425 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.122710392 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096684473 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127191437 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.1138473 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099861124 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129180412 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095842377 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111468089 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096804007 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124058158 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097085719 seconds)
  done (took 3.101145392 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121750277 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.165267417 seconds)
  done (took 1.130453581 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133897436 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193377614 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317889577 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170767693 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120047339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134803661 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.174497817 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132222025 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201885349 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135352535 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.118633361 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119665715 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148778169 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105786057 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121345498 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096794311 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145672394 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.125632552 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.105753011 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.12008204 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119043428 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.119722557 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123754491 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.106817629 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.191017461 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135331344 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097988842 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.124472439 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119089799 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098833496 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123784126 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132865231 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.114409139 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.19842954 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102419151 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.194519088 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105505458 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118657107 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096744944 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.12015062 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12191757 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101238806 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134191487 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09589133 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.121242682 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124843425 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09666269 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.119282484 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103465236 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128315716 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125609594 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102046806 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.193948581 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108242267 seconds)
  done (took 7.978511565 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.860488547 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.172658723 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118954073 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.962719227 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150675331 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133704497 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.855490186 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116321787 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.273252763 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.089954317 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136814275 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132004274 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243242325 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26843614 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.159714964 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.346909894 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.728922151 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130460724 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124075255 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162289449 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126762542 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152138208 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117154661 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450459634 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119817847 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092939431 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123842211 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129409699 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173125201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.096914079 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121600933 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190462068 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.306006771 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.188859725 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120293879 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094187976 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11727141 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180503814 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286168511 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228060974 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189812738 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095477827 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114342499 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111793706 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136993953 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088186812 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.202950525 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189978516 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186144807 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.13024058 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131449422 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109729902 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127967055 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.171220952 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117739625 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.349708908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354382781 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099104407 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126242631 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115645179 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276509827 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115725239 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213154064 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144101157 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224949572 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09356431 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795778996 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175964123 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118996612 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123477095 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102435316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121099449 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103484153 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177062436 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391987752 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130619143 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119055576 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092434774 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237397387 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100202206 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11458066 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174794925 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097356886 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124240375 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132392703 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105921948 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.200857234 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25412881 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132948856 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1032099 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120410726 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127811077 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096291405 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.224912387 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23265097 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.191866189 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236436214 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128314029 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17962608 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184323476 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132649289 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187357523 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132972315 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119306075 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134318685 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227707864 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15614666 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099233589 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121683339 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121687693 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153360451 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098292997 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123608108 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181491179 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478109935 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.202062377 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094829359 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119459993 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102786213 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173346178 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130317765 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276409711 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103943383 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.201620806 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103848891 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.114306471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104122489 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.198324514 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115863158 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128951882 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136430236 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10855464 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.284047864 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213545342 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139943586 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248405663 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191985271 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109562212 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.207060843 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103911015 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202295565 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10843122 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12903765 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094288715 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789370777 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130538597 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100679894 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123662869 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202448536 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113778443 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099217787 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091845742 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113080976 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825893358 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101409788 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111658604 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095611497 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125672302 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101094764 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124123726 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099211394 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196377572 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24732029 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109662702 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124899412 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092586196 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.194283959 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097713942 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116738546 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095431371 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116695235 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104560436 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12243791 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096196178 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.205341149 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178535918 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.235092408 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540957125 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121145958 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098553116 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242422694 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117673051 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297328178 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12775586 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238378295 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1825577 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121935625 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327326071 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.211707408 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204536995 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097253256 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.204135176 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097594925 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120408576 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172456214 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09258895 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124097991 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168366683 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136737152 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130901778 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140655763 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116888961 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23820276 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112945784 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18011287 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115667335 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107534206 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321153483 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114653003 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114837146 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193652113 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103479092 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115072511 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.758731306 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115197559 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104747527 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127188997 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234170957 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180483284 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127690006 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102566037 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130687632 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173754501 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.245017125 seconds)
  done (took 46.66070925 seconds)
done (took 62.476718241 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.328952959 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.286304127 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.319317133 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211211908 seconds)
  done (took 2.089691895 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.198828135 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171050292 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141616656 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.127291048 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.167951023 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099847584 seconds)
  done (took 1.773742954 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.521293923 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.394485936 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.366811256 seconds)
  done (took 2.152899716 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286201163 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.313118752 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.371081012 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.467140157 seconds)
  done (took 2.419884158 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.227868835 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141123822 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.10831112 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.146699811 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.182348298 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.191676591 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153352186 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.164127438 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.137848451 seconds)
  done (took 2.372827948 seconds)
done (took 11.679857021 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.242029416 seconds)
    (2/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.178614902 seconds)
    (3/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146694113 seconds)
    (4/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.300964875 seconds)
    (5/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.137717771 seconds)
    (6/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.308019098 seconds)
    (7/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.290067468 seconds)
    (8/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.159148468 seconds)
    (9/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.22332281 seconds)
    (10/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.242350776 seconds)
    (11/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.255819593 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107076815 seconds)
    (13/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.196527515 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103966509 seconds)
    (15/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.12073544 seconds)
    (16/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094394558 seconds)
    (17/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120989277 seconds)
    (18/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.238952681 seconds)
    (19/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.25445336 seconds)
    (20/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.253709669 seconds)
    (21/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.21537007 seconds)
    (22/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.221367212 seconds)
    (23/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11444588 seconds)
    (24/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219106141 seconds)
    (25/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.112763346 seconds)
    (26/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.187600865 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.167517998 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15696173 seconds)
    (29/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.222739615 seconds)
    (30/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100424527 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131079801 seconds)
    (32/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22662006 seconds)
    (33/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.22378407 seconds)
    (34/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.20416808 seconds)
    (35/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097272066 seconds)
    (36/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121185619 seconds)
    (37/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.244528186 seconds)
    (38/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.157101113 seconds)
    (39/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.187403613 seconds)
    (40/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.249703585 seconds)
    (41/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134719665 seconds)
    (42/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122482701 seconds)
    (43/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080677001 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12224771 seconds)
    (45/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095919874 seconds)
    (46/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.132771697 seconds)
    (47/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080960203 seconds)
    (48/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.242559789 seconds)
    (49/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.15013128 seconds)
    (50/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.149365002 seconds)
    (51/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.149217487 seconds)
    (52/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128531521 seconds)
    (53/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.189900496 seconds)
    (54/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110131019 seconds)
    (55/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119003357 seconds)
    (56/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.159065295 seconds)
    (57/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.17698472 seconds)
    (58/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117943457 seconds)
    (59/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168101459 seconds)
    (60/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.124079466 seconds)
    (61/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.220274608 seconds)
    (62/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.153534111 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130476342 seconds)
    (64/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.141705598 seconds)
    (65/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.197025731 seconds)
    (66/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.153557025 seconds)
    (67/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.105266542 seconds)
    (68/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.206539589 seconds)
    (69/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129467376 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.150299836 seconds)
    (71/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.186992477 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.126253624 seconds)
    (73/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.128615549 seconds)
    (74/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113712024 seconds)
    (75/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.101481614 seconds)
    (76/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089442811 seconds)
    (77/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08094945 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.131311912 seconds)
    (79/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.213805227 seconds)
    (80/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099025524 seconds)
    (81/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.111891379 seconds)
    (82/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.221288407 seconds)
    (83/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084820743 seconds)
    (84/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.208545357 seconds)
    (85/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.112942534 seconds)
    (86/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170458605 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131231673 seconds)
    (88/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140413917 seconds)
    (89/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108642655 seconds)
    (90/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12341135 seconds)
    (91/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081373498 seconds)
    (92/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137090213 seconds)
    (93/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079163363 seconds)
    (94/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.161002563 seconds)
    (95/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098851491 seconds)
    (96/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123524578 seconds)
    (97/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.205292315 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.09837778 seconds)
    (99/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122502346 seconds)
    (100/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.205740955 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09598941 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12950907 seconds)
    (103/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.183006256 seconds)
    (104/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095839881 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121230171 seconds)
    (106/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.11117586 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147871968 seconds)
    (108/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091275452 seconds)
    (109/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124020451 seconds)
    (110/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09542773 seconds)
    (111/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.103366412 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097902247 seconds)
    (113/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.104196592 seconds)
    (114/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092616908 seconds)
    (115/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.11937901 seconds)
    (116/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.080630565 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.1310573 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.121650654 seconds)
    (119/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116558104 seconds)
    (120/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096149836 seconds)
    (121/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.121358092 seconds)
    (122/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112983759 seconds)
    (123/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119210393 seconds)
    (124/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.142199751 seconds)
    (125/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128146488 seconds)
    (126/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.195834007 seconds)
    (127/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079806308 seconds)
    (128/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130671113 seconds)
    (129/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081087238 seconds)
    (130/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123351983 seconds)
    (131/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.194794771 seconds)
    (132/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.145548717 seconds)
    (133/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147546351 seconds)
    (134/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.169700884 seconds)
    (135/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080489075 seconds)
    (136/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.145287833 seconds)
    (137/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082525419 seconds)
    (138/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078941132 seconds)
    (139/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.104972339 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107198228 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123645509 seconds)
    (142/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.127037313 seconds)
    (143/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093594662 seconds)
    (144/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079302035 seconds)
    (145/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120229669 seconds)
    (146/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09775516 seconds)
    (147/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.209392369 seconds)
    (148/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200527586 seconds)
    (149/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.115021696 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.121466369 seconds)
    (151/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.149183522 seconds)
    (152/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.16255792 seconds)
    (153/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081511863 seconds)
    (154/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079432726 seconds)
    (155/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122029719 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104764723 seconds)
    (157/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104452174 seconds)
    (158/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099277777 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124046975 seconds)
    (160/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098951021 seconds)
    (161/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.10550471 seconds)
    (162/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098735344 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.130315299 seconds)
    (164/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.078679796 seconds)
    (165/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.144457289 seconds)
    (166/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092527292 seconds)
    (167/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.103717284 seconds)
    (168/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080180954 seconds)
    (169/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.103616392 seconds)
    (170/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108413988 seconds)
    (171/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.130570338 seconds)
    (172/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.168240816 seconds)
    (173/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097153024 seconds)
    (174/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102190546 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096213442 seconds)
    (176/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080923096 seconds)
    (177/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.104509213 seconds)
    (178/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.079607789 seconds)
    (179/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.104084502 seconds)
    (180/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.088764481 seconds)
    (181/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117343176 seconds)
    (182/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.080573562 seconds)
    (183/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.142468028 seconds)
    (184/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.122191694 seconds)
    (185/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.151967841 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099250255 seconds)
    (187/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.143537631 seconds)
    (188/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080703033 seconds)
    (189/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.102845219 seconds)
    (190/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.096520557 seconds)
    (191/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.102906799 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093756657 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121658318 seconds)
    (194/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080628834 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11972012 seconds)
    (196/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081303368 seconds)
    (197/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.144478465 seconds)
    (198/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081886991 seconds)
    (199/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.102746259 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.108143127 seconds)
    (201/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102803252 seconds)
    (202/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080088276 seconds)
    (203/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095526914 seconds)
    (204/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.112106201 seconds)
    (205/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092990413 seconds)
    (206/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.103988458 seconds)
    (207/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097239361 seconds)
    (208/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103222944 seconds)
    (209/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.122141172 seconds)
    (210/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.102802215 seconds)
    (211/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098477383 seconds)
    (212/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103880254 seconds)
    (213/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080288421 seconds)
    (214/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.101747342 seconds)
    (215/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080340519 seconds)
    (216/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080404776 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131693915 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121156396 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102340701 seconds)
    (220/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119064702 seconds)
    (221/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.079942036 seconds)
    (222/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079631172 seconds)
    (223/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.11312124 seconds)
    (224/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081584391 seconds)
  done (took 30.968625876 seconds)
done (took 31.844310974 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.413487956 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135587257 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.127991469 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.104679055 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148019803 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108431394 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129014031 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106737659 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126952031 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093827263 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118303136 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127119518 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10540289 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.145798441 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105128098 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120613982 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095423889 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129367803 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103663874 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129835248 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147582551 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098601825 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126357346 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096915547 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148363745 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099310115 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128053083 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103741928 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126604718 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094429641 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129754116 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118591566 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107449356 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131420323 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094884373 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119783403 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094933416 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110562672 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09676023 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120621218 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103835613 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119508518 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.105782376 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120444645 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098080673 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118928661 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094743168 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130642212 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094425384 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.129462163 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096863402 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133269766 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117857147 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095226446 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117561267 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097373132 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127791965 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095092292 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128652483 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095775617 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120825332 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095071626 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122386008 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095251909 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119979621 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097442652 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119905936 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097760595 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117385258 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097634795 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116736466 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097941007 seconds)
done (took 9.405393503 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109799525 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175454437 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150465726 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.127384173 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147357175 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.134640811 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.107790298 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143071557 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.128129152 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.118475841 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14746563 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140199774 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133034088 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126135331 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133348395 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099441288 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126063609 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107147226 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154331994 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143308439 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150244949 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103697138 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149670099 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140408547 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103714542 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.145684943 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104512813 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123703274 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101179579 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142746901 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142719451 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103031909 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12586305 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115288955 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132803966 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12412361 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11172879 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122474013 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100637634 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123374427 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134612693 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115059496 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123326993 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11069569 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124389273 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.103669726 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126299445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12520556 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10475623 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11949411 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104403694 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147207153 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142470831 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.102891784 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.12579753 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.103312381 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12507694 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104002913 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128826443 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125253406 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101251458 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125022038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105087549 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143738568 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124995792 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.102646072 seconds)
  done (took 9.129702925 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127279982 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157554189 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132911543 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112253412 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130669603 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092528453 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115861656 seconds)
  done (took 1.795430427 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100653067 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14750821 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127325542 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151595601 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139572241 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131835302 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135694023 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093314172 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142323987 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127988955 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123629153 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173843143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118781974 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.105919434 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153912469 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117300635 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130703264 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117521875 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.10220411 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.152188834 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123322773 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117842347 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131905209 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0951219 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140706114 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096187936 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187445487 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130639394 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093908395 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124157592 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099419641 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212183209 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118211949 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128502303 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092777537 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147265779 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116679837 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124707339 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.143777738 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099757716 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140862558 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100790009 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125586588 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123886466 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102535559 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133121793 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.106890475 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127741632 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101290644 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147796856 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129697811 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118034545 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120158062 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099660277 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129266485 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10074068 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132849154 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099717259 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.148576792 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125961801 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121814432 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145830305 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140526084 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122592729 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137309882 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117334908 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14176587 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124226271 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102979161 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127036382 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122991634 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.123086272 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.104985831 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.135334014 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126976827 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124038891 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146779433 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099360763 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132677062 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09893015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12198551 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.097585775 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135721745 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098010961 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122317174 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135859144 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107571492 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124800832 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098594277 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141230179 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123036511 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.106971367 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129457158 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100251838 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134165774 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148016957 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105357677 seconds)
  done (took 12.984003748 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104503575 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096036604 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12679364 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120331158 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097432826 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096517373 seconds)
  done (took 1.580740232 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.132997359 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125030098 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113011984 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129320378 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.181294423 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.146311575 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.124901896 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130210756 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143731867 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114256789 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.146236146 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.148742792 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.122175509 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130712618 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.124386407 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129511616 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.149459627 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100195089 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13559524 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101004916 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138044008 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129677509 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101516837 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143000386 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.105569892 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129948083 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104560278 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.138106417 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.135609908 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106129018 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130683948 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104275142 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129009079 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130218507 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.125203737 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127824503 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123138504 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108880634 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127607039 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105814454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148393159 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099930044 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1363757 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.132656357 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105253736 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128681873 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131245788 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105682259 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.150137758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.107296522 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133312953 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128624367 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.106196029 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132021627 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103314825 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130254875 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.132212899 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.125022737 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131109342 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127476164 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103513803 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129510468 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106173212 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.133557521 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102553041 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132965811 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127443694 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105260468 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124888804 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.104966273 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.132119463 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125964789 seconds)
  done (took 9.939583708 seconds)
done (took 36.348739388 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.112319839 seconds)
  done (took 2.042728146 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.871094044 seconds)
  done (took 1.803914283 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.214617879 seconds)
  done (took 18.185531544 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.534270786 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.618175154 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980363527 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168998165 seconds)
  done (took 3.234386533 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.969760979 seconds)
  done (took 1.923185449 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.324324606 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268868486 seconds)
  done (took 1.530653648 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.844412495 seconds)
  done (took 1.788479931 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.580709627 seconds)
  done (took 2.521505464 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.370120182 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205871864 seconds)
  done (took 1.532245002 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.592151161 seconds)
  done (took 1.540090914 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.432883333 seconds)
  done (took 16.384276581 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242560579 seconds)
  done (took 1.206375587 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.313312189 seconds)
  done (took 1.266482146 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.603653912 seconds)
  done (took 4.559428184 seconds)
done (took 60.456207089 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.111372973 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1335966 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109836051 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13117198 seconds)
  done (took 1.431715637 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116774519 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127238227 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107762076 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127733687 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112946728 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128597536 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102721612 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135419076 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103042145 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.130965937 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127192961 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104092041 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128537188 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102401837 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126067088 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104611913 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130975376 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10314608 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128161611 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103926665 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128185123 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128326735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106856486 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128503969 seconds)
  done (took 3.798142979 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111733278 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099612024 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127410362 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100116288 seconds)
  done (took 1.396970283 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.117907969 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143680821 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117717113 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135814975 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143421865 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118012824 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.1254496 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101443654 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126629123 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.1109992 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.125929756 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119277368 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.143863013 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121808186 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114031957 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118154907 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097299555 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143181841 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110784227 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.137313281 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099141887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135224412 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107563101 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140244038 seconds)
  done (took 3.917403537 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181554062 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.139153269 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148349413 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172650571 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126828634 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124194902 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124450278 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13319253 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.128062906 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099608883 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124079754 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155594385 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131356272 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12648619 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100165667 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.129945212 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106326352 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130978299 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101462844 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138627818 seconds)
  done (took 3.587324463 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.112158139 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124709536 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096401891 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123302872 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10742181 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126535438 seconds)
  done (took 1.656019243 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102545727 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094208333 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.120794119 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094480108 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125204052 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095028335 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117918416 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095548442 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094198018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.12133321 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09477654 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119035484 seconds)
  done (took 2.236310018 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.228096441 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.124072971 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125470053 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100848342 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12917338 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098995749 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139772084 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099357851 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180767028 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125811051 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11473506 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178166013 seconds)
  done (took 2.609102104 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223783712 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10516953 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280774316 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384359804 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170499663 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174179804 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283568198 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176920153 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193964743 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145859782 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2136239 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165690261 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135417772 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214742055 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122627941 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.192999618 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183072389 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208827977 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157297556 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248529152 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173641459 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175530903 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197910888 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133532484 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146481614 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164424612 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124869271 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110568018 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179836478 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17738195 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205615372 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130234356 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146332823 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206613355 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251185002 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184531341 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310551885 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142502089 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198218352 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199884488 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286404701 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149179822 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203997092 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162887775 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112420682 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215024186 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164735811 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18613261 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114277716 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150059424 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192074511 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183838259 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189065719 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145546225 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326850818 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130315434 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153280727 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187878176 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197385735 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234542477 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149421721 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.130719091 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194028927 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199600734 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214587484 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.126604466 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175323195 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132060199 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185306697 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212881571 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18579793 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17578868 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216593893 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14069147 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145515865 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21373435 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135164246 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187527266 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169617207 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.128928995 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157271617 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118455809 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135516559 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192539275 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10531332 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221592362 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144573492 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.296004796 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240597964 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165722685 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142743391 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170659478 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174975022 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154239411 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.127219155 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1534494 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177781639 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13856952 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139197254 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165806989 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153071201 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107393259 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161225223 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.130845384 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166532601 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.11581691 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174119585 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174671501 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136781213 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172328799 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130796434 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166606365 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177717943 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232060676 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115094702 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140866681 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211518263 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165839255 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.116625738 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21875216 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20432958 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181115104 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117488323 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203037411 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204440284 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123155299 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231322675 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122768114 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141210153 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158947247 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166832731 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166068841 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162893937 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110760572 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159703792 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210004714 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.13605403 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116514607 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208291755 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107885187 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135835675 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124321381 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145499706 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149461177 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.157982445 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119142066 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162882115 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168040216 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162397337 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16731405 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151368676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200927435 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140528908 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167134512 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129706636 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126688753 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189706913 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202557067 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137991576 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196274726 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177904758 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207012417 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170410096 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139998806 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190379824 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110071669 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128769435 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174634752 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167929193 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173345313 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200489717 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202533372 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.173897362 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161359264 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15844071 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176124279 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193623495 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164647024 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153802944 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171309293 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175298186 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102686724 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132953362 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107694842 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149358895 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14032565 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113343858 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216394134 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173481039 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197317476 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169917163 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147029509 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200669239 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106792835 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173510854 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179377946 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148727988 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201833602 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2021297 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174926281 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153077551 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179173917 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.127090291 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106668717 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140833313 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17518442 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113827324 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14265759 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153352134 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201478189 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18506463 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157497553 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212632124 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175621259 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237054322 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101657969 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173308559 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188885891 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166396584 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171320419 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139320251 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169700647 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198563597 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152477049 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204202303 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171318856 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177455702 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208114669 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165156844 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139575915 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156627518 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178281597 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120388802 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180632589 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155166987 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143809637 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161893047 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117199893 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134975132 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189277069 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153598849 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187806548 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.177251555 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182207173 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135806571 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153093057 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170494922 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126774189 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.126207292 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179922 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204840867 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15474509 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167984404 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195192169 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138616962 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322443518 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208948387 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192939588 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146275084 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152009106 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143335173 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177468748 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172080079 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191640304 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151415287 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190131579 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168780024 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.151709379 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115584205 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156846749 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159628631 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160621815 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140825332 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.134389126 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.15153818 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191044206 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153972262 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168628796 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174315784 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154564977 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.135788529 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149984182 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219244524 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16860361 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186723533 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166324479 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185804386 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197047022 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133814921 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109270704 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136998886 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191993146 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112247005 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167463315 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219816943 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207914713 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167905684 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178340215 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146020591 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.105812837 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168727835 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158063019 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207480767 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152091441 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144785808 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211415059 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159986272 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111085346 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174568276 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293686771 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151693257 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191779113 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129060058 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283893761 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10917383 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140146585 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17823937 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180089108 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111718994 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19270531 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174221315 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1537441 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180203134 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118171869 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225172078 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217085979 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179361393 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183784649 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.154228468 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167435236 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172834057 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197143942 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152724328 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125565334 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17163439 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202699329 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23153415 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113884612 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173649894 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171147548 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169578699 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183393255 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144146482 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197602534 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111597658 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174003821 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149110153 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132598035 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166385599 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192736888 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142077051 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193862561 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165261309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11303379 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134816226 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158872135 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140170111 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152459125 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137809252 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188814504 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108153374 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172112813 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191285766 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139217125 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162884041 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127210832 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13963915 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151941866 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123786135 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144027007 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17926508 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202327977 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138639584 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194587785 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182243744 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175541032 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169245334 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1244671 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671330355 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135480289 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201720073 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126927901 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226648352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130126848 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175135013 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17071149 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159266377 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176062264 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158988217 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230459404 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174807406 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16630272 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111913619 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153065492 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154519807 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.111422521 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161280452 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172196805 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150000798 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.116943513 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165817891 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155846575 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154245511 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118703513 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232969233 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128767466 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191930997 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19532982 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148911976 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176320842 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183492963 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139771299 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170636873 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181960655 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151758937 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131123233 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13945231 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.144719516 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189115021 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105516781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16999813 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16918115 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171498143 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172143302 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115117112 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16841977 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151543861 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169710659 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105335673 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165041062 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168170258 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140117958 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107434856 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164998724 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168706737 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167732515 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133900441 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153595363 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20087543 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133351378 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113706083 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316438955 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140266426 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231467984 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133685068 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14526315 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152663016 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164207284 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.133561863 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169286126 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138270935 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11282417 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140339481 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193977101 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174405122 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165704898 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193984737 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170954884 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198751192 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115274085 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.271754817 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148642707 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165279787 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.111644283 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137505707 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14972783 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114981894 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154431402 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200268575 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188717058 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162528997 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.15307938 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106883137 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134144723 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112938081 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180328048 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163265034 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168492014 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152826182 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.098153567 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153470541 seconds)
  done (took 81.372523808 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169163847 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151053732 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15839845 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206802842 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176137322 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264604853 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21419349 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236552448 seconds)
  done (took 2.63153794 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.114253478 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.143420638 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.15030123 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132269511 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131715509 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.354902234 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144257449 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106548362 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191248306 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144925604 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.129788518 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.622997456 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102163485 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133701819 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120965401 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131140628 seconds)
  done (took 3.896874303 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.289802864 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54109168 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.970257973 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254426773 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235009107 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.163155346 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744143016 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193599163 seconds)
  done (took 12.439346297 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142229755 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152156262 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.266736371 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.183983265 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168585477 seconds)
  done (took 1.970741726 seconds)
done (took 123.891262746 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108948374 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132664679 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104282555 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134203726 seconds)
  done (took 1.524374014 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.12253949 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089454627 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122754157 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087741994 seconds)
  done (took 1.471654091 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.502741081 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088579381 seconds)
  done (took 1.683513175 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.13568455 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146311155 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.126881115 seconds)
  done (took 1.473511942 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115589436 seconds)
  done (took 1.175905451 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120720708 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.110665352 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.151989593 seconds)
  done (took 1.443056331 seconds)
done (took 9.828760036 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146377401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.441065082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394348284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147370372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728928098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387409478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.08375088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16310374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172637735 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099901885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146610871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679643281 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031591074 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.35295887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017408412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.447785953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.7101704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101108034 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134056074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100763632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.060738365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09789918 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128711154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100592195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706572863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403884238 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1281633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.487407564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099707101 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131014633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389923411 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12640301 seconds)
  done (took 17.390483238 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149439406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.188459442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134871027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102549581 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131544999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101485196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.137126782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112647486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187873721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128264361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119645572 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127226227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104920938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128358037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121158109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127752865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101758676 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130521268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106099733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129992012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119558137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127494852 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101843081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130335672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09967244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140384631 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099425393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140071155 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09875495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134706338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131735453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102117012 seconds)
  done (took 5.055296274 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154305761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197873451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136853592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135049703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17746189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12898847 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214910879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13628387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19143339 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127837489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119557087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128238146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165973704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101518796 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150629743 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100648147 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131393587 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102284153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135597288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102140183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147942912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098657874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130154443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102019934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12922823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114573621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129248904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138740328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100905207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132411191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107659743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127791942 seconds)
  done (took 5.367903288 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.113070776 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135724514 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118185111 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145751366 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103302071 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134785081 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.10766379 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.130661511 seconds)
  done (took 2.049892017 seconds)
done (took 30.921169803 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126990376 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141154681 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114909719 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.138378009 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13566483 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126252906 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.11253231 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098260851 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.1392481 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116776054 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128936958 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.100885712 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143459514 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104985099 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.145268655 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110064832 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150885585 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.115571827 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.13023887 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110192701 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.129830458 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.121493062 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.134636028 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100213097 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.15493973 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130989738 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.118986219 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132620234 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.106084332 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101828858 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.146451393 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106232392 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130059717 seconds)
  done (took 5.160251821 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.134413486 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.174883275 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.09847926 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.127755585 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.168330166 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098659155 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.156493297 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.09872813 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125978614 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100085858 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097667018 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.154450694 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.15992355 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.131383705 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.177171826 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.16385397 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.125586135 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.16648968 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150885482 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138285713 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.157469185 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.096968002 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.161189919 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.169180847 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.09847014 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126853584 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.143067337 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159164961 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.171675247 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.132941201 seconds)
  done (took 5.241558112 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114277856 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145257262 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127382832 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201940723 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.17086075 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.11609876 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143528571 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120641469 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158187779 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.101017858 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141542205 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.16130454 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118301196 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.141370655 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106400861 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.143620207 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.12069177 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131444966 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107716948 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148744878 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118973705 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142899477 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116130269 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14028806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100406458 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139803153 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106503149 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143725117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136424985 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111381017 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132805712 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105467395 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131951285 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111903345 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132941612 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.108656779 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152046839 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110575552 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.144205601 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165297682 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111541063 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.133749426 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123855033 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1783603 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103235063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137805669 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112806411 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140472178 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100325139 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149743318 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116422201 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131297507 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144779169 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102060261 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128776589 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10975202 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102141071 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.1335586 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139088633 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10637495 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149330395 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110869029 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13753667 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103661641 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.138394568 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.100867068 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12883692 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.106226062 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.153864771 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107084485 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162784543 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10202668 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137002971 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110353262 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136963578 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11101789 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.131006072 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109721947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137981967 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10657812 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140359046 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104098004 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13515207 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120024045 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146085666 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138320486 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107911239 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137801833 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105293402 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132745339 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115672172 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132847759 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105986681 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140831345 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102307812 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.1338045 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10849733 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136161052 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101380465 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151020748 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106242463 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.13062221 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.119791049 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.131970547 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105130385 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.139425503 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114203915 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.131136914 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10639268 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136326094 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100537244 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136710869 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106039349 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129820236 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.113942609 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.142020616 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106367189 seconds)
  done (took 15.899452839 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.257788096 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233335309 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204520118 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.317370972 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154323384 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.128433928 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.229443926 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.184648529 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132693954 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172072472 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187785687 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.193140471 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102215353 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.164545729 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.232189897 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.323301421 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.166075969 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.175258242 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.143054855 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.154871197 seconds)
  done (took 4.946774079 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123969 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171959298 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16132129 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128711435 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.133862406 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.115960955 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.13368796 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.148282546 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103744201 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138432574 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102220229 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.140540337 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105433193 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135645719 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.119938226 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149367564 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106341578 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139468902 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148669879 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109286311 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132368835 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.154004367 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112487135 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161525089 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110617184 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147029751 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101273937 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140511797 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098772843 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.132883409 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107663305 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148697256 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.139074366 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103477265 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137307667 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102863811 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.128104575 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104875898 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.133217099 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107132577 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.148616426 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105801694 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133160015 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102733026 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14067634 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100030794 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.107197882 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.138853796 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137294509 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111778449 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13852587 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107089454 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.140047316 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.1142833 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128808438 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.111826974 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.145147374 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136593038 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.110899765 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130412241 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101901604 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106414172 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.131324251 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107245382 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13761802 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149009404 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111753932 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.132478315 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108613304 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136391426 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.106578393 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150400486 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152787387 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.100977283 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128646059 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125414929 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099872229 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120293154 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112856148 seconds)
  done (took 11.026298741 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13710313 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132526524 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121991589 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168189273 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.11689257 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.141555297 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103176737 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.153857166 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109047449 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141362478 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109512362 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.148131154 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16100783 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.11626216 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.133014252 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118162839 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135913715 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.14465971 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152591631 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163836382 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.11466996 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.137913487 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115910057 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.14483042 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135960494 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.146051761 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166311512 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.108528604 seconds)
  done (took 4.882104555 seconds)
done (took 48.219224303 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.2020016 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.383729006 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.165393259 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.170873167 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.18593807 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.211238879 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.161000926 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.35938418 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.869571774 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.152227648 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.168394496 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.163901376 seconds)
done (took 27.279573214 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.189009079 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.761464424 seconds)
    (2/2) benchmarking "String"...
    done (took 1.481627437 seconds)
  done (took 4.32590894 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.166413876 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.164014529 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.41308961 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.166893218 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.18287705 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.1642159 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.167670129 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.168317635 seconds)
  done (took 15.511463876 seconds)
done (took 25.276844783 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.214292702 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.375742768 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.413716762 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.17556816 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.165776871 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.15810223 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.148831232 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.195302069 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.173022473 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.153376089 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.175737801 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.469801462 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.160190162 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.567690045 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.15111006 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.172417438 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.177766209 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.391256943 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.172704007 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.199678759 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.144043859 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.169727108 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.179107002 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.200028998 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.182690088 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.169227964 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.155948564 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.145407963 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.36077784 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.164834258 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.200517364 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.159548903 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.227955139 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.162811805 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.266116118 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.187138025 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.336161082 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.159324889 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.146396825 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.175118452 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.347754804 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.574420507 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.178941104 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.149814191 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.166781013 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.238010908 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.147040593 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.8734465 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.168624258 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.144172409 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.189946772 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.544009552 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.158891658 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.164978101 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.165411464 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.404643489 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.188733855 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.184307734 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.188721857 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.163468133 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.158612543 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.18009106 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.173950646 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.160937674 seconds)
  done (took 140.806782247 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.166799574 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.16546952 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.165613416 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.217009532 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.167212971 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.16384705 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.161742841 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.161365913 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.159634128 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.189108825 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.166318854 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.166415623 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.166178796 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.152978833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.163764637 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.182099542 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.162991382 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.165194524 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.160482235 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.16361372 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.163569858 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.163433375 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.175462689 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.159477754 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.19628195 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.253060549 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.195412364 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.190034204 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.165038962 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.164631241 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.194292337 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.227041259 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.755086669 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.020500476 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.177542328 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.180245266 seconds)
  done (took 78.832152141 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.164087514 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.168733446 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.169768049 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.165893936 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.165927361 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.19858317 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.167020889 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.720222257 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719859331 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.885567195 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.524320585 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.482494667 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.437106334 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.167449824 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262418568 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.174317106 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.159532194 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.183064173 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.19351263 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.167494669 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.170463498 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.72263518 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.181830599 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.161916298 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.338659477 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.177920266 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.20079252 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.563743432 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.27705244 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.161866715 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.199868696 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.495639044 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.211188483 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.161201613 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.53368223 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.845416165 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276670385 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.165537785 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.198739212 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.167281418 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.451356587 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.16290243 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.1665054 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.173882056 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.829541127 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.165841813 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.723249814 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.168684364 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.114634839 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.166133198 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.172640364 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.074760534 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.810420962 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.177756524 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.167576637 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.169754627 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.16905378 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.166911821 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.19773318 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.124114695 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.263194605 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.17210655 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.175224909 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.202616202 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.170402086 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.359104131 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.163268281 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.388945311 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.227063199 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.279265613 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712128196 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.168707654 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268276552 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284202704 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.164768905 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.168829742 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.167537431 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.168562764 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.166738321 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.277055013 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.161419389 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.576372487 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.333685549 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.181814818 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.45058593 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.264965939 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.16331611 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.548113968 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.167760384 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.167702746 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880519857 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258137421 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.162185724 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.170412086 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.166635556 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.572251284 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.710541193 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.390908713 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.170269608 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.246855707 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.167879113 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.582401706 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.709938453 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.836472593 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.170980729 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283714735 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.335150749 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.181908827 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.167361662 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.410044802 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.165880996 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.231647154 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.161835384 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.566555117 seconds)
  done (took 362.595461971 seconds)
done (took 583.317454631 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.883950562 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.82811061 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.960141586 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.856830666 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.821518048 seconds)
  done (took 10.437769509 seconds)
done (took 11.523893028 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.36234514 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.36035653 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.227877924 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.364265477 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.202933416 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.380444077 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.339989587 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.192478272 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.275751075 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.252799749 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.272540815 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229135027 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208753384 seconds)
  done (took 17.756769541 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.448724105 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.16763688 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25074493 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.41697102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.205049126 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426149748 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.458703405 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.167425096 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316098919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207563935 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.19225064 seconds)
  done (took 17.345494917 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447909258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170612764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.240429865 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418356258 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.20724511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434540167 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.470365086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.167840501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.351558602 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.200042406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190878543 seconds)
  done (took 17.388220411 seconds)
done (took 53.575880809 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.213443696 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.33543117 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.200137504 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.184423471 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.182107075 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.183975182 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.188519541 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.184389327 seconds)
  done (took 10.762199808 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.179070413 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.181745487 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.184479796 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.185102555 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.184077288 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.185653899 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.183087753 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.181496844 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.177964735 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.180466508 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.181142203 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.181772547 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.180439693 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.181998938 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.176626801 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.179082994 seconds)
  done (took 19.99168955 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.183066684 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.181652555 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.18071775 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.180418431 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.179679782 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.183405264 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.184320259 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.182132848 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.182040059 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.179544921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.18019091 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.181207235 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.181857982 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.182109917 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.183173713 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.182959296 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.184218492 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.182317059 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.186882277 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.183667607 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.181980612 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.185098593 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.179561149 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.17946025 seconds)
  done (took 29.464819098 seconds)
done (took 61.30496226 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.1766222 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.187829282 seconds)
  done (took 5.454971449 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.245498408 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.248657915 seconds)
  done (took 3.589196154 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.188362799 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.185989463 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.184865652 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.187104146 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.185338428 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.189144043 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.188029103 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.188222401 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.184386015 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.184578442 seconds)
  done (took 12.958984156 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.186877061 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.187084804 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.179718585 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.186280168 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.185230524 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.182208966 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.18282062 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.187534822 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.185124897 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.184204655 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.184220257 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.182064721 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.183986489 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.183245802 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.185167398 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.183166461 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.182444056 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.182905941 seconds)
  done (took 22.40747606 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.198972096 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.206640147 seconds)
  done (took 3.498853923 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.32231147 seconds)
    (2/7) benchmarking "second"...
    done (took 1.223749458 seconds)
    (3/7) benchmarking "month"...
    done (took 1.301481205 seconds)
    (4/7) benchmarking "year"...
    done (took 1.291214863 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.224518999 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.20305757 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.227669883 seconds)
  done (took 9.889714835 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.186264967 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.372471712 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484257104 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.74485877 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.18670955 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.193884405 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.065194025 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.191864928 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.19808311 seconds)
  done (took 13.716900482 seconds)
done (took 72.606787214 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.178374847 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.207954273 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.19042205 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.186221247 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.521555155 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.181969572 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.180916636 seconds)
done (took 15.740573363 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.167184334 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.165407859 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.179504392 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.180614761 seconds)
  done (took 9.787274427 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.181816067 seconds)
    (2/2) benchmarking "read"...
    done (took 1.524512738 seconds)
  done (took 4.803339107 seconds)
done (took 15.685317316 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.187475617 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.183700868 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.188042219 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.18461978 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.188842872 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.184069321 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.186737617 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.185586635 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.185355291 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.186845102 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.19003023 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.186725233 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.188503872 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190763268 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.185671944 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187905218 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191046629 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.190083047 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187860628 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.188284628 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189700855 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.187631546 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.187388059 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.188473861 seconds)
  done (took 29.598491577 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.189848602 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.188049507 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.192453978 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.187367561 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.188027976 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.189718291 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.18962574 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.185774551 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.1872613 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.190450002 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.185918408 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.186819761 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.189043673 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.189488525 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190861774 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.188277649 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.191622523 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186019512 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189072841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.18709735 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.189436607 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189084855 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.188423211 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190993349 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.18807428 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186993154 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.189439041 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.191892935 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192146147 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.189028343 seconds)
  done (took 36.765248001 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.196344013 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.201401334 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.189844277 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.189627303 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.193312239 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.189647471 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.191357655 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.193305074 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.192977169 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.194014606 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.190692389 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.192783492 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.189734208 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.191426941 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.192861663 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.192844098 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.188699148 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.190395448 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.191805016 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.192239234 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.193219848 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.192339736 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.190655127 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.19242154 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.191278364 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.190722034 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.192349931 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.191784686 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.194256526 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.191120889 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.19455061 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.196246406 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.196361657 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.195629581 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.197901535 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.194242611 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.199622722 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.204476299 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.194073451 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.196566195 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.197380138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.196741492 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.192591026 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.191740134 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.194454043 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.193414462 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.193994207 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.193309482 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.195020496 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.19623503 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.195462681 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.196055655 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.193621781 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.192408252 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.195036846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.194377005 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.195319154 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.19759773 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.197657713 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.197647581 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.19342376 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.194352476 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.195403226 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.196059997 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.195924104 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.194876464 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.195655263 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.194600967 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.193509801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.193564226 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.193727774 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.196973004 seconds)
  done (took 87.07405276 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.194538456 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.190931357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.195937907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.193412195 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194526959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.19389218 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.191461398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196009509 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192858887 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.197900301 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196901194 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.193459792 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196841114 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199293921 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198788715 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.196801137 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.198713548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194997144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.198447395 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.19618525 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199290952 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.193909674 seconds)
  done (took 27.40802438 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195930834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200585752 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.195382 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.200626702 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.19983162 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198718639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.197900286 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.198342903 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194600983 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194984065 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198132348 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198658937 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.198435491 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196782039 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19472409 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19499028 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196854248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.194758536 seconds)
  done (took 22.652324447 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.195550155 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.196539516 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.197616209 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.19579737 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.19858024 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.200852436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198366333 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.201259481 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.200284069 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.196328368 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.19805228 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19831441 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.198090953 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196544492 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200392017 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.195256395 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.201599039 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198190467 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198656857 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198182277 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.198057638 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200735386 seconds)
  done (took 27.466759053 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201834133 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.20203999 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.196765251 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.197351404 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.200322658 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.19907567 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.198155233 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.19799503 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.200726446 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.203402208 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19970115 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202988202 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.205161619 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199456574 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.198274747 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199445888 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20165778 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198552449 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202819742 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202242648 seconds)
  done (took 25.116035902 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204376678 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204687638 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200931543 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203342541 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20248391 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.205265446 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200574759 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.203192148 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202994656 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20581616 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205671259 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202232029 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202634779 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.203219582 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.201006385 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20256565 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.201916971 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200841873 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203682318 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203259212 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202366454 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203301444 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.199605472 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203988649 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20139767 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202731166 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203154602 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203166178 seconds)
  done (took 34.787294205 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204095174 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20309345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.201416614 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.202109605 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.202506476 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.198827335 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.201093716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.201459409 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203413918 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205850959 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.203801752 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.20349008 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.202615764 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.205039279 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20573286 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.204299694 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204361431 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.200203225 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200754698 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202460187 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.203851357 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202649096 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.204414179 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203765407 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203110562 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.204036336 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20111175 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.202476012 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203795411 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200537851 seconds)
  done (took 37.195614527 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249258209 seconds)
    (2/2) benchmarking "in"...
    done (took 1.248272496 seconds)
  done (took 3.607992558 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.203559498 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208684613 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.203851779 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203326675 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202364139 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.203380399 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206428015 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207063135 seconds)
  done (took 10.751226485 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.208023067 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.209555315 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.208071141 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.208928316 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.207882414 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.206587016 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213197101 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.222223462 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.209202289 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.209429656 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217984972 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.218546667 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.208120841 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.209468262 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.207241698 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210465128 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.210329457 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.205875117 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.207827706 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.211101589 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.208075642 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.209600762 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210225763 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.20869433 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.209395089 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.22369172 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.211013929 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.214401434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210547566 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.211848835 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.207728477 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205356921 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.209418476 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.206716205 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.210465881 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208735486 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218446033 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226986015 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.21311084 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206770936 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209067056 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.206973095 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.208433183 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.211061436 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211406981 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.208096952 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.209234322 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.209121403 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.208043148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.215203885 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.219677672 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211782701 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.206462497 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215621234 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.209223423 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217132909 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.224876251 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.212979216 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.223333762 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.219793527 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.222490665 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.233306916 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.212015078 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.20952177 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222698108 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.23927883 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220193701 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.226586094 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.211596956 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.214637373 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.220710146 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225317983 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.2374068 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.218177211 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.212702211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.212974973 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215709869 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212868745 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223178133 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.235132662 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.211033607 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213638832 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225167812 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241648842 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.214198178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.212469541 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.212304382 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.211009397 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.214582293 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.225240123 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.23173455 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.212323073 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.212380749 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.210605467 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.209064504 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.212616505 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.209605609 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210169771 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.208689267 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.213091062 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211327707 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216328755 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.222537001 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215808721 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211165987 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.218302912 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.213444223 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21528583 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.220156915 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.213046589 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.21283583 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214625858 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.219924474 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.209514828 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215382349 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.223424276 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.214323177 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.21373539 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.214490525 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.216579646 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229844947 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.241566688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.21449178 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.21591535 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.21974499 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.22486931 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213612755 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.216678933 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.21674802 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.216272585 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.212988608 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.216301311 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.217410592 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.215800013 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214391492 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217128332 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.214787076 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.214024931 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.215615098 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.216501133 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.217561396 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.217561724 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.214196493 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.218075313 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.218005434 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.217803772 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.223606632 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.215623436 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.216628118 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.214780306 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.211355226 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.214887881 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.218187916 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.215671398 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.217189927 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217340631 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.21591267 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.216763289 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.21612128 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.21691267 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21742371 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.21758892 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22247716 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.215093822 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.222467774 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.217298997 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.212917773 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217674995 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.219888217 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.215702687 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.217598624 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.21713318 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.220894278 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.229505008 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.218451838 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.21966089 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.220901495 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21919806 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.220424836 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220117181 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.221657423 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.229788635 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.218104108 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.227649179 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.217858454 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22189278 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.221996851 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.222435687 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.221398514 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221787684 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.224578997 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232604118 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234381771 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244725576 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.223978827 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.227562118 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.223503649 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228154489 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.227935824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.223044322 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224284711 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220820727 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221614655 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.217065472 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.22222131 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.218928085 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224039632 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.219336217 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.219746159 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.221091142 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221032589 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.219175144 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.222201149 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.217679214 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221021228 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21934961 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219859203 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21884295 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.218345674 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.2193704 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.221556272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.220183152 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.226937896 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.216364295 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220641076 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222195449 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.220867709 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.219071287 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.220423582 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221520632 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.220831026 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227168839 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.239377392 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.221787144 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227468171 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.240024474 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.220369771 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.223253764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.224749515 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.21970132 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.22486508 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.232223321 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.221859978 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.223827897 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.219642504 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.221417434 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223251412 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.229945502 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.218631993 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.222407994 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.223588709 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.223382381 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.219918892 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.223561914 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.22316792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.22250219 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223907355 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226832943 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.225456744 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223864171 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.223717482 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22531442 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.225557269 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226750136 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.236939236 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.228805306 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.221606557 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.226623811 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.225748694 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.227181955 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.224199877 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.227852651 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.221832676 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23907326 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.247671185 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229116362 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.243084773 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223902309 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229288938 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.242543039 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.228576176 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224013278 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223328331 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223503595 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.226970671 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.220285629 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.227244689 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.225140831 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226981306 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.227905542 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.2321353 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.227820334 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.224970683 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.224909527 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.224997131 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.22482197 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.224714743 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.225189241 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.227670903 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226032359 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.224516354 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.224476338 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23317883 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246976458 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.227436394 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.226410851 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.227719924 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.226207312 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.227592009 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.225352967 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.22870303 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238728123 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.231953231 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.237591468 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.23070814 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239165938 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.227915349 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.230481713 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.239613539 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.226423107 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.227478149 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.228740939 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.226020466 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233390602 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.24572347 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.229395627 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.231847709 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231039102 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.229542072 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.230830341 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.229097809 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226684159 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.228992542 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238660657 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.25069141 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.232257688 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230281866 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22656532 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.227211833 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.226159589 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.226398659 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231010264 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.227843593 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.229158785 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.231077205 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.228504256 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.230281382 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.228996591 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.230344295 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.22579067 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.22885205 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236273603 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.249934651 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233207097 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.231946374 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.236537582 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230977138 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238308642 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.249150483 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.229819337 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.228332626 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.231188671 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.229720093 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.229172384 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23158014 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.226449384 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.230261659 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.233033357 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.229127822 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.231693082 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.228153291 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.229024553 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.22948476 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239213537 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257525943 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.231280374 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235802815 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.230720139 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.231534602 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.238962188 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.2281792 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.23088145 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.232228827 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245936715 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243119008 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.232427003 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.232525111 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232387407 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232064562 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.232600593 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.231816619 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.230990304 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.23414991 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.232121239 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.229313657 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720331608 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.232980484 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.233645769 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23190106 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.233644738 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.243235555 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.233961476 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.233035428 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232882913 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.236358456 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.233807644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.234219016 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.232074106 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231150025 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232626431 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.233794563 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241347102 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.244538086 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.233846034 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.234785859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.232608163 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.235074972 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.232678146 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233475927 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.235739224 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232489735 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.234665383 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.234092092 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.235413311 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.23248831 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.237109574 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.234585723 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236128275 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238332065 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245335785 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234857129 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.233502794 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.236396043 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233850301 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.233667487 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.237575729 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.241684934 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239667935 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.247670168 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.243669782 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.239556628 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.233556124 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240347883 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.245302089 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.233432076 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.236061936 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.233952017 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.235215769 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.234848605 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.240261285 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235554309 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.243149959 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.234226118 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.234705215 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243090833 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.255223714 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235439299 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.237050072 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.240845878 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.236935371 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.233814563 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.237713692 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.234618779 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243693177 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.254608287 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234847128 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239103316 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.236558366 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.238658067 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239642758 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234674507 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.237748024 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.233114375 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.236138026 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235601392 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238094196 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.234440605 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.235763686 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.235869738 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.238764463 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.246911724 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.23570908 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240149847 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.237374643 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.237556071 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236072527 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238873719 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.23780498 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.237010154 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.238217205 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236034484 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.238691052 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.239430589 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.239098616 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.240117986 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242475567 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237701048 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240934871 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.252042298 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249634104 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.236634023 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.238478772 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.235390655 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.240504294 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239404124 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.23722014 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237459269 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.239105179 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.238025458 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238470528 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.23882702 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.239187516 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257394221 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.25687234 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240085433 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.239833613 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241342952 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.240868347 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.236093242 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.237029165 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.241294003 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.24109377 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249085916 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.238347096 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245784821 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257219885 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.239862622 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.245113001 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.244140995 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25171671 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.241950419 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241244574 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235139568 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.246110026 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.259078484 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242190545 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252370412 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274304517 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.261016154 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.243182337 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.240610508 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240028162 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.240910659 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.241365953 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242278901 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.241082224 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242637445 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.241827837 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.243372346 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247382314 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.241570817 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.244626294 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.242752276 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.244408064 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.24200436 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.241037953 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.242050362 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.241817775 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.241020469 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.242914039 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.24170679 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244484432 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253395696 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270528514 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.243318416 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.241146781 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238370273 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.247011854 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.245669933 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256043104 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.253699966 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.242732447 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.242202294 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.245164017 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243275187 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.243543959 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.242602357 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.244173243 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246581632 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242527483 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.257299819 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271288193 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.246472266 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.244971669 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248447045 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.246642897 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251508396 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246884546 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244121561 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.246305588 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.250614424 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248242066 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.243747735 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.24414174 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.248256569 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.253844376 seconds)
  done (took 733.956441577 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243438407 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243590273 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.240691002 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242577759 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24257614 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243683191 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242113164 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242286199 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.242394637 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242493252 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.243257867 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243706403 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242292538 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243532971 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244265096 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243630533 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241944392 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243756233 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241044942 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242635256 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.242724249 seconds)
  done (took 27.245570111 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.246851785 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.242381474 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243742422 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244783558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244677813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244883663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243835667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247146228 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247980336 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245177827 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249000417 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248099515 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.247239004 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.245885973 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244532268 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247875184 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245183172 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245374772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.248658 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245078915 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248104018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246489364 seconds)
  done (took 28.560893802 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.248671873 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.247463993 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.249573891 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.245791567 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.248429598 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.244287779 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.246924316 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.247625092 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.250048834 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.24797207 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.246101084 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.247033841 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.257130907 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.256264545 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.249396741 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.247648495 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.2490195 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248458192 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.247061801 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.248014448 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.252763977 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.265750211 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.247278187 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.2487951 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248550192 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.249762796 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.249539517 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.249293802 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.247847187 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.253626547 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.248643997 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.249190031 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250003863 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.249059788 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.247588301 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.256055949 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.248276887 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.246755729 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.249121663 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.260852368 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.273454165 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.251030417 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.256226881 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.269304877 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.250491381 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.252461779 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.259261095 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.249536527 seconds)
  done (took 61.204811638 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.846441176 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.857186374 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.85725377 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858828614 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.85955067 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.857772247 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.870237697 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.870024575 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.850361732 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.853635653 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.855025335 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.851902653 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.861736231 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.855294218 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.862307828 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.856544786 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.853930094 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852774857 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.86893088 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.866277876 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.850821253 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.856356833 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.858702802 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.855744949 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.861572164 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.860334231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.855766212 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.859496389 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.859689714 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.857660223 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.859203086 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.876114472 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.867252464 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.852021509 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.858376784 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.856327677 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.862514538 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.85714879 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.863257118 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.859033301 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.861201692 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861924842 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.865189312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.867323289 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876832611 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853617718 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859596786 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.858155148 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.86155731 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.865067938 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.865934499 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.859571754 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.864021679 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.858338937 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.861922666 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.868615673 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.874412022 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.870531992 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.861454036 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.863755813 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.863411018 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.864277206 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.865956199 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.867437296 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.864244508 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.863119855 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.857614865 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.865111232 seconds)
  done (took 127.695917411 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254186374 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.254149532 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255902592 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255636963 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256624085 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.256223489 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254738787 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256494855 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.25793036 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25471308 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255563213 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.256589373 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.255037102 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259967626 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255840104 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256884815 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.25482819 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25652283 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258205107 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256583283 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.25701847 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.257424236 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.257489486 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258957687 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260802931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254886481 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257676322 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25834306 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260338377 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258534876 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258992063 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.258457106 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.259380349 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.259494349 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.257958018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.257034788 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259121248 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260252275 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.257652381 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25987412 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257222285 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256655301 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259815191 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.258767198 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259644808 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258575786 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261384674 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.259848818 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259242268 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259408857 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.257901919 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258161562 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257633287 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259227645 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262338257 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.261569416 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25823691 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259452713 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258974233 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258328711 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262127347 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.260538818 seconds)
  done (took 79.157109373 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262850197 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260159819 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.257622872 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.258730488 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262321094 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258141806 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262152977 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.261476946 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261894092 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.262338516 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261346216 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259293328 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260502328 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262171821 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25827344 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260368698 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258537384 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260392777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262306301 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259011891 seconds)
  done (took 26.369534951 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.25863539 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26081986 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.259286009 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259068413 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.262823098 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.263391216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.264108237 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263231364 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261217025 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261713303 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265268034 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26308927 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261964528 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261286485 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26514049 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26072432 seconds)
  done (took 21.354456689 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.261063741 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.265045819 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.26369847 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.263827556 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.261144483 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.260536685 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.262408758 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.26056748 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262310621 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.264056593 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.261832354 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.263097825 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.265352826 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.262906244 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.259637313 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266605826 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.261989228 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.26332143 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.264434816 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.262223839 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.262320346 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.262251952 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.264251639 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.261434948 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.26172214 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.262043241 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.262190831 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.260199861 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.261207614 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.263595277 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.263681715 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.261443183 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.26213313 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.261343504 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.264083534 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.263072801 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.264739836 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.266115348 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.262435907 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.265800563 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.265658968 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.26006823 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.264506989 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.266527903 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26488408 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.264145288 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.263502324 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.263116489 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.263018807 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.261620802 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.265606621 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.268215983 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.268121552 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.266488235 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.266337722 seconds)
  done (took 70.648676873 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265912721 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264740277 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.264166652 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.266998379 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266362524 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.263918425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.26714613 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265248706 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263433634 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.266789394 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264501453 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266462479 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265115919 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270801067 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26512361 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269894014 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.2651909 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.264720626 seconds)
  done (took 23.95227179 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.265406212 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267140023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.2652948 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.265511423 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.263937178 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269223716 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264442367 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.268044402 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268234343 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.265075898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266171327 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26970187 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268489554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269417874 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26600409 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26567591 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.269100328 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27067017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266350708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26491486 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270289525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270486941 seconds)
  done (took 29.047753561 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.267854499 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.268041558 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.268569243 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.284119263 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.292678808 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.267344389 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.267007651 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.269232946 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.289593194 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.32570501 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.319080117 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.293309668 seconds)
  done (took 16.581128318 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26947286 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269636392 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267653129 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270487139 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270162725 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267352732 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267804592 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269456468 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269509662 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268844996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26922087 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269565681 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271636669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268023345 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271418658 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270685319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268511386 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269853629 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26949492 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272958206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266845193 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272965718 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269238499 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269966819 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268698202 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269681119 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273217172 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269871872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268450621 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272951718 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270737252 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268691206 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270945638 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269967253 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272024112 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272868665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270569208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272580862 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273619474 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270941102 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273040758 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272918677 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271196937 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271140736 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273632057 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270857616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271463799 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271039829 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269311755 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274203932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274860564 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270754074 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273802825 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275018163 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272639513 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275697934 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271229392 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273303612 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273419531 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271992985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272281649 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273271194 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272496921 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271421354 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273268107 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270526701 seconds)
  done (took 85.062267119 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273241021 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26955849 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271708661 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271600326 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27248392 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270865233 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272005774 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270918048 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269185986 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272371469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274621489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271676237 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271521984 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2727946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27203422 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271795236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273754714 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271791057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270924414 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273471652 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273001023 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272636935 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273442669 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27385177 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276421289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276439555 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272903737 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27415752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272740857 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273775994 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27520335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273449669 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272939938 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275758111 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274230824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274797434 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273216778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271423171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274233682 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274001903 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274116731 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277963944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275685879 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27529757 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27422933 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274563425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274674383 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27414646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275987026 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275495287 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275389673 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273210697 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276950497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276174436 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272319401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276283362 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275473432 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276088213 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276437754 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276972229 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276613649 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273765821 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278009426 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275295231 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276973671 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276299229 seconds)
  done (took 85.255532754 seconds)
done (took 1759.608004654 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.438622523 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.395394382 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.276844244 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.288300837 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.269346181 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.297529796 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.284876142 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.272369012 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.275985929 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.276195111 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.276242269 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.466208235 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.269922507 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.268791428 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.277108774 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.374731948 seconds)
  done (took 26.184524642 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307164969 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283436856 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.399426743 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.299497596 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309113421 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.471527799 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.335449453 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.284972019 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460274659 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.300584799 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.271136692 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.302615522 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.283792377 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.278287793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.2946509 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.46691063 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.540699087 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.273250899 seconds)
  done (took 28.338823873 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.747493635 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.282352824 seconds)
  done (took 5.210814075 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.30209098 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.282075137 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.285911637 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.278870813 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.273162098 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.273213201 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.280410125 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.293758478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.276464765 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.411120475 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.284671837 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292448657 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.301628936 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.285232099 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281979154 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.324382419 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.435778716 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28075248 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.281365614 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.287595115 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.28263324 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.379886713 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.326450265 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.284239127 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.411178798 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.28459651 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.28607028 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.289676634 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421812655 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.2808128 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.282963731 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.284543654 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.284759966 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.185370188 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.755847742 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.291348849 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.307712701 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.291491901 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.28317823 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436620338 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288094151 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.292440503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.276834468 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.762170097 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.451703599 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.41182533 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.294528329 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.287688457 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.288314604 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.352467831 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285382034 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.287169396 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.330095238 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.128895281 seconds)
  done (took 82.591841728 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.293069324 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.277778712 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459870837 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.30095279 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274823866 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.277358166 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.27880077 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.580000906 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.314779146 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279023704 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.62075343 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.864542872 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.296939809 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.323915424 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.157400832 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.343646115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.278435183 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.296884598 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.282040502 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.277498082 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840814602 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291167726 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.277146051 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.458884041 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.321595146 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82110049 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.280278487 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.282423681 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.283971004 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.274907354 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.819517792 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.302014319 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.334812782 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.275340564 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.559744143 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.683445171 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64926753 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.288216309 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.315754816 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.280460224 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.285542275 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811566173 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667034584 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.282371978 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.279220931 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816423279 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.280345968 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.289780418 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.279269627 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532842978 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.281374294 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.281201032 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.299403882 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.291477608 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.281455571 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.351968695 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377234771 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.824275215 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282520815 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.278020329 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300054406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.285301308 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.280725069 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285961252 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.283065351 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663845897 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.42972362 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.28985287 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667553319 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818128642 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.298035001 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.879983656 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.299807293 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.284911446 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.49543546 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282344389 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.283800685 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.835727036 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.29037207 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.278749873 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653154727 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.283030573 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619115213 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.306219327 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277771062 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852702867 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.286859886 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.373448579 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282558889 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286253429 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.284318278 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.287413252 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.573205188 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.319286281 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.283120756 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.283097939 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.302556843 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.280541551 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.285250834 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.287645049 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873455181 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.308746714 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.283486904 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286445985 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286408973 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.287720646 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.281719034 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.285467892 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553006214 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.286838332 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.288807198 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.285109763 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.278663489 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.292303201 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.471213982 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.287008213 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.616491881 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.287326608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291374837 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.282446567 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286085922 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.290380605 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28082766 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.287597489 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.179143069 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.596496884 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.304870126 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.298066528 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287555316 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.285576334 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.311505484 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285669222 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.318776466 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.287014708 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058171365 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.309282018 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.315418033 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.287474714 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.296166723 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284769148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.306238593 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28751603 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587678258 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.571459676 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.430961825 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.285735025 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.279864662 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.064546958 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.317805746 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469709897 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.300662795 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.287164073 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545021956 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.507304769 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.287053576 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.280419417 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.289628027 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544529626 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.283274247 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594082989 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85084815 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303751672 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.28960812 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.073271016 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.001461473 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.29154188 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.293994334 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.625534455 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.309196103 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.289796548 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.289816842 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.289254428 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.282414025 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.303070901 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.290407177 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.292012741 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.288294441 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.329127548 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481910358 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.30325078 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.298480361 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821890074 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302758026 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286970263 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.293779044 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.290506241 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.287232273 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.348700709 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.292069033 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.302936828 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.294360368 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.285209689 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884202322 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.290251157 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.292523638 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483521075 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.982853398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.305528019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290576357 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306623784 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.181483453 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846459727 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.340851673 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.625297204 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.300010208 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330365133 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289502939 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.300009959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843801379 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292754194 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311531172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967202939 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.307976634 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.908762432 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.288870897 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.293213724 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911547883 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307662236 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.294279807 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.287308125 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288231447 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581661466 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.289246698 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.325055839 seconds)
  done (took 488.54235726 seconds)
done (took 632.04173777 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291947745 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.291777498 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.278879437 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292726293 seconds)
  done (took 10.350209924 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.302858782 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.299135766 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.301178379 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.298272317 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.303172238 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.298221026 seconds)
  done (took 8.998098091 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.290587346 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.294479116 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.296094912 seconds)
  done (took 8.076277497 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.508397711 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.309910892 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.633989718 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.3152529 seconds)
  done (took 8.962867209 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.302778953 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.302393601 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.300837158 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.301133038 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.304344163 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.304066578 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.302940171 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.303710356 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.304445493 seconds)
  done (took 12.92417295 seconds)
done (took 50.502304064 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.39322356 seconds)
    (2/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.506474057 seconds)
    (3/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.496805691 seconds)
    (4/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.40237348 seconds)
    (5/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.304196187 seconds)
    (6/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.373489941 seconds)
    (7/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.55097128 seconds)
    (8/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.379362361 seconds)
    (9/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.957147847 seconds)
    (10/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.341558768 seconds)
    (11/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.29125731 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.332217475 seconds)
    (13/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.483458984 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.318842811 seconds)
    (15/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304052797 seconds)
    (16/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.309203259 seconds)
    (17/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.310376722 seconds)
    (18/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.400431737 seconds)
    (19/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.456760535 seconds)
    (20/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.525612963 seconds)
    (21/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.421779111 seconds)
    (22/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.384159314 seconds)
    (23/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.327338665 seconds)
    (24/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.121625596 seconds)
    (25/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.184530998 seconds)
    (26/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.326092665 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.404678421 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.29867244 seconds)
    (29/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.277032035 seconds)
    (30/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.379543199 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.30572565 seconds)
    (32/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.282422992 seconds)
    (33/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.043251103 seconds)
    (34/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.962960366 seconds)
    (35/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.308432397 seconds)
    (36/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.339403202 seconds)
    (37/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.938210517 seconds)
    (38/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.289022589 seconds)
    (39/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.282726342 seconds)
    (40/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.41534833 seconds)
    (41/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.331740463 seconds)
    (42/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.29940531 seconds)
    (43/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.294039559 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.405947951 seconds)
    (45/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.308502007 seconds)
    (46/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.30502299 seconds)
    (47/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.950182349 seconds)
    (48/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.397552992 seconds)
    (49/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.345766171 seconds)
    (50/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.334804572 seconds)
    (51/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.364393819 seconds)
    (52/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.526960458 seconds)
    (53/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.281663326 seconds)
    (54/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.395147089 seconds)
    (55/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.310452785 seconds)
    (56/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.366725278 seconds)
    (57/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.158976379 seconds)
    (58/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.399670992 seconds)
    (59/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.458132826 seconds)
    (60/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.403641747 seconds)
    (61/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.43552471 seconds)
    (62/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.308553478 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.473075658 seconds)
    (64/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.316162884 seconds)
    (65/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.424075775 seconds)
    (66/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.328786749 seconds)
    (67/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.306719436 seconds)
    (68/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.290458497 seconds)
    (69/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.294845134 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.391896599 seconds)
    (71/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.511460904 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.302389978 seconds)
    (73/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.409785165 seconds)
    (74/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.306429686 seconds)
    (75/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.451480417 seconds)
    (76/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.331366067 seconds)
    (77/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.012901332 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.353851808 seconds)
    (79/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.387502284 seconds)
    (80/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.446057426 seconds)
    (81/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.453282479 seconds)
    (82/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.052733331 seconds)
    (83/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.446165123 seconds)
    (84/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.382369238 seconds)
    (85/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.184362945 seconds)
    (86/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.350044786 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.335681511 seconds)
    (88/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.520202939 seconds)
    (89/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.313635339 seconds)
    (90/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.35739069 seconds)
    (91/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.95926701 seconds)
    (92/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.622085842 seconds)
    (93/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.497669381 seconds)
    (94/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.373708146 seconds)
    (95/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.338715006 seconds)
    (96/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.391198089 seconds)
    (97/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.060607984 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.397921618 seconds)
    (99/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.362341697 seconds)
    (100/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.015923401 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.31737552 seconds)
    (102/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.330097323 seconds)
    (103/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.486803568 seconds)
    (104/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.332449588 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.392578098 seconds)
    (106/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.497113059 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.327283961 seconds)
    (108/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.452480547 seconds)
    (109/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.311883326 seconds)
    (110/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.48730905 seconds)
    (111/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.375799386 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.408263936 seconds)
    (113/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.058163683 seconds)
    (114/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.380057593 seconds)
    (115/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.485167842 seconds)
    (116/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.026609925 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.496491582 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.40566598 seconds)
    (119/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.398163259 seconds)
    (120/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.317366825 seconds)
    (121/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.647064295 seconds)
    (122/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.336838325 seconds)
    (123/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.315857813 seconds)
    (124/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.352655937 seconds)
    (125/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.519704227 seconds)
    (126/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.054128279 seconds)
    (127/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.407318257 seconds)
    (128/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.329186038 seconds)
    (129/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.307107084 seconds)
    (130/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.41268959 seconds)
    (131/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.014176279 seconds)
    (132/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.457388837 seconds)
    (133/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.460972892 seconds)
    (134/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.423542126 seconds)
    (135/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.432442925 seconds)
    (136/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.334447256 seconds)
    (137/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.319382685 seconds)
    (138/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.301277236 seconds)
    (139/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.650273088 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.372872029 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.353709102 seconds)
    (142/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.315943539 seconds)
    (143/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.343151318 seconds)
    (144/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.385070588 seconds)
    (145/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.320703567 seconds)
    (146/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.395692634 seconds)
    (147/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.965631867 seconds)
    (148/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.455670819 seconds)
    (149/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.370894613 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.333913015 seconds)
    (151/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.683866343 seconds)
    (152/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.326633114 seconds)
    (153/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.484309515 seconds)
    (154/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.435525503 seconds)
    (155/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.319307867 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.427590065 seconds)
    (157/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.310831058 seconds)
    (158/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.476628697 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.379044834 seconds)
    (160/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.341151534 seconds)
    (161/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.300105243 seconds)
    (162/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.346517313 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.310479605 seconds)
    (164/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.380325914 seconds)
    (165/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.343485271 seconds)
    (166/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.397155279 seconds)
    (167/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.491116368 seconds)
    (168/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.473654854 seconds)
    (169/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.368545222 seconds)
    (170/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.405001636 seconds)
    (171/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.336595804 seconds)
    (172/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.352019492 seconds)
    (173/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.317573222 seconds)
    (174/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.427723111 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.331861821 seconds)
    (176/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.389462115 seconds)
    (177/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.445155599 seconds)
    (178/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.130633808 seconds)
    (179/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.455612026 seconds)
    (180/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.473532007 seconds)
    (181/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.336039493 seconds)
    (182/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.363211122 seconds)
    (183/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.329102353 seconds)
    (184/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.515484224 seconds)
    (185/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.385389335 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.411175687 seconds)
    (187/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.330317578 seconds)
    (188/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.291496945 seconds)
    (189/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.345598812 seconds)
    (190/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.293816517 seconds)
    (191/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.069580458 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.366217318 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.364642199 seconds)
    (194/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.959816546 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.323179713 seconds)
    (196/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.189565148 seconds)
    (197/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.351184961 seconds)
    (198/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.29354562 seconds)
    (199/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.430689899 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.363834431 seconds)
    (201/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.310408135 seconds)
    (202/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.389336967 seconds)
    (203/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.339227381 seconds)
    (204/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.358144632 seconds)
    (205/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.389594219 seconds)
    (206/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.399028958 seconds)
    (207/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.323322291 seconds)
    (208/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.430686669 seconds)
    (209/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.347433223 seconds)
    (210/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.954751113 seconds)
    (211/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.323867955 seconds)
    (212/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.056564459 seconds)
    (213/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.073957327 seconds)
    (214/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.341096803 seconds)
    (215/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.389423557 seconds)
    (216/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.393105635 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.495495502 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.361881599 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.476474653 seconds)
    (220/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324292452 seconds)
    (221/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.326207863 seconds)
    (222/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.441750918 seconds)
    (223/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.479765231 seconds)
    (224/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.308147543 seconds)
  done (took 362.074631692 seconds)
done (took 363.268748245 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364559352 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.491649129 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.334269677 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335411052 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362384212 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.309689895 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.352652436 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.330719193 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.318107044 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.322515242 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.308776794 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326892493 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.33926206 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.351766818 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.433000935 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.328748777 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.337621473 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.320630516 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356824171 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.376777537 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360709714 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362157275 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.329802 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.336716717 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366149917 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363653245 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.340239268 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313582611 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.319354165 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.360357267 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.311304554 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.341563875 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369975188 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.370913169 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362430623 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.319764103 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364611702 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.494060555 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.356192424 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.355830744 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.323296666 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370094318 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.337544741 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.339349357 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371738401 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.332521568 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366282359 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.440473471 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.311277828 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.310430496 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368046497 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.380865257 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.323976331 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.310368851 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.314176716 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.445952181 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.321305661 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370463828 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.322216415 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36546807 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.432607546 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369055999 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.381519188 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367588915 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.322197834 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.341100523 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.32389413 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.378979513 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.320355345 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367154966 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363898807 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.327628818 seconds)
done (took 106.63467314 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.447614582 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.318992124 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.48215879 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.32270784 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.484481461 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.461277192 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319202863 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.320716961 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.320944757 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.119127816 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.31911902 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.319770237 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.319684303 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32014511 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447899629 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.323431575 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.320711049 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.01156274 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.322079536 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.460502638 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.321297407 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.323759546 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.324355138 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.116035458 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.319439734 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.318282214 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.463747087 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.322714895 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.044346559 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.315960864 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.320261362 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.018564544 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.464407697 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.342092954 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.334936208 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330899277 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.488222568 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.339274855 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445162587 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.445996903 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.483154253 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.362274504 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.317592933 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.322604875 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.327835082 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324359418 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.322823895 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351324701 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.322972766 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323275067 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.025907959 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.335272123 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.322087076 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.322741772 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322892353 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.35506931 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.323650209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.326784586 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.465610925 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.325779858 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.449598345 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.142507824 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.118121224 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.326215955 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.322441495 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.323629181 seconds)
  done (took 107.642995266 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.393874902 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.402274922 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.440479015 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342421007 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.378452247 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.446450806 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.342495509 seconds)
  done (took 10.963530755 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.331826839 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327714706 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375238198 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375345944 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.326213983 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.536938308 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327073895 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.340248343 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.325425221 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.401945691 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.327131574 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329975574 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.332867556 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.324443117 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373977801 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.336329345 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.443871315 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.329501263 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326781314 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.482375593 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326104245 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.334455775 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.402387557 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.339912395 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.3294026 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.334348959 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.291050503 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330414247 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323684097 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.329597028 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326425307 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.435276786 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327581614 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.324552583 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32811757 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486605476 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.328267249 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32562303 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.333001642 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.329114716 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329646294 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.329274485 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.329985109 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327284732 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.328640253 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.354089719 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.329438023 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.331600208 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.332652027 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329682433 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.403538275 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330564865 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.328364947 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326781056 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.408810743 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337739487 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.330238872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.32848309 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331761984 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328215545 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.487109053 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379559634 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.330706831 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380748312 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331150281 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.330818763 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.330804632 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.3309562 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423628058 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.331650078 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380847529 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.328567271 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.555858898 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.357252796 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.336504809 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.334204176 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.333609472 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.33170288 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.327812637 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.342404949 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.328600146 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.333571841 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.3369146 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328328209 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328568437 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.516280825 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.487402939 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.331440744 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.344030982 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.339896236 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332369107 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408124821 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.334391901 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.332293857 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388051072 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.449196657 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.411653346 seconds)
  done (took 137.77689815 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.344927406 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.345447981 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.338180647 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.359501236 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.335959734 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.332797977 seconds)
  done (took 9.28060298 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.336111401 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.336344726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.335903398 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.336311431 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.331849019 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.334084439 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.335464689 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338131233 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.338752267 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.335661542 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.335593323 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.338055512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.336681795 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.336844023 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.334216475 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.336107596 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334900979 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.334779506 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.335249505 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338237237 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.331963644 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.335210829 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337764537 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.336662701 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.339924866 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.338714597 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355895554 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.334024389 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.335554704 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.344118651 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.35761141 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.335893268 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.341010303 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.341188225 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.340424951 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.338229114 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341358193 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.337765228 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333048807 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.338470996 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.338051248 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337524802 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.33855777 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.337012896 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.338828 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.342279748 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.340815366 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357973673 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.33802329 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.337787633 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.337613956 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.336361642 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.337010717 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.339713175 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.339925345 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356401535 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.345484349 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337383729 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337119942 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.337737001 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.339878783 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338511281 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340712892 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.343927786 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336007045 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.336959992 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.339530348 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341238534 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339790627 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.340788145 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.340679116 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.337065364 seconds)
  done (took 98.626970257 seconds)
done (took 365.501310357 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.169643621 seconds)
  done (took 4.400971415 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.438645358 seconds)
  done (took 3.671531626 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.096828966 seconds)
  done (took 24.332464394 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.412434351 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.335868835 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.335565866 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.335555466 seconds)
  done (took 10.652743892 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.677713344 seconds)
  done (took 3.908764502 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.338160283 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.323972144 seconds)
  done (took 5.895034141 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.668285217 seconds)
  done (took 3.900233827 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.773244774 seconds)
  done (took 4.008423219 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.356139535 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.350411695 seconds)
  done (took 5.950139216 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.318149102 seconds)
  done (took 3.550104768 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.610707204 seconds)
  done (took 16.844458788 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.335984411 seconds)
  done (took 3.571995502 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.357295863 seconds)
  done (took 3.588504818 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.167843417 seconds)
  done (took 6.397322871 seconds)
done (took 101.901300105 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.333774495 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.333420606 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.334266213 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.332843587 seconds)
  done (took 10.567801149 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.393602323 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.389266526 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.392103868 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.391690957 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.392165528 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.392090457 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.366324128 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.367017791 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.392321266 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.393951668 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.394038569 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.392744692 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.392453893 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.366407672 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.392877518 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.394497419 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.392658588 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.394327248 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.368007532 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.395002305 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.34316249 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.392417395 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.392576447 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.341780987 seconds)
  done (took 34.458059697 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.8404012 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.413344825 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.494698395 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.393112548 seconds)
  done (took 7.375676097 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.420902661 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.419748746 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.433315502 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.470869442 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.483615062 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.432557733 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.367624045 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.364562676 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.350411204 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420837991 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.477242305 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.42090642 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.503272682 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.342211671 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549640841 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.342917318 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.345131108 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.480200856 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.473567785 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.483838136 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.343180775 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.421875408 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.426119123 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.422820448 seconds)
  done (took 35.430909948 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.350262014 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.35448831 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.340688752 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358621658 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.342957422 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.342563753 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.344961841 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.349528485 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.3407938 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.341835284 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.34279353 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.356292169 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.344780792 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.342296476 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.348244053 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.342608625 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.349009671 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.348129915 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.343693641 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.351756594 seconds)
  done (took 28.173412284 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.337470495 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.338641127 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.687375394 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.59214459 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.336335527 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.339037285 seconds)
  done (took 13.866158065 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.417453353 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588148017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.345790407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.73091184 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.818269468 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.347495671 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.346883339 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.612766402 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.953473011 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.922584087 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.405840182 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.420893627 seconds)
  done (took 20.146867878 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.348634607 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.33874479 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.343253714 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.358040207 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.404230985 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.367885205 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.354770644 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.340894067 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40385064 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.426021794 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.368350322 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.4061918 seconds)
  done (took 21.698694838 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438209152 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342476631 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345461324 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397299543 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3385776 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182062016 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402740678 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066800091 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.362172017 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617619617 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345179275 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44330615 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600100645 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3440802 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346979322 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.340103467 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574422517 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867293019 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348095578 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342631642 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377696791 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352218345 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346680795 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573128517 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348182156 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344793546 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.608294428 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343221366 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648475496 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356888816 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354095531 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346582154 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620926979 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01419165 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456153967 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571258791 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357626042 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346642597 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.342362793 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.365964247 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347219763 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341494188 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354721115 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347952299 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345727794 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34659259 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076318035 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.363352939 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.343658732 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347012614 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621186626 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446208487 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350289166 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34783212 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346596683 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349015754 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.351250924 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442298121 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928596463 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349543065 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350338161 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.351311364 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349386329 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350295239 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99712625 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.348370618 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.353776023 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353781303 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350315058 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34262506 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363654629 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349068518 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.367360316 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349029386 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110916243 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348762782 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351492153 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939750898 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34860113 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.351445831 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582486134 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346679108 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351125887 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.347052663 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347569861 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106716472 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357967781 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.333935491 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367162868 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070467643 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58549546 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367892668 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379364565 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569716183 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.331490239 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350122738 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.350359955 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345020373 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365525995 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077696712 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358873471 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.347457243 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608075586 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.557103727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344812325 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.333617516 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842690243 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362455298 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385127266 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348390765 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575666081 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.965031871 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365068214 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348861595 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365448271 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349528731 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149669672 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350970204 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.470797418 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348049981 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635896871 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.191396647 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35260893 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418861283 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353291782 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348879119 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350395131 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351253836 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350006462 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.568077435 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369239411 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362924667 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.350819611 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350166524 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.350767293 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353231299 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.351947539 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573858085 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363674787 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628323618 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351522787 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351842426 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344643047 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.570763525 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.352420259 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.6912638 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616102394 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348643958 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35187472 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364443892 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369832152 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457392704 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372984211 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.353540034 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609994306 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.354666677 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.35749512 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351518241 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35338595 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359111117 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.359675409 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35419785 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976024372 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338239399 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357133617 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247455859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.371772976 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424358401 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361040735 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584556278 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.358950935 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368057934 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.362604551 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.362502383 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58246638 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363970735 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.357024283 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433740074 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.845922126 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98949204 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370635589 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.354894822 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.352909868 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.350348825 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354621338 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356645173 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356879759 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585637088 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369658234 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355889701 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00134017 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356356873 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357284404 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.365860441 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36893034 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.363596087 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360466542 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.352813644 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376976419 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359877126 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.368599526 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499056742 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371340791 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354466566 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.873177209 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363953619 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358693147 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358343561 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393045961 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362807253 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183614523 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616767935 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359184305 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637448394 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361555227 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.376470497 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.35768613 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358630386 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361612992 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.364068136 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367279137 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.367840388 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358368163 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361799564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933512485 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143910319 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934569859 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365010663 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.356448486 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362328097 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092990581 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372271547 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358934212 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613927085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0925199 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372088717 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850502369 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.380488763 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176900226 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639880902 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596076625 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361902672 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.368178561 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638099454 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577304138 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394077376 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359281785 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362846973 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.340842041 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934669924 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372043096 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433938324 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094780398 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374094977 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363247437 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.395411263 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.361872793 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790461523 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373655273 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361206129 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359439695 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371202954 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188193018 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366912656 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363650024 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027515839 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375515784 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.857359666 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374967415 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591991016 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.374903582 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.367057557 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.358699928 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.361067246 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.620766806 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639386398 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362318262 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376220486 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942711482 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.237126546 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.367387057 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364572019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16340221 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366453482 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672649305 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.365239254 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360717426 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365155539 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366715833 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363253412 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.361370865 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375201218 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341759237 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894006292 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.367025815 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396431567 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370026368 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366401692 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621045766 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.378265307 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989860212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59652207 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373143122 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390839694 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.367389065 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371423337 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.351604357 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36693879 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366264868 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454288397 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593290059 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374276773 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.34602888 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434552091 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578660541 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364959363 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374006726 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628985305 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.36431951 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.379626248 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151800741 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398206747 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374304374 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370179741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366840584 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38737641 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435358244 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598603328 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.38177583 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.379122876 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791815853 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390012885 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369826711 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.382396191 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463726234 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379952116 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.369156032 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.141245802 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993758685 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151772269 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997373009 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649505917 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371385012 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377943193 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369412655 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526654632 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367870814 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642940451 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369215448 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.370251797 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391113661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378812394 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371319545 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581587899 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643368211 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36885535 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369010948 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372269711 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.37066201 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380083816 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.580771501 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902689591 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973921735 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371054044 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369178224 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.108491809 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657077732 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369188849 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371194561 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370480378 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.381275551 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373099283 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376494284 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383895925 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513390967 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646877043 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053527668 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.396039156 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.399939849 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.88705198 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378644626 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629288815 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368281475 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602067174 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999397929 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127955642 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639900595 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439502599 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59957167 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.372082408 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532498195 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.372130865 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373083805 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372389192 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371719111 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.36874152 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.381812697 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006114237 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636428186 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.3747525 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.371458597 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403885567 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.381161709 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593533582 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144470406 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596346651 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381693458 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37589579 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372416473 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00608094 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65535174 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37407542 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.3717737 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632525542 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37369773 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397120464 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.889889992 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.367611604 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974367384 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.354038957 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391236223 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388252853 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13815865 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007356573 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.378477651 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9104593 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373821652 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37376958 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648920779 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.378248724 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387847707 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65041534 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376474627 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373044708 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625949178 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.005208097 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202600127 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.391151517 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387916304 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.377259777 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374192441 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416785278 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371703656 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370702522 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.814320959 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387873681 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374475506 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382299608 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.38224531 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373555972 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.373696933 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377775193 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.377068867 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.362336917 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.361557748 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392041253 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47081474 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958212439 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400301011 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.046553872 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.701634747 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632262084 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372695271 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.363902558 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.381376849 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376508067 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377714746 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373170678 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371060148 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972581383 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.373339191 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.388708867 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37991612 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.375277771 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587644014 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391964957 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607599437 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379082605 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395339774 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.359196738 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378442126 seconds)
  done (took 971.713784459 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.399402839 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.392119216 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.396305875 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.390694508 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417676987 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.478236902 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.437353158 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.385291886 seconds)
  done (took 20.570326474 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.379071587 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.390193394 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.390292389 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.387827555 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.385719183 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.884576065 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.395684256 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.390059045 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.396250072 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.383649864 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.377187331 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.366917378 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.411410666 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.392065556 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.367632054 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.391849143 seconds)
  done (took 32.969185729 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.534901346 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.565162176 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.649358805 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.444547703 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.415482558 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.394352755 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.67187567 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.392771078 seconds)
  done (took 27.341897761 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.389077033 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.389376774 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.38849872 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.391701079 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.389898016 seconds)
  done (took 8.223025372 seconds)
done (took 1233.765712536 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.38435284 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.386492635 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.383033377 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.385003022 seconds)
  done (took 6.813763718 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.366110384 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.365313429 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.364520903 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.380371062 seconds)
  done (took 9.750647118 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.141148986 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.04945097 seconds)
  done (took 5.467199937 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.881110273 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.879405566 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.871965728 seconds)
  done (took 6.906830196 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692907233 seconds)
  done (took 2.967839232 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.290565801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.380550933 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.071384799 seconds)
  done (took 8.015235204 seconds)
done (took 41.191412096 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.378501166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.622507155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.538804401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39047071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.536409863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.5366452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.214200916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.390646551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378769079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.389280609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.381193145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.536703094 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.122120865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.637217544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.122779174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.724795628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.542732593 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393822772 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375876326 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.385346842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.210817822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.383730559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378400923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.375563057 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.541976387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.591162337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.381326706 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.718002564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.384597023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.376158921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.521372786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392995449 seconds)
  done (took 83.128770271 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387577065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.376288394 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.379452344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.3976056 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.376612756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.377773361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.41179855 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.37516652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.40576758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.377434293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.378946474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.377093933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.380567319 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.381350616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.387434952 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.377736077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.379673494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391514059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.3779502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.378133345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.413225067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.378872619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.396947208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.395904778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.379894702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394382908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.399218115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.394073294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408180674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.378836704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394035913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393689528 seconds)
  done (took 77.67926591 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387085091 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.379931233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404782163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39864724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.385904314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.382987175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.378892825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.387059578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.384557499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393803096 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394594493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.381321719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.382689886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.389610591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.384360993 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39449207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.378499751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.38468842 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408775478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.382434575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.401046886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.383923733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381692599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.380225898 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400155259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.385581323 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.381517693 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.383244727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.381737597 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.38412844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.399768212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.386455158 seconds)
  done (took 77.693736849 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.668692875 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.392769193 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.396124003 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.387181643 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.393215152 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.391678701 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.386171517 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.665319107 seconds)
  done (took 14.961984634 seconds)
done (took 254.73555069 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.384256147 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.948758226 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.430190226 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.383841768 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.41655648 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.412914918 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.63165297 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.430334212 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.625036962 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.406782451 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.40998195 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.390618595 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.244386433 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.553167029 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.310745707 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.386061485 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.34556102 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.388093837 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.004679229 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.686307422 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.415840301 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.404818195 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.274178345 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.350010156 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.369232709 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.476919592 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.500756581 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.621867093 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.558981841 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.478602265 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.962357077 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.388425601 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.386107866 seconds)
  done (took 65.257453139 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.396131032 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.510346176 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.393770536 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.396071585 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.513236619 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.394600526 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.392705195 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.395306488 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.397295742 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.394415222 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.393897278 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.396040166 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.397220954 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.442238708 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.519377468 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.414760821 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.394213598 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.507061149 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.395123 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.387836193 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.437995497 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.394778933 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.39962007 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.442147534 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.397381268 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.396889379 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.514363373 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.401696413 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.391483164 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.508452608 seconds)
  done (took 44.001380051 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.39781594 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.041883959 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.177191388 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.401766521 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.398214187 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.401646646 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.711727767 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.398516294 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.401746934 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.400025294 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.94722614 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.401346485 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436714148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.234669089 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.402444604 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.395923522 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.397174515 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.398649959 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.065338133 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408202572 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.732320829 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.397175756 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.71498043 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.40932401 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418632194 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400496567 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.403340085 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.329254231 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.404795089 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.948943662 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.237582717 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.710603089 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.241570432 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.220435915 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.24032277 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.401147231 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.403954981 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.953836442 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.404652142 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.399504295 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.713063524 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.402475419 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.214476354 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.147041882 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.420258213 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.402154169 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.312923067 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96206377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.667108669 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407635681 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.231676309 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.404888981 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.401983993 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.403471878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.668528165 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.404561583 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.40239962 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.345542093 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.404124613 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.715922726 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.403092801 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.402137166 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053305951 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.401827988 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.051316272 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.403758501 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.408173789 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.423618027 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.214701583 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.406231531 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.168972038 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.423587566 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.400938527 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.950662708 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.0537427 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.403728025 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.403630172 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.058996264 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.27579415 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.717848336 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.408941341 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.313438122 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.724240219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.408771811 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.40528139 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.406159446 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.402267067 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.481204592 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.715705852 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.07871928 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.147582482 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.376949362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.71787614 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.412641694 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40442622 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.352295161 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.402107639 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.403962077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.210859401 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.144049799 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.420667741 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.410692729 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.160860834 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.428433212 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.723322885 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.411781836 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.221594736 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.40554626 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494114269 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.406699557 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.41397784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.426036312 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.721055975 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.41124063 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.406168804 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.129031092 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.997148378 seconds)
  done (took 199.045628147 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.410594524 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.394649839 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.401953094 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.394886136 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.401517232 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.409621333 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.399065269 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.400724939 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.404873973 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.398687532 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.401842441 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.408909665 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.405224412 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.399104575 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.399024801 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.412677927 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.409863827 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.399972326 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.410315919 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.404381459 seconds)
  done (took 45.360097209 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.407387954 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.034236749 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.990863043 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.409822491 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.405638926 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.408103136 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.471800893 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.409346625 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.407172268 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.742858126 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.598815402 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.425508845 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.406196677 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.405757186 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.989949039 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.397205689 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.742340487 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.036855736 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.411464496 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.035065312 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.40024644 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.408607733 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.407545235 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.03707923 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.74387366 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.724364732 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.472668325 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037216591 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.408283418 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.409642679 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.034773488 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.410937293 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.408092075 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027477046 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.429298511 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.425866389 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.40724633 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.471020556 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.472834697 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.748859163 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.117492053 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.725111368 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.425373155 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.593021038 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.408307389 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.39822745 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.040078214 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.42988816 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.397692805 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.41130852 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.419469486 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.994997234 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.428072679 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.995158677 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.426490859 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.411045695 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.041261905 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.996973259 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.014637125 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.597830762 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.427455714 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.724762182 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.410829926 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.042902377 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.430091483 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.412143868 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.410645289 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599979139 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.060053464 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.728937512 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.752569438 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.75153498 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.411027985 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.474885643 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.425162843 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.817058405 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.474643407 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.85438567 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.748916991 seconds)
  done (took 129.550132782 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.707507806 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.526672949 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.855772998 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.062117444 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.409018507 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.539586431 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.526678137 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679156106 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.408619592 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.494387827 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.130742773 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.511416456 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.21208922 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.493155233 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.510175344 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.556715595 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.843722563 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.409918204 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.086276425 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.107177196 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.408340817 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.523006749 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.009861378 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.645965011 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.422494945 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.958691307 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.43050111 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.135626037 seconds)
  done (took 54.903330192 seconds)
done (took 539.394111533 seconds)
SAVING RESULT...
DONE!
