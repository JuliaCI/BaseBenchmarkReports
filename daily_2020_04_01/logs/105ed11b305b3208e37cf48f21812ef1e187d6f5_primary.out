cset: moving following pidspec: 14396
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.286330779 seconds)
loading group "string"... done (took 0.623861393 seconds)
loading group "linalg"... done (took 7.564452202 seconds)
loading group "parallel"... done (took 0.153980442 seconds)
loading group "find"... done (took 1.194438857 seconds)
loading group "tuple"... done (took 1.754996545 seconds)
loading group "dates"... done (took 1.254459695 seconds)
loading group "micro"... done (took 0.216991205 seconds)
loading group "io"... done (took 0.927313131 seconds)
loading group "scalar"... done (took 36.759688557 seconds)
loading group "sparse"... done (took 11.521062713 seconds)
loading group "broadcast"... done (took 0.919186806 seconds)
loading group "union"... done (took 12.297464062 seconds)
loading group "simd"... done (took 4.33979238 seconds)
loading group "random"... done (took 8.793427442 seconds)
loading group "problem"... done (took 1.806509343 seconds)
loading group "array"... done (took 19.86099417 seconds)
loading group "misc"... done (took 1.645962041 seconds)
loading group "sort"... done (took 3.111939441 seconds)
loading group "collection"... done (took 17.111258431 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53648943 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129945971 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138431076 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12435428 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15338311 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123116699 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129803526 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090350356 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.860621738 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154776886 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122630937 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412985131 seconds)
done (took 5.372966021 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177077057 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086800129 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08839151 seconds)
  done (took 1.252426532 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071590857 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131875643 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072989571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073162284 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073742097 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072786526 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072561241 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072497722 seconds)
  done (took 1.647389459 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0788498 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075769522 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071292418 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073788765 seconds)
  done (took 1.38009107 seconds)
done (took 5.616080672 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.776123178 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216711591 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190242254 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396587087 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133538982 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.176829164 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.632813702 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329963264 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191714548 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080808271 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113127067 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.348247558 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126256348 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640603592 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082782008 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095094824 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14390938 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422694944 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072880982 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087786951 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094625504 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13428451 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092249663 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079018016 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15020413 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073054343 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139454984 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085913889 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071682845 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.219420654 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17776984 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661847474 seconds)
  done (took 10.348613909 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104779986 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103624351 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074936973 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130770563 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105564624 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075363532 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080490751 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072815902 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095102541 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134927219 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.097286422 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111139081 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071368186 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074971961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089042025 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213352317 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086012349 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086735666 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075900116 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084324014 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112907344 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083174155 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085084502 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085205862 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133837903 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185473466 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103449835 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103227345 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071605075 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087076032 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120053878 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133503533 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072820862 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073927667 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130364088 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100786834 seconds)
  done (took 4.768629364 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.980850481 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146029655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093923025 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137612096 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070568145 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.116380481 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112377789 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071159733 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085464964 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212468958 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.437832811 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.586134576 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.116049157 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115538057 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10850307 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073701157 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074288545 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072836517 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.493464012 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104745589 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113429382 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086239266 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076887947 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074718942 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071402197 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072664829 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06992875 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073556041 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11864397 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082187246 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.318243967 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125192181 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073475363 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.938401808 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168716517 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070580619 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.244898368 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169642464 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098106271 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071478445 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143995787 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07422084 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071046948 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163823506 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070387251 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075022987 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075219822 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08972749 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108529141 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125632195 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071223471 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07207636 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172150438 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071682181 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084985127 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.143922504 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159528477 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073734742 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292053112 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09535317 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075725662 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07124702 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.195541808 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126840994 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073458335 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072596239 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074221923 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073981262 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384625601 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071159818 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.182086386 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075923551 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083099552 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075490237 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074940655 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070535161 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077718684 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077684698 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093689076 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071879494 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078619715 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07113656 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072245857 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072340122 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088596862 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.47904491 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072432145 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0738168 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071101743 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096027551 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101113538 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072796548 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071637937 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104111231 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07355348 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072664048 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072424875 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070284788 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087902131 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075169029 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11877069 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074238699 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.103880168 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104125694 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0745339 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106516324 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083360373 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073489597 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.410877241 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071133103 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072969643 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07139481 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073163523 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07203163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08318283 seconds)
  done (took 22.489441728 seconds)
done (took 39.667771247 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246189441 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074620241 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075283558 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075414059 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075274605 seconds)
  done (took 1.709713247 seconds)
done (took 2.861139004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12503878 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103091391 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070299671 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101652707 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070458375 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107835196 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104653312 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082113408 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103295981 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070809709 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10145504 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070104517 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070579607 seconds)
  done (took 2.344164414 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089142821 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089442701 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076075098 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088029241 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070375993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087934033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087146829 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096905161 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087718292 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078034445 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069382921 seconds)
  done (took 2.063385224 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088147694 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088826977 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076073901 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08776235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069099197 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086854593 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087769085 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091197459 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087185893 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079806435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069011439 seconds)
  done (took 2.048296641 seconds)
done (took 7.594551424 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08169269 seconds)
  done (took 1.210772896 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532304039 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.674448357 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084736311 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108792429 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191863022 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115361545 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.246493772 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088886482 seconds)
  done (took 8.329780102 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095190146 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075063345 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075760569 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075032164 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088062264 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07729508 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073678592 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077172907 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075950037 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076575145 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074151427 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077415266 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076375118 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073706161 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076400799 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074355934 seconds)
  done (took 2.448098052 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096716516 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096465626 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07906658 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079632945 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077033698 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077019312 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079636906 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078718128 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075819275 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077050345 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080362744 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078217463 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076287044 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069158508 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079201553 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.08081303 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075537074 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078771274 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079627439 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079955743 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079672322 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069041928 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077131425 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078918065 seconds)
  done (took 3.128143874 seconds)
done (took 16.256107878 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11151896 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073890735 seconds)
  done (took 1.322893042 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084555835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085474401 seconds)
  done (took 1.316166104 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085427112 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0695668 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092020517 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081328228 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070490249 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070323021 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090510168 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070673712 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070024196 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070547343 seconds)
  done (took 1.916670529 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072210081 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080595559 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074795843 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084537916 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077423578 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068759339 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075493323 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072083806 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080597902 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067515238 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075258345 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08779992 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074923316 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089288339 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075476773 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07279088 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075226583 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071862338 seconds)
  done (took 2.522984793 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070707392 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071289143 seconds)
  done (took 1.293539855 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071015557 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068562708 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071251967 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070392416 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067766956 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06726028 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068024592 seconds)
  done (took 1.631790814 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.361755191 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121238472 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304924372 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077514491 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086794657 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259088666 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072298151 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076929315 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076737337 seconds)
  done (took 2.623474164 seconds)
done (took 13.781949113 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08575428 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091539241 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100820494 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382356461 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097113299 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072529459 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118917158 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184709348 seconds)
done (took 2.296109757 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212827907 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.661726276 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403637398 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207611701 seconds)
  done (took 2.427879204 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334570396 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093482932 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066189991 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073548788 seconds)
  done (took 1.732668458 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072376974 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075274133 seconds)
  done (took 1.307538914 seconds)
done (took 6.843203715 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072128087 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071423295 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.070100136 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072213462 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.069281446 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070287276 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088124224 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071539434 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071684757 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.071966191 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.07184823 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071910511 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06938196 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068983348 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07125032 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06905972 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.182361211 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069097531 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068843443 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071420123 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071483716 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069827507 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069389743 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071221822 seconds)
  done (took 3.013418697 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088450198 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071903075 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076070047 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075895105 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073933552 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075490482 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07511857 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071218017 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075206388 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07349692 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073550547 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07338204 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073257318 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073224474 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073425493 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073147725 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075455046 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071081272 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073247459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073356432 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075066773 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071515265 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073099148 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07542053 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073315253 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073208211 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073449538 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071819045 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075801388 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073657703 seconds)
  done (took 3.394847353 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075697146 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068433786 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068825403 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076145781 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068378793 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069217225 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068257354 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068304034 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069388161 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068137222 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069068606 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067865301 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067990144 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068619466 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069105105 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072495607 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085145604 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068424554 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068107543 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068508755 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071910124 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070900367 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068275199 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068011857 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068185699 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067682098 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068606728 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068091362 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06852376 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067908143 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071633186 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072476555 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068266428 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075931928 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072328601 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068627556 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072772074 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068112815 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068992785 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067880619 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068157296 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067794092 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068007095 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075854233 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068507638 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069873658 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068398302 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069524414 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068972459 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070268989 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067588611 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068024123 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070307465 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069912732 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07254421 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067811151 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068740872 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068272461 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069239302 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068096168 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067901208 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067988286 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071449462 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068932165 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084866273 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076223483 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068219556 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069734811 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069625256 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071414153 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069534156 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08390604 seconds)
  done (took 6.22798524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092278701 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092035279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071102048 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071344668 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066487942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068935544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074505303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069042789 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071205922 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088165086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068986013 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071054235 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07076767 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072614804 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068972661 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071032817 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076879279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066641953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068651873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072569158 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069149622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074396005 seconds)
  done (took 2.80345153 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153194383 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075260264 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109559544 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080212531 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074938941 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07974113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074731405 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07538921 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074877408 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073110837 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073170392 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074864291 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074619323 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07319659 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07272807 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072829772 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074967795 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072617843 seconds)
  done (took 2.638305044 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082414792 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072090619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093421357 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071789865 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071982521 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07382751 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075431907 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078979376 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073574613 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071359756 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078458367 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073775727 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073843938 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071407907 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073705632 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071396905 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073565606 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071284533 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078388968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075004698 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075471264 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078808731 seconds)
  done (took 2.836388646 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08551692 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07342549 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087210813 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072750172 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066167586 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068996975 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074742053 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070777694 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075220619 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072944105 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0708733 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069169195 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073422027 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071011164 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073380943 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071177915 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072967153 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070899574 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072853929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06651096 seconds)
  done (took 2.6386669 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088708972 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072476014 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073087027 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078820603 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072823034 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071870202 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078998638 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072181655 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072850189 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09226373 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072447356 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072806386 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078570457 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079163219 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072638454 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079292707 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078866184 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078871239 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073060904 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072215794 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093247758 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07283802 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078896843 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072651613 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072123504 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072482865 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072290656 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076598882 seconds)
  done (took 3.322198594 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072689418 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071621699 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069584778 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069362917 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069428393 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069871078 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069229766 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069355018 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071632656 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069436332 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.072079545 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071425751 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072031283 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071754565 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071797223 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072107698 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071582223 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069259521 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06910445 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069606715 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07251461 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071427474 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071324869 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069303505 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069585681 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071570776 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06912483 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069313346 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071769457 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069311443 seconds)
  done (took 3.301972241 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079978121 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078095791 seconds)
  done (took 1.342252848 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068583917 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085454953 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068203471 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077020055 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074868922 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072629084 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078011906 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074308691 seconds)
  done (took 1.779426642 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086636874 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080182985 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072157508 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08084016 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080071699 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087707631 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127944195 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070791706 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077950548 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06972628 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084149752 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071121621 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078844598 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072438322 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077653267 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078900402 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068553992 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075428443 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072018561 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069247047 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071826784 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080074033 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074914188 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066504811 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072882337 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094206311 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082368763 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070509354 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075013554 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07908692 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077698205 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066087407 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070883748 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070970373 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069050801 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079705134 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085780331 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074612209 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080041807 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071251134 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07899357 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066439592 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0756439 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078559257 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082683509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070812176 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071163102 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066428444 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070277143 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074101325 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066317652 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072139158 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065717726 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078913929 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075293304 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081966098 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069659213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073902029 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074300644 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074065284 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078308007 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073760739 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075078343 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070301119 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082540126 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077157902 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078960067 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066727046 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065423628 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068954303 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081716279 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095196372 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077550247 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071317919 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071199678 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069557665 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075186055 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071865299 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077295992 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078718861 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07026962 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075749129 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07955954 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072157411 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07477664 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07705926 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069226389 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073133834 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069825178 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086680927 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069719127 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071106069 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069353941 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081966205 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074934039 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069903677 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069175056 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077999065 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064703575 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069799631 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069993558 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071630587 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079008226 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072983818 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073170214 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079138974 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076805873 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070996102 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072682778 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.193184213 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07329593 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072573028 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080926725 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066545413 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076041502 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074400926 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072141079 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080624035 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069822466 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071013401 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080363146 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078223552 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070038762 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068838831 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074877357 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.07080849 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073769136 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079876892 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070313982 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066775348 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066990511 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075130457 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070759941 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076548927 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075119819 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075191345 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065675019 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069546933 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075139605 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080414291 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072463731 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072854567 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.078064002 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073832978 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069824937 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079035948 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074244245 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071808877 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076890609 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073520864 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066722756 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073367919 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.075049747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0701075 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07610402 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07310736 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074131811 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070689021 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069729502 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076630452 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070991797 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071299539 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072068735 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.070022478 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082014111 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073823898 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066233863 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068249745 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077569993 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069911443 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070177254 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071036727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073754828 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071634294 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068922537 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070045943 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073685947 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078269201 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073861508 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071417287 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077266711 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083947639 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07098934 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074548609 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070610113 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071608745 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071201836 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081088048 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077845526 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074388978 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074730908 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06803353 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076955852 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080108558 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071100058 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069025438 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071435573 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074589494 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077652166 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07431527 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071749694 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069594022 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072618274 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072861402 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073662973 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069798169 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070841119 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0751124 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068285485 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075198632 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070125498 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080691852 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074102711 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064979164 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071492904 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067755982 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077211046 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06497152 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069129712 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070234564 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070348749 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068713863 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.201827431 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066979442 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080588717 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080498785 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073480146 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072068498 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071278473 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079998131 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074229616 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076415575 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076436612 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077828022 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082855519 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071876447 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075791645 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085414879 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071026479 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065837267 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077572415 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069694672 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070163508 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070575188 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069240623 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075049986 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079187257 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077902011 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065651418 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074799717 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069487857 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071690806 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06649241 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075961077 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074329428 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073427265 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079475657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071056437 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070988994 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075869237 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070059565 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071272292 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072287057 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074638644 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070808218 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073232359 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07130782 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074704511 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070710932 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06860861 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07353344 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070724819 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072562928 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076076388 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.071001436 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072005739 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074222168 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071119719 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072667912 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072348629 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071753895 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07510083 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073450454 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071954723 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073974478 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066606101 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08002111 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069973065 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079106882 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072576623 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067950168 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076861994 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074043055 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075205115 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070997034 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071326617 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073402433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069967349 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074343332 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078843862 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070199235 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08232141 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077930193 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072860741 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074792995 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072363496 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073753778 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071362945 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073151806 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071580511 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07258246 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070765642 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076395025 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074784504 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072310484 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073607028 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071258909 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071696812 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071159342 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065438277 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070880315 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070863697 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069850834 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080078223 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070778496 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070979418 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069065354 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070390683 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069226229 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067233688 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075860889 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076029563 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069623527 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077031871 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06989422 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072236865 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.211377884 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066798397 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070377486 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.070473121 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071495187 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080687892 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072581798 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081902523 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073575696 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072602314 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069135076 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072179688 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070045037 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06609961 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069338582 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075683779 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071426747 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07058602 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071235414 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075314933 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071947762 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080941014 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070714928 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073295966 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070699464 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069073322 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071461312 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071650637 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07492497 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071104794 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070380602 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068756215 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070713214 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074010105 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073867706 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070243444 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073189825 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078925031 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071893072 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.075144489 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073150595 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065845938 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074459636 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070661755 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070556567 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071814998 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075446332 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077329928 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07149612 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081025082 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070776406 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073261049 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070810348 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06906327 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070770145 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070190264 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070481023 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071282031 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071460552 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07954055 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069058083 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075246395 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072472446 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072608869 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077593862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071174664 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074746642 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075844908 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072469179 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073614389 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079948306 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074247859 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075080467 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071374496 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073304962 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077442445 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071215032 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078496213 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072392178 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071355282 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073375377 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070606592 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070328719 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070471416 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07013994 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077490028 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071368467 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07104251 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.072410097 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069435131 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073666612 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073369223 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080085959 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074114725 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074904996 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066692546 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068532717 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071422194 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069699276 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073075335 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07389172 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076692605 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073100016 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071914135 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069216128 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080041965 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076906256 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074136823 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0691822 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07405742 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070357802 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072974726 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071653094 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071138929 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070478842 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073926482 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072155428 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.201466857 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079751036 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07665438 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073050022 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074580167 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074633159 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073355576 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067198905 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071787606 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07447047 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07698717 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074868971 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071210284 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082760799 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070469178 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.073317604 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073882806 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070724483 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.077610697 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066754569 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07406984 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071819531 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07221958 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066513576 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071341924 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070534559 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074897282 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071768688 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.067048489 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083323779 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081626076 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074658655 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07021759 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070207858 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066424506 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.067068176 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07226533 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072624326 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074200536 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082481174 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071560699 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071043581 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067316828 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071230364 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075311328 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07474955 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068293816 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066192938 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071152186 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074780402 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077196715 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070229948 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070415939 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075275742 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073931424 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069155661 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073804545 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068156771 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075920696 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083981034 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071127199 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072757585 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07789102 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080394485 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071283983 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066586628 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071254139 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074963876 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07350792 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071417517 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071940875 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08665738 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075096708 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.072001052 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070355211 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074627751 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074120852 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079961635 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071270534 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071319921 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077177256 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073800442 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077790355 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075252671 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079167715 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074886861 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074997703 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070804335 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072179326 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069263357 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071376988 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07179451 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071708632 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07578953 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077389352 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071259496 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081762744 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080232617 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072812988 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068068438 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070660808 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071039801 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065718873 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070963954 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06865241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068989307 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068110619 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06948448 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072560078 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075469399 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07218895 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069829396 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069024757 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064644039 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0740327 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.204222971 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074902345 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069340076 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072280242 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072295957 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077636528 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075111954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071130945 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074204694 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074884025 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073688987 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066684953 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079411025 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070375387 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074622292 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.072418102 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071767868 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07234082 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075991301 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075680414 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072308703 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07414429 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075729249 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073122081 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069219498 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.069768336 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077469553 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069518802 seconds)
  done (took 45.596516907 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104333325 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068256102 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066981677 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066450882 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07710685 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06884321 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066783492 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067938859 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067848618 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069788711 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067021785 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066934774 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074528574 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081549194 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077536062 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07140875 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066978245 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067905422 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066518598 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067602853 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074203121 seconds)
  done (took 2.775105131 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077799268 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083228008 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079250197 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086781999 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076037966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074159903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079828825 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074447401 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082642838 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076918761 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082558404 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074341101 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077179373 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077111161 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077081816 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074431123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082927767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075810807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07429606 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079759474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074666051 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079586179 seconds)
  done (took 2.978684917 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071437948 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070860426 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073414581 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066737158 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070218887 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066151616 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074063294 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069037058 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07294649 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070483394 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07060947 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070971403 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073142125 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066509005 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072456055 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06842585 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.12023682 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073869751 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070453452 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071395101 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066068294 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073206595 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067104833 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066829862 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071037643 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073443963 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071518522 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069049461 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070631566 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.07075024 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07058276 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068392556 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073107173 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072017937 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0708669 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070662177 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070491139 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07328083 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066817745 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069155834 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072059411 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066821319 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07128843 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072730015 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069634231 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068786841 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073361535 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070405691 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066384779 seconds)
  done (took 4.761211393 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081870259 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113725547 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07283158 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094027088 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083728596 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076752314 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075331124 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093596751 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067916917 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06893449 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085219552 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083222002 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070368599 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074747802 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075874772 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070757338 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071396788 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069659042 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073655074 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069963145 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0733504 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077131579 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083818107 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08190505 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073545897 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06958072 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069730459 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074109184 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081243127 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073964856 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074149212 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075336899 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084323434 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075362474 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069589221 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072849195 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085802605 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070630193 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072295089 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068372827 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072464495 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074545848 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077294592 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085332653 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070713554 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075467226 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070421233 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067918853 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081887095 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072276506 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077218116 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083401327 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074278909 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070531211 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074785157 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084232997 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070457878 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068893794 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073048361 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081431753 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068514301 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073655925 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082322448 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07221313 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076652845 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082803831 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075805197 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073917447 seconds)
  done (took 6.573816002 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080451298 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102014693 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087514382 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088713589 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081098268 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080892676 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081040253 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08058237 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081077158 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085190212 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08113543 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120391657 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08529213 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082915598 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08082068 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080657688 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080520715 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080719866 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080775964 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080814044 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080815958 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0873097 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080659691 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087296951 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083662953 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076988986 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080281276 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080796556 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087234871 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080515473 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083824859 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080683617 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080485277 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087521778 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083720918 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080483406 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070544536 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080299632 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080715229 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081094649 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076357652 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08713833 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08062906 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.077015967 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080615277 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080151289 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087129073 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084019324 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082928381 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084390091 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080809027 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087692699 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080242352 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080652061 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08694889 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090083943 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087131579 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087138645 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081000329 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086895976 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087096183 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090253829 seconds)
  done (took 6.472501658 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086469245 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077743265 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087149448 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066563147 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0726848 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076990781 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069589779 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069509383 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078389041 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077939565 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080265963 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077268846 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07974994 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079993058 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077675075 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080415975 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077530385 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076998843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077962935 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07749831 seconds)
  done (took 2.836554486 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080603451 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089417473 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.073094781 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077413592 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075341966 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076704428 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074825193 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074879965 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072935995 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075035374 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081347758 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081054731 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072515711 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07654272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080454554 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076633699 seconds)
  done (took 2.514697806 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087382447 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077794402 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083900184 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071072681 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071970604 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067522644 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070617224 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067106803 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067364949 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083554862 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071011641 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082198469 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071890404 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070108741 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067764182 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076678909 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067429301 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068591605 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070916034 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082222952 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074732058 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069583335 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074786692 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070920752 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073492471 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07492985 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070087887 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071879501 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067954747 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0713242 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074177523 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074603499 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.068552718 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068571681 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069762889 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067934873 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07069795 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.071195676 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076679972 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070989725 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069326541 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073840078 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0706437 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071829432 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067343479 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07118235 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067636247 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073763332 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068298154 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.074244823 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070621409 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073244632 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071348985 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077946258 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073637962 seconds)
  done (took 5.261399639 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086241958 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075389648 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067390404 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069566283 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074536945 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073190203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075600304 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072998346 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072698657 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069780266 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07297065 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074989498 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072895126 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074827898 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073505966 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075296552 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066649476 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072440151 seconds)
  done (took 2.612347837 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078372441 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071745176 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079482993 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0721416 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072011533 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074479523 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06760064 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069967041 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070268907 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071954965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071750287 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074485024 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069885341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.074468306 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07224995 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072502895 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07445442 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070185124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072325672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067474424 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07493362 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069691429 seconds)
  done (took 2.874789833 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100097337 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089697061 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145131358 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084905495 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.092475611 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078494724 seconds)
  done (took 1.874758434 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097730545 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105865915 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072701154 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075314488 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081186346 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076429081 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075793025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075700655 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082626661 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080935953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075693722 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084948036 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082492965 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082039725 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096060664 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079988171 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075241814 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075252359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072513419 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087595619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07528362 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082671388 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075559716 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074991878 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075467835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081774626 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082235968 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079942095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075130347 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082876012 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080497609 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075558649 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082419365 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080323029 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074501049 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082622701 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075323208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08731832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080113093 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082183412 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074107361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080807331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082538267 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079250034 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083178366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075415703 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079059242 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075343277 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075319222 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088294681 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079875364 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081537763 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080005841 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082497672 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082406113 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088237904 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080253723 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081820441 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08010144 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080087418 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081736057 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080741963 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081505112 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079878723 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080502134 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082024379 seconds)
  done (took 6.60458402 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109159897 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072799587 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07570134 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080678009 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081886401 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075355849 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075605073 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075741678 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075917834 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072834725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113202494 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075609113 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082063807 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082053168 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075301385 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075183256 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07539801 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081497861 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07272436 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088957976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075433501 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081950306 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081751952 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081909086 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080382068 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080649793 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075346485 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075308773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075169048 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075593684 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079199641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075520925 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082053587 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072449597 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081886748 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075710593 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075441055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079459952 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075481336 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080223975 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081846966 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086810068 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075497967 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075031526 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080497765 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075678139 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075403882 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072838647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075520787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072294477 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080751729 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080119948 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080397013 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081660599 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075719926 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075902641 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075698437 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075539002 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075727283 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080397231 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082188406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075486301 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088490499 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075444558 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075444424 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081772119 seconds)
  done (took 6.531855573 seconds)
done (took 134.730719746 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199316978 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175676394 seconds)
  done (took 1.661578254 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074341628 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101561511 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08120373 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135283789 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072264174 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106251423 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104863987 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082719262 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071486537 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072225686 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071604197 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073916516 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136698004 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072016411 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071339058 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074608417 seconds)
  done (took 2.707100536 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102536153 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160657703 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106180325 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070191962 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103727541 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077590799 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070796166 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082585823 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075813493 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070963023 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077487917 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075212679 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070786522 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075542874 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075825127 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077424222 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071145455 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07719194 seconds)
  done (took 2.829267272 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101748658 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094919766 seconds)
  done (took 1.506307509 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162464839 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138592535 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20721434 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342053453 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158715318 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150818571 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147940152 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146732483 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11851449 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141519183 seconds)
  done (took 3.02091315 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105351382 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153924042 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27720247 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121622506 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078444158 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09540179 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123315035 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084509545 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084297524 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083889743 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084046943 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081160728 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104530932 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078297936 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080217018 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081008368 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107584588 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079216073 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080291241 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080253461 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105107332 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072186884 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078230407 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07964812 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081710859 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081467096 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071674587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072024526 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080418328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080057871 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081510181 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094309478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082180333 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106494596 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077040577 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107554952 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081559126 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078585363 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080996456 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078540259 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082502532 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082044328 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078906869 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081163091 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072005602 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081339356 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071875377 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071992376 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082348548 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072267641 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082220241 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081250612 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106012979 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072817423 seconds)
  done (took 6.186019025 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111831987 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1112379 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075670772 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118445785 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108585861 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075633772 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110113504 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103931213 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112069526 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075760235 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07366314 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075589202 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083791629 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086159806 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120301315 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112250239 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077655432 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075104429 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112580022 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112065488 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074611549 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106390806 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101907143 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111610351 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073549302 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075362294 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073445203 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07559357 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080354945 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082122403 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07400652 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083724065 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087732125 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081198199 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07280959 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073790251 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073988118 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083197219 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083140124 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082901204 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081443192 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073165746 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073709041 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.0750911 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07469882 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073380599 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081795445 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083352255 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081885317 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073506335 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075217621 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074440047 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074863065 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083201903 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080640149 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083453179 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082963814 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07369119 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073579048 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076278941 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083521028 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082666114 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08249071 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074645662 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082852704 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076398245 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083676624 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087368369 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073816311 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074699102 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073455063 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073501452 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07455955 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080745469 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081395886 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074898456 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073550795 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073800327 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082642066 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081246352 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073506642 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080597794 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072043684 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073449743 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074425729 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074070079 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079748434 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081741165 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074814829 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073402412 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072693322 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072424434 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071831936 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078351867 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08062313 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080722402 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080110861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073286201 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080307999 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212466778 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077495834 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082985053 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07523381 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076973467 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076360423 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082824623 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081314785 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083145398 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074290824 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074195531 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08126667 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084771646 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074419402 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081761869 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084421636 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082407905 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074207998 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085920383 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074473904 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083113512 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074061581 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083770534 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074472287 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083438098 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074537057 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.073054193 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074204021 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082457661 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075850095 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073889727 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074684818 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074193554 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082670087 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085032177 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075250206 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082015487 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082158052 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075323436 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081550471 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074208704 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082611058 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074359884 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074497252 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072981652 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084210233 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074320695 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073689704 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073592675 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083254808 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073736584 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082756616 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080600725 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072706362 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084685669 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083871829 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080513379 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083463201 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075179706 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073483923 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074044719 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07348091 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080549735 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082458448 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075163711 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074156875 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080727387 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082824378 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072746807 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081431023 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081182678 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081374453 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074105893 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07370921 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084069121 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08373457 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081455037 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081356433 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081872702 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073915935 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081409192 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08187267 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073864752 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087266286 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074224613 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086353669 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081937367 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079694654 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081115649 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082095231 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082571597 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082994803 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084869634 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072154047 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07277299 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079836039 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072204922 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072603684 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078894216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073986233 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07357239 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083768115 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.208488027 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.084734884 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074316542 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082509089 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073989919 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075726732 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087230686 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075059667 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075535385 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082250172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076892672 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081278309 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083568417 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081773565 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074273525 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075356679 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082818209 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083667484 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074069668 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074242601 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07550498 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082441675 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081211725 seconds)
  done (took 19.59847298 seconds)
done (took 38.832189509 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.198700366 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150509024 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.1619374 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117267606 seconds)
  done (took 2.023485609 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114098189 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102452739 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093947427 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071371073 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099547211 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070575302 seconds)
  done (took 1.896440352 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278356602 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194116 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177886949 seconds)
  done (took 1.990518432 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202594071 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188749915 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.428257877 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264555806 seconds)
  done (took 2.520365309 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142355046 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090418593 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072249079 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087989757 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130068701 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157622954 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100232005 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12542328 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084159158 seconds)
  done (took 2.380930145 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148274654 seconds)
done (took 12.305487318 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.206998301 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.115303056 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097124744 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.209915039 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084847013 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073603562 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.26114611 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08787119 seconds)
    (9/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.178656737 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081190274 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088497269 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114197499 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079654994 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.238883518 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.147899338 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081378469 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147314711 seconds)
    (18/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.086450756 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079124852 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081363736 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133701266 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080730292 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.207809366 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093928372 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079224062 seconds)
    (26/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.172332619 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082750141 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.180704147 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.077452825 seconds)
    (30/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.079853196 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.174724079 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081808683 seconds)
    (33/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.081111565 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083580979 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096381311 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152747316 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077932698 seconds)
    (38/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.3076035 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079678935 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.080540494 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093033873 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.180105103 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176313797 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092243293 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078785965 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083552791 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114828298 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.152554756 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079445618 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082426714 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.201930627 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183896852 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119862343 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06968963 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144096274 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.082032517 seconds)
    (57/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.119717532 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.183970045 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104127876 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126950883 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.169624003 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 0.13619683 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.15083786 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.237870394 seconds)
    (65/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179540565 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094468217 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072265991 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184696169 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.071441387 seconds)
    (70/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.167462249 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086619775 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117774954 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083014006 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084910978 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070246053 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078812724 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.091269655 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077011603 seconds)
    (79/309) benchmarking ("sort", Float32, false)...
    done (took 0.135693545 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.208373871 seconds)
    (81/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.301110478 seconds)
    (82/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119950268 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079260286 seconds)
    (84/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071008004 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097627571 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.058051953 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.094613438 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097904891 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082742147 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096321178 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071773405 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162829998 seconds)
    (93/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08534401 seconds)
    (94/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.107440726 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079626462 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.163878886 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08170149 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.171448744 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092843191 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160795464 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095487141 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086613066 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058909144 seconds)
    (104/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088605021 seconds)
    (105/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082313891 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075124253 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157799507 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094389614 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071748096 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071733713 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057446808 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.1465859 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095624301 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071894199 seconds)
    (115/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196377085 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117168787 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.109936019 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.154505589 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164489618 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196709747 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075777105 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076861157 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057413553 seconds)
    (124/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078783486 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060090994 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080114865 seconds)
    (127/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058917474 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082889842 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193694996 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.183591788 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.058460164 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079212284 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070010668 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077728614 seconds)
    (135/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154540417 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137940442 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.071307116 seconds)
    (138/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077650966 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078930523 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095593827 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083331117 seconds)
    (142/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077516547 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072026703 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07097129 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074154937 seconds)
    (146/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.11151428 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057331554 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057369103 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076917235 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083636846 seconds)
    (151/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.108126702 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058847368 seconds)
    (153/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079737646 seconds)
    (154/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069552357 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115274519 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057263884 seconds)
    (157/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077914494 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071305269 seconds)
    (159/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058207482 seconds)
    (160/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072079698 seconds)
    (161/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.069510179 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077293334 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07825823 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157349452 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057277579 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095790227 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077954556 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058194762 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072242505 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09739326 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058917236 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098488143 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142751275 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071974406 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157879347 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110305352 seconds)
    (177/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069154148 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072713283 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081774102 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056880232 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056627434 seconds)
    (182/309) benchmarking ("sort", Int8, false)...
    done (took 0.147695785 seconds)
    (183/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.118673694 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170627287 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.336482546 seconds)
    (186/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074889536 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154304864 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.060485805 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.058598905 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078875926 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059320354 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108696949 seconds)
    (193/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.059841153 seconds)
    (194/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.060274615 seconds)
    (195/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079961696 seconds)
    (196/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.078785342 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196884725 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080577118 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.059142121 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.16547597 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097137957 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071747769 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05918217 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.058177434 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106039421 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196569205 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.071842655 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.058301368 seconds)
    (209/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.058358806 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072527226 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073453145 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071458092 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084090882 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073710619 seconds)
    (215/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195996636 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071426078 seconds)
    (217/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071739911 seconds)
    (218/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07952341 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093826676 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077468449 seconds)
    (221/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078743545 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093680244 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.057498294 seconds)
    (224/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067965389 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079294418 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072954499 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091486597 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080082381 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078005971 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.125307244 seconds)
    (231/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069371055 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095876424 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.071634019 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182760206 seconds)
    (235/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.059236471 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.058454965 seconds)
    (237/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078254084 seconds)
    (238/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081117668 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.060112557 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093316465 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145132662 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072546311 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07144374 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071339042 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057659471 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078563673 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.057822885 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069901791 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078815183 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077965436 seconds)
    (251/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123780186 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093094213 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09911843 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175971113 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061460465 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.059980401 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181616471 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071253849 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057151012 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058882137 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091910408 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073910987 seconds)
    (263/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069770136 seconds)
    (264/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.070020881 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05783403 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099293028 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074162543 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05775172 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.071128505 seconds)
    (270/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059719134 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057153693 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070734562 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071008349 seconds)
    (274/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072854412 seconds)
    (275/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124242834 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078832338 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123573864 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057553493 seconds)
    (279/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068712541 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072342367 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075333072 seconds)
    (282/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076914262 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071899559 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095688732 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057850385 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091841105 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171220959 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070530765 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079004712 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076688407 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070327283 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178857544 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077616083 seconds)
    (294/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058068021 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05817494 seconds)
    (296/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07891148 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058900107 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069348405 seconds)
    (299/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.058337801 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070217786 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076848735 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067818531 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057628599 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056932083 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057234721 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.268373198 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072022245 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.058151284 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071874793 seconds)
  done (took 32.6171562 seconds)
done (took 33.973159898 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088457065 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099189442 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082157284 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098458581 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087273218 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083112549 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079415826 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08361898 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086463493 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087215237 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084064593 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061874068 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080132221 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.08027567 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081170509 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095719923 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085337412 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079383416 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079525009 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070424611 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079657009 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071288557 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073244296 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061685547 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08483263 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078156211 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080741993 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080298748 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071317665 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071688006 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075771821 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080030148 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071390395 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08582259 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079951888 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079105151 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080762329 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082913333 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072932375 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071466372 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081553323 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071473597 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078825828 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079284895 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077792699 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077855774 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079648568 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082924188 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09567449 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073734647 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081004176 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082384644 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082094045 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079054123 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075862618 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079385135 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076616401 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09569569 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079770837 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073495253 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080566057 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080037102 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076863406 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079242103 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07959036 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081648418 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082775157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077163133 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081427629 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077451113 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071649861 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079394404 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07574577 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07100014 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082109131 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086346915 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069812953 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077707078 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078949168 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079877773 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070576013 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073780047 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072706122 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077726469 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073647604 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061841002 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075957702 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078269192 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070451899 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079616013 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078404187 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079076639 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072776375 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08323596 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070544528 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077137394 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071152153 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071275945 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072598298 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075673886 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071138665 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073188469 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081430132 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072013199 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077922595 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083884321 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071309018 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077884861 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070220955 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07031968 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084006151 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080238309 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070717833 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072752061 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069553656 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077575834 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069240917 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069790197 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069707504 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069767624 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076000944 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069826446 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072464813 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.216819778 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.086450518 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072565942 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075952055 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074382535 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071940745 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078303429 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071143467 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071957349 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073233941 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06897495 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074497968 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0712044 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078824502 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074067413 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079079304 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07318388 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08007297 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077291217 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.078110372 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07712448 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070327432 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067592663 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074840463 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074555106 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072999615 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071446966 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072633299 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071044173 seconds)
done (took 13.298261865 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072582032 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.13798864 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09970768 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099606905 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089865897 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072723771 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080641763 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100063704 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073999497 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10297112 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093710603 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091501109 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114646007 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.071315427 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.072190114 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076445021 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073899796 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085869611 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101124895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.093240602 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117029778 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071806539 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096238258 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093364958 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091294301 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097712781 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073397634 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076647225 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075673747 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105220502 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095307693 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076433375 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.073322975 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100453399 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098969602 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087150836 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.073102331 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087265923 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072704158 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07198414 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.074066235 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100759519 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084594609 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084989112 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075749002 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082645036 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073581056 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08666854 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093193293 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083169516 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08978238 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10347198 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074752528 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088399674 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.071327718 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089275758 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08101626 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074484607 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072636497 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079879104 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.073037583 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075493872 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085168253 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083910235 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075967602 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088089759 seconds)
  done (took 7.089481772 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090217877 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100090752 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089254423 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091726915 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071938927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072502304 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072955996 seconds)
  done (took 2.038037457 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073455546 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093144883 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093916076 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093799467 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086721805 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096926338 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082838855 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072705341 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097861069 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073842233 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092608587 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102882444 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07598644 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085977597 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094809617 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072562408 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095203069 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072682007 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075640626 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094743973 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077965057 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102762588 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079918101 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073046797 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085502789 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072722641 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118808668 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076233209 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07489482 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.076029799 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074042665 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111639067 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085656833 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080009806 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073281939 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087143811 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086762682 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076223582 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083698023 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081499774 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085681055 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073194516 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07335206 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074236448 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076590864 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081898904 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073855508 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.077009668 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075039501 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091697066 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071535659 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085019334 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075310104 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077829367 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074247267 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079216117 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082892017 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073734071 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091563756 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074778031 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087657101 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087295655 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085822526 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087137766 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074867709 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085503624 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085369932 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075603187 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074540951 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076720087 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087039638 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071291403 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074492151 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082650719 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074787063 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.0945019 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094257767 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074441915 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086148924 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073688609 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073253346 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07267673 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094402063 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077983497 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073339158 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077170969 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07641942 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076406878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.072016187 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.077073082 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071315201 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078972489 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.076204969 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075997221 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075366046 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087734412 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07652546 seconds)
  done (took 9.355070506 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075879245 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074675432 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075310869 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075036421 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073776059 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07469778 seconds)
  done (took 1.920645516 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09499021 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074512965 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085616022 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077030335 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108621362 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091547373 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092294807 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082526842 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08916371 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084435774 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.09108645 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.093120552 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09601378 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077752738 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091890394 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076943325 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092039678 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079764355 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084011918 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078277542 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090652433 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077506074 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078071304 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086227027 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0809679 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077464992 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083925439 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083786539 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084193519 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082662787 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077802325 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.081792506 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07579538 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082272621 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091656307 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075873378 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076805427 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082583601 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077510656 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083699526 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092869149 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078139054 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079142443 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082400752 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082090919 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076370996 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.082145812 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.085134367 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091499882 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082671592 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082182209 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077054513 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.081076702 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082245025 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07582583 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08218969 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082508508 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092026989 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077974467 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076325857 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07413632 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080863373 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082198114 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081462626 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082466097 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082718123 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076454884 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077882053 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077971362 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076935439 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082138638 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073997247 seconds)
  done (took 7.40589061 seconds)
done (took 29.248919228 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547554329 seconds)
  done (took 1.976742372 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611808888 seconds)
  done (took 2.068986571 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.504960122 seconds)
  done (took 7.961819027 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.375014734 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477965249 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716583442 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139480256 seconds)
  done (took 3.198357713 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.726520255 seconds)
  done (took 2.192166229 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241088301 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232509318 seconds)
  done (took 1.94703254 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381993308 seconds)
  done (took 1.838672102 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.123775395 seconds)
  done (took 2.581670181 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.244017269 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182401287 seconds)
  done (took 1.884328207 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447065927 seconds)
  done (took 1.904293156 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.919594871 seconds)
  done (took 6.379355107 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224410177 seconds)
  done (took 1.724638934 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243067356 seconds)
  done (took 1.703697758 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.74556493 seconds)
  done (took 3.208396334 seconds)
done (took 42.038932866 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089025589 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091096916 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090688562 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.087382157 seconds)
  done (took 1.802837371 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082489524 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079014353 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081834562 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077985284 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.082406365 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078394782 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.08033803 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081457696 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078360553 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078874097 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078182845 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078223373 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080179914 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079966609 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076864816 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081454957 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081638258 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078487909 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081345518 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078734719 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076486377 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080996705 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080585701 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077790206 seconds)
  done (took 3.37659942 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084385244 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079084246 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081366229 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077343797 seconds)
  done (took 1.793653848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083969842 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095997552 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093395699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084299515 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095370014 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090658399 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075190598 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074581031 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075898176 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.084014044 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073960825 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100384989 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093005628 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08392687 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086263336 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070601015 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073664168 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092163958 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0843361 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084661584 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075895043 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.0840423 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073897107 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094078051 seconds)
  done (took 3.49195713 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08990075 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106647425 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085857432 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097126385 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098104157 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070971054 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091761122 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097232546 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131664179 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071443003 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076887601 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071615042 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079962198 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071494264 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085814802 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115892168 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117354644 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074764602 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103481049 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071454975 seconds)
  done (took 3.284694065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078030815 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075260547 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076617905 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071369308 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083587607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078576422 seconds)
  done (took 1.942156293 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073992523 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073075394 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.07330357 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072640987 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077792096 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072812663 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072854549 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073574873 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073316723 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073265143 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072877019 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072083761 seconds)
  done (took 2.355083626 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.187562876 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074837777 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074111475 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072088398 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076363832 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072066061 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087361613 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073468889 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098556344 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072377456 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072448978 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074586771 seconds)
  done (took 2.511234531 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198787945 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0809231 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229479686 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154484452 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111222057 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115959457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115465693 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114220779 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139452943 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101883075 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162875479 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162778797 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109919319 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138950438 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093961292 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10690155 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152500077 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165914682 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109366205 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164119532 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144858391 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129251103 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146824005 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105134917 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108667842 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121676949 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.077416474 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084587886 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167435181 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134018342 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143159238 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114507967 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100120302 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174180333 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164990163 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138682326 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149358006 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087563005 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106724499 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132940218 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19150374 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091759735 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302804125 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115593778 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085401151 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135166907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121441313 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124121005 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107908438 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094746378 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147166043 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179036605 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13575897 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090762629 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125880638 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115873991 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113935429 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117442053 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174631544 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159337417 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130764194 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077298003 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114822621 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149323135 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133388285 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109684086 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124533243 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097436282 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133551149 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152833197 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124152622 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141544346 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118486387 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092295321 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122527049 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137649635 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1278286 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159218423 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1269611 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078477352 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124053507 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102778239 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085613211 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147344237 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080297738 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172546554 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103372551 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109201238 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125870014 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110259599 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109847114 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151710109 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287470407 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108190322 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.074046003 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109126003 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120594723 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146003323 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092163452 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110889407 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11865301 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082617308 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135282747 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081275855 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12578346 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082786792 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126469196 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131915031 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082933612 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125280969 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107872321 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10678692 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132596176 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156921627 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092088738 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085887244 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163172197 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123704347 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105453303 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142042036 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155214054 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105920737 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101785877 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145512693 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168172963 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093642133 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161042755 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107539802 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087963263 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092804853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124597991 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11328341 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126181167 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086613836 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120061449 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162644446 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079232892 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099011411 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135075078 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083241936 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084334327 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107555739 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105836116 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100278628 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101322972 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103820635 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133412495 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274673524 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112062125 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126108957 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102248972 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164561457 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093125795 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107880454 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107335963 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.0759695 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13290514 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154173363 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083984962 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158900008 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124310069 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120115867 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122730037 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088302145 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138056582 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083967479 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07540193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141047043 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114116979 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111777028 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148362604 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118170802 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125037461 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120146323 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13128345 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13098674 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129944243 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110208633 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092680394 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115243518 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128575316 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078843013 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094446555 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084789858 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108753677 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098162555 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087745739 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140872187 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124639513 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114949263 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115298775 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099536015 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144932944 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080793801 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126759916 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121195051 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098708382 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149476735 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148179674 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131815443 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25060752 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138217286 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076832387 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079820561 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09171155 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12506532 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088239373 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087916849 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116756753 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145793093 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129626238 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136519518 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126152437 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120924389 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154364316 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075849563 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122989809 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143167254 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12409182 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108060906 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095288184 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102928851 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141516573 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10799963 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175316487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116143435 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126675832 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154096059 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106590867 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08435752 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105456411 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132774839 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105342213 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14093656 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101709263 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092022702 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110881818 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084914177 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101183896 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128030351 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119553581 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135510563 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11575619 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133492441 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081955423 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114981373 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122702653 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1214557 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070344252 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119201233 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154409539 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09832274 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267890616 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151346792 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084259752 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139640717 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171081131 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145114017 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089039044 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110256749 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12259332 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128339739 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1213402 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139018139 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108706262 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138052247 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113489286 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09023512 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091975196 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100421707 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107313438 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099218448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106087027 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115394367 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09987633 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132413604 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106837952 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11355696 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120401654 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104598591 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096997595 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100025717 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171465264 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120330478 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16698228 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104202735 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140594906 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158560252 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07976586 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084415237 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083035128 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138051291 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089431534 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131687377 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113805184 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119396381 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125680398 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138084255 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098600097 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073928686 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110817811 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131715851 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12487443 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101543212 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103505501 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300169413 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106171382 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084557873 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116377653 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119498825 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107162879 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166389956 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069059686 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109852953 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081327753 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085032693 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12618343 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148335379 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085697055 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103924252 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12241855 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114906943 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126757374 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102400162 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114740896 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12682553 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146661315 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128832714 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093496599 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11324949 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128060406 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152995732 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104928008 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101595978 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169864165 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149373012 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156309811 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089627332 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116946175 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116796283 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111721141 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138097615 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088463054 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15925771 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086553094 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136685236 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105047997 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091704558 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128371443 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11351269 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092194617 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142774398 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11804863 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086948114 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082207004 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116940652 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119238963 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25468226 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.081528341 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138736 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079582216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135638762 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15967683 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085890743 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108759332 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099042702 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086110763 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10822715 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105801935 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091234297 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104145563 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167157219 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090945464 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145618403 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133984892 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113685484 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134151271 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106273468 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644529814 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082365742 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148546447 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116682395 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167927119 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103239338 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119254631 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112609833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122401914 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141749238 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104731508 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179638866 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131073809 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118223277 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083505325 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105745606 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107193141 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.0907871 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110815188 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116442333 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116969988 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096533991 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118415105 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124553178 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086893051 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099901877 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151950382 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116188826 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142311104 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137034055 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088276986 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268716572 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13707598 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085264593 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121108848 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149727558 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108961962 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103511513 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086173365 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102561048 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156502858 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078168076 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155601905 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125135585 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112575686 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115475842 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.127514234 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132085967 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106419263 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122649326 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095427634 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110819776 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116695762 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085762075 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081837729 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108150698 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11317488 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102295251 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099917211 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103528651 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14899963 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07786775 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101229922 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118328472 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142007878 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168973038 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093005527 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087604948 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120973067 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117830604 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11476578 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123089578 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084645204 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08624312 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084239531 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08703242 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110431959 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115762678 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116664548 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11170544 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156931848 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087475932 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225229073 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097836544 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106609894 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075153419 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081849642 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250786832 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101962722 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109019105 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116010968 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157562488 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099951766 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094573429 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09560265 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080626849 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08816961 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127113705 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110855954 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121015674 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104659283 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069925458 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109011704 seconds)
  done (took 59.809289017 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107952019 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087794959 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.10241923 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150031521 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126633798 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205054853 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161786182 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194117188 seconds)
  done (took 2.708928968 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.0733129 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099438836 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10976821 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087482248 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072418311 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073416796 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227957909 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086075333 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072265451 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098690179 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082550286 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074220172 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41404848 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072627881 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072896821 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067708754 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073093326 seconds)
  done (took 3.42163224 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.3924179 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619148921 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347797657 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083134628 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.930300168 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09794026 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.27815215 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142071089 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084759671 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532981111 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414374221 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136623431 seconds)
  done (took 18.632986091 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089178858 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082609825 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095212393 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095530271 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085486142 seconds)
  done (took 2.116802136 seconds)
done (took 108.740870106 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090559333 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.423581161 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061511889 seconds)
  done (took 2.086226377 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093816528 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091493437 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091431941 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089682637 seconds)
  done (took 1.94531854 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.081844127 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083362374 seconds)
  done (took 1.738161986 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233749659 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174248138 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.103314541 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089529594 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.086308486 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.0872812 seconds)
  done (took 1.838690519 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078837098 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081485991 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078656469 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081940888 seconds)
  done (took 1.893914822 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08192613 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058808413 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06144035 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064883241 seconds)
  done (took 1.840243906 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093997751 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088861399 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085250355 seconds)
  done (took 1.841464122 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105942981 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093781007 seconds)
  done (took 1.773348785 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086653413 seconds)
  done (took 1.660331397 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098719625 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104772812 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134448006 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115266165 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141227625 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111600202 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089594794 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089878527 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081996193 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090664371 seconds)
  done (took 2.631655913 seconds)
done (took 21.423098541 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084735252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378676463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368158397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095159897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675348197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363836194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985463441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0998481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146696151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074526923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091383673 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65600259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975958698 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.337255364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962549157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.337220487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656558037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076219952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075379404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07521324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96900688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075657517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075168004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075859762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655916844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380083854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075529747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.336240196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075076145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076851119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.36347117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093726859 seconds)
  done (took 16.323389749 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077028879 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125902666 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08068912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092230499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077897528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077040009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07912056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075926819 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127176408 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075020599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091768241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074783863 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078957764 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075791552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094598967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07643197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076596882 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076261698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.078578509 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075952178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094689613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075183856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075753794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0772135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075429189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087489466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075980357 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075431918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075864923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077220643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079112984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076041701 seconds)
  done (took 4.220291408 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124260764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130105325 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080649975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111774447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119278995 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077211063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150463732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100221724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13458891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075176861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092872002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075248206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108908537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076150621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095872546 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076151841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076439762 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07593064 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075457957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075763685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09520459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075488898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075643988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076596623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076070001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089216431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075707776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075597783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075835754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077667844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078780601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076197744 seconds)
  done (took 4.470058385 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079951462 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082192607 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.089740978 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089959288 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.076144254 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.078698592 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.08024678 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076368421 seconds)
  done (took 2.245598326 seconds)
done (took 28.838984514 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085096868 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076124716 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079484008 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.095531311 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080858019 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.084767936 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073712404 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082833914 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080554963 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.080380296 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081535545 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.074149746 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078385974 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073805376 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.081170484 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074612228 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085512982 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079205144 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084969052 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085903072 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077277913 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080506765 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.082558002 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084972429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085004805 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08482441 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083810507 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079530126 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074961008 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077261074 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.083689931 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.090458379 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074551679 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084499213 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074700723 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074298228 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078497036 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074093732 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084619437 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082975043 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076108026 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.083729302 seconds)
  done (took 4.956623088 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095085667 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099120875 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.091517384 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069643747 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074911537 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.073303321 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09750342 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067955009 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067860159 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095761304 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.064128074 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06693477 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.070671679 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062453474 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.067575568 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.065359921 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069264471 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062786465 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.067811504 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066696638 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096348187 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061854427 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083931559 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.070409197 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.064045479 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069086885 seconds)
  done (took 3.541277037 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080995448 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089761691 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097419049 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150223586 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11753171 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084668989 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085672619 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099963691 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100719971 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073472303 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077582561 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100523811 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095004793 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.080588294 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.074389912 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091275176 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092037819 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076281525 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079844665 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099124171 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092894716 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.092604404 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098773757 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090925819 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074364774 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076620455 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.078311675 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087224835 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076973564 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083597238 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077201398 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077159216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.076416528 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085536335 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076778458 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075960604 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100389303 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084565327 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085304528 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074780088 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08212998 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075410635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09747509 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131324915 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.073387927 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07962641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077695329 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084279907 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074132702 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100732618 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085210643 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074152623 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076981111 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07330017 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073598207 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076729368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075973402 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.076483303 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082958067 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079663527 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098641852 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.079142515 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089936571 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07343869 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082368413 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073158965 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075095633 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073410288 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098732316 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075821242 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114335777 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07550507 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.075023949 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083073624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082582484 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080726037 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074293133 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090128147 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084217302 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079102302 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082712823 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077348874 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076520431 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103315914 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076806557 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075987506 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075445359 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079689307 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076755905 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075586819 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086922281 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073930957 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076769335 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090595895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074092619 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075609197 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079278494 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078145538 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073482226 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085039524 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078117438 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07496448 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083476876 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073628474 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076134824 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08562234 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080186725 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072416679 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077525091 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078518791 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074412809 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074700317 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075529279 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075264863 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082079407 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080304008 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077839565 seconds)
  done (took 11.339016036 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171104271 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159369286 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078811287 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152560897 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083497757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.085259052 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153457653 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09971606 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074868469 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075895217 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074981554 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11478535 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11001688 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119847238 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085452668 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074777104 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.097084679 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119542976 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154732935 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15064408 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.097532542 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082783257 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076977289 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076169769 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076366393 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08458529 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091519786 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083359894 seconds)
  done (took 4.546093752 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086808111 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.11002202 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.08093321 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097561506 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096142583 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074867522 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076851303 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076462177 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091959445 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083877586 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074325864 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079117532 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080945884 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.077670908 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075344758 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.081925647 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080610589 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075496967 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077825894 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079173824 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084951297 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09737757 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077671472 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07624572 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078764152 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073595456 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069040907 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089131494 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074907923 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099205717 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071757588 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.079149991 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088861701 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075480737 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074449597 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074384129 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.0745985 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074063458 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.076321972 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072603068 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072930808 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064622608 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073424813 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084719221 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087868427 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063326706 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078772508 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079699967 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079465943 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071966591 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077495242 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07712181 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076952276 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082050708 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078618201 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079473012 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07562073 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.083301669 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082883302 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074502979 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.07105546 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07290375 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078877319 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071432078 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.089362722 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.079665705 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072941812 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074294865 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076657286 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087490071 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074218129 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.079455631 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071948331 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076679113 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078952929 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076492943 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075665238 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.073286802 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074571748 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07465381 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062342762 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0750895 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060074352 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076978178 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.072648186 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073159357 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074396032 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078570667 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084892754 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075270322 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080389555 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075597903 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073721902 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076927653 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066344256 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076730101 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085013727 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088200805 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074881303 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.072070355 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087274825 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079302486 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07391271 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064528257 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079274825 seconds)
  done (took 9.823427472 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098588344 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076732914 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088845774 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096241213 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093189023 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082070728 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.085248677 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076058305 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091307828 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080754369 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083865957 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074712892 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.085428005 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.084606068 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077048629 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085101015 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07840702 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090556235 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.089316172 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075080713 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.083608154 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087222925 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096314972 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087166141 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085879545 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087421281 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096262544 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.084155213 seconds)
  done (took 4.044851137 seconds)
done (took 39.838467981 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.69261372 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.846168796 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.675581016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.007486723 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.754962598 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.884933916 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.773089588 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.68126676 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.920584958 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.709377146 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.0118207 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.723549784 seconds)
done (took 64.418240177 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.718201688 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.808929745 seconds)
    (2/2) benchmarking "String"...
    done (took 1.904377208 seconds)
  done (took 5.310344222 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.935553498 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.247678573 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.914453054 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.671415708 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.676757119 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.969232891 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.498227858 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.185402132 seconds)
  done (took 29.763111392 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.834501747 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.901076373 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.375942293 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.41182624 seconds)
  done (took 15.175088429 seconds)
done (took 61.594288454 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.662273086 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.691484278 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.706582558 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.656896219 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.730383868 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.683668636 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.938472495 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.931556981 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.673708607 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.659407786 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.675429542 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.100396744 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.685507156 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.830638079 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.673588846 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.682643234 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.686549975 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.141640822 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.830033364 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.690312802 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.676473638 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.69736868 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.675033066 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.815564418 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.689473962 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.673281223 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.08249492 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.686168666 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.298782765 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.673720956 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.705294456 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.024873403 seconds)
  done (took 201.629506802 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.672546596 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.659691477 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.723976963 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.686736327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.110033388 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.8525688 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.754498093 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.149278522 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.677015102 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.690729859 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.881058027 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.675256034 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.907069046 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.624542927 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.702008292 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.766404948 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.90681763 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.918283675 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.710578988 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.843548182 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.695661352 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.775365385 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.692587462 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.862396818 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.715050154 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.756424558 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.69432373 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.688769222 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.865723135 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.868603265 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.720314929 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.70199064 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.877560453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.544239516 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.673780966 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.680701972 seconds)
  done (took 166.32855027 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.863588852 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.675181643 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.674339519 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.673268577 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.679943054 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.675194938 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.674913966 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.799111801 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802082522 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.312150106 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.300335223 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725338191 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.673984921 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480319202 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.674104931 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740577651 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.685050409 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.674747612 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.689530102 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.701082778 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.675093629 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.6739579 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801201802 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.685860569 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.67404289 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.681400857 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.67470097 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.679455659 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.043853211 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.674629819 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.671672273 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.674906353 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.681020168 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.916735291 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.675961423 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.674134687 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.532850607 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.345359307 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.758975185 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.674846269 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.677010793 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.68126082 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.674304997 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.893212511 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.677056636 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.676051304 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.675101008 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.677438195 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.820255808 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.676911802 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.797234 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.677677993 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.156618317 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.675973101 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.676047702 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.317898933 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.537429222 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.677405779 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.678976189 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.67588679 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.674920872 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.689065299 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.323105755 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.753436376 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.67847972 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.679409708 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.682681512 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.676152014 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.789647895 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.677699819 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.318641321 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.734882378 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.906645417 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800598425 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678284121 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.676772714 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742414122 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.76986322 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.677150934 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.676780439 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.676662417 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.675683222 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.75713739 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.676662876 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.843407619 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.686041622 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.679675803 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729869745 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.747452632 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.678932695 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.531953689 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.680070559 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.677749215 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.990802132 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745293681 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.678952233 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.677508256 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.677734778 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.817545772 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802246924 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.394817911 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.679173775 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.30121353 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.829243387 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.679097779 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.821700575 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.680932757 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760075319 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.682089666 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.67975828 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709515753 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.679186094 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.732852557 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.678153605 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.051991359 seconds)
  done (took 391.199367106 seconds)
done (took 762.681033916 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.27667425 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.244193913 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.344397129 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.258542319 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.238928617 seconds)
  done (took 12.968889305 seconds)
done (took 14.575256482 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.770632868 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.773180916 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.702524777 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.770887698 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.700076122 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.76987171 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.7518281 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.704035641 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.737219227 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.703129926 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.740923806 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703468635 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.69131463 seconds)
  done (took 24.125693763 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919155014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.913030031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.749252141 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.915283684 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.72445607 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.910070038 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.847742076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.83330092 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.829975821 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696958966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.691750447 seconds)
  done (took 21.6392435 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.916148303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.928892706 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.755973057 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.928950621 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.72942595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.925758865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.845755969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.83390146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833723631 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696269111 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.691663223 seconds)
  done (took 21.693889907 seconds)
done (took 69.066565478 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.687621461 seconds)
  done (took 3.296014887 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.716797714 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.888742133 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.695141002 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.691026273 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.688460408 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.689658252 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.691309887 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.687515185 seconds)
  done (took 15.357821141 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.684889338 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.68479402 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.68510969 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.684550717 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.688034813 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.686975758 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.685092279 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.688181904 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.687681887 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.687376219 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.68433376 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.688386837 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.688389588 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.685278201 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.68829772 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.685336676 seconds)
  done (took 28.591320773 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.686844403 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.684921182 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.684859424 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.687117888 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.684628432 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.686453234 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.687186611 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.685492947 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.685830576 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.685992288 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.686952165 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.684419696 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.684887034 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.685891403 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.68575972 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.686287312 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.685994108 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.685643539 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.688547897 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.685840448 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.686534704 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.685885846 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.686477069 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.686842318 seconds)
  done (took 42.07752114 seconds)
done (took 90.931361548 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.436839657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.463041587 seconds)
  done (took 9.509852529 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.688721187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.688307588 seconds)
  done (took 4.990623989 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.689186084 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.689540864 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.690211975 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.688264021 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.689507686 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.689122742 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.689871206 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.689456312 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.69028679 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.689566297 seconds)
  done (took 18.505709839 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.690478194 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.689075377 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.688508901 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.69017658 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.689932395 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.687250853 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.688976737 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.689461515 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.690049305 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.687995808 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.689664305 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.687234261 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.692485689 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.687536816 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.690634851 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.687490499 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.688450037 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.687931022 seconds)
  done (took 32.01473053 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.690754943 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.691010922 seconds)
  done (took 4.994640537 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.688575398 seconds)
    (2/7) benchmarking "second"...
    done (took 1.687616388 seconds)
    (3/7) benchmarking "month"...
    done (took 1.687929696 seconds)
    (4/7) benchmarking "year"...
    done (took 1.68830741 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.687751214 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.688574913 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.688186555 seconds)
  done (took 13.429042061 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.690573705 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.838751181 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.906175854 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.363656017 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.691813527 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.694633653 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.680164233 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.694674484 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.695695294 seconds)
  done (took 18.867764744 seconds)
done (took 103.923568018 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.580852427 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.687256923 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.94429609 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.747360741 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.737720545 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.983788261 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.701996873 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.959686178 seconds)
done (took 41.956265027 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.718336901 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.370559037 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.407431243 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.765129735 seconds)
  done (took 15.154975461 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.672869865 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.993627413 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.710065835 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.547705493 seconds)
  done (took 21.540979543 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.053817593 seconds)
    (2/2) benchmarking "read"...
    done (took 2.034314585 seconds)
  done (took 5.706351779 seconds)
done (took 50.735884318 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691043742 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.692911645 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.690210535 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.692257169 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.690308012 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.688899246 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.69013484 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.692148021 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.692176508 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.692283316 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.693041577 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692949535 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.689439222 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69030652 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69203096 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.690277697 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.689452514 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69039415 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.690842796 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.692823618 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.692657534 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.690686451 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.690370052 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.692980112 seconds)
  done (took 42.204352654 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.69299494 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.691942113 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.693682782 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.69362314 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.690832533 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.693996685 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.69403864 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.690421797 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.69418113 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.694523112 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.6908886 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.691906634 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.694236002 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.692536118 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694284599 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.690715297 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.694419231 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691949344 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693844961 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.692102462 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.694835213 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691140696 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.691436902 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694890752 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.691122691 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692323264 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.694771825 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.692553386 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69457123 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.692566454 seconds)
  done (took 52.402264424 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.699530581 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.702265288 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.694916019 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.694868728 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.694813959 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.694703287 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.694688155 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.697008197 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.69505239 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.695794785 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.695203155 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.695395879 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.694829785 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.695544588 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.694854719 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.695509898 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.694838277 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.695535356 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.696077818 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.693942702 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.695579808 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.695109389 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.696286808 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.69537363 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.694852359 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.69554426 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.695906001 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.695974476 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.695729471 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.696285532 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.69619121 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.696134572 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.696508808 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.696424583 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.695838102 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.69624297 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.700918775 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.704614212 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.695931941 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.696530081 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.695861917 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.695942326 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.696532046 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.697995322 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.696456364 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.697189837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.697624805 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.697341318 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.696460318 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.696443569 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.696941228 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.696126064 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.697784041 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.696618575 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.697402017 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.696728808 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.697678511 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.697492961 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.696272646 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.697155084 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.696691598 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.697138784 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.697757795 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.697216052 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.697460956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.698380336 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.69776498 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.697154908 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.697478132 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.698033774 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.697464734 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.698975476 seconds)
  done (took 123.774640892 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.698195754 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.695006726 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.695022885 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.694892776 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69457533 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.697902582 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.696066898 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697489852 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694827658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.698301187 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.698146812 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.696718745 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696522907 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.699008709 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.698752001 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.69673566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.699031984 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.696671128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.699676992 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.699983949 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.698707878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.696876411 seconds)
  done (took 38.95901717 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698279265 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.700518205 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.696458785 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.698661566 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.698118174 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.700531277 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.699228599 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.699272224 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700254706 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696726147 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697872948 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700369696 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.696711905 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697453102 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696940046 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.696980735 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699962398 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.697437734 seconds)
  done (took 32.192408828 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.697735633 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.697544426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.700249792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.697482094 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.697979671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.700064554 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.698058557 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.700771761 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.699787438 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.697214383 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.700420026 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699866721 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.701366547 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696081463 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700847591 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.69810036 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.700036465 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698554182 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700626014 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.697691537 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.697125489 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701757915 seconds)
  done (took 39.000536982 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700382333 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.700482234 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.697959089 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.697797605 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.697673897 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.701536095 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.701794747 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.699271284 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.701023538 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.701244183 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.699528358 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.70205098 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.699745287 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.70026647 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.69880587 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.699076596 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.703324507 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.700869485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.702300857 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.69982717 seconds)
  done (took 35.627661874 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703788043 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704080576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.703612277 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.70270453 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703851833 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.702973835 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703130961 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.704170005 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.702893055 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.703717444 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.704462995 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.704572364 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.703753928 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.703436093 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.703950874 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703950118 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704140564 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.70433253 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.704498408 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.703813754 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.704980486 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.704788251 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.7047589 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.704375204 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.704873707 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.703773689 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.704705847 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.705254588 seconds)
  done (took 49.337671843 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703801941 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.702608642 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.700697479 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.70029245 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.70091417 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.700195646 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.700719677 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.700667442 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.702402981 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.701452125 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.704973167 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.703923598 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.703708345 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.702989124 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.703256325 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.704537304 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704544002 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.702018061 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.701006296 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700649445 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.704700127 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703668363 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.704111253 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.701788667 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701132423 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.703847052 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.701086267 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.70214411 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704255149 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.701805113 seconds)
  done (took 52.698217295 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.723652941 seconds)
    (2/2) benchmarking "in"...
    done (took 1.723721282 seconds)
  done (took 5.073320306 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.703045605 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.705405769 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.704335587 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.701752591 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.702625853 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.705890604 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.705109159 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.701662381 seconds)
  done (took 15.25508737 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.704686738 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.704974709 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.705620837 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.703709861 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.707187638 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.70652423 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.712557825 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.704665934 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.707092707 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.706675125 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.714081291 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.713921107 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.708594278 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.706866777 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.704870989 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.70724995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.705495087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.705890653 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.706427148 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.706343385 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.707543896 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.70685026 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.708046753 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.703321287 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.708112523 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.717912652 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.711200195 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.707379678 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.706556336 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.710319541 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.706284909 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.705000388 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.708562901 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.707754245 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.706539877 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.708611147 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.716110641 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.710159072 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.712934244 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.709362651 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.707690472 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.705155899 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.708418378 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.710969292 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.710709725 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.709507435 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.707888613 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.70517599 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.70787121 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.711771504 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.713319139 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.706576928 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.704372601 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.711708635 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.708429646 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715001214 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.709663464 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.711892069 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.717962172 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.718926558 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.721907497 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.716124796 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.710138579 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.709914555 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.71921857 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.733237654 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.715189518 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.706607782 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.706045813 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.709376746 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.716172378 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.721426142 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.71908151 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.709108596 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.710091411 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.709276011 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.709648291 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.708052961 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.715548954 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.711240682 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.710944937 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.710385673 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.719674473 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.733591586 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.708932226 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.710288356 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.710498072 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.711101193 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.710581437 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.723007071 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.710928615 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.709629178 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.708024263 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.710775731 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.712059493 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.711659441 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.709259609 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.710981476 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.707207264 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.709851504 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710506231 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.714274139 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.720209976 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.712653918 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712000847 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.717149882 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.710995134 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710966952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.717592577 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.711015113 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712359449 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.71272823 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.717902097 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.708182048 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.714891416 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.719854325 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.712207206 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.712376169 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.711911934 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.711109851 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.720793453 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.738816318 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.71147675 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.711185019 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.716607664 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.724773959 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.712267073 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.714669755 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.712041227 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.709475446 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.709490439 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.713328761 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.712418832 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.71246626 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.71302613 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.713204213 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.71166511 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.711513878 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.713534296 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.713202757 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.712409042 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.711890699 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.712900927 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.713551907 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.714370428 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.714095302 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.717945347 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.712997073 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.714243073 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.713731375 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.711043544 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.71251317 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.713448718 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.71444131 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.713491839 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.714208572 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.712677825 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.713918483 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712679518 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.713446803 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.713693258 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.713923995 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.718093589 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.715176132 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.716872347 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.713913458 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.711105188 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.713277798 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.713723294 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.714115023 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.713469797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.711818494 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.717047717 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.722613376 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.713451164 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.713788009 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.716129551 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713946681 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.71426782 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.715593445 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.716842477 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.722420194 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.715470293 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.721062975 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.715731577 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714974284 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.713891907 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.715113859 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.715177789 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.714847217 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.718610578 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.721979524 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728105493 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724489788 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.716540348 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.719051143 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.716203135 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.720232892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.718640454 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.716217228 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.714402742 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.716466637 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714853079 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.716577403 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.716425627 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.716767205 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.715152821 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.714943077 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.714688445 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.717688796 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.715617951 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.716455359 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717206178 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.71406116 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.71695782 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.717905784 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.715236358 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.712973206 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.715562487 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.715315302 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.715791553 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.71689006 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.722124257 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.713540275 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.717649069 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.71626896 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.715572336 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.716365536 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.715761343 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718367295 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.717562208 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723692541 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.71837406 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.717239468 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.723498641 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.716977077 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.715377058 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.719324073 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.716927226 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.714910328 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.720220824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.724718871 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.716477723 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.71892847 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.718284073 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.717793331 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.716748597 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.724120111 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.715251937 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.717235314 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.717905328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.719277942 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.714668939 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.719717179 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.718363511 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.718540187 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.72000612 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716976338 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.718414897 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718721517 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.719340639 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.719290508 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.719386385 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.721595353 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.727005642 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.722758053 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.719022511 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.720576599 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.720389457 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.722472336 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.719155257 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.719890506 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.719284683 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.731928927 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.728503504 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.725707191 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.720504776 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.718464423 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.724156432 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.721151031 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.723932971 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.718918643 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.719766269 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.720273543 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.719435534 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.716882911 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.720591949 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.719877962 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.72021438 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.719276892 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.723881058 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.719036134 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.719472341 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.720581602 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.720946028 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.719143497 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.718966214 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.719564582 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.721518617 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.721783687 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.719762952 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.720379024 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726525254 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720359013 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.721377799 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.720624684 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.720489239 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.719899286 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.721219045 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.721690797 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.724222589 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.728112232 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.724462613 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.72990398 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.721275757 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.73099306 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.720932588 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.72477055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.731233921 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.717665092 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.719513261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.720688955 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.721633642 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.727603425 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.722051513 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.723725874 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.727255712 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.724167873 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.723023561 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.721979852 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.72341005 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.721486145 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.723364365 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729837465 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.723397964 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.726253859 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.724513437 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.720551389 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.723653204 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.721584757 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.721915148 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724950205 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.723212582 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.722414029 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.721565354 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.723102814 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.723054387 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.723114863 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.722288895 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.719651898 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.720989329 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.729137581 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.724872686 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.728919261 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.721752028 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.730205814 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.72398425 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.728553442 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.723502555 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.722860696 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.724357506 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.722270776 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.724063543 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.723304375 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.723561324 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.724600662 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.724588116 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.726624479 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.724179552 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.725471928 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.724014368 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.72432971 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.72391228 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.733336505 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749416197 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.725825586 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.727925442 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.720000099 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.724800579 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.728554071 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.724766625 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.72260384 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.726859868 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.733823763 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.731449603 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.724088412 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.725556309 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.725739077 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.725416893 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.724506716 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.724757871 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.725541917 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.724536036 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.725473526 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.726275129 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.727796702 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.72524494 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.725592562 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724768694 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.726468142 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.735605841 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.725544315 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.726232764 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.72574843 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.723759717 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.724448373 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.724595458 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.726260677 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.725919401 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.725525494 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.726629511 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.732613552 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.731785123 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.72781927 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.725499761 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.726307255 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.725601205 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.725931109 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.727866236 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.727432528 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.726650123 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.726318597 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.727298615 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.725720506 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.724356179 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.726047724 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.726303926 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.725909339 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728982015 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.734035158 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726224571 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.722305771 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.725099974 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.726095395 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.725768597 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.726740268 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.732805945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.730397075 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.738065814 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.736425032 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.732217546 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.726512795 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.730440452 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.734813141 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.725207143 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.726520717 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.727926113 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.728743295 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.728245989 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.731560616 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.728424984 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.734421217 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.727545987 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.727124791 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734337202 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.729391976 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727922347 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.729708162 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.732771287 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.727218222 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.724789234 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.727495446 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.728246585 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734794312 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.728584446 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.729345185 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729516817 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.72604473 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.728455639 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733390925 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.728499716 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.73001969 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.725238202 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.728392924 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729498941 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727979773 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.724641833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.728628825 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.72793106 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.731324773 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.735175213 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.725787064 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.730570728 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.72879293 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.729714819 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.730492717 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.728336038 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.727955153 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.725621022 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.728900989 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729236027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.729936265 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.731029717 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.729261982 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.730176283 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.730446907 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.731125481 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.732917071 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.741558831 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.737430125 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.726210493 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.729432449 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.7316051 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.733494865 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.730253336 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.731086992 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.730007191 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.731210692 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.72955233 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.731017079 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.730168339 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.733703884 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.745841879 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.73086999 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.730728471 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.730607438 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733472607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.730897592 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.727211948 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.730598359 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.732832568 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.734191403 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.739288891 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.73128748 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73696967 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730768852 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.732598271 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.734752234 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.734329563 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.739439972 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.733462069 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73160038 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.730366617 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.736744555 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.747219473 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730160058 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741400041 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.762378567 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.731468116 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.732068652 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.732823605 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730276689 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.732579438 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.73386525 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.733468073 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.731793277 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729934888 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.730967507 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.732896621 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.738282731 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.733223129 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.730970123 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.731661472 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.731974642 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.733318051 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.728500784 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.734038435 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.730911074 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.733156955 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.734140129 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.734012987 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.733205948 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.745608976 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.743865543 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.732857559 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.733589666 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.729824935 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.736851209 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.735734075 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.745294439 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.741318095 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.734405056 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.734993154 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.734957047 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.734116838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.729645371 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.733734947 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.733406735 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734127632 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.73023189 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.746614898 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.74378217 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.737616904 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.73265499 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734190729 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.733358696 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734794259 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.734185368 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734832144 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.735545783 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.73510382 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.73955188 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.733940918 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.733665957 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.737032027 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.742147821 seconds)
  done (took 1027.925873087 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731301026 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731224104 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.731289135 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730451885 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731534113 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73100963 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73202457 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.731275825 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.731677189 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73052204 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.732177619 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731488178 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.731212984 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732132999 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731820879 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.731933868 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.73265824 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.73151604 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.731467998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732219238 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.73126692 seconds)
  done (took 38.015640017 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.73472712 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.731787569 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.733268035 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.73497339 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732411563 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.736391914 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.733139332 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734990145 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.736087455 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733051614 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734918214 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73474683 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.733612456 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.732672581 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732399036 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735943102 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.736321401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.73304254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.735585977 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.733562172 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735006201 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.733156774 seconds)
  done (took 39.807073693 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.737549258 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.736633167 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.734394929 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.733138419 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.735959226 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.733509117 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.73626124 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.736240406 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.736546683 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.737086665 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.735778256 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.738254309 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.743872572 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.742167437 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.739454895 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.736317272 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.879705904 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.737223011 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.739039884 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.73757298 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.733819104 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.74140786 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.733623553 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.734002174 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.735977129 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.737854469 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.737613141 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.737565124 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.739477928 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.739447181 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.742500755 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.737058618 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.738364146 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.739597864 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.736977217 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.738620868 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.742238722 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.738396737 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.735621477 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.737760897 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.747624973 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.759467811 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.739434989 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.744461207 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.73720085 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.73728732 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.741134352 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.748153135 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.735931534 seconds)
  done (took 86.991819419 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.738799796 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.739276756 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.735962921 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.73821673 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.737624692 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.737387096 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.73764747 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737830764 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.735255607 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.735088388 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.738806508 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.735876757 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.736534804 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.738397011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.738178027 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.735390288 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.736243898 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.735931813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.735760458 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.735402713 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.736014094 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738918877 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.738972049 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.736325474 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.738127375 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.736221804 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.736101353 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.738896739 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.736282158 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.736680697 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.739533574 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.739307219 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.741079266 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.737424494 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.736588749 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.739262163 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.739893392 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.737774054 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.738235627 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.735985875 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.739377654 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.740030709 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.738599855 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.742178793 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.735419774 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.735864147 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.735807848 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.736006756 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.737547988 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.739370402 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.739068176 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.736633335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738957179 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.736919352 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.739874423 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.740542608 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.735716083 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.736809639 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.738336013 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.735882819 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.737386305 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.738065005 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.734966827 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.737522972 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.73738583 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.73523539 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.736528857 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.738103182 seconds)
  done (took 119.811018975 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739102432 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.740023406 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739649523 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738435637 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.738345409 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.738220125 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.738558708 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.738061994 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.738987961 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739072295 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738059621 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.736775906 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.737017723 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.736825694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.738303823 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.73268078 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.733732258 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.732774219 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.733740636 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.733084995 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.734387826 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.73215095 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.73211621 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.732106286 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732050501 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.731709062 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.732970152 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.72995164 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731790807 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.731141641 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731137763 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.731775443 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.73249069 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.730455437 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.729977296 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.731269187 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.730501737 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730322755 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.730427376 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.731054053 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.729555581 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730284648 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.731003116 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.731884779 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.730052151 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.73133105 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.731691668 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.732046445 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.729799966 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.730710046 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.730699022 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.731847962 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731088972 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.731282066 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.730790594 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.729290752 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730738171 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.730775686 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731214567 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.732012005 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730360225 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.732181844 seconds)
  done (took 109.110754896 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730448052 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.729836683 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.727777893 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.728937787 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.730080914 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.727218308 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.729950562 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.72956671 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.729731399 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.731634326 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730193485 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727118009 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729894977 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73016497 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.728308747 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730195477 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726954096 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.727600053 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730708228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728198388 seconds)
  done (took 36.234847466 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.731903935 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.730693204 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.728665859 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.728157123 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.731386534 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.728272191 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.73147945 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730822945 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727205218 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731048931 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.730910465 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.731718871 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728866568 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.728978385 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.73047744 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.729231165 seconds)
  done (took 29.329775211 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.729959934 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.730898852 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.732296959 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.732786231 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.72912962 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.72803957 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.731616884 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.728066213 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.727629617 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.731832191 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.731291358 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.730626232 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.731573891 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.732133527 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.728245674 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.731063477 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.728115392 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.728068131 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.731567307 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.731442918 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.727120742 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.727224952 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.729320543 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.731730423 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.723756818 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.724099623 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.724211541 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.725010544 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.723464939 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.727601036 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.722795122 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.723010583 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.721432174 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.722423794 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.727189219 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.723723726 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.725266544 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.725931317 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.725588156 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.725331955 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.725419101 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.723450823 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.723451682 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.723462301 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.722392425 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.72453801 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.721527628 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.723316288 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.723375774 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.722452206 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.72491513 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.726353244 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.725795543 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.724237785 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.723616919 seconds)
  done (took 96.622999804 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725098413 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.724325615 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.722800799 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.724142752 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.724511861 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.721922406 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.724889954 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.723169534 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721914327 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.7249873 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.721691824 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.725499377 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721933313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.725074453 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722991012 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724775949 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.721349559 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.723679434 seconds)
  done (took 32.669915236 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.722066814 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.72244595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.726000189 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.722464552 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.722085855 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.725887246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723516095 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.725307241 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725449755 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.723372924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72223598 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.725219991 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725878161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.724689902 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.722835402 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722652128 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.725829286 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725470982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.723294136 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723668174 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.726721702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72538134 seconds)
  done (took 39.577435562 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.725860745 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.726050736 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.741434056 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.748830805 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.747612684 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.763410578 seconds)
  done (took 12.099475783 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722795577 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724121855 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.721126117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724949661 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723641922 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724139182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721108056 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720112162 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725019633 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721591389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721145402 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724776902 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722822715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720858236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72306615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722880549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721166315 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720982175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719358512 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721973096 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719629851 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721555567 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719555457 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72063301 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718500016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718671485 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721830231 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719813975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718631575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721947787 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720792714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717875667 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721928532 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719330209 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720263928 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719610867 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715848135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719144774 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718447336 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716297961 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.719454381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718742673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718181168 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714457466 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718709327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715272986 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717850816 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715849859 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715844638 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719168453 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717887274 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71581806 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718505731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718133836 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718561035 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718805185 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715804843 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715695688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719153905 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715582043 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715552696 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719920103 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716001091 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716920125 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719083465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71700694 seconds)
  done (took 115.13667231 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715403945 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.716351899 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715732708 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718301693 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716701909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717380872 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716079732 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716592414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717040625 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715425514 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717368329 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714905302 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715077993 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716684558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716191661 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715898622 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715021247 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715165571 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715093927 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719011522 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716380685 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715226915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715255169 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715518106 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715351123 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717574623 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717413105 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715009304 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714214434 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714854415 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715427064 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715053215 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716456715 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.716318517 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715356378 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714847699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714876821 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714721614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713882867 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717926827 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715946195 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717442376 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715272567 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716779685 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7145492 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714849579 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716626293 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715203302 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715154911 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716240315 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714705864 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714668384 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714501814 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714828156 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714015747 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715086377 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713316816 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715060871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713688684 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716934855 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714651169 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716438541 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717323328 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71432543 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714364824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714845267 seconds)
  done (took 114.874287567 seconds)
done (took 2386.35148425 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.763726016 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.707700132 seconds)
  done (took 15.109355337 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.877042297 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.829172793 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.714336682 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.710944213 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.715145757 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.736830367 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.73406349 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.715962573 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.714081282 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.715363081 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.715723896 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.900954075 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.770291909 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.715576418 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.714451265 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.807430348 seconds)
  done (took 49.727407193 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.717706455 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.718944098 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.730608201 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.720555213 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.716551726 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.729831569 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.751393279 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.722027017 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.752610741 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.731052521 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.786762552 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.729362645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.716559286 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.768977874 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.731290704 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.731732329 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.807364116 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.793726629 seconds)
  done (took 32.99245121 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.796305772 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.719125844 seconds)
  done (took 10.158192513 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.726364911 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.736858382 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.745938286 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.732320598 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.710741857 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.735700495 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.755050234 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.717417607 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.747420048 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.750458306 seconds)
  done (took 68.996364411 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.71992651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.71784326 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.716888858 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.713937477 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.70872155 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.712741623 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.715450537 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.711151342 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.374446276 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.750423111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.720503767 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.720250398 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.715061214 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.715880866 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.711451532 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.740043558 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.819247878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.711966719 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.710676315 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.71971998 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.716314796 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.768804402 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.729299609 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.715208549 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.745292964 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.373633804 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.723581596 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.720813201 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.820831319 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.712743231 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.714446127 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.716130877 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.718590408 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.090443188 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.975653793 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.715791134 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.730009098 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.722901004 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.713344001 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.818480815 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.71631391 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.721117912 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.427081662 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.95978822 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.810414741 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.756316163 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.035197125 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.732588331 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.719073676 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.744086513 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.719253279 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.718158807 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.729847662 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.205050198 seconds)
  done (took 123.703739493 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.712725931 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.063543243 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.882053547 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.711398688 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999955008 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919913395 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714789476 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.761078837 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.714495639 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948296832 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97128158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821104325 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.713581867 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.711542123 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.715903041 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.71101582 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.871991887 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.788057784 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.715103037 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.7105489 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743279422 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957494108 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.837948588 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.7138256 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.741987724 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926402005 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.836517137 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.81944458 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.503842528 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.711466952 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778935989 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.71522154 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.716108623 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.711758123 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.870013144 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811389786 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799690802 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.714216888 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.711503747 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.713650579 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.478289372 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.91531953 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810420082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.855370221 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.863767792 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919083153 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.496873154 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.711496085 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.459475646 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.878955696 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.945711054 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.949495389 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.837514124 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.717739655 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.055499812 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.710820805 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.712037201 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966909172 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.8555052 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.814958907 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71527954 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.712141041 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.713007985 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013294249 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.71593826 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811700942 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714477355 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.712295971 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.812784056 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814834885 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.852223548 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929319765 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.746368068 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.43764519 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.923275574 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963471637 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.781922678 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966461313 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.716875029 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.71465063 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795713558 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.561209224 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.96922597 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.004961753 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.96980119 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751288665 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.446927892 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.714361488 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.943824129 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937343434 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.977590868 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.864449285 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.951716259 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.036305835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713025602 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.713416677 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.93076301 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.851179036 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.717375395 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.0663372 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948490764 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.263322605 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.736030323 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022997601 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.847823635 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.716902881 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.373712187 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.71331661 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947102036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.758148151 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.716206241 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.713857499 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.938268593 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.711976499 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715373498 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.595069793 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.778566235 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.717995022 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950052867 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.716605876 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987699659 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717080472 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95672693 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.698338488 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.749668374 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.891962295 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.864604656 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.717821262 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.962434318 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962767261 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.833171955 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.99162201 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.60690626 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.71778498 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007726725 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.718113483 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.716219174 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.890043972 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.716944425 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.864083574 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.718637382 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.01460504 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740453935 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948880519 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717471575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979737423 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.753464132 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768404491 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.718518411 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.843259999 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.719375292 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.649682208 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.877054459 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719190342 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.71752422 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.269886973 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.717007854 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.868632278 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.953787651 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740439712 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791942426 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.387472391 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.717074743 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803420763 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742447802 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.114634886 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.717312262 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.971979438 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.720130309 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.717064808 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.716530318 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.013745082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.9554105 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.720763465 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.717773685 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.631181211 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.716599837 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717457528 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.902663734 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.058786144 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.718517738 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92371974 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7227539 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.848135148 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.723863713 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.802748035 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.054448067 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717283134 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.718891196 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.718640357 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.718200007 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.719970053 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928673189 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.746571967 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.237955948 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.858042113 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995576372 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.030859075 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.969478438 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.764183685 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.72149576 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.983914424 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.719770185 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.784502539 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.722843784 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.74186385 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.951691066 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.722672638 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.985013309 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001507451 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.675578016 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768853026 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.721095458 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720007938 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.721336032 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.866792915 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.808314572 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.721942663 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.718918453 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.83651866 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841574062 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932490089 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.721374658 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.761897903 seconds)
  done (took 868.573947812 seconds)
done (took 1170.899962345 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.718735978 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.721144523 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.707244498 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.723303644 seconds)
  done (took 28.51554545 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.141742306 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.727093911 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.72915762 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.727169271 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.729112619 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.72785811 seconds)
  done (took 12.430605393 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.751697507 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.722668572 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.72378448 seconds)
  done (took 20.845499095 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.794474399 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.108876589 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.828637182 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.148044263 seconds)
  done (took 9.527069019 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.729211085 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.729092913 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.72857241 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.731531696 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.730886239 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.731222191 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.729220199 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.728719573 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.731395717 seconds)
  done (took 17.218799668 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.814878924 seconds)
done (took 93.998775915 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.903157167 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.283263654 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.811906462 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.072131653 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.740100131 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.932972023 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.210701345 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.835733338 seconds)
    (9/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.891869035 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.759537308 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.995643785 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.805060889 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.775446024 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.718719117 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.814585017 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.915868322 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.857725614 seconds)
    (18/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.869174847 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.896165385 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.818809742 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.757232038 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.717463533 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.738670249 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.742528055 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.755081044 seconds)
    (26/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.824111348 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.89015925 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.87165891 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.837357684 seconds)
    (30/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.797313384 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.73497302 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.83190452 seconds)
    (33/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.829083184 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.632044391 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.088578892 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.737208083 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.82966686 seconds)
    (38/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.32019531 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.830272327 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.732715157 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.780304323 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.809080776 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.973040811 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.712158718 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.84804948 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.868620838 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.667143512 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.028768884 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.910748744 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.740869515 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.900127047 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.897047831 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.984082388 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.845544181 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.733822838 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.796043708 seconds)
    (57/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.199888325 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.091994567 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.852588177 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.720619026 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.733493842 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 5.522812784 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 1.959166677 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.722335415 seconds)
    (65/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.259450059 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.105836599 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.877910347 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.094765977 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.466149575 seconds)
    (70/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.184572946 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.99364293 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.845425699 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.742340473 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.638594782 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.904667552 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.758878451 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.029608665 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.933255478 seconds)
    (79/309) benchmarking ("sort", Float32, false)...
    done (took 5.473202328 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.725279935 seconds)
    (81/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.879322469 seconds)
    (82/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.767556627 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.002775758 seconds)
    (84/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.829804106 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.736585921 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.009584031 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.651057013 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.741518393 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.077398528 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.859863406 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.592108356 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.17410531 seconds)
    (93/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.75746986 seconds)
    (94/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.802502437 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.763573032 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.225739359 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.827018533 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.165016792 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.135206623 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.9757501 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.428119978 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.589185044 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.726265831 seconds)
    (104/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.671796099 seconds)
    (105/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.742694204 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.89992274 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.831014089 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.719442476 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.088113309 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.232412815 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.106707915 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.743382783 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.742121592 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.02228482 seconds)
    (115/309) benchmarking ("sort", BigInt, false)...
    done (took 6.830801548 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.856337063 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.024813132 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.915232877 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.873162594 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.83438266 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.758046369 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.754801458 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.035720799 seconds)
    (124/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.946673043 seconds)
    (125/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.723840369 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.80430651 seconds)
    (127/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.744847433 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.746252967 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.399569976 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.708969362 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.742476095 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.769679183 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.871117617 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.991089261 seconds)
    (135/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.886128019 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.870687874 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.077862966 seconds)
    (138/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.963249082 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.763415493 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.570644244 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.460655344 seconds)
    (142/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.831501231 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.843765807 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.066277647 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.8059856 seconds)
    (146/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.925282395 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.179835887 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.659028758 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.834528473 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.432785676 seconds)
    (151/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.814765601 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.077733264 seconds)
    (153/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.778058655 seconds)
    (154/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.723903361 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.203783624 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.86654083 seconds)
    (157/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.997910026 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.130175156 seconds)
    (159/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.020088653 seconds)
    (160/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.746355503 seconds)
    (161/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.984892486 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.0039688 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.765792866 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.918708341 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.811905866 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.45617819 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.785253337 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.213876258 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.841245019 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.821891191 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.042958493 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.867610576 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.741755304 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.884950908 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.845259477 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.858422949 seconds)
    (177/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.760083019 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.916324759 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.756383915 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.120651694 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.927787048 seconds)
    (182/309) benchmarking ("sort", Int8, false)...
    done (took 4.644340242 seconds)
    (183/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.929133836 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.875919723 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.745049956 seconds)
    (186/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.753194578 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.741285765 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.149091544 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.90014424 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.765708993 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.06388777 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.818825645 seconds)
    (193/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.138238012 seconds)
    (194/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.705188733 seconds)
    (195/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.767815178 seconds)
    (196/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.125977749 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.035199098 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.756390352 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.727891335 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.291361799 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.601092406 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.755408048 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.105355808 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.843146454 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.735330151 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.257097998 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.069350384 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.180343396 seconds)
    (209/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.83940164 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.906524043 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.822924198 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.008517033 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.263318525 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.084641135 seconds)
    (215/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.817710341 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.329146141 seconds)
    (217/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.13303361 seconds)
    (218/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.770746095 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.685619885 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.165309609 seconds)
    (221/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.820700898 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.757937513 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.833454639 seconds)
    (224/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.202430834 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.776156882 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.97798386 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.806656767 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.767098162 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.98734264 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.7628265 seconds)
    (231/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.263573688 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.564264898 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.102776798 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.749104095 seconds)
    (235/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.13643768 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.850084288 seconds)
    (237/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.95578797 seconds)
    (238/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.589192694 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.363328521 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.761527886 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.745273291 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.750517509 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.037764522 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.068702797 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.853352378 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.775720681 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.983667842 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.993195719 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.777419405 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.878455749 seconds)
    (251/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.78807144 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.713241241 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.793119732 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.746157305 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.164350395 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.822996308 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.828242501 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.375796347 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.946677247 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.731893737 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.027437531 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.818705342 seconds)
    (263/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.84873502 seconds)
    (264/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.981900312 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.993018312 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.867366827 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.807717402 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.931020639 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.100641858 seconds)
    (270/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.734398137 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.725123539 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.081341601 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.751240292 seconds)
    (274/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.841689168 seconds)
    (275/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.944639079 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.076258312 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.837512124 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.086964908 seconds)
    (279/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.871976421 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.882220703 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.897329069 seconds)
    (282/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.795517571 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.746044049 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.476825935 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.04910654 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.923582612 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.753512592 seconds)
    (288/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.915383515 seconds)
    (289/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.772546264 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.76757792 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.886974489 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.751146942 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.559001186 seconds)
    (294/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.826723855 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.168990207 seconds)
    (296/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.908271946 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.015446428 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.83978038 seconds)
    (299/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.177868137 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.440338294 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.781442256 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.87780183 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.738824936 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.111143541 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.854813129 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.999163661 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.975848186 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.3172311 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.111725277 seconds)
  done (took 969.890009251 seconds)
done (took 971.829916956 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.781537763 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.772752594 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.758934615 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.778131504 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.867727812 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.784993507 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.767556864 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.75984729 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.804429975 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.807027933 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.75529201 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.783164794 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.758437831 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.757239979 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.757127167 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.769665709 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.072517723 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.789990405 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.775411718 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.768140488 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.773059334 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.753833399 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.807649616 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.783892412 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.762420193 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.761019308 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.758829863 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.777232406 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.871246462 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.761184088 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.761055401 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.770025145 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.072739757 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.788923118 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.754260495 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.7781391 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.770355774 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.768631861 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.761688374 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.790550163 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.159178407 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.799136865 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.75984167 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.759659097 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.760173698 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.76365468 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.760753708 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.766232919 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.772549331 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.773040101 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.148739384 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.815067841 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.761355195 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.759355929 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.77023396 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.760483256 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.762764752 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.775852345 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.77908556 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.776252527 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.055799354 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.79488033 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.763217964 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.777794038 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.768435249 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.184780221 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.79727681 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.764293152 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.159978276 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.806396089 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.185539618 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.809486948 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.761880606 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.775872799 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.791590406 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.075274714 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.787104024 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.760544554 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.768001815 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.759069699 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.770426605 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.773145004 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.76557564 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.761551369 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775542437 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.788319292 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.771619578 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.760941107 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.77061687 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.78017409 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.768682897 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.772914332 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.764255803 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.755991354 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.770844312 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.763953303 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.764613314 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.764033707 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.766224754 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.772184589 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.157516235 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819861811 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.758925756 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.759361897 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.760872441 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.776706184 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.159722163 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.803928842 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.783928149 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.810221116 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.762972975 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.056050804 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.797429996 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.778300693 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.771909072 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.764011631 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.758427101 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.05572637 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.183106451 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.819485596 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.763852523 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.758508884 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.777824494 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.764588826 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.759574294 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.077336175 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.795035289 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.777976176 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.884581988 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.774324749 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.794540436 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.761462252 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.766432754 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.793852412 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.779447473 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.794416174 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.766871066 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.778443811 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.779616687 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.761829208 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.774773122 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.773994769 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.766902296 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.769774456 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.758991402 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.795550305 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.77617602 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.776618287 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.785076313 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.884397032 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.762160291 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.059251739 seconds)
done (took 277.222129533 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.834494317 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.760709799 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.860148597 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.761285784 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.843136758 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.851046685 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.758403065 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.759078291 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.758372598 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.133232287 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.759544983 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.759462946 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.760412379 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.759704988 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.844300188 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.76154635 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.759332124 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.155819707 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.76381846 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.832914667 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.763008488 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.760338385 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.762483374 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.197010141 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.759868179 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.755735643 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.836390407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.761969042 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.101999102 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.758986555 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.757686262 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.159825076 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.855212932 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.77982945 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.771845608 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.769516076 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.847542622 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.767044214 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.846087447 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.844084713 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.863591466 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.802839433 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.758391767 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.761974744 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.766201196 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.764243202 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.760377179 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.791146757 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.761112326 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.760074759 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.09865439 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.773961816 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.761606207 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.761228274 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.760617187 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.795388867 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.760510736 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.764786094 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.85529626 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.765051137 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.83002291 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.140095895 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.201356772 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.763493133 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.758586024 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.762368527 seconds)
  done (took 177.356629158 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.831349949 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.843387245 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.829397143 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.769300022 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.815866569 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.833281903 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.769372529 seconds)
  done (took 14.373696637 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.771525395 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.765141263 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.815708439 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.816479121 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.765343414 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.918271728 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.765489663 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.777185549 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.762062673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.818476992 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.765975145 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.764353229 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.772860239 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.765978441 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.816796601 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.777420957 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.881587861 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.767288874 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.767083522 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.915859573 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.763100356 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.773192675 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.798559475 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.777680059 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.767324466 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.771170516 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.348868928 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.76699598 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.763136818 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.76529087 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.762079839 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.807168861 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.767297548 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.758968775 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.763481187 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.881636356 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.767166853 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.763282507 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.766305358 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.762255817 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.76569167 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.766256996 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.766456895 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.765393478 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.765412859 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.7892363 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.767055138 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.766237321 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.766249837 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.767538757 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.800655766 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.768082041 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.764449754 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.765627294 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.823630111 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.773789799 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.769996689 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.763824044 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.767714084 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.763905906 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.918514512 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.81739005 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.768291628 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.817570441 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.766946719 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.769096367 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.766497127 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.766244033 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864716898 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.766618439 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.818775372 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.766403799 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.925777475 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.789549108 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.768082419 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.770985032 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.772524372 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.768630148 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.768989027 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.77432587 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.765488722 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.770251184 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.774425428 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764790986 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.765005882 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.88133419 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.875088528 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.765712924 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.781550457 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.77531629 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.766205319 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.802508653 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.768025836 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.767174661 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826136562 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.886186544 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.825269531 seconds)
  done (took 195.703271975 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.773738532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.777527936 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.769471722 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.785404427 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.768503785 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.76902419 seconds)
  done (took 12.329462239 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.771511407 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.769271621 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.769089951 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.768543602 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.771339147 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.76978682 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.770354736 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.77138741 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.775836632 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.768576535 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.770311452 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.770247932 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.771106833 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.770363986 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.770910349 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.768451619 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.771205755 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.766924722 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.768394258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.772211456 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.920374986 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.77231761 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.771861342 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.771223103 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.774930749 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.769728955 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.779193675 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.769723882 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.770701977 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.777396917 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.775418659 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.770286944 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.7710859 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.777285233 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.774668634 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.771805617 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774932059 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.77188395 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.767215825 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.770927842 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.772219022 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.774237526 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.771060184 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.772367186 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.77166402 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.776915391 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.777739881 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.780063862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.77316488 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.772981738 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.772593383 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.770873948 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.771448774 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.772618432 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.774334702 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.778236783 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.777550348 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.77344553 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.772959519 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.772865888 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.772962651 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.772441873 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.774446891 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.776218437 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.77985054 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.773064783 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.773709568 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.777622974 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773631517 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.772001948 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.772807257 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.767898954 seconds)
  done (took 130.463452921 seconds)
done (took 531.92466548 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.937586555 seconds)
  done (took 8.626249352 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.832103912 seconds)
  done (took 8.56147754 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.236079976 seconds)
  done (took 9.928044476 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.782641421 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.798664697 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.780426847 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.76905097 seconds)
  done (took 28.844805845 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.820282682 seconds)
  done (took 8.509113755 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.791686388 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.767703328 seconds)
  done (took 15.287206617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.839003358 seconds)
  done (took 8.52855204 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.837343161 seconds)
  done (took 8.551636086 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.77767414 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.801190216 seconds)
  done (took 15.283058068 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.753083558 seconds)
  done (took 8.442843176 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.50104658 seconds)
  done (took 11.284612405 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.786045429 seconds)
  done (took 8.579152794 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.803237769 seconds)
  done (took 8.493678112 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.799823409 seconds)
  done (took 8.489914858 seconds)
done (took 159.100259711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.770976624 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.770013826 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.76766467 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.768322083 seconds)
  done (took 28.76702177 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.806219408 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.808947079 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.808473744 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.81812882 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.808775488 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.806415904 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.798657682 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.800090859 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.818512312 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.808785493 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.809364958 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.808036496 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.806924985 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.800176403 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.80900822 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.809958087 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.817661422 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.808731095 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.799564876 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.811833117 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.774550372 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.818034573 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.810955807 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.775325689 seconds)
  done (took 45.033655828 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.966939046 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.847075881 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.928608626 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.826791501 seconds)
  done (took 9.262084464 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.826293584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.828278596 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.838710227 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.878548119 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.902091409 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.83869845 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.799270973 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.79570064 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.782904422 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.82987379 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.904263946 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.824189356 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.914178685 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.773926405 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.961682319 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.774887889 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.779029323 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.827496973 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.879457247 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.917575974 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.776014135 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.827857461 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.832179831 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.822796413 seconds)
  done (took 45.827863482 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.773848579 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.78276633 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.782904233 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.775248352 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.774288083 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.775486976 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.780611145 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.775636946 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.795882758 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.77625891 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.774150242 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.774670104 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.77452436 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.775710523 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.774046466 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.787319049 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.78947596 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.774657522 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.781690065 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.783135662 seconds)
  done (took 37.27495958 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.771075058 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.62527169 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.122080133 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.02701348 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.770022717 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.771074418 seconds)
  done (took 30.780736891 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.790586946 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.782629134 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.776813401 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.836192606 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.917817067 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.78509636 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.777456005 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.789623357 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.826138987 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.842904431 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.797327342 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.807457872 seconds)
  done (took 23.424158301 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.773696154 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.778819665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.773496168 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.794672421 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.789189608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.784714065 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.783794261 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.771331985 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.790309488 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.796790653 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.784701569 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.789492555 seconds)
  done (took 43.109527932 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861626539 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659350988 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418999922 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494267817 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307734492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981153208 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302100482 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945101619 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.775615424 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045010604 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.349708275 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020961488 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025603833 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773015926 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.845819396 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.23775074 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073264054 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008275495 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805774785 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508045493 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896123469 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319417312 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.493060696 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904239401 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98226724 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.905645605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.034534319 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.729050594 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909174793 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813227053 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783258893 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775431243 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047391234 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991595278 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90589832 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783410516 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.428121019 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.492225704 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.76700977 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.468677468 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.481907632 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912689564 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78333719 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775821033 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707080852 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290307813 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95354197 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.779069188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.477043015 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.775660035 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783730683 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867635416 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.777210912 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.588027796 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726478274 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052939134 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.773865381 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781495308 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345370239 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878835217 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404817088 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.716782944 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.867090213 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.538144842 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253706245 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.932832057 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.779030128 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779793292 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709467445 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.469631407 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902738166 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921573715 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.794958019 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423899614 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0781679 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.438564191 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862896918 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074593138 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.580855105 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.715307855 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003811813 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.726050534 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709356063 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.615785895 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.70897254 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05420248 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81907243 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.435820505 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821421351 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945016044 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787874612 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797278421 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783088115 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999897147 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.658567279 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778770774 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.30225612 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065065698 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799139874 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948446202 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710796496 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.780396683 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031089235 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.988299113 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.01137178 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.252992336 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938035667 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779875458 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.86424902 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.695486312 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.792054394 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.054080519 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845024885 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865560478 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910539797 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.736774345 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086073921 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810069686 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.952632316 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.39500286 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047349192 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.112175323 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034577614 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861175185 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78522637 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.779552324 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.535185922 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405686702 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.002538942 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.779477925 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272937764 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793262905 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.782183165 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713516007 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.406914384 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.382555288 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.899418293 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002375667 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.738855772 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058089072 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711075252 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923272015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.891661087 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.00075827 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.429014059 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.861267382 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037777455 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269760462 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.009588727 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793099075 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796863708 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897277848 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799860131 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.208481654 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036816638 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.783307152 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.783049101 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.537103435 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854052959 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789613032 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.785564247 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575859646 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067441558 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.814160606 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.780287437 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.713745891 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.793557188 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863288224 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785247165 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789127682 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.306532683 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532300836 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.793412831 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.444900088 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004997574 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790138149 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.482511935 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971213583 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.862995864 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059629957 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850809896 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.712933149 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.484039899 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.483006473 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78145386 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.715947244 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.78168889 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791099292 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791040964 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.978918055 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062726863 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836079475 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.533222881 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.901956766 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791788886 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.786785174 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7825019 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.302971063 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890258936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411380156 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.794586398 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918871721 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.796898593 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.715506795 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.785720928 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786124443 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.784068339 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.736192004 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835321961 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.527920857 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11740192 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043103544 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.430595125 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802465217 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.511141642 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.916042761 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.804850754 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.331964781 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763779097 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.911529699 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861584011 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.794837311 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.485520017 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.568246356 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351643447 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092209542 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112401553 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234481361 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.167835657 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.107786713 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.956913352 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017863561 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.311301576 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844025866 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965136555 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727178825 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869684224 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.434173986 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14314755 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800386542 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010854751 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174725046 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.40326527 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950760016 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994098579 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818698546 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.597831921 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815785395 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.307907318 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939096966 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.387780918 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020633785 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953458215 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.340598945 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.901976163 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.78569829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.265387504 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873487663 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.495238653 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144872658 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361174565 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.393049529 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161207313 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.786830453 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22800911 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146017266 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.117695961 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.877637594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720741565 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795433659 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795788015 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.786452995 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.762768033 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.678519124 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.055099275 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796738233 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020626869 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.060432053 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061383493 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.698970533 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.791016265 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787586302 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097888203 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456437748 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027567821 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.130702327 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360472466 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791898529 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.720971699 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71973983 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.489723725 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.795574104 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.760364015 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020095861 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.901277787 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.740361269 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.167190628 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100050659 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041117501 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.80235566 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068426505 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072658931 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.522085549 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817654877 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.886989255 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.325888071 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.544179484 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.008523288 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021766945 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584986417 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.018965157 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449894467 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.770610732 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.78935777 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003782453 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.009367503 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.391528105 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046825761 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.514353934 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.806516691 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162460643 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854615622 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.399067954 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008665313 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.882454648 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800286491 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871444886 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799102943 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.800174326 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.800591741 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835880998 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.409455204 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931433666 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.803499695 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880342272 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88776165 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.374911864 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.800300776 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076073601 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156146332 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135180582 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860599655 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.790328234 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793671252 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724434244 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929476161 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.234897349 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066150603 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.919965079 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.932166991 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816158702 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.345943199 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067128111 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103527314 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064994987 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.683178975 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793123428 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.88118417 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.014278801 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801448202 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.000462078 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028854007 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121589949 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267705863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.919799219 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066841747 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066997379 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.163790687 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793172938 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384370099 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.798511814 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.336155161 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.836550759 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.406136505 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086537418 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803257706 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014112622 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816102381 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.994139547 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.245194466 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.549389813 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160722062 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.791897231 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.857714551 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076537556 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.203791103 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115064285 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872943328 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803781114 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.488757731 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930305831 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.720680767 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.048968849 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.794930669 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002889866 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.507621502 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.80321729 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077905147 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112192671 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.792824779 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.752486795 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848952407 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.804283299 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016475818 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07333946 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050809108 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802984718 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.804731487 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.611065987 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076911814 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862346373 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726681219 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.800171719 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894356185 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041327005 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815315287 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.311660471 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.499801813 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103325957 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.718428831 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817768552 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.20101795 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244768744 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140147194 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.324807064 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03485549 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.358862927 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.641255499 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169887687 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.800111033 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.192684476 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17283043 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.798771566 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34551939 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907481237 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.077834946 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128658705 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.805533393 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619375062 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.844371386 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018185982 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392484752 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737883942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.799637771 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.856591207 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.797218176 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.924345479 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807470659 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.786215387 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.657774884 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.634080949 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286579077 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.801982912 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.80185846 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.330477429 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352336689 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902990261 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952369278 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80851583 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.520179662 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.087968877 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050453599 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.287292022 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.868456708 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.800180877 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798416115 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.724566865 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994935662 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.99373779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104572015 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.136115952 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.906771656 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.801079658 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.011179348 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008835381 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.411760109 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962903597 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.169911973 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908994035 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.726790209 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.512391723 seconds)
  done (took 1637.333639581 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.803231496 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.81778384 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.802093019 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.856270355 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.823758884 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.820224081 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.868994655 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89443035 seconds)
  done (took 56.406644453 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.798382487 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.974293699 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.806954638 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.799873803 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.819931254 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.799824706 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.991993796 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.811384127 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.815925717 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.808137844 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.799749211 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.813997713 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.556425518 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.828623626 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.802931246 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.812873631 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.819652423 seconds)
  done (took 73.588723345 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.802349025 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.154872197 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.822252601 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.824271275 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.78531005 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.804896867 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.850833839 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.854787723 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.806402865 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.980515932 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.138208681 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.814640649 seconds)
  done (took 89.360968845 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.81978416 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.808066806 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.808559206 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.808243128 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.80825245 seconds)
  done (took 10.783719933 seconds)
done (took 2132.664714586 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.046847896 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986685929 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.03038418 seconds)
  done (took 5.740190879 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.948131874 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.997772182 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.116367567 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.122609958 seconds)
  done (took 9.91111915 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.104238194 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.18222987 seconds)
  done (took 6.009714751 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.132370312 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.837498005 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.221570046 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.801147604 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.802016277 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.803154048 seconds)
  done (took 22.134232473 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.805861885 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.808798842 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.806251769 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.808760729 seconds)
  done (took 8.954999613 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.788082486 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.512990321 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.789750066 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.804475399 seconds)
  done (took 20.618337763 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.553099032 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.929646536 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.549516362 seconds)
  done (took 8.756861828 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.3733259 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.018314547 seconds)
  done (took 9.116186096 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.96197039 seconds)
  done (took 3.687705906 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.833798784 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.077999513 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.342188344 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.34630718 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.422444321 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.647581913 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.148733916 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.039270449 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.25235463 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.274469686 seconds)
  done (took 24.110089481 seconds)
done (took 134.002401235 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.154432458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.833498202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.004023194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.164685547 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.044994688 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.003601332 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.025899366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.158733714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.845474332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.834761287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.170445513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.043156113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974353161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825114897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.981891885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.823604455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.037317929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.171166622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.849419549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.088029241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.038174278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.812026317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.005080079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.82609089 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.043556974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956360755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.356368848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828703987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.986077747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.368833709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962881299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.225706845 seconds)
  done (took 166.170480186 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.807815088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.807032924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.805603572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.80707818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.28470501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.807518035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.807476153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.806031639 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.232042353 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.228668238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.808275585 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.274020481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.808736547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.807057195 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.807356261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.807050631 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.387576909 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.80861299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.806851072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.807581209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.808022622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.092756316 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.808077478 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.10395872 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.400578718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.808001025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.807939913 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.807814668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.807242283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.806650781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.809529146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.809105502 seconds)
  done (took 207.11552041 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.807162928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.808548635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.808028807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.808928005 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.809883816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.810537543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.807686972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.808848667 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417320148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.403639761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.808540193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.810017918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.810229914 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.808716571 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.810866279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.808042856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.810140423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.809593422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.809751733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.810591197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81006141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.53840837 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.809233258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.560540907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.814607486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.816630967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.810945351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817959747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.821342885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.823093315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.826160041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.809813909 seconds)
  done (took 218.375231706 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.063005577 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.81285578 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.815553576 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.804250262 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.815697461 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.814931171 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.807154429 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.0632672 seconds)
  done (took 18.744889365 seconds)
done (took 612.141041796 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.298678834 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.142209695 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.995156031 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.838235448 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.099764759 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.872091132 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.835104819 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.901253119 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.470811974 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.905099648 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.508078457 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.858260986 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.592327198 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.863261308 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.959147974 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.89418459 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.384879918 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.476347732 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.018834843 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.918436654 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.005421229 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.769990737 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.919276984 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.515181759 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.612610283 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.842593971 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.912684016 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.38908835 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.846479894 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.996838568 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.627075524 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.154557669 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.85162849 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.833672927 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.890944644 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.868190155 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.123503226 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.848894916 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.958226924 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.566570987 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.91834693 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.370971328 seconds)
  done (took 100.385740923 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.806069934 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.804128018 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.803013641 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.80451013 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.803566766 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.803207444 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.80269372 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.803192293 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.804083931 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.802279552 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.803287829 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.804759421 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.803766985 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.804789366 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.804205126 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.804595246 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.804899423 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.806427474 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.803929301 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.804099049 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.805435039 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.80484613 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.818704219 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.805645761 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.805569374 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.805687209 seconds)
  done (took 48.668371056 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.817097444 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.984269287 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.057722341 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.83925518 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.818407423 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.82279258 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.8370627 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.823522445 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.820425557 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.819468333 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.923075369 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.824075791 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.836964185 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.054739348 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.836622554 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.81775508 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.818547614 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.819345281 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.990830642 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.835788485 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.838925913 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.823184307 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.838096835 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.833388385 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.821111345 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.81877576 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.822547844 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.250187309 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.828728662 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.923656939 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.865459591 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.844280837 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.204994112 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.073262431 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.877266224 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.830213227 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.819922587 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.928231372 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.825813841 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.81883943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.838036141 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.825736588 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.05330243 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.316705134 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.835214349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.819228628 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.260702443 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.939402375 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.862390341 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.831476554 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.058410312 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.83846456 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.821705162 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.821132556 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.857804268 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.827215243 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.820521986 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.125398533 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.833560943 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.838938072 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.826887303 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.821378523 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.994478467 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.830896947 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.985534621 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.831233098 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.826995565 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.822417498 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.057678811 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.839575373 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.318209071 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.83729649 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.820313591 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.925649467 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.991454325 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.28715639 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.836118524 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.995369527 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.220539996 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.847060577 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.828878311 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.239774343 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.85200522 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.829343785 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.823733231 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.823046961 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.822197679 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.865536493 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.838896736 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.251420519 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.32674302 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.145685609 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.85018641 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.837779292 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.824005369 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.126593076 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.831920135 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.822256386 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.051715633 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.327214896 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.837850567 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.829875185 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.310012275 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.839247386 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.842137263 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.833594199 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.062175075 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.841330503 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.867590637 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.824815772 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.831944557 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.82640668 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.84396428 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.832906638 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.824186536 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.297177145 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.950811161 seconds)
  done (took 226.178507742 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.82067423 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.835739674 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.819806308 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.82434121 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.818834156 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.825203723 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.817797584 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.818482086 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.824269306 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.819526899 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.819509771 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.821035793 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.822040859 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.821896228 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.830421803 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.825702807 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.424492486 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.819467426 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.819211573 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.819428298 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.478437499 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.82647336 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.820379819 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.819208091 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.820651191 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.819717051 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.823368153 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.824492564 seconds)
  done (took 166.023579158 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.827035714 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.941477246 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.848044633 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.855389298 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.834976251 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.823426724 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.850395956 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.842786862 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.831354316 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.823347707 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.823909464 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.888423234 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.8383426 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.926190586 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.858518462 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.856701761 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.930886587 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.833924097 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.825068247 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.825076116 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.854896807 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.820090619 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.887051381 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.954469209 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.845905467 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.943547735 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.830058435 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.826205643 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.826255483 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.942724085 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.844022524 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.885720586 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.855112235 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.84459849 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.946691995 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.943710876 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.931268331 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.856512013 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.830213862 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.823445665 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.823933828 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.812321393 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.941795283 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.845986148 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.828482014 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.931820092 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.84695867 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.82828077 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.837552344 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.825049854 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.840368879 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.845584092 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.893821531 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.961023813 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.859290878 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.850099319 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.852278617 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.124245375 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.83517533 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.927548792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.820719101 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.946343157 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.849759138 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.815642886 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.827035539 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.831844578 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.857046948 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.859441698 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.934505148 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.836352796 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.929570909 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.864247894 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.834152986 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.826735102 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.828839544 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.947148599 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.946778424 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.862998191 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.866156859 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.860886181 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.823353062 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.828682769 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.816054163 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.846371654 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.831651825 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.945800165 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.949668592 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.836790836 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.83095135 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.830584255 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.830037388 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.855432583 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.956160467 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.867785868 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.92370883 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.89745554 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.90470317 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.844415131 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.841007427 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.83179452 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.892646968 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.847237974 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.839650316 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.175650295 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.899533039 seconds)
  done (took 198.128171778 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.314104857 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.881048387 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.885138891 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.13904991 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.190939137 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.758005481 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.874920579 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.877437335 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.90256428 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.074032653 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.939158283 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.896333716 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.865726289 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.852923405 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.875798939 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.900833547 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.885997817 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.21571591 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.976018058 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.004346433 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.860102391 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.160617404 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.160719113 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.280221321 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.915188427 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.209672867 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.54829773 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.02737991 seconds)
  done (took 60.225134246 seconds)
done (took 801.340550152 seconds)
SAVING RESULT...
DONE!
