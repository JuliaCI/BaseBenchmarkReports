cset: moving following pidspec: 23599
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.64605818 seconds)
loading group "string"... done (took 0.544329618 seconds)
loading group "linalg"... done (took 9.18856784 seconds)
loading group "parallel"... done (took 0.174868341 seconds)
loading group "find"... done (took 1.415603216 seconds)
loading group "tuple"... done (took 2.258307045 seconds)
loading group "dates"... done (took 1.479624609 seconds)
loading group "micro"... done (took 0.206266078 seconds)
loading group "io"... done (took 0.600118383 seconds)
loading group "scalar"... done (took 46.794488107 seconds)
loading group "sparse"... done (took 14.372251793 seconds)
loading group "broadcast"... done (took 1.169121126 seconds)
loading group "union"... done (took 11.065778811 seconds)
loading group "simd"... done (took 2.889191748 seconds)
loading group "random"... done (took 10.739901291 seconds)
loading group "problem"... done (took 2.318548216 seconds)
loading group "array"... done (took 25.742224718 seconds)
loading group "misc"... done (took 1.162619564 seconds)
loading group "sort"... done (took 4.000915163 seconds)
loading group "collection"... done (took 20.351861042 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.671522415 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145048954 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.225928503 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.360136957 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.225383527 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144998251 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156671567 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.270635857 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.240325132 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.222029461 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128350592 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.556008638 seconds)
done (took 6.04105212 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.247269408 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.249162047 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17187704 seconds)
  done (took 1.05962367 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.068766941 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170254361 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089028777 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.1058428 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.105240558 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.088029209 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.103959872 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.104211672 seconds)
  done (took 1.409898897 seconds)
done (took 3.432714356 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.518440175 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.863217888 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.560241477 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.156303903 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310775587 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.317297709 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.326680318 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.213381636 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.084938217 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.102876424 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170408723 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.40727443 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.437972701 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.974972092 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.101619208 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092442284 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.125328347 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.75694706 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.072234158 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129293361 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.560854493 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.190220599 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.108132738 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.111342259 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193561523 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12533119 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170262778 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.08427542 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682666488 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123719895 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196349231 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.076143399 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.170975301 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.235444998 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.21222935 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.085991344 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679226067 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.19398906 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094852366 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.094003663 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675844825 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.122470772 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.159861861 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.09818794 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085808884 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18002471 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112911304 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.086698328 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093623734 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.093855107 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157494042 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.479255726 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.086173311 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149714 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.101376232 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.703082871 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092884158 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275336476 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130941819 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099002876 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.070201496 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.098971619 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159015268 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.090863909 seconds)
  done (took 20.194905352 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1505755 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.160092485 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070569666 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152495366 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136366861 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07418267 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094672116 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070672594 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122034987 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.23299606 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134828774 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.160187788 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084846291 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079499422 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138248396 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244340079 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.0997055 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116068089 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095051831 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085327312 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136481562 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.105057285 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088636025 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105615531 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16320236 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19807236 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100570587 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115062153 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093692336 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094850061 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135944449 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157697528 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068277353 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095211304 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180094691 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113721546 seconds)
  done (took 5.113911387 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.217954615 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117703466 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212375039 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.185056258 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.183039814 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143748372 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168310206 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153738292 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.28834488 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.237203878 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.172834674 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120505463 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.08875947 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087502517 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079462548 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.089529821 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.535903777 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.178195761 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144497454 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.14241444 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09844638 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096453832 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370160509 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096506297 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091744202 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08066287 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08661984 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197334786 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09628103 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138075886 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095181278 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082544914 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126116411 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202971561 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107829909 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135072874 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092196712 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074832531 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.209268962 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107475207 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086757827 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105195688 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127016356 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12703615 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09253905 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086046355 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.232707638 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.075526989 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120444172 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.072539314 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.207590335 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.110765122 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092853169 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074370909 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.31091357 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107961055 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082182824 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093709869 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.294298568 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110119967 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091764699 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071976168 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.090099597 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091895153 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072141552 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.422412979 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104339266 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.777115806 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094804078 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158830187 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097921249 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097925095 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078948619 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095425702 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09342963 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089632573 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071900743 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090906434 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07203148 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.095418654 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112533915 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077460873 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09020747 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140188084 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102587904 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091414721 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119131432 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096405825 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070719446 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123360663 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09046506 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.077029248 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.162707854 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092657036 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099277332 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.097769557 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097658065 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135026588 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088417565 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200805322 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076433846 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116638465 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092880051 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105389843 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106134163 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089461363 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07828004 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.087384508 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073927737 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154013541 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073438637 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092722207 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.079678081 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103728231 seconds)
  done (took 22.885253381 seconds)
done (took 48.833273213 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.504449001 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.114848236 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098656451 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115439552 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.115323835 seconds)
  done (took 1.667135195 seconds)
done (took 2.358178136 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.386956454 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202150132 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.112117373 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191680113 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080948294 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.219226322 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188368694 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105702418 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215859205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096693055 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196193138 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096503977 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097580744 seconds)
  done (took 2.907608248 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092106999 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121329528 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092840655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10739862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071341314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106991174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088701596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121045929 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088310443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099647429 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072502812 seconds)
  done (took 1.749426076 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088573915 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114224479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08033574 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105553044 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073452897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102758946 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087542806 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116976723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087794909 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101270117 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072313827 seconds)
  done (took 1.721364034 seconds)
done (took 7.061216921 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.130520519 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.909245789 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.142712886 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.19516857 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.369952275 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.246265355 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.609296443 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.181850905 seconds)
  done (took 12.659852513 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.171208995 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07763207 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096808841 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07928825 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09558441 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077601158 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094138408 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079717575 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092078526 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079272992 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094095113 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079642986 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094479915 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077885128 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092397507 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.078743793 seconds)
  done (took 2.221077478 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116575551 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115493675 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10245314 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0872888 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099993556 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099894402 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086291363 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100880589 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081089302 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098420765 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087386275 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101232237 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100188453 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082048565 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101521403 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088829135 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097302948 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084588668 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102357442 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085892997 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104439799 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099924007 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086547415 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103036741 seconds)
  done (took 3.11720869 seconds)
done (took 18.690162911 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171623651 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07736276 seconds)
  done (took 0.950223179 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143660212 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144585467 seconds)
  done (took 0.996807847 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107308675 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093267712 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13752824 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112320469 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079153913 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.091992427 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115512536 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094219775 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078348297 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093072652 seconds)
  done (took 1.709096717 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083285343 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097105953 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090336009 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.142730152 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107019481 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081811579 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099449308 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081833045 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100552357 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093871162 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087176223 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118192805 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101103241 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105455019 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100103117 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087063342 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107721359 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101053973 seconds)
  done (took 2.493746867 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079721793 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079302596 seconds)
  done (took 0.871154468 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085513437 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094315041 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083019115 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098399489 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078402332 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094233292 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078390775 seconds)
  done (took 1.327542087 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.499822311 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265711543 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358607341 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.113823709 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138132832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.361401429 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.13596489 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111314549 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111851099 seconds)
  done (took 2.849935634 seconds)
done (took 11.902699299 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.084662747 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216065299 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.630672121 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.099919212 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093513185 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.137380967 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.312282973 seconds)
done (took 2.286965156 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344260815 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152833071 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086185028 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076179038 seconds)
  done (took 1.374070801 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075182169 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101293343 seconds)
  done (took 0.896730409 seconds)
done (took 2.99168859 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078375622 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07507301 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.111790089 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.092940063 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075699589 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.092633585 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075362094 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091252305 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074836833 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.074259589 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091759415 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.074479393 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091166792 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074460722 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091854677 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074762933 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090586613 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074975953 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089913107 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074516223 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07400527 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090406804 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07525474 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092191328 seconds)
  done (took 2.776381319 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103009657 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095934431 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082373783 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099873215 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100601843 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084182228 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099763017 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080063469 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099278428 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079090944 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10049363 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083981623 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094333917 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100138826 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078644243 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099521298 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082745119 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095874688 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079545374 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10027421 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08199155 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096382903 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099530264 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083540687 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100035959 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083742169 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095307187 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079154045 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099480803 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083677089 seconds)
  done (took 3.463979328 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087807297 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071841753 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092833165 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082869576 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089631229 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076216811 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089148064 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.072458391 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094843817 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075745109 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095090458 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075648974 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0883781 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0779644 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094343904 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079339892 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.103713706 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073897934 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088767568 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078410614 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.094389561 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0732452 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075670568 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092768325 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076024265 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090776355 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07741747 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092505873 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.078209121 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092091296 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078809865 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096372363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076974696 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102233442 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081005361 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09262802 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081892515 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089957376 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078121156 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.073472933 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090027525 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075117365 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090296996 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084283442 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093430481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077213418 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090654755 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07888705 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094877214 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081064499 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089301906 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073988034 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097725876 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07833017 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09581471 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073914786 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077273784 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089775787 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078094155 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091983993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072725769 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089909662 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080380659 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093584572 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09338418 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100671875 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073871036 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095987283 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077328604 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097655078 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078991692 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105383208 seconds)
  done (took 6.875305471 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092940383 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103997893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078929142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095011973 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077630297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093571769 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085463888 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093940533 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079310691 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103217495 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076678587 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094492597 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078448684 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095131604 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077372484 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095170512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087112931 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094397875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07703134 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09567241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07744544 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102148169 seconds)
  done (took 2.682373639 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240540478 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101552817 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148485025 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095577748 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117402217 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111235767 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08213135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101129041 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097806035 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08960392 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10563345 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082280885 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117177299 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106159086 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087736264 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106793493 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098405367 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089301202 seconds)
  done (took 2.70279572 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096353886 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0964154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102805989 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097012688 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080179829 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097648261 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104467017 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095774581 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.096934668 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.08024549 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10790628 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080438719 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096607872 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079800259 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096662458 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082344698 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096567475 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080513282 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106484495 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105411268 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088587387 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106905899 seconds)
  done (took 2.806311911 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097347007 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096596386 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112598654 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101655555 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078577679 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096552095 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103194495 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081431051 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105239209 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.080056608 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096955521 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07835417 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106417244 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08005364 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104754235 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080240989 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098081234 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080438719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097205228 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078962771 seconds)
  done (took 2.584656313 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176000702 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094016391 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112373285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124795583 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095851937 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11143176 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107468868 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111203058 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111015732 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111066377 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112268262 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094629616 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124286239 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120755333 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094054075 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125152251 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124822921 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124178588 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095870301 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111496343 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127545177 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095015579 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125579356 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095612205 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111383628 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111736154 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094854177 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120900627 seconds)
  done (took 3.902927833 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079171683 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076490068 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094395463 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076944055 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095012425 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077964589 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094118583 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.076281268 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093744647 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077954061 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077705901 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.212921182 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076854184 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094151373 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076974663 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093653791 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076148825 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093783616 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076634755 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094277464 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077079958 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077107548 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093829023 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076537493 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094251319 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076986381 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095000231 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076642737 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094639867 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077381409 seconds)
  done (took 3.389520938 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090479772 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10491043 seconds)
  done (took 0.933382265 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087819117 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114957468 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077523629 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095431806 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087441497 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095151008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089597512 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105062162 seconds)
  done (took 1.487935901 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.127611444 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.145316306 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.101670194 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108755654 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.125928872 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.138214506 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141527623 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10126134 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079681928 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089920395 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138848303 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073964936 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.098818523 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079443053 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09935042 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088054886 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096677554 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089179176 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103599491 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079973159 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101695299 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090211227 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102297106 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.088072592 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.092091837 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.084894845 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.105163692 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108495082 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080383202 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.102557503 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.079995135 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096291246 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083277563 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100943089 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078772103 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.144798991 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110100659 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079953234 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101324681 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08474093 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106429133 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078744535 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102485703 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079883082 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104074719 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082451719 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101130028 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079111116 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.092761933 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075478537 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096336995 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077404721 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095891449 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085481277 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102242353 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109066034 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080534165 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093233349 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078241727 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.094681574 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081359718 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096778269 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085393936 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098705459 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079570825 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10089121 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083285325 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097220997 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080942473 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097096631 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084079473 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115021871 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103086657 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085505628 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102788117 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080029552 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098082974 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086768637 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101195621 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08553584 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100951901 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087862057 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098368122 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078614725 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097111662 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085549342 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099164886 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08206788 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091073453 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093985765 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098645786 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079460443 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093583659 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081241243 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.094935786 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082577498 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.093481169 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08447437 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096191198 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083649887 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10257866 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07658222 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.103860561 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085123914 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103163921 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082702434 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138435066 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09714639 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.078441816 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099647811 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085000433 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.094944859 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082044696 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095270553 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077300258 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096234615 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084520922 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.101545251 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08017464 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101376257 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081249892 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104205277 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080919426 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095436921 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.078049795 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101348456 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088285282 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.103955471 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0986179 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079842455 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079434577 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.100701334 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100403663 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.081175991 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102556739 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080575287 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096682841 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080968422 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100955947 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.085440732 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.096971699 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083105545 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.102656861 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082183663 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100654943 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084905178 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.095910681 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075287454 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102380181 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.079079832 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097892625 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088879711 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097380981 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081183325 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.097109814 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106985132 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08033006 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102021839 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0822244 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101485699 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08586638 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09087408 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081483716 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098496145 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.087109002 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098261188 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08304336 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096357321 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086300518 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.093717233 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082709141 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093070824 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07695881 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102873323 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080913352 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082761909 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097645074 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11391195 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093358482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102687163 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.083486866 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100708813 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084413028 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100838375 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083146575 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103468136 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085189941 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.101451301 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.081897096 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102475907 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076974929 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100277293 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081013117 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1027848 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073159771 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097699543 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073616968 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101178198 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086965873 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101523113 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086503007 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098818268 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082476907 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107760341 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.079500986 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102196424 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07495044 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102452642 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089838226 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103528773 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085449868 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.102836409 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099041784 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08142419 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107806102 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080937888 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100573948 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081314334 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.094076902 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.076424251 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103382944 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082274245 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096982692 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079068831 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103108971 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086991487 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099513041 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075936536 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102794058 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089108188 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104630651 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08435873 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097585557 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.082514261 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110684454 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.075763343 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.096467602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10445298 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085506479 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077530829 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.099086663 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081908959 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104299965 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082561282 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098850191 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081194674 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106010134 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081273725 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096256767 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080118357 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100383289 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076990805 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099541725 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085641948 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09838436 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079435067 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108834848 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104884603 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08544576 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108799009 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084858127 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103568229 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086775843 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096610608 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085354542 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096695623 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076662932 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097757691 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073982027 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09816373 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08071855 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103527038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081728516 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100104689 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083455432 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104322231 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081363993 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104060031 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112688095 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076097302 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.075888592 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100379867 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101232919 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080308985 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.098199479 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081260582 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103588687 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084751247 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104189826 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.076928339 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096580161 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086464924 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097570063 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086624793 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103130172 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085991672 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.097610487 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084020768 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098294536 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088371671 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095236779 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083018728 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101001822 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08352839 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098541036 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081532258 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098272313 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077353371 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.098697725 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085794384 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095801926 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084140532 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099748195 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081745643 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.096410054 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07882654 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10498795 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.077217694 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105808189 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07910938 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.094527889 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076321344 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103778428 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084035252 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104682227 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079583463 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101629909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086447413 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101835747 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077879156 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107886301 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087850573 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104071886 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109210354 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.074888953 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098970945 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090483078 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097213642 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083120068 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098818679 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078529968 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105461722 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086921149 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.103223099 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081836833 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.094929346 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08077718 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105009923 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082863924 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101570813 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081003376 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103188845 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.078973171 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101025484 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086490227 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10270834 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086172555 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102115236 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083984271 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.098733112 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086281255 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098856159 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078272598 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094355975 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081568642 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105535082 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074908125 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102825565 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085562531 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.099759669 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083554978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102943558 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0809237 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101034744 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085231544 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.098290287 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090962104 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098411591 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080841618 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103045086 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085985661 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09502024 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080852031 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096738275 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086914715 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10043277 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084635762 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102889895 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086206223 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100016912 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084820618 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103387975 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085328244 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.095445809 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087556344 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105927704 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081350868 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099078841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08262325 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.095514071 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083320801 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105275625 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.0807966 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107295669 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086813749 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100732164 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081255809 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103744339 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082341607 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106508531 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078309918 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102662733 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.077064186 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106594431 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082924129 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105465113 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098271235 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.077846563 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084525394 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10296728 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084602489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106376978 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105024546 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.077257694 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.095106444 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082942507 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098785135 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091320739 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099207118 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082303948 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102039546 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082533905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098540055 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087858865 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096420126 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081755717 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102558477 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084941954 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096953848 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.077852049 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101653051 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.084521323 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103411084 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08357963 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096545025 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083928267 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105771985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.081777988 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094621586 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081108455 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105713135 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083681939 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099369991 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077111856 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109519248 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08649307 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10635114 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.078892601 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103539525 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081373237 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101372191 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087485422 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.100730926 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103334936 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082678734 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102849211 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091785431 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095236895 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.078615617 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110125249 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085841115 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10752577 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082813377 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101357409 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08804256 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106298726 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081750385 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096663575 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078884528 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097601814 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07728448 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099868222 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091336945 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.102667256 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082331865 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102613485 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084359299 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101417275 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082539532 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096628619 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087706512 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099473723 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.088319971 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.09564645 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.075652353 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101455096 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085549657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098012109 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080022752 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10027915 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082723246 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.097827166 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083089589 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106382532 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084565846 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104546174 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084404301 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101935162 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082849313 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110464499 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081399878 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.100818498 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092804372 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106471758 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085543736 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103987569 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089100521 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106682344 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08236756 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106620908 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101089195 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080174551 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107258666 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089435708 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114329827 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083666613 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.095300115 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085387794 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098048092 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.078944814 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10763386 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089952307 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106642203 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084913226 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100669803 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08985206 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101925319 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085181859 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.102523227 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.082090374 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104799206 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082064206 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103887639 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080663478 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107787303 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087792742 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105196389 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088760934 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.096045982 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091060134 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.106888353 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087800186 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099769096 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078051391 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098095315 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083629252 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107124274 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087126306 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102905906 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08370532 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103599843 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085256946 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104242556 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081796382 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107375883 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086023774 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100896549 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086371387 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.099018091 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080074374 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100055721 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087673539 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107230015 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085449393 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111637093 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086862353 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10210508 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081558804 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105525189 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083060102 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105764719 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084256244 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100996215 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.079256057 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104934328 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088157389 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104037055 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089760586 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109607132 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10144403 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088012435 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108617272 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086549286 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100103149 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086594293 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100435698 seconds)
  done (took 56.146233687 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.162454698 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090549286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101470835 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083829653 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130477248 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084714168 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10201857 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084405625 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103202014 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114953833 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082760491 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082367141 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123912359 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132199195 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129514945 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115817961 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083005417 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103315388 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083381924 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10356272 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10464535 seconds)
  done (took 2.988725607 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112289567 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120319649 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119375765 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103020708 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112659631 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118124681 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100929917 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117158312 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122543903 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113733624 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104183821 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117241595 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114358738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094814804 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113783109 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113657554 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103107627 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111752662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118913798 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099645404 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114338407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118788139 seconds)
  done (took 3.257170125 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097038189 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084357049 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107814376 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.0999968 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086855957 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081254252 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111036258 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08144179 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111475649 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.101130708 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079836164 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.079735872 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102744721 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081354989 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.099204045 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082804542 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110925368 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084528115 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106854581 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.08260344 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.117883584 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101298065 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083546647 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.098591701 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095928795 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105879651 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.083162209 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104155694 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.077920327 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08505925 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101164627 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.083912797 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104608155 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.097617914 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.077869214 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085056502 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105797687 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.082260389 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101504271 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.079220268 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102268731 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086927391 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107799192 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.081924569 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101528682 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080432529 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10519284 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082560451 seconds)
  done (took 5.283354073 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125335634 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158972354 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088003991 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14929608 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12450746 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096598681 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107943212 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147554175 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085114376 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.1093444 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127123944 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12629447 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09041885 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113025064 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087462513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110164399 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091576815 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108581044 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116030155 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08990719 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116906362 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091328838 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124836191 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123957685 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091414839 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108235089 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107882757 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093285535 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124108033 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117308579 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094855022 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113578324 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124407126 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088154715 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1082767 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089647137 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128111019 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110678261 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090575976 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10665665 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090399234 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113267368 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090846587 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12840163 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110366581 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092615629 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110318401 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084881589 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124200371 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.109615523 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098478252 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127747828 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111645114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.091545405 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114048109 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124130133 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090632598 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107919316 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090840989 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123447705 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106211598 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093455379 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125994446 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107896538 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.098351156 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126104376 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111322365 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092962393 seconds)
  done (took 8.340912861 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12513188 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113564555 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125597403 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108610935 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113075729 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112158863 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094652631 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11304339 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093721731 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121858071 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113333322 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200093474 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089676662 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121258743 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113901634 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094728041 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113899701 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09334391 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113286712 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112685543 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09365976 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126477852 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112455786 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105786572 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129073879 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10853943 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093479595 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113875321 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126086573 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093885327 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12861673 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114449182 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093331899 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126517989 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128975657 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113114099 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086601247 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113482059 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093764535 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113429373 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090852066 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126666479 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113688368 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089889183 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113005619 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092459303 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126273269 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129196085 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119117401 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101911003 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114321814 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126580255 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0943449 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113510884 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125727084 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134866045 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107878959 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127316512 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113835479 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107550542 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126549463 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135389934 seconds)
  done (took 7.837368454 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089661771 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081771674 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104074435 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082681973 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102968356 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083919486 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103035942 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083714827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101632243 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083343891 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10241711 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083000359 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082470939 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103368561 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083718209 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10282464 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084609084 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102868989 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082756465 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1026417 seconds)
  done (took 2.650138053 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.102030618 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126597659 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08772478 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115886484 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087075957 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116730398 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105087134 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089049487 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105949086 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088187598 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118292426 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117248741 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0891892 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116257299 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099462569 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115732656 seconds)
  done (took 2.484298245 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116150701 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128214676 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.165499803 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109612229 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088050696 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.115504318 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087064775 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.109279184 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086347676 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.114113621 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090906742 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111807467 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087345947 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.107332946 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.087214937 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111394049 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085480506 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.111208125 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087679171 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.163820488 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113644161 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090753571 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10876493 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089342865 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111865538 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113775999 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095451006 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108498658 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090095555 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108775775 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090240806 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116664915 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085393023 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112216834 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086164521 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108724738 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086003399 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10832796 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111046575 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087147612 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10656317 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.090315592 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106435156 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089924725 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104794889 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088693891 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103802545 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094778334 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109091586 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091650213 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106147923 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093330513 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111837762 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097067967 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116303332 seconds)
  done (took 6.506850527 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106857826 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107625569 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10210408 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104287433 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087986439 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109566715 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088604491 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111243304 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089507381 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.105038407 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08987721 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109780517 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089798074 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110128091 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089796284 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109633159 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084231103 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110282712 seconds)
  done (took 2.618512064 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097876839 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106394181 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093450468 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106995964 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087562591 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107184366 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085912721 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103863807 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085682217 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107208474 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088092109 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105974589 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085863413 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086604288 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10867028 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086107976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108025984 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085822839 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108708814 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085540977 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108030498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084702628 seconds)
  done (took 2.936889901 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.108881512 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.166119112 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119257944 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.180675751 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.085997964 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.107725623 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.116824392 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087635995 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128018313 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086608777 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.10677192 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086498701 seconds)
  done (took 2.194153562 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119712796 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147385004 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086666203 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107758016 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120238272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094547962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113748216 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093306673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125530054 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128732561 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094056242 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126239803 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124160862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127316923 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099869135 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11985837 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11261077 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094700154 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108397876 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136664513 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094460008 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1255795 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112911586 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094261502 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113896099 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106154995 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125560518 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130428339 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114841344 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105151909 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120212902 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113334648 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106464258 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13063423 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108211195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105292691 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115155433 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136728846 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099366029 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128016002 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107896695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099458706 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126390535 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122528387 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124933387 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095506858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122693465 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093420111 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115894497 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145606014 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120685789 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106711164 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12122574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125414308 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125866844 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145414227 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110817168 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127763536 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119993466 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130186076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10676672 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121458495 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126981786 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130996514 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099276347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128717437 seconds)
  done (took 8.490892555 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139395247 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111607602 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093948258 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131339588 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127816078 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114906728 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094782302 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114152319 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093574519 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110906669 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164150001 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113404884 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109592359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128150912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11444419 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094833697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114033218 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127282143 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090955761 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145724259 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114506357 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10649039 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129250198 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12762064 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131410394 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120465847 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095121608 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113872426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094872936 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114779648 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12302365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095021099 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128839929 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089082797 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128761218 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114035307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094374361 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124663305 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114662122 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100890251 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129309935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137685791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114688563 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094715028 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13140563 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113907837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094497994 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10975829 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0944168 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11170665 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131128991 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111166978 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130913538 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128076962 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114675665 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09494365 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114119246 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093913977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116596645 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119660587 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10740207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115579052 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145177973 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114052846 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095046688 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128938322 seconds)
  done (took 8.409983974 seconds)
done (took 154.470047254 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.13368246 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188111137 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.125694728 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166296308 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08046079 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138286004 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114513439 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14792563 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102932863 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081182745 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101505088 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086187143 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169636334 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081689609 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101103413 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086029351 seconds)
  done (took 2.723592862 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179219111 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336034669 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120560833 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.090707622 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113048037 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084499256 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112212782 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113773029 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087023466 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.116784243 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084562538 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105820366 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.096229191 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107285567 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.085105364 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106639497 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116672786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085021645 seconds)
  done (took 2.968172592 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115577939 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.161381704 seconds)
  done (took 1.109201805 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126509466 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18605022 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31552582 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.152391496 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.114184822 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129649897 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155413659 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.101745533 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214001493 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105526096 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126840812 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109016118 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115012778 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116573931 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119363215 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089291225 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137867743 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097991894 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11771171 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090253635 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.130845894 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.11286578 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095158951 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.119818444 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185685053 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126018148 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092815418 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113770871 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089529745 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118211483 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.110560932 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108096912 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125658257 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174662406 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.116775869 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169818761 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121275424 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.109255556 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.098449628 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109147021 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.093707358 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115582481 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128359897 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088745765 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114213077 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099046441 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114429276 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.112607534 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093393724 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.123224855 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113123568 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091014944 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168263447 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123254715 seconds)
  done (took 7.555927408 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.808391812 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151425014 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08651354 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.94657138 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137067927 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123889586 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.801035563 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111018871 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269440718 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.806345805 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12406535 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100205302 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248454339 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283762744 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.174439486 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35739019 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.680521685 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122791234 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.116765343 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157426839 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119170885 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136820471 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110350036 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454910371 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.089376566 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106032594 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097768758 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1215359 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171003489 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107373217 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092981329 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.213552239 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275638068 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219596227 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088239922 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106021484 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086599293 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1765831 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290199481 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.237576028 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17781564 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104400291 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090196447 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118350269 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131029387 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083683813 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192615853 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184755732 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.183775134 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114034359 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099041979 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120558731 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115899599 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172320969 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083211479 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356201667 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381059835 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088226234 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117291155 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102826282 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283632197 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107449352 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.2438333 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114970374 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.232519955 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107104247 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808319574 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.176997191 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085180557 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116341852 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117012915 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093832983 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115805845 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174617914 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388711383 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119610378 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093187898 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106506938 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241656665 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107759607 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086720704 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196315911 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08891947 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118610212 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101042774 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12219461 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180944757 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.281483446 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099145202 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120111373 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113157623 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101178374 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109168587 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.221416875 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236851643 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16799208 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.247582848 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096365756 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.193684446 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.177249078 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114010929 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181620657 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115445711 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104192787 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116484615 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236288541 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146716374 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086873159 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115501282 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097696804 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150551781 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112103422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118002017 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.179924813 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.472109405 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.197514516 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084012022 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111972796 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099461542 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192644032 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096786888 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283169951 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119701208 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17987849 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117427692 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08388745 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118173437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175969322 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118319682 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098293921 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118245099 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121132479 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.261883252 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240293051 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1000475 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255760734 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18255393 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116951271 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185287642 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119377814 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181906354 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11977251 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095769499 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111207139 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802743751 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10230884 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119280803 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114459893 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198682712 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087147159 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108506189 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088101846 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10354477 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796983092 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110867056 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083651493 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109538688 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094198193 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119659595 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117552101 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09461352 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19116611 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253570789 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10036113 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118112676 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085606211 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193581527 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.089230318 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108625856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087160577 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108782227 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099014208 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115540409 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087638603 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.204978088 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.168849842 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.241059062 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.564675001 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086204326 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10832036 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250543182 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087606999 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328710311 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122973664 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.248240948 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180925624 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10484435 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360183215 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.181939585 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198964572 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089253242 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.203813494 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084540825 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11972548 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172153748 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107721524 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09646927 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167630617 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124157573 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121421264 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.191581524 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086696386 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.262329346 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084715448 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17970875 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111717017 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115804469 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306148594 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109858327 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126509112 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172677146 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112831593 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088399073 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.752492816 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087883897 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121619702 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093524505 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.241803478 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.199625312 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097388908 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122047953 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121534301 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173951932 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.225091411 seconds)
  done (took 45.103130786 seconds)
done (took 60.283046855 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307573967 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274864191 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.330546554 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204258255 seconds)
  done (took 2.052386093 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.225978947 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.15658401 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.18693167 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107301147 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.195941929 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084126689 seconds)
  done (took 1.808764048 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.522675245 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.396541757 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.360399856 seconds)
  done (took 2.136970996 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270533104 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.288764461 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332212516 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.483578229 seconds)
  done (took 2.339948243 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.254904335 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131373436 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101119165 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.178954549 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.237768897 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.186573122 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149213166 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160618344 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130564561 seconds)
  done (took 2.434686959 seconds)
done (took 11.630992621 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.358648729 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.333720317 seconds)
    (3/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.281539259 seconds)
    (4/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.302855702 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.275965312 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131167043 seconds)
    (7/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124527606 seconds)
    (8/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.281265613 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.289043547 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119183043 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.205727874 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.238594401 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.149268734 seconds)
    (14/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.168787172 seconds)
    (15/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.296252374 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.31815741 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11824939 seconds)
    (18/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.161409889 seconds)
    (19/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09267737 seconds)
    (20/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083579902 seconds)
    (21/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.110948081 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.10231068 seconds)
    (23/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117117703 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.241801618 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.091067175 seconds)
    (26/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.266071286 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.171960314 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.234984296 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093908058 seconds)
    (30/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.340840488 seconds)
    (31/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.23578419 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128752493 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.118804242 seconds)
    (34/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.246281527 seconds)
    (35/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203767783 seconds)
    (36/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153860645 seconds)
    (37/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.219014201 seconds)
    (38/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205194364 seconds)
    (39/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.150820808 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137787006 seconds)
    (41/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.216866849 seconds)
    (42/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0924413 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119866714 seconds)
    (44/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.287178551 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.16487112 seconds)
    (46/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116234651 seconds)
    (47/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093618611 seconds)
    (48/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.077205077 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118806548 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.150531099 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.220195419 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092010915 seconds)
    (53/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116482636 seconds)
    (54/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.203603252 seconds)
    (55/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.098426236 seconds)
    (56/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.088432707 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190477192 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161258383 seconds)
    (59/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.209204484 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088110046 seconds)
    (61/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.154986823 seconds)
    (62/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088813989 seconds)
    (63/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.180376786 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096256077 seconds)
    (65/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.10359282 seconds)
    (66/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.153705986 seconds)
    (67/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.174837827 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08961181 seconds)
    (69/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.201777229 seconds)
    (70/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100992983 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.20017131 seconds)
    (72/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.100819779 seconds)
    (73/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.176064594 seconds)
    (74/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092623008 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.154291685 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109048158 seconds)
    (77/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.150051481 seconds)
    (78/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.232463209 seconds)
    (79/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.190593124 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093697577 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111227808 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.111261687 seconds)
    (83/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.103225755 seconds)
    (84/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079005998 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.205960961 seconds)
    (86/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078563761 seconds)
    (87/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200419249 seconds)
    (88/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077160927 seconds)
    (89/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.176086176 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.202253441 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086724726 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118079636 seconds)
    (93/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238559126 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094205816 seconds)
    (95/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121410732 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117396165 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.126528801 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125490467 seconds)
    (99/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077523931 seconds)
    (100/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.10096976 seconds)
    (101/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078748545 seconds)
    (102/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.076476603 seconds)
    (103/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.180524039 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078901768 seconds)
    (105/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.207008839 seconds)
    (106/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.105340343 seconds)
    (107/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080851438 seconds)
    (108/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.173426658 seconds)
    (109/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102903634 seconds)
    (110/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.079744449 seconds)
    (111/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.102557319 seconds)
    (112/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09251724 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127814368 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093075024 seconds)
    (115/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.201332528 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129548723 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087370178 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117021021 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094951917 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.103188 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094216499 seconds)
    (122/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.111951986 seconds)
    (123/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.156362818 seconds)
    (124/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118488872 seconds)
    (125/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079119272 seconds)
    (126/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.202566376 seconds)
    (127/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.127776914 seconds)
    (128/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079012743 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079408056 seconds)
    (130/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.100616826 seconds)
    (131/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094906659 seconds)
    (132/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.108965473 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091266706 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093705837 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.136585392 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.135067601 seconds)
    (137/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080711674 seconds)
    (138/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085203979 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.102389683 seconds)
    (140/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.20454221 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097006137 seconds)
    (142/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116824946 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095113895 seconds)
    (144/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.101213266 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08853088 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078750702 seconds)
    (147/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.103434807 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094920511 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117481727 seconds)
    (150/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.078375444 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102368784 seconds)
    (152/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.086297939 seconds)
    (153/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095025561 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.10276074 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079816342 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.100214602 seconds)
    (157/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.148936841 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118585173 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095470965 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112497634 seconds)
    (161/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085418303 seconds)
    (162/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101289218 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081999814 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079647542 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100313311 seconds)
    (166/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079540637 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092804007 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120303965 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.135452608 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079641989 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.078699678 seconds)
    (172/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11685021 seconds)
    (173/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078518879 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117167647 seconds)
    (175/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085247467 seconds)
    (176/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077833951 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119643109 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.078545544 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119389491 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079341431 seconds)
    (181/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110922468 seconds)
    (182/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090830066 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.103435244 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.112697087 seconds)
    (185/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.113459885 seconds)
    (186/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085136944 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120102776 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078886036 seconds)
    (189/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.102370712 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094456784 seconds)
    (191/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078900509 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119446847 seconds)
  done (took 27.066057499 seconds)
done (took 27.927677431 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230840166 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102799286 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121091319 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.096517282 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.178785895 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12415811 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.106210709 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.124416863 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125153696 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.096540289 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109296159 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104549292 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119642449 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178731277 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.100885445 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11414096 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.08899678 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.126769958 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104782069 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131547333 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.179327586 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089697003 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128212686 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112239451 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179426034 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091203741 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120456299 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098852933 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126792772 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095930033 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119835852 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090298487 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129343853 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.104976247 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111668243 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094704958 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110687298 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.0870717 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118275223 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095463139 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127745663 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095197 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122947628 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089845947 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.119393562 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116630334 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08982212 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124488197 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089597193 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120586424 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092407219 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12905345 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.094178061 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11031908 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088054509 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113134793 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.101646486 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1109546 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10471298 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111144482 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090437568 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111557514 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096624003 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111279892 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094510026 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.113095894 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094782218 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120748757 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092285803 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114967252 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088404491 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116780085 seconds)
done (took 9.069488892 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102632836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175200474 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.179285944 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.186773822 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146163202 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.131313326 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.110451393 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142421321 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.106133403 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138949946 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151864739 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.117958076 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.214559925 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.104689834 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.130577001 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096206386 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128820371 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.121141719 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.188942132 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116192771 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149518319 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.125374919 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126701742 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134526885 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119430188 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.119949653 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122090197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09637608 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120881876 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137524236 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116204029 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120429562 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.097332819 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134230894 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12956409 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.104027341 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.131551935 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097243462 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118693969 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094592842 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132693496 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129001394 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095467758 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13186432 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095734206 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129862603 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125614526 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103691138 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121484086 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.0983015 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.122542823 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146818179 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.10327939 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130386913 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.103718617 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126464751 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.101692197 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126305556 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.119892429 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.103049266 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.1182493 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098888813 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12247649 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143617736 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097974166 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126977713 seconds)
  done (took 9.142531831 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123587313 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15455429 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128439846 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106693497 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12632927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087245196 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.109343376 seconds)
  done (took 1.741717222 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093673796 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182905732 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183613385 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183832819 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179301681 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.191908703 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13341942 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087811064 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.148388317 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123995959 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182045687 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.214651295 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095249918 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131527514 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185911157 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086496577 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185873483 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114644363 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123251861 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183215769 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104056749 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142105078 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103089394 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114152487 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.175200008 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090400283 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.262815496 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105448683 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118968062 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098260105 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126738055 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.199598749 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.177105916 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128193253 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09390357 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.180351242 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.178525202 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126415095 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.192408544 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092561241 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.178767101 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124513627 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.101363524 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.126392458 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099315905 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16660335 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130848565 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126203592 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099261433 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.185816661 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.125909561 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.178425911 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.097574538 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.123695853 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100867389 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127563165 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107571022 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.124915532 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185824344 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126981297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.17878916 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.179316607 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.154872377 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.178099773 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13601015 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.179217822 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.177232601 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098191021 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124709194 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125736577 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180762663 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.100383965 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126585192 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.166097156 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103574063 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.17908106 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.180308825 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121419662 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102557914 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.117556577 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.098474001 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113267734 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168877362 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099882708 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.369360377 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11010049 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129238378 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124610117 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095283893 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140035161 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.100920244 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.12804977 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127995048 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.10048353 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131060152 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.185562287 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.125782689 seconds)
  done (took 14.633186748 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.101651281 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08938562 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.120252337 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114436212 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091346532 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11490455 seconds)
  done (took 1.554783938 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126290767 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125937084 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111760452 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127641315 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.182140794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.186784054 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.187560631 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122836324 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.119258782 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136853733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.186658669 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191031549 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.186016011 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104620865 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.18943072 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.131056433 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.188692785 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126349689 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.110961145 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12422986 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10895252 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130005014 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097844779 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.176074604 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129805128 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128489075 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101434818 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135992509 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109174297 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123289273 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129542607 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104594397 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120017631 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099531775 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.18846854 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121132748 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122748921 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108396502 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130066444 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.104681536 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.190268228 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123612448 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.134632834 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.108307864 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124083153 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096156675 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.13253565 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125530471 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.187625504 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.107293473 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.132603436 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101733321 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.129818298 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132365032 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096765374 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123366015 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.107671782 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.189422627 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131678564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.137494393 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103702776 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129714742 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098961534 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.131685884 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104789257 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132388338 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.118937204 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104300106 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122984844 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.102703195 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.132916722 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127124985 seconds)
  done (took 10.383843968 seconds)
done (took 38.360873081 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.162363326 seconds)
  done (took 2.087017446 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.924998178 seconds)
  done (took 1.853212403 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.988908787 seconds)
  done (took 17.946637797 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.552307788 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.630976711 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.917658734 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16469879 seconds)
  done (took 3.193143908 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.987497212 seconds)
  done (took 1.934119164 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.342806919 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.252188637 seconds)
  done (took 1.525429666 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.727483508 seconds)
  done (took 1.670890936 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.590196858 seconds)
  done (took 2.523995138 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.394385344 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192703917 seconds)
  done (took 1.536186117 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.661838353 seconds)
  done (took 1.600167934 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.798685045 seconds)
  done (took 18.74736028 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226031525 seconds)
  done (took 1.18424259 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.318838008 seconds)
  done (took 1.271244282 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.552612432 seconds)
  done (took 4.498123586 seconds)
done (took 62.503814951 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108590417 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129211462 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105110699 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125860418 seconds)
  done (took 1.409660302 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.114492516 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124076935 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105955756 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125075757 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107309426 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12534735 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099282527 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129334414 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100021101 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128339504 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125338028 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100455778 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127991557 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101985157 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121908813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104043514 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129532013 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101268587 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127568734 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099944868 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12716118 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126840566 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105710296 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127159627 seconds)
  done (took 3.739109094 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108126816 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117102034 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096930224 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.092034145 seconds)
  done (took 1.366800581 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.117472299 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139959761 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112795145 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132729818 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114118419 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137710481 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.122665179 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096785476 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.123476512 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110616138 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.14380473 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138776343 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114336825 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.128212659 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.112058967 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118738562 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.102325511 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138456507 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108700559 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.137070477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125369991 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109392007 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130107859 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.111387814 seconds)
  done (took 3.885043587 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.183886288 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.140162455 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.150481831 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174040283 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.131834946 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.124886374 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152832872 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.107500516 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.132001559 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.102719973 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.129746081 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.174007722 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105991762 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126623469 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125201103 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.106066441 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.137576532 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107595187 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.171558964 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.131289865 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132382596 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.114613734 seconds)
  done (took 3.922452895 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.1146189 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119091046 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090897023 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118872426 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10763366 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12241609 seconds)
  done (took 1.636061114 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10307682 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.087257119 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118412708 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08971734 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.118141381 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086799722 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.112366066 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.089051026 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.113408871 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.087380109 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.11513033 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.087924888 seconds)
  done (took 2.165335587 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.288916375 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118082056 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119329343 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093639232 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.126443468 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091506853 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135100121 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092230172 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.257763892 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088336138 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136610687 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195931869 seconds)
  done (took 2.705961256 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22731718 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102239323 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322843844 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394222773 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167750225 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177035117 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28124865 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176335229 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199886565 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121755654 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231425684 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139353657 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164138472 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192108611 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148148438 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.219324407 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187902895 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21543376 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159338801 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218497094 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173980428 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181255567 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192105897 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161580207 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118978312 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161445987 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.128464045 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10860031 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183006635 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178808537 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210619865 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130462128 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148443981 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212775124 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223551694 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190174298 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314453033 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112015774 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.203398068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190885642 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288898593 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148970839 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211517302 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165562148 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108354641 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219808509 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139276726 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.193999429 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139625672 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14838546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196572696 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186614195 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195486147 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142274782 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309848834 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153626451 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157443843 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189598475 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199962382 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203400765 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180097825 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103119188 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223244081 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195617579 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190172025 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155427115 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181660717 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108522236 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184276594 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208577082 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194721061 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174210784 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.22427742 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109326767 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170816125 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179137967 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164065252 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191114446 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172738539 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100276372 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160359638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144453652 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105829322 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19640445 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12692507 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217482818 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141651788 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.390774645 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218022417 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167104045 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171620478 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17418247 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175257481 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129489519 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129214051 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12822321 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.171121842 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166393641 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144354793 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165115146 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122475603 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.141527926 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161590521 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128129251 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145691518 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159120287 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175550094 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171243334 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138690435 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149275586 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158075236 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164574626 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180975152 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195777187 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137977659 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112208565 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199793455 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168130061 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143102965 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185682889 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200895509 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174057345 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11680338 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173323492 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229419847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124267356 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199776013 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143246099 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140528899 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.162724672 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145329324 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166533165 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161941207 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13235549 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.139266115 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231545918 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106680902 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144001475 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183278732 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116100717 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134691913 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147718358 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115919391 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150416209 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155398923 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145761168 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137933536 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170961265 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164437914 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168129089 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142795466 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183384564 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111064316 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170349928 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156855732 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099993029 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220515547 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195090677 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108546816 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208569335 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18001537 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235296659 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170500259 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112399407 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188122186 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13423961 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099644917 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170831646 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169792759 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173120899 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196765901 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231560969 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183444014 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.137063926 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159255636 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176230492 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185450303 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166364723 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153036174 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169271588 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179886655 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100248519 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.133126103 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107894625 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148609642 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13626124 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111502506 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191233147 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174096977 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224464278 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168220593 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121286192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192907843 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.138209505 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17463625 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185000972 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147936537 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199140417 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193304378 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179480841 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122772285 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172760371 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128277265 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105556721 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143197232 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17795186 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139104771 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114362563 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150883918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193932731 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185243744 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158683262 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214207115 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176836073 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233611235 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101343884 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173834881 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180647374 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166448056 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168126603 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143820704 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.170720516 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189461157 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145169383 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203139113 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168159425 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147216985 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238116918 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166713977 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109173438 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158629479 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17530491 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148091328 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145479061 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154828562 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137323613 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16116449 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.119177755 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136159626 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192578032 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152089632 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189693521 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.166289371 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184553178 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104361007 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151239582 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17218834 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154315566 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.099908589 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180811034 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198575081 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154159361 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167088532 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185177998 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136644061 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.336797095 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201613547 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195537962 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142476716 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122618718 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175361393 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169548756 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173885129 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190099866 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151420296 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189019405 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171030223 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.12333233 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137668801 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156400171 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132204845 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163767405 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143194976 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170150086 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122559669 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224645394 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12217342 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171277819 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172000111 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155571799 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.137725967 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150107549 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208188321 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169407213 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189274209 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16718934 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178583472 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212353196 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130375671 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108880731 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142066507 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189941 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109912841 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172928783 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19281473 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237262012 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172982035 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17638617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117827618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134344154 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167007321 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129055563 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238847086 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142270749 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119581853 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201894894 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161307371 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137729179 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172893354 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293999642 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12597791 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1816121 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.137900469 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285112374 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13492423 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110716201 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169555192 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180988438 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.142685247 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.16581715 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168812915 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152032454 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169722923 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145740337 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199362974 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219119514 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176326737 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186462133 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151569059 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167930286 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17298407 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186670228 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123148363 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.155088455 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171795925 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195014781 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196021798 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143356641 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169258976 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143087609 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166514925 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184247202 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141208964 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211617801 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137502697 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171484489 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119897836 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133643098 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168383097 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193837234 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138347228 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187211156 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171171063 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113381545 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137239741 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152835383 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140923296 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146313565 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136300572 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192121928 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106889299 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175245287 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192678731 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136996133 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137921826 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154391462 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139993649 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122939356 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152314491 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139151862 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151147527 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189494316 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141745477 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187159554 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173039287 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175561459 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17050665 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15352993 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647066234 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137908736 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193631198 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156484618 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198636641 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128669636 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174720777 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169657327 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159783684 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17440141 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158146625 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203661714 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17048088 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.170341376 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138800341 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15076307 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122413663 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142842462 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160641947 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168790645 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12148603 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14769257 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171173222 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124603855 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154803767 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147919691 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197639883 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156317551 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196141095 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191614501 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114742241 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17478697 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184992649 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140226026 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175287148 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18266894 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149270989 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12715065 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141623089 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145889245 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164616647 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131679594 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172214889 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172387158 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168522716 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14398435 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146210795 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174328889 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149470914 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14388587 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137580682 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16477898 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168298401 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111899781 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.137174456 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167773844 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169646383 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1377905 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136927973 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152801249 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217010701 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103324513 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140935328 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292218072 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169326376 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203527668 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162865654 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113808093 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153355037 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166902583 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.140768625 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171819974 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138491024 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109951694 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140981937 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193385349 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167716561 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16587634 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165096776 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170624168 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242850522 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.12549867 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276326394 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146854174 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140219346 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.140914187 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138745561 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122564972 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142179319 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145951803 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202388649 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190413159 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162859862 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123733003 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137602843 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.102296011 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140868038 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171387364 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164913911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143067899 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153484588 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.12832941 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12570871 seconds)
  done (took 80.959379115 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177993599 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142146634 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152504341 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201721616 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172869997 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264594346 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211894254 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234613515 seconds)
  done (took 2.605358967 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110670784 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138625583 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145322574 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126641817 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.126548588 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.389849357 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.139611152 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.100984807 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.186608259 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140179881 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124570542 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.598838866 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.127630201 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.125356535 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.096909366 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126161595 seconds)
  done (took 3.841149571 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.446579087 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552549872 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.046244278 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.238381834 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233123372 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182803975 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.74952134 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.172172116 seconds)
  done (took 12.66567076 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.139061286 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148393563 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.289102063 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.250852091 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.137738306 seconds)
  done (took 2.015588772 seconds)
done (took 123.861750283 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.111938754 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131278794 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10626322 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135198527 seconds)
  done (took 1.518798135 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.160981218 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.11732349 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092515963 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087290479 seconds)
  done (took 1.501301688 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.496866962 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118372347 seconds)
  done (took 1.694303949 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.143360608 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.151154895 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.12040513 seconds)
  done (took 1.465316534 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117699288 seconds)
  done (took 1.170975406 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117153834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.099108451 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.193179596 seconds)
  done (took 1.461948259 seconds)
done (took 9.866547335 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110385997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.438727502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391565914 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14320393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730833079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381237406 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048221222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163175631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21410198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092521297 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145196112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671968321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03691385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.369564934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988246613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374770864 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675034094 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119716428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102502749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122579539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994934559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119799327 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094586703 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120837121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673984116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.441068569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093261276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387740267 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09172043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129667729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.379321879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122601086 seconds)
  done (took 17.010461206 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108529848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194132406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104672873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124119815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100803511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123999344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106205611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13774192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202136357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121346444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116438907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121150045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097996163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122240596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11936815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121211423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09456162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122255044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102682086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124031017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143279596 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094025923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122532334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093834573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093127074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.153787919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120544158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10928018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121827744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101778848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125091751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094359803 seconds)
  done (took 4.896916436 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151064001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202962575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134153543 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13054356 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181588057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123460374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214739442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164465592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20473002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093797002 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146846765 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092883781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169299476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094082038 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149768581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093358385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122774933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09364329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131648906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12348821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118443819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121058783 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095660038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121661125 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094390921 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155141628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093850635 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138534523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092851148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13016039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097106139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122766806 seconds)
  done (took 5.264353119 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.111898195 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133912352 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120163811 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14780891 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100621023 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134201083 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105509869 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129236358 seconds)
  done (took 2.044852204 seconds)
done (took 30.272892154 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126679084 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141282475 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.113732038 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135574957 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.182516825 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098212948 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110233827 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.126711459 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.106591745 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.146765072 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093481981 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.127980394 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.113831249 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.13264905 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.183966547 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.107724413 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.189916024 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184484803 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.129012567 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10762667 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128645424 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.188896874 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10650097 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098859727 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195737187 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126296773 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.180634833 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10390337 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.1318157 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102119891 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185223663 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134119819 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.100614963 seconds)
  done (took 5.491828883 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.171254779 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.131540108 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099005284 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129748439 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.100835868 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128512417 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.196834065 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098331617 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127867041 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.098635797 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.127428664 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.162165258 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.135250844 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.093800481 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.132669164 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.100721555 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.19587774 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.131617125 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.094298259 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.090105468 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.123979544 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098869145 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.20671762 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.125760487 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098738412 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128962269 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.103183221 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.134258082 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.10143269 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.130528605 seconds)
  done (took 4.871260097 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113496223 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145897551 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.12344527 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20172526 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161242088 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.107971002 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.147567678 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.116297527 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157188565 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.095207066 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141565549 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159035786 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115289259 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.137827315 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.101125173 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141919042 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117503742 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.125123149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104314354 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143718847 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11249397 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.141724835 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117200579 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134495888 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093355362 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132266993 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133479024 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11325541 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137134295 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.114486014 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130995901 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099623921 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127943162 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106899752 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130672798 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.10480389 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14880812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10853811 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.140096213 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.152864826 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101487004 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.129629781 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124174139 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.185575346 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097127812 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13755984 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108374848 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142702358 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095492299 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145407192 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114531242 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.125297683 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.146532449 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096781505 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096168846 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136629259 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097062048 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132428581 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.115520012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128725681 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.14654679 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.103852066 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136627703 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098708577 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135140168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097060201 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095473796 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128573699 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.153862853 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105617195 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163066197 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095745588 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135260219 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108736931 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134969397 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107718708 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125029586 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10647836 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136319614 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10216923 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.141142878 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.0993303 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128520036 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112115267 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143245893 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.106210354 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.176277512 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134627711 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099235432 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127390722 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114581944 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.126687143 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101279358 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.144621015 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095268263 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132154402 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106336768 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134411513 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094593571 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15181089 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102122626 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125267809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.122446407 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.13261642 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101928799 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134834321 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111560593 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.124510751 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105060573 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137182602 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096962952 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133301724 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099621872 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123991734 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.111672877 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.140777455 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103403232 seconds)
  done (took 15.565475298 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.293711642 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.307054724 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210007534 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.367886349 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111900601 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.20257004 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307922468 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.278025358 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132601509 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171046119 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.193157012 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.246035078 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.128102879 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.126758194 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.309678308 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.371606788 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.158076268 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171871122 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.141236377 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.143601309 seconds)
  done (took 5.462319791 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.127213288 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.163780954 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.149552331 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.130064124 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.134851382 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10879778 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.1259749 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.121700325 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.133657333 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13348774 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.096807715 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.138926502 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104896794 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13758132 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.11532641 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174347425 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101705396 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.132171466 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.149719436 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.102981307 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13647671 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.128162264 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.136502695 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147868951 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.112260946 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137978364 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094802958 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.132808329 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099378152 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.129718154 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102074813 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146843041 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101708752 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132333562 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104523386 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.138058572 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.098363752 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.128253583 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.098443192 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129661459 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.112544204 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.136008565 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099753254 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124163863 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.110995089 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.12845983 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108421231 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13452373 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109224028 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139440636 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105917501 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.139021872 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103037558 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.145135004 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.099462473 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.141489994 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108907604 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.139267665 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131793401 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097192274 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093897744 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131029584 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.101445996 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.137801091 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105747682 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149982196 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.140374567 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095828496 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.131504095 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101118716 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130122076 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112508985 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.150212854 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131004623 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100126245 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138000184 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100887958 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.089964954 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.136433207 seconds)
  done (took 10.807642667 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13081759 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130392568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117195173 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164759771 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105497835 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133651827 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101257619 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.147399292 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108555525 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.138890328 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108569514 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142768179 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.149439788 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113048533 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130991619 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114877418 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136217309 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.16716896 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.118750972 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.158853878 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.108976317 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132402632 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.108681992 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.139098123 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.158378751 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.109067837 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.159180511 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.106333597 seconds)
  done (took 4.735063486 seconds)
done (took 47.992174526 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.22682823 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.381462427 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.159573876 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.163259871 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.167507587 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.179791955 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.16173857 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.161701534 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.10653174 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.152450769 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.162388659 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.161283341 seconds)
done (took 27.274249044 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.27736209 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.668363412 seconds)
    (2/2) benchmarking "String"...
    done (took 1.436198863 seconds)
  done (took 4.195376061 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.170162862 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.158995842 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.381565291 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.157440151 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.174152579 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.170426709 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.158794657 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.162536979 seconds)
  done (took 15.449106887 seconds)
done (took 25.177902159 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.222433493 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.334386224 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.407049716 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.176009307 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.178730258 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.158496151 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.161842363 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.178967394 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.161189528 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.159141793 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.560687028 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.416682385 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.189433785 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.537581156 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.169030543 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.181554395 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.154350527 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.380924165 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.159476802 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.215511464 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.147314146 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.155128754 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.185122354 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.173763901 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.165812594 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.17050443 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.191364233 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.154489454 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.351080754 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.187872896 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.207677641 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.161101426 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.190827613 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.160824708 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.15965314 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.157729366 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.354047928 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.1632663 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.15047833 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.167176831 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.393161602 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.168245316 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.158286263 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.164617697 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.168137793 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.205959032 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.151735276 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.268910052 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.17928396 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.164411368 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.229554662 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.536546639 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.174631304 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.172499304 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.170949222 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.389103147 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.172977439 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.214616121 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.184657448 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.162357902 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.16255827 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.158515488 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.179807155 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.175559556 seconds)
  done (took 141.051990451 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.163139934 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.165477732 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.164829379 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.185393788 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.163437279 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.164063953 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.161530568 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.162496 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.164654475 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.170486926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.164169615 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.164529987 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.166099784 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.127784284 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.169949035 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.184673468 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.164864176 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.181556433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.188259637 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.164925144 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.172836876 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.163121777 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.180648585 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.166145428 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.20918663 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.265084299 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.210304274 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.160900789 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.168082952 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.16450833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.205182573 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.18835115 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.753762518 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.029026222 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.184416394 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.182810545 seconds)
  done (took 78.834941419 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.165859415 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.16607275 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.165496341 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.194951312 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.162856057 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.16619215 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.729100878 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731782583 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.908070258 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.55003144 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.500320535 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.451956823 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.166286846 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260120017 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.175581801 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.165113081 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.180330301 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.194465824 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.167191325 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.164838352 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730456665 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.179652419 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.35878961 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.341063737 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.177271632 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.197957682 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.572929534 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.160958431 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.197574146 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.500821098 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.212921048 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.161124053 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.539764588 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.868957976 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278683728 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.165563436 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.200071688 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.167800679 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.452549525 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.165422859 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.169263739 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.169326612 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.841253274 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.165047139 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.733759264 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.168782441 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.089693101 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.164283983 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.168068038 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.412948825 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.905344342 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.18318323 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.166891374 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.168651975 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.171161041 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.168788331 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.16952609 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.200309159 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.468344146 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.284923493 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.16827188 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.168857879 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.173853237 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199211711 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.167281502 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.628432593 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.168105461 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.275693249 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.244242694 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.285007343 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730941551 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.168945999 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267852493 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284071706 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.16420313 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.169340911 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.17056529 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.168883305 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.280673605 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.16570997 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.58668361 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.340422799 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.18094843 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.551436079 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.26107722 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.165819229 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562480738 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.171326467 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.170387053 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898847895 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262445031 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.167287442 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.170507578 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.171400919 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.173335408 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.585820558 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730447422 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.431500961 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.169761657 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.874266304 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.180130015 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.594694823 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.733089437 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87566141 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.176411956 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286268741 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.343616917 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.183638975 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.170714213 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.586725731 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.166790388 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.233291785 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.16711015 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.575489926 seconds)
  done (took 363.013609924 seconds)
done (took 583.988409399 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.990250774 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.929631854 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.060896176 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.955163023 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.92168679 seconds)
  done (took 10.950788262 seconds)
done (took 12.049177833 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.367665415 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.366613621 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.23191739 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.366866221 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.203631672 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.382619481 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.351312242 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.194109373 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.287049682 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.251870633 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.283386089 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223128919 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206800985 seconds)
  done (took 17.813554634 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443616323 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.173333244 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.239822647 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428164409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.210500674 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442970167 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471009844 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.173762563 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3204793 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.190911805 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.189209919 seconds)
  done (took 17.381310209 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443474548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.174581917 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246334221 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.441424609 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21732676 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453934569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.46241164 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.177449494 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321593995 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.191661898 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190872637 seconds)
  done (took 17.419091726 seconds)
done (took 53.71197219 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.216648922 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.342709011 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.20478772 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.193761989 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.18715088 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.190776362 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.194986061 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.187705433 seconds)
  done (took 10.817501788 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.187736429 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.183891236 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.18729906 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.187691237 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.185707606 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.186770208 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.186739486 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.186258869 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.185654566 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.185917476 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.187953478 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.186404659 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.188731243 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.186543984 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.186363417 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.186724098 seconds)
  done (took 20.087402538 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.187873307 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.185305457 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.186877109 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.187961661 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.186952061 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.188126695 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.188708079 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.189434827 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.186958225 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.187721998 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.189086856 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.187139437 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.188613395 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.186536113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.186686011 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.190044231 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.188228968 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.188984901 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.191926431 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.188463407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.18875861 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.189506574 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.187637636 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.187212251 seconds)
  done (took 29.612884854 seconds)
done (took 61.616995703 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.178281946 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.179663343 seconds)
  done (took 5.456994878 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.249794085 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.249318824 seconds)
  done (took 3.598148866 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.190600949 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.18791636 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.189031576 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.187785215 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.18915153 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.189504161 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.190361484 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.188836135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.187676551 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.189146533 seconds)
  done (took 12.989177016 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.188264601 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.187510786 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.189100287 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.188877274 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.188712284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.187406788 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.189752396 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.189776314 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.189034557 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.188353751 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.189416986 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.18997013 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.190173184 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.191292142 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.190048038 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.190057564 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.189219253 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.191156179 seconds)
  done (took 22.50911493 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.202810581 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.210325239 seconds)
  done (took 3.513267704 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.327920728 seconds)
    (2/7) benchmarking "second"...
    done (took 1.230769189 seconds)
    (3/7) benchmarking "month"...
    done (took 1.305636132 seconds)
    (4/7) benchmarking "year"...
    done (took 1.2974866 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.232271451 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.210012123 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.230241249 seconds)
  done (took 9.935981153 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.192683985 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396105019 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.499656274 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.756784583 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.191038913 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.191242206 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.014678928 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.193012839 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.196732677 seconds)
  done (took 13.734202561 seconds)
done (took 72.838831133 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.190208915 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.237625985 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.222596279 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.203589511 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.503806675 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.2050988 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.192042614 seconds)
done (took 15.860436093 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.178978841 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.187468876 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.171526372 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.191768368 seconds)
  done (took 9.832983259 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182973749 seconds)
    (2/2) benchmarking "read"...
    done (took 1.467055773 seconds)
  done (took 4.751991348 seconds)
done (took 15.692246236 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.192612846 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.192857796 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.192398064 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.192461448 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.193286833 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.194755104 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.192918143 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.190347928 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.191344649 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.191364755 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.191553828 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.192555109 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192692554 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193710321 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193680307 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194435949 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.193876999 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.194476508 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192959777 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1949514 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193311679 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.194309394 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.192416184 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194166906 seconds)
  done (took 29.738895471 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.194064572 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.193755641 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.19378319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.19264168 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.194418577 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.194058031 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.193818615 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.193324653 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.194176086 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.19511176 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193519209 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.192042087 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.195384052 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194425168 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194406063 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.197753137 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.194688818 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194907935 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191388689 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.19530828 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.191085553 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193902505 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.193961471 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193898299 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.194889887 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195049108 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.194644569 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.195046087 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195723103 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.193263529 seconds)
  done (took 36.931531369 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200175229 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.200578417 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.196147278 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.196390948 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.19525502 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.194913011 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.194865534 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.194208765 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.194912956 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.193868017 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.192465698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.195567273 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.194488994 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.195502909 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.195416123 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.195608545 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.195282455 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.195633217 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.195153237 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.197207241 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.195836492 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.198162315 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.195619144 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.197897035 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.198880458 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.195289435 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.199288 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.197460365 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.195733616 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.197984681 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.196961577 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.197715576 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.196608507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.196202607 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.198254145 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.198204276 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.202215663 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.202726081 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.198702593 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.199027249 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.1958874 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.196618236 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.1980599 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.197331855 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.200041719 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.196893598 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.196848414 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.196987924 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.197566125 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199383488 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.198762716 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.197853372 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.198343944 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.198313115 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.19609457 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.198105667 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199320954 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.198391471 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.199132674 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.198666461 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.200804206 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.199015017 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.198494228 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.199727188 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.196049681 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.199466074 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.199361013 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.200257955 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.19663385 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.200326391 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.20053373 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.198922084 seconds)
  done (took 87.332131222 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.200561542 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201229688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.199399408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.199884838 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199483498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.199126519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200007449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199807577 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199224602 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198426154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201182614 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201707768 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197630736 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.202153497 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200340576 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.200772754 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.201379003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201926562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.199074432 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.202161204 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200273364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.201737937 seconds)
  done (took 27.518043134 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20060971 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201976642 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.201504158 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203980707 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.202001332 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.202602663 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203096344 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.202683359 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203196509 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200583559 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2026516 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200997984 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.204230133 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20079605 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201361662 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204482239 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20084224 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204119365 seconds)
  done (took 22.753798372 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.201027928 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.203349336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.201793137 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201825398 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.200602106 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.201549321 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2027337 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.20196317 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.201825814 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.202385306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.20076126 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203104721 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.202737512 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202997331 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2037239 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205015557 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.203730721 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205771571 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203177837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204294823 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204859154 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203630484 seconds)
  done (took 27.577148269 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205100118 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.20484485 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.204384321 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.203216746 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202956257 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.202605941 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.203341217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.203825247 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.206140457 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.204244865 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204363228 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.20549028 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.207500627 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.202820185 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.202595276 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206275207 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204163859 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.204739624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203421034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.205703141 seconds)
  done (took 25.201545881 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208000759 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207458572 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.206828705 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208609058 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207368442 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.20783816 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206696069 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.20757538 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206758776 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.207794921 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207250235 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.207680773 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208137148 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206646298 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206892298 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207512122 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208150575 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208612052 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208764998 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209064261 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.208624622 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207938723 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208794475 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.206963864 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.207469708 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207125471 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208958008 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212420474 seconds)
  done (took 34.939328411 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213513688 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2120983 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.207054876 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.208541927 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.206404132 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.207999877 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.208950859 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.208152411 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.207564578 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207468785 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.208636916 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.207341111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.204599494 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.208530874 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208046996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.207861921 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206932008 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.207531911 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20629678 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209215955 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.20824615 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206919402 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.21067491 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209920718 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20940841 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.210175153 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20943979 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211012457 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208252544 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209524799 seconds)
  done (took 37.37937468 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.258585318 seconds)
    (2/2) benchmarking "in"...
    done (took 1.251557877 seconds)
  done (took 3.629682681 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.209943732 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20853821 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.207689101 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211165897 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210086632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.210492671 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208021396 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210073937 seconds)
  done (took 10.79626002 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.204618755 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.211005634 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.207470116 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.208259116 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.212035079 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.204273762 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21496143 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.216090715 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.2062595 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.210923272 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.211989302 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.211809968 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.20903418 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.209304568 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.208302949 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210482667 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.214445771 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.2122133 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.211536955 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.211953039 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212886048 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.209820852 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215184389 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.213791136 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.210504849 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217040586 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215698783 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.214520591 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210196372 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.212767487 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.21301071 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.213418886 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.212011528 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.213047307 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.212428 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.213062316 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219521582 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236192453 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.217556982 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.217507893 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.21176574 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.213941984 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.209289222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.213086705 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213290174 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.217561733 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.214383903 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.211935646 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.209223294 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.214368178 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.217859313 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209693266 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.212276882 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.212418413 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.215163195 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219113084 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.223286817 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.211986886 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.215484142 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.21983636 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226733193 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.224624794 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.215186352 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.220632993 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22065317 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.231284662 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220656017 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.220890551 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.216037823 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.21509395 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.220195134 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225791679 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.227447177 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.218960309 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21751951 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.21531978 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2121367 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216627595 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222455626 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.221929904 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.216441661 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.216448281 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220019768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227128783 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.213571836 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.219633277 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.215406897 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.218597849 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.210709643 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222565011 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.222881518 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.214750195 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.214240772 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.214281581 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.212471797 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.21913943 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.2102514 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213957241 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.217711637 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.217796436 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215463819 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214712887 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.218460419 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221760986 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.216708266 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.218467846 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.22089668 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214002386 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.220377371 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.222125765 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218241137 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214837395 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.216983838 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218842153 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214892427 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.222600904 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.219653238 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.215408279 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.221970722 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.2172947 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223239618 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.23542596 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.222716148 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.218606686 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.218697541 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.226764548 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218687275 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217284856 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.221033739 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.218256741 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.219074739 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.216593965 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.220882586 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.215131485 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22309323 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21507828 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.220583759 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.219729242 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.221217078 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.217877392 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.222190511 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.217327693 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.215977381 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.221967939 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.223979942 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.218781793 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.227309847 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.222744753 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.22007965 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.21948603 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.219578566 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.218306919 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.220023227 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.223015709 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.215968175 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221646605 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.215926071 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.222372587 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.220642087 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.223569257 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221703343 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.217005842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221809871 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.222144942 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.221986375 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.218763226 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.222784105 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.221692197 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.223171004 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.219305356 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223115624 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.218577134 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.221320032 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.229075055 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.220853687 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.223174576 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.220149365 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225120893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222398577 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22165329 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.22135018 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.224544449 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.224184287 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.226327188 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.229867655 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223492366 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.221735433 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.220053771 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.222214009 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223671833 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.220604317 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.229899316 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231848202 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232688963 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.22287825 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.226028862 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.220711769 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.226573335 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.223925899 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.228188062 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.222902034 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223539405 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218839857 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225338583 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.221414295 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.224863342 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.219561196 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.224033927 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.223491762 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.224330286 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222342056 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.221743461 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22191075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.223977588 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224491262 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223616793 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.218832963 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.223600123 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.22073246 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.22207705 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.22640301 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.226614119 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.226813473 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.228951459 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222468285 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226935534 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.223268442 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.222203274 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.22561395 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22490746 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.222941083 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230911148 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.227665851 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.223868381 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230616984 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.227134119 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.222742607 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.226546606 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.229361843 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.225541392 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.225298488 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.230291611 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.228338114 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.22608583 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.224830317 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220537251 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224198949 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.227440222 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.229626375 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.221924284 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.22845011 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.22486437 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.225694993 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.222972867 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.225975812 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.223735617 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227944936 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227957496 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.224914485 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224523356 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.228783121 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.228748068 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.228795034 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225714334 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.233796844 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.227331501 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227088589 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.22805764 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.224167683 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.228100284 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.2241074 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.229224987 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.224251097 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237413995 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.24218656 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230914846 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.231322036 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229367125 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231245538 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.231147627 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.228397999 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225153068 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226837778 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.227144248 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.224728706 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229316684 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225853069 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.230018305 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228024273 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.229306829 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.231245226 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230804253 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.223154933 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23334885 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231884681 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231001457 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.227682053 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.230822475 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.228243881 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230014063 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.228518526 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.226060563 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237214361 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230777046 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.229519306 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.227597144 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.228671026 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.228491664 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.229324963 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.233630636 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.228039055 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.240071239 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.231254287 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.233615525 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.228644607 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234562637 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.238906268 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.230929347 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.240127997 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.231958044 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.226970847 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.229308266 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.232896057 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234548731 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.235603599 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.229456653 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.23680984 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231539718 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231282468 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231254112 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.232012293 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230572127 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.232241914 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236872121 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.253043679 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.231211899 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233747799 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.233075206 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231204202 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233631015 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.229690554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234906448 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.236413669 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.229795516 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.229899304 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.229198034 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235710597 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.235275648 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.235539374 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.233840292 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234286042 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238344421 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.234868388 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23739601 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235023938 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.237297925 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237946411 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241506228 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.238728573 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.230506343 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.234683779 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.23485055 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.231583423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.231650985 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23165733 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23608759 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.230291374 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23967425 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234207351 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.233035164 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.233010874 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.236089916 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.231701843 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240662761 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253692194 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.232004215 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23870329 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235789178 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.23462009 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.241378347 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.234812526 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.23099913 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.234733956 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240002635 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241517704 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.232023309 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235084278 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233879158 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239213142 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236058099 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.23590859 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.237131095 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236625192 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.233230157 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.237912314 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234563721 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.238430625 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.231999377 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235218007 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.233499105 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.241733448 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.242660161 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.235756101 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239030726 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237479197 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.233844324 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.235279504 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.240725455 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234085367 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236059294 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.234368645 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237527891 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.237358944 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.236721451 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.238128548 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240858576 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.230679633 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23416148 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238584969 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.238844021 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239276702 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.236344123 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240266873 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.235539104 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.234374629 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.238191504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.236823187 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238694885 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235189327 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.2410325 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237020586 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.237949414 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.239418581 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238498519 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.234324173 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.234417143 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.245136686 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241644542 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.241793614 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.241803992 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242902697 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.233828791 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239659391 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.240986888 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.236326566 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.238067443 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.241709393 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.236544223 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.237146979 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.238584628 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243135129 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.243077849 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.240817745 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.236988342 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246180059 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26192809 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241848988 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.236926512 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.239120403 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.238160438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.243840206 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.243197417 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239201388 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245702407 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.240732193 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243206612 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238114475 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.239118607 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.239757452 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245405587 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239470388 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.238907378 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.242874773 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.240063114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243614159 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241806733 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.243713924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2384309 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.238790589 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.23997377 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.243910351 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.243263579 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241761707 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.23914201 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.239502302 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244583281 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241609626 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.242361772 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244125856 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.239280052 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245561592 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241294321 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.242648746 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.244457293 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244923179 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.246620633 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243278089 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241804767 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.248035912 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.247115639 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.241900119 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241409567 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.239681095 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.243191703 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24596126 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.24078115 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237726268 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.241586591 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.244649137 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245075528 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.24222756 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.242790355 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255427341 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271825995 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241588707 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.24190986 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245198964 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.247227171 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241922118 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243841322 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.243766954 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.245882789 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249326019 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.245775414 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244906201 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247099915 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.242777236 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.246431875 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.242877284 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.246211085 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.245880058 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249373511 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.244818656 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.244433761 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.256762518 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248402912 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250417829 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266562074 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.248289011 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245927732 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.247981547 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241464306 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.246442935 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.242719203 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.248029522 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246361702 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246080039 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.247764791 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.242171961 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248281256 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.248567176 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.252150306 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.248342551 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.242636831 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.244496547 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.246575455 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.248436246 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.248945204 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.248514367 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246487739 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246592365 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.242900616 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257910022 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.260084158 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.248069315 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.249918091 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.246049175 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.245554143 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.24804648 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249774413 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.253170933 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247961755 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.247503492 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.246306276 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24870419 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.249288777 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.242944366 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.245405125 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243451749 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248352311 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.257712748 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262225157 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.249139131 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.248252328 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250710033 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248372637 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243503135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250941292 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248863658 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.244538459 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.248656455 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252046602 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.249695571 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.247274594 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.245466781 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254726481 seconds)
  done (took 734.659451258 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247343745 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249330545 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250117932 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249074585 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247429351 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247557719 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247096006 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24962489 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248420692 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249027792 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249307135 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248033973 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247734367 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250814495 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250384532 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248320967 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247544204 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250115267 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249045873 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250701055 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24886643 seconds)
  done (took 27.376863815 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.2492998 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250460298 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251939236 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251343086 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251185051 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.252122607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251010226 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251266345 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248895007 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252131974 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.251324864 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248982108 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.250761911 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.249182071 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250776965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249249341 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.253584055 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250279502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.251289305 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251885835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249744981 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25129609 seconds)
  done (took 28.673458877 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.252714813 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.25101578 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.246620782 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.251422856 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.24853038 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.250349528 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251484759 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.249066412 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.251368474 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.248794124 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.244893309 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.249241161 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.254268522 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.255251699 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.250473397 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.255093823 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.254485812 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.251924701 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.249701233 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.250233187 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.255542907 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.256377984 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.251855909 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.246906082 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.254188298 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.250161083 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.250585696 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253797142 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.247704432 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.256186403 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.253084935 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.247713363 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.255139752 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.249694892 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.251214899 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.256755989 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.255770918 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.251122321 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.253533461 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.256715506 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.271475837 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.254800877 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.256954268 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.2571179 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.252843219 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.252952794 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.261356208 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.255133478 seconds)
  done (took 61.291574513 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.254410334 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.252274736 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.253684337 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.255221465 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.255628799 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.255548978 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.254551132 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251487153 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.253041534 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255911749 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.255020443 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.255218685 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256416118 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.254244789 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.254873586 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.255492895 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.253773291 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255943748 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255274297 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255296153 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.257373158 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.255110318 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.25473602 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.255482871 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25687372 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257774781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.252457239 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.256831796 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.255385439 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25614712 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.256666766 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256012829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.259509285 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.255092091 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258095086 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.254804166 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.256770875 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.258439749 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.253988187 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.257258052 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.25707095 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256098207 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.257565977 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.256081608 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256092467 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.258706331 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257588984 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.257767924 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.258759127 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.258849643 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.257885301 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.256684282 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257674046 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.255125256 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.25800303 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.257887024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.256986001 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.255844947 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.258404839 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.25739373 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.257029233 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.258601829 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.258345801 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.258397588 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.257417806 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.257765067 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.259082108 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257907804 seconds)
  done (took 86.589851625 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259620572 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.259719377 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260957461 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260110149 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259053824 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.260840809 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261013997 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.26070129 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258555994 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258450784 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260391586 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257946973 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.260416046 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.25952558 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260752822 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260723529 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259447054 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260186533 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260403606 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260205684 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.260836239 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261841836 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2609445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260027173 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262834545 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.26183308 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.261251276 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.258953857 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260318032 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262447355 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26300079 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.26197939 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.259877072 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.261143353 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.261890053 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.260971249 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263043179 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261828104 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.260977839 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261936566 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261789702 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261413223 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262005214 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.262291804 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266024651 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261861138 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262258791 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.263846258 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260840501 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264052025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.262234287 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263221473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260783341 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262082672 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263237589 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.261952613 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263743123 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263419197 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263020185 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264907935 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262914065 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.263241565 seconds)
  done (took 79.372761142 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263116894 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262255507 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.263300095 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262081746 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261416451 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262383309 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265515306 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.2648758 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262279862 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.26440157 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266293705 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265362966 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266257455 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263901617 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264340576 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263980482 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263131596 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266164999 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262223126 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263854056 seconds)
  done (took 26.442891484 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265296058 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263660279 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262585155 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265807241 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.265222207 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265840374 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.264042975 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264051652 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264407991 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264504893 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266757826 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266556216 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264954598 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265680462 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265544979 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26620346 seconds)
  done (took 21.40816536 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265791628 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.266768273 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268000999 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.263880381 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.265869535 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266284252 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.265450947 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.264334854 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.263822675 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.265650538 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.266023368 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.266627669 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.26358568 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.266490467 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265761014 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266939113 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.266445711 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.264443315 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.264497456 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.2675243 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.265584164 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.264944348 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.268197556 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269094153 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.266006496 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.267820965 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267371064 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.2660977 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.266077939 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267242076 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.26856925 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.267900269 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267681294 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.26770966 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.268787282 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.266892055 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.267657712 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.26816311 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.268311008 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.265773029 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.267182112 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.265654496 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.269532601 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.267412139 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268250858 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267280797 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.267540664 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268146417 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.268448035 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.269228667 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.267395096 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27041847 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.265796159 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.26713284 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.266797134 seconds)
  done (took 70.845593631 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268773812 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269194701 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266416387 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268666708 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272212333 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.26753166 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268178542 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271172872 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265299537 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26841223 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26886155 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.270239593 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2701831 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270239687 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270320866 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268620263 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269228342 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.270909738 seconds)
  done (took 24.015071681 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269842484 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270614388 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268446619 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.26959196 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268397075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270694611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270437229 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.269812359 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271253263 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270008873 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271228083 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.268324242 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268296099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.268934552 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272107893 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270232726 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.268875162 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269626795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269384345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270366919 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271024067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270991556 seconds)
  done (took 29.110144957 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.267013587 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.265605572 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.267560597 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.282643348 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.280838636 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.268079677 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.267779658 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.265997748 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.287266301 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.309763813 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.305207984 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.282989798 seconds)
  done (took 16.522968352 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272933975 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271102577 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271012874 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273036715 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271364498 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2695555 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272645762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27091395 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269547379 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271996494 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273380565 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272888153 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272535253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273943741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270038488 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277020739 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276440601 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272851555 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273187025 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272816684 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272748496 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270869968 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272001647 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269763961 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27151585 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272681217 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27075018 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271064844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273546476 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273946411 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272365397 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273879013 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272739845 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272492028 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271213179 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274988474 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275258748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274248465 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274430119 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274349725 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27447977 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273038221 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274128661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273049036 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273520469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27266497 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273443358 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274618485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2727604 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273914759 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274107813 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273546933 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275566716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276072066 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274590727 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272788328 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275317881 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275074699 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271507693 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274140027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273343985 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276425035 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274843045 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273237889 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273737201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274464693 seconds)
  done (took 85.203913838 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274361633 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274867211 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275815264 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274520219 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272781083 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275447349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274251386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274581517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275007351 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274933271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276475965 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274051352 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275440184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277344757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274196852 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275140899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27647358 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273555498 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27413052 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277123649 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275418204 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275844497 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276890619 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2760232 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275192957 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274708914 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274215493 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276724309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275836038 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278508173 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276197728 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275683824 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274357925 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277956078 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276986984 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275903068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275509926 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275316232 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277786561 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2763366 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278920832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276141447 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2792901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278093981 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278083567 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277110734 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276883763 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278687322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278330109 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276903603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278285856 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280069116 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278314923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277366669 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276870085 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278140382 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276782399 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27636098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278209647 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277909154 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2778936 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278541154 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279602338 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278376742 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278587436 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278166369 seconds)
  done (took 85.429580153 seconds)
done (took 1721.846956347 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.440014296 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40145008 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.271555976 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.283381631 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.26787488 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.276682413 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.283613319 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.267949787 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.271631708 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.276353247 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.275272946 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481283727 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.27045286 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.267287892 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.274430872 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.372177806 seconds)
  done (took 26.161309934 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.305576745 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283022026 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.395463832 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.296605692 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.304022054 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.471290867 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.335571402 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.280073067 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460535123 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.299618016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.270669863 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.294723056 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.276202153 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.282545006 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.29323891 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.46990633 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.536181436 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.279838099 seconds)
  done (took 28.312825561 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.752129519 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.305640061 seconds)
  done (took 5.239511952 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302726443 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.27912505 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.276107166 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.27745484 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.271218966 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.291573233 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279178646 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.272171739 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.271041097 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.406771573 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.282863342 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294284421 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.299182766 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.282415359 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283021555 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32339736 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.436123762 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.283422794 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.28041513 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.286058182 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.282531778 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.3827393 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.320506325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.280808494 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.406734801 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.280249682 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.282377738 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.287250512 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.403664107 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.284214723 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.278485 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.279923412 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.283561112 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.273977048 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.738917299 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.293502123 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.283155238 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.308529428 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285546075 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436764608 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.283696218 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.289692884 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.277598403 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.736318989 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.426967328 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.406787566 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.293416833 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.282884332 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.284423951 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.349680026 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.282903943 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.283292134 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.344969776 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.152599766 seconds)
  done (took 82.53924233 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.275892356 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.274584128 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451767057 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.29734562 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274365809 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275796866 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.293236619 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.578640247 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.298883386 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277359737 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.594383741 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.873319378 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.297356818 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.330459165 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.133077588 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.340514484 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.280728892 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.273376147 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.278015165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.271106443 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839304685 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.274895062 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.274949357 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.421529049 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.313026796 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.824977266 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.275183431 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.293840367 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.294698593 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.274048865 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827219174 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.298873249 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.367568814 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.274962924 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.564529108 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68727406 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.648323752 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.286312845 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.310556051 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.275457612 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.282069884 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807360978 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67182148 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.276886233 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.291398919 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811508623 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.278326538 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.284673311 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.288583037 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530449769 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.277195135 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.278889273 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.277125167 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.297403744 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.279841577 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.366289044 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.37167949 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823784244 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279254495 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.277660824 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.297051179 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.278394757 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.288457932 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.278829309 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.301367456 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664567025 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.438090108 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.278300584 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669014833 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82464227 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.304295998 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87954641 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.29530336 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.29678639 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.494136938 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282604692 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.279161461 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.836356518 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300149289 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.273762061 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650306686 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.283556742 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.578143332 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.295909928 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.281100406 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872259866 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.287606374 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.28593406 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.292749487 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.280304363 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.277719411 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.280967806 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.566268604 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.347686772 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.277565199 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.280853476 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.305792996 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.274840306 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.296720869 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.29075977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878803712 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.305437322 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.281509516 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283440219 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281639495 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.292245382 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.282697258 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.282736825 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550268789 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.282123729 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.303383504 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.280731474 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.277859093 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.285090043 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431547593 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.28476667 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.617033915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.283345434 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277884983 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.290112986 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278301735 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.328770832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276300612 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.287748409 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149505055 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.542888264 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.300141256 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.284009274 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.282711689 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.281411481 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296898087 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284044084 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.327345017 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.283153402 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091580695 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.308289141 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.317784263 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283349375 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.288778087 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301684906 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.283046682 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285740913 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579700277 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.571335872 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.438990096 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.278891477 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.292436496 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.064041864 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.329559697 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460350857 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.30197819 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.280509134 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539154018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.472595969 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.287183781 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.28331325 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.286404792 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543698829 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.285701475 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610346076 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860769636 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.301616771 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286798322 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.104601105 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.994193265 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.286356633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.289467955 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.583260454 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.303863061 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.286575602 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.287385512 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.288400237 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301256844 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.303339334 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.279879139 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.285299889 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.286435816 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.33315445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480523401 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302145225 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.293040413 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827147417 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303061695 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281945169 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.310434292 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.288723834 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.286259733 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.348576883 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.284754396 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.320939613 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.286437527 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.292600939 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83954709 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.287166703 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.288573006 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481503498 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007617746 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.30532175 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.288547532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.283486171 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.216695636 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848568157 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.327152036 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.622129884 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.292461989 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.324861855 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28808483 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302149207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847211342 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292422986 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289410823 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.972575185 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.306130202 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.829461717 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.286400813 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.289852832 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907750272 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.305561332 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.287287808 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286072557 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.306298221 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611677165 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.288736215 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.306090957 seconds)
  done (took 488.025187472 seconds)
done (took 631.459651964 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.290562817 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284830202 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.280425369 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.289756091 seconds)
  done (took 10.341819333 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.307404991 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.296968814 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.303359333 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.297792241 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.300754019 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.298548496 seconds)
  done (took 9.00294849 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291248694 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.285867432 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292157734 seconds)
  done (took 8.068247464 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.518765136 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.310752782 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.664950434 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.32251791 seconds)
  done (took 9.018496973 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.307013122 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.301615781 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.303876489 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.301546571 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.307796833 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.307996033 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.305272063 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.300534322 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.307599902 seconds)
  done (took 12.94254269 seconds)
done (took 50.576285038 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.942866886 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.383344503 seconds)
    (3/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.455814505 seconds)
    (4/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.282922828 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.288417668 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.35330064 seconds)
    (7/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.329772281 seconds)
    (8/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.328526517 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.286779819 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.355561783 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.510564708 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.285073932 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.390037486 seconds)
    (14/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.409956413 seconds)
    (15/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.57749667 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.087257424 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.39614528 seconds)
    (18/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.451844637 seconds)
    (19/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.322334716 seconds)
    (20/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.354677323 seconds)
    (21/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.285898251 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.361034529 seconds)
    (23/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.353948115 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.561796832 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.475378808 seconds)
    (26/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.285437944 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.296309561 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.283845594 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.402172784 seconds)
    (30/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.286348513 seconds)
    (31/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.979217901 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.307052553 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.523294306 seconds)
    (34/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.286689349 seconds)
    (35/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.450842832 seconds)
    (36/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.479262414 seconds)
    (37/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.20864975 seconds)
    (38/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.48104688 seconds)
    (39/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.33348298 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.368943654 seconds)
    (41/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.949670577 seconds)
    (42/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.337842838 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.327678438 seconds)
    (44/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.405146743 seconds)
    (45/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.39911953 seconds)
    (46/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.471190777 seconds)
    (47/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.325788412 seconds)
    (48/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.283477809 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.32250754 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.322025554 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.497055173 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.351563812 seconds)
    (53/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.329485776 seconds)
    (54/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.52310344 seconds)
    (55/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.286553418 seconds)
    (56/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.292240528 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.284101123 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.455109764 seconds)
    (59/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.014628884 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.393332415 seconds)
    (61/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.370320184 seconds)
    (62/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.288862098 seconds)
    (63/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.459251423 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.318483668 seconds)
    (65/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.289390194 seconds)
    (66/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.367135914 seconds)
    (67/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.385644868 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.300775226 seconds)
    (69/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.292050884 seconds)
    (70/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.301415382 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.990269424 seconds)
    (72/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.352834879 seconds)
    (73/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.354569512 seconds)
    (74/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.328994513 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.370855354 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.351766925 seconds)
    (77/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.333479572 seconds)
    (78/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.485678497 seconds)
    (79/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.287738935 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.421789335 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.395134022 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.370832486 seconds)
    (83/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.289373229 seconds)
    (84/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.288193692 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.324527557 seconds)
    (86/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.304181719 seconds)
    (87/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.125726225 seconds)
    (88/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.082109504 seconds)
    (89/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.289655712 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.447672864 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.412819274 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.329730993 seconds)
    (93/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.470873881 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.29897974 seconds)
    (95/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.302038585 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.458996803 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.440126884 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344138804 seconds)
    (99/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.132831948 seconds)
    (100/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.465157794 seconds)
    (101/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.514161283 seconds)
    (102/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.333165686 seconds)
    (103/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.415010144 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.106318517 seconds)
    (105/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.470606895 seconds)
    (106/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.458202363 seconds)
    (107/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.991799956 seconds)
    (108/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.388825936 seconds)
    (109/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.357908331 seconds)
    (110/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.198372677 seconds)
    (111/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.291502206 seconds)
    (112/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.354564532 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.437701115 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.394046998 seconds)
    (115/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.399732646 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.422773658 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.407570922 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338331325 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.30483135 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.104322983 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.345621441 seconds)
    (122/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.292022522 seconds)
    (123/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.462055374 seconds)
    (124/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.360617883 seconds)
    (125/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.292436013 seconds)
    (126/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.507288214 seconds)
    (127/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.36522319 seconds)
    (128/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.023128222 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.057514614 seconds)
    (130/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.390745486 seconds)
    (131/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.351542382 seconds)
    (132/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.292722686 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.32200726 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.449870263 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.434748251 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.37979063 seconds)
    (137/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.296172223 seconds)
    (138/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.316807554 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.993846947 seconds)
    (140/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.456478826 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.413975283 seconds)
    (142/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.34107766 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.335214033 seconds)
    (144/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.296669954 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.474113836 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.293826411 seconds)
    (147/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.301752549 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.411464994 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.335374975 seconds)
    (150/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.073518981 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.990303798 seconds)
    (152/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.470464906 seconds)
    (153/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.347602957 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.279167088 seconds)
    (155/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.455611762 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.403954878 seconds)
    (157/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.409368485 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.332024439 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.454577671 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.357429726 seconds)
    (161/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.492662292 seconds)
    (162/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.403177414 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.294178993 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.298896144 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.464576706 seconds)
    (166/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.393574192 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.360757978 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.354338834 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.408485762 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.078924167 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.440478933 seconds)
    (172/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.360913264 seconds)
    (173/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.967169455 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.380283294 seconds)
    (175/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.369206 seconds)
    (176/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.363607699 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.477569593 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.438949874 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.417258478 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.308290788 seconds)
    (181/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.385942226 seconds)
    (182/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.340637205 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.297868883 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.553332924 seconds)
    (185/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.329234328 seconds)
    (186/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.365349468 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.535189079 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.080056484 seconds)
    (189/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.062768141 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.334759688 seconds)
    (191/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.103507592 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.471419738 seconds)
  done (took 331.604131729 seconds)
done (took 332.806853754 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34530858 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.370847411 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.325005416 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.3279832 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328260403 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.319352677 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33115289 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.326346248 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.327411081 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.323181885 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.322530014 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.31233408 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.339272649 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.321635544 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.359696559 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.326186146 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.32541309 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321228329 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.325024811 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.326790118 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326168709 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328484057 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.332958215 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.325675965 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.335377179 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338369601 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.327472192 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.31944067 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.312739977 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.325211787 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322503292 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.3278457 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.328445104 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.323022328 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329026262 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.321712567 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328895028 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.371375131 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.330256605 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.322584323 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.320307846 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.329613095 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334876709 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.33397663 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.32346062 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.333839037 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337106593 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.343508283 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.329019779 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.323454085 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345395991 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.325484005 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.31980836 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.330277824 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.325332067 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.338691044 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.323071011 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346440667 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321158254 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.330084768 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.361322259 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345571126 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.322427913 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339508258 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.324811951 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.341457495 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.320853787 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.33229164 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.320170795 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331854504 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331083591 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.323633154 seconds)
done (took 105.009614135 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.444780782 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.3175043 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.457132247 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322037599 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.483787499 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470090811 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.320975506 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.323244621 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.318082704 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.168874401 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.317702838 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.319741237 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.317884519 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.318620124 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449748215 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320929094 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.31922552 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.060352973 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.321686765 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.461582228 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.315984863 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.323043515 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.319992178 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.179870804 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.318990435 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.314079648 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.463012856 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.320489663 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.075016135 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.312328406 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.315091876 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.0717194 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.463048634 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341451921 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.33141213 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330452729 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.482757923 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.340127824 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.447024577 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.442906209 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.459702545 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360375018 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.31082601 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.318141768 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.322447585 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324482619 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.320004346 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351250206 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.319073897 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323869162 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.064068965 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.332743346 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.330619376 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.324207744 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323649087 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.342872172 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.322234869 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.324325533 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.466382358 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324909875 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.445894858 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.185416874 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.173880649 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.324114593 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.317806506 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326203808 seconds)
  done (took 107.899979741 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.385864925 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.398890733 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.437085512 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.320117917 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.372078255 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.437437529 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.321820384 seconds)
  done (took 10.891798168 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.326627786 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325635823 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369406321 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371242424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.326325507 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.476026496 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.324864665 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.330908917 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.325259756 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.374775154 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.326466684 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32465795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.334134919 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.319303523 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368660923 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.330261062 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.437523443 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.322130818 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326304854 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.47138562 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326405561 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.335224232 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.372121388 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.333801542 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.328002508 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.327503313 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.089023204 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328177991 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32343547 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.32577113 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328414693 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.376443639 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.324150679 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.322666965 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328463306 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437755558 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.327061604 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326623305 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.326980053 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.317018631 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.33028002 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.327013915 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.328200632 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.328576843 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.326836612 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.347482496 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.327157144 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.324373841 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.330313344 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.328080226 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.373363191 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.329898169 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.326391469 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.327194538 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.379854535 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337757639 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.330388648 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.327163252 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329641838 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328812168 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.476565173 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371471487 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.328287144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371992601 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328269057 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328512062 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.329636353 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.326083912 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414549094 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.331279878 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371632285 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.330555298 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.504762829 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.349533973 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326781256 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.326640103 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.329643037 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330026241 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.322303842 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.334439182 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.329355677 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.325642293 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.335060805 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330174505 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330102151 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483326735 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438300813 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.331374444 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.337311807 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.331212569 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.329626348 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.380060554 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.328200027 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.331470823 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378221697 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.441455623 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.380960311 seconds)
  done (took 136.804175214 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.342936405 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.340991577 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.330229378 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.355148679 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.327960711 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.326325667 seconds)
  done (took 9.249506535 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.328513163 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.334311431 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.331577515 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.331018655 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.331627555 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332073773 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.333595454 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325857869 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.336335198 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33198787 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332193536 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.334296155 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.334193118 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.333448876 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.334243484 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.332439127 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334780102 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331377722 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.332580723 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334935885 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.327753242 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.335250403 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337028327 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.332099218 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.340116959 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.335786334 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349191263 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.332758363 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.332772735 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.336920279 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.358287994 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.334184799 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.33366112 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.337686071 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.339027644 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.330520428 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338125726 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.33648576 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333212175 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334483513 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.338686175 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337948538 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.333939724 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.33441935 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.332117107 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.336869713 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.340598677 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.350820406 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.337118263 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338015872 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.335729202 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.33307765 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.336341377 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.337934212 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.333963801 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353885015 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.339973799 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.335011355 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337177976 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.332703297 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.342560839 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.336945886 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.335226576 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.341594892 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336826233 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.337757759 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.332700156 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.344869751 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339988246 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.335437571 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.33768285 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.335887865 seconds)
  done (took 98.431529327 seconds)
done (took 364.495169396 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.38293047 seconds)
  done (took 3.613191871 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.433763752 seconds)
  done (took 3.668625098 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.369471942 seconds)
  done (took 24.604271195 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.385984795 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.400533438 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.351432764 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.328821172 seconds)
  done (took 10.698660864 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.661790255 seconds)
  done (took 3.895272588 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.346980415 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.335095085 seconds)
  done (took 5.914911379 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.588458523 seconds)
  done (took 3.81817106 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.637661201 seconds)
  done (took 3.874314405 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.333756444 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.34735137 seconds)
  done (took 5.922945963 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.327144347 seconds)
  done (took 3.560594512 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.845030704 seconds)
  done (took 19.076565771 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.344635381 seconds)
  done (took 3.578440324 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.388719564 seconds)
  done (took 3.619651912 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.23976668 seconds)
  done (took 6.472430235 seconds)
done (took 103.550357635 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.327277518 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.328415885 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.326833603 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.329923032 seconds)
  done (took 10.543383013 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418521064 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.418102369 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.425630971 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41102786 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409907257 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.416697971 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.365849066 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.36641408 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.413221338 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408457496 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.428539104 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406449081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.417185048 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.366156169 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415683908 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.426566532 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409176561 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.424573743 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.3654146 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.411489004 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.343284403 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.408939925 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411492638 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.341236826 seconds)
  done (took 34.865530977 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.853654683 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.408903351 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.489629589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.389273021 seconds)
  done (took 7.376330204 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.483338466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.482626875 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.500880121 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.543782789 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.557441356 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.484129576 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.36962368 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.361649185 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.348304363 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.48068979 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.471739474 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.418310893 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.582365734 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.339793125 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.632304538 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.342616714 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.344490263 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.483803728 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.538355539 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.555747123 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.344918989 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.498556028 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.484054394 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.416041868 seconds)
  done (took 36.300119324 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.352542215 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.361500069 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.344449499 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358098275 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.343558931 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.346123402 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.346890474 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.352339922 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.343738528 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.343397 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.345902492 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.359002259 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.345414099 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.343610213 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.351172407 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.343625591 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.346699929 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.349580265 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.351798856 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.345989157 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.343895936 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.353619776 seconds)
  done (took 30.905211525 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.335053661 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.33642068 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.684675285 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.593699346 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.339316911 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.332943959 seconds)
  done (took 13.859957492 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.415193883 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.565448977 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.339786376 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.730874294 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.82325074 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.340864569 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.342143836 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.609268242 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.959302092 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.928287967 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.403450666 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.414836738 seconds)
  done (took 20.116602211 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.344044901 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.331798682 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.34117893 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.350239633 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.403406233 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.346433668 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.350116756 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.333467011 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.399969321 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.404309637 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346259557 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.400656779 seconds)
  done (took 21.589855772 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428942193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337982755 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339470267 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393697725 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337673667 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17997029 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388087536 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116396501 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.36512452 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614654999 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340847478 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431318881 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596658937 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351521555 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338504981 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.328864612 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566906099 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859434585 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339017588 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338902999 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390775993 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35002862 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355779459 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570219641 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190027711 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342771353 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.606919229 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342119632 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640850024 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355609513 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352056938 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340617392 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618236501 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035300859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459319397 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567939854 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346870157 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33684863 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.337366094 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.340921776 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354819154 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342266524 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352031729 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341542815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342433329 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34241648 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131945118 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.369583485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.341618269 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344799345 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618383037 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440415395 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.347900647 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343781849 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370086419 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341153161 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.346003802 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473542871 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922986868 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342515463 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347482072 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.343702001 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354729387 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338140853 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99973966 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.35113406 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349327869 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348949334 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344049474 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338201571 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370368084 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341424511 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.361134169 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344803272 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133045136 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346561079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366021102 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915041798 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356017814 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.341092527 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57519326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343245976 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342919981 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.342315318 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343734701 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089967245 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349402356 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.330742958 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405932929 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146648678 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594324082 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365127411 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376508625 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567926666 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.332657485 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344716929 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.345914194 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347819192 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361521243 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130201719 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364277703 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345832273 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604668929 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.554806711 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352349556 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.337740292 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876705153 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383866401 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.371212039 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349430204 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57702786 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.977851518 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362577328 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355448734 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381946704 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346013872 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128048568 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360479609 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.351234993 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358820419 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637185642 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.176718374 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344610307 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411961333 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357056802 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345213336 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347980793 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349278629 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34801248 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.569065939 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373914101 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.358756819 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.353700683 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349526246 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.346716936 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363378115 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.349964793 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.571275199 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350304757 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644317025 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347796111 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34710636 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342685027 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.565130016 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.349765493 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.350263735 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612869615 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352780739 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355497219 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360063147 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374828381 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461072124 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378811245 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.35614623 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605238179 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.350375604 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.35508523 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342586033 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351545566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351193957 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.356492896 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361910555 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973582606 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325210322 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350056384 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352080216 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.36529817 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418327602 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360309945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582123057 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.362576248 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354385409 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.352037035 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.357511901 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576363917 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360172376 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.35743696 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429707968 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.877921313 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001189804 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36623561 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.351490199 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.350019656 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.349947668 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351233441 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350426698 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352063239 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582883854 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367352972 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354027639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984516354 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354289578 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350806285 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.357332375 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360647365 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.357880131 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352338979 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.359985357 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365495263 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367496055 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.363525123 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487478574 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.370147177 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351508069 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913790866 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359263575 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352741788 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351677691 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383951522 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353443452 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297965395 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615314938 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346356769 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62281629 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352869508 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.371378328 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.354802191 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362662438 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370671893 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.366546513 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357806912 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.365314431 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355362987 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356688711 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90702593 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169913846 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933557771 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372929275 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.370655798 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355797827 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149685462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376520332 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355511024 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607064492 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141902938 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375031328 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881645557 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.378895304 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182409848 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630878911 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58853959 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375849075 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.365867504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636100325 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565783841 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388280464 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370814378 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356206581 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.33879633 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979075474 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385408408 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438705075 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149640582 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385960245 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356903329 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.378555604 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.355904161 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813578168 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379106829 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355154091 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35261118 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376066833 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327498104 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359982297 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355869523 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017107309 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357705442 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.89043917 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38010797 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.588229184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.369332175 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.362509629 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.358073388 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.3601133 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.613970331 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6319283 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356777462 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358034357 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939935574 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.232083811 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.368454799 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358613709 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132725609 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357333949 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664062298 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.374607449 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375584461 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358667031 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358938342 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356844998 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.358452977 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364365743 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331506083 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868714769 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.35210211 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379664601 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37465994 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357787586 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614247582 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.371935417 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994691292 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590793319 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369125595 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385037733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.364336223 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373552884 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.34787845 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362016141 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357403781 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443980276 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582751236 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359478796 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.341651576 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42568913 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568693922 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362774156 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359757611 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642082621 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.360502672 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.380874273 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165455568 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39235005 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378203377 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361487697 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357168283 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415697475 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430073801 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59676246 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.367752556 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.372104693 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805622859 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382702252 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382987237 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.377928851 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456019906 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368970483 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.365660644 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15415084 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001936932 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171015275 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00294414 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643936132 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362085089 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368283508 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362643906 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49533595 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361457589 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63651319 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360328866 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.352896045 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398785544 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360509186 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397303357 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575386064 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641044002 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363697193 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366461276 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364117796 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.363154838 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373938451 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.575860103 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881111338 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938816601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359857886 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360710593 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159572534 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66053352 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362714405 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365073795 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363988547 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.387203384 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364631407 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.367294466 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362334873 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496983339 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64202551 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068545469 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.39639006 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.405821694 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.884278958 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374172534 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.618393824 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358257415 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599662712 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006163576 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128465549 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633846415 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430990303 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601887689 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.364899023 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499837288 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.380995819 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361957505 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366420446 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367823471 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.364503805 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373424548 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012259109 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632796479 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.366632921 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.379328473 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392963163 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.373110377 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591096199 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111743349 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587196187 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373039412 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368147988 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367764399 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009066568 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64991671 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365005132 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.367357028 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628586782 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364731066 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389817694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.886172186 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.368317009 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942550667 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.254636548 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389792451 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370083901 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139027862 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012179727 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.37122796 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892554855 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364592724 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376783739 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640403637 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.36913132 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369176034 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64588211 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.373443353 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368912497 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602761073 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.001117401 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206596798 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.388939518 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368265714 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.369199616 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366809757 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384196253 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369532673 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370726945 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.821581796 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387959496 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366553729 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374354606 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.368633938 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368472633 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.367771149 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365825674 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.368315416 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.374886641 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.356606823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376323167 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498231074 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994420116 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385763039 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.047356527 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.692731689 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622664835 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369975789 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.357181704 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.37513241 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371649817 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368428956 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364219972 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376036281 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942362844 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.367445089 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.379931344 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375540382 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.369880796 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578820494 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366508318 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605311516 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374390829 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39661495 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.358193555 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37081258 seconds)
  done (took 970.409370948 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391575845 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.410089535 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.397864363 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.381142594 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.409313463 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.461427901 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.424230779 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.376689419 seconds)
  done (took 20.514399231 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.365703115 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.375018134 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.376187628 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.372975092 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.368171859 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.883152391 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.401228158 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.373395524 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.384450186 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.367735364 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.36538535 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.093442693 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.39281414 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.374717606 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.368961465 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.378284331 seconds)
  done (took 32.513821569 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.741508205 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.638514806 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.854544789 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.418636787 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.363452703 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.369679567 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.719069824 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.390858631 seconds)
  done (took 27.767849009 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.37865778 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.376391931 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.378196869 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.378519083 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.382523203 seconds)
  done (took 8.162393052 seconds)
done (took 1236.160399287 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.376696297 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.375003642 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.375351813 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379716465 seconds)
  done (took 6.77510556 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.356898683 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.357386542 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.357395742 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.369632916 seconds)
  done (took 9.712145039 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.150845619 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.070821588 seconds)
  done (took 5.494065261 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.866889346 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.869971518 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.867168882 seconds)
  done (took 6.872734287 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.67672411 seconds)
  done (took 2.943286886 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.293896793 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.371011719 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.051167462 seconds)
  done (took 7.98250774 seconds)
done (took 41.052063403 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.366676148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.616281923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.519986476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.369215355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.530239008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.522432365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.124506976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.367935945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.361890492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.380140136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363918258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.527041324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.108596529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.620310734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.108252118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.615732691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.581328384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.38063744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.373784523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.364920083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.124095033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.368426851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.374830844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.372456787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.528265605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.514829364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.368509645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.614561157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.383872694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364446218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.516366518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.369419072 seconds)
  done (took 82.370659237 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.377196187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.363300755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.363906712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.384722556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.364793797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.387008938 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.383479775 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.364897054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.368708332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364369139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.365100721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.375712871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.375545663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.372478294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.378559998 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.367030266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.364665041 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382490909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.379620529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.370974314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.373688888 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.365228291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.363583754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.367598204 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.406137979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.365353911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.39210843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.365515712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366210361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.384233466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.371678125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.38837787 seconds)
  done (took 77.23144064 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.373365201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.375081527 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.370508433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.365935204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.376169344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.373240978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.368328497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378598879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367145454 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381024725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.366028845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.366665676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.367287734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.368281653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.388563167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.366973281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.39224431 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.366958464 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375964149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.365779537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.36837026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.366956219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.386974057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.365775712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.391747697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.369282925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.366356616 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.367240284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364757724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.388768627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.400320298 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.370564711 seconds)
  done (took 77.23260884 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.694692233 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.382143247 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.383473723 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376382794 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.383582316 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.382145389 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.373599549 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.696903717 seconds)
  done (took 14.943222459 seconds)
done (took 253.047971508 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.385370877 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.915347646 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421676426 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.373500379 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.392731504 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.406271902 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.62518155 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.430489895 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.621006876 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.403863623 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.397068518 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.37605282 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.261573889 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545276533 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.289623465 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.379170331 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.370896808 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.381668075 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.985328416 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.685604795 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.406253067 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.375817563 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.283780888 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.381673962 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.379519879 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.458648454 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.487614887 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.615230815 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.543238768 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.462097336 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.947850131 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.389091376 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.374276258 seconds)
  done (took 65.029711299 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.378092971 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.385480255 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.38376131 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.38157934 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.378109619 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.384619231 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.379396266 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.383647503 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.379565316 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.381818784 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.384430627 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.389668997 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.385930825 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.381187459 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.384401979 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.37231384 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.37916177 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.386259873 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.380982133 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.371355042 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.386172619 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.38006666 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.386851963 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.384467115 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.382724511 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.38559169 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.38314454 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.386903413 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.382859122 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.379742264 seconds)
  done (took 42.744705268 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.383891585 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.011768911 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.187467938 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.385680031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380743024 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.381492573 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.704246265 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.387937581 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.382108555 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.381283282 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.901923266 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.386185181 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421992535 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.207418757 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.382133924 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.388234779 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.387487144 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380231492 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.027605605 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.393374087 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.726001125 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385220223 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.704178913 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.394628551 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.406252158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.381558745 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.380685479 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.284286461 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.400146755 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.905440933 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.240270815 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.701333079 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.222245968 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.20753275 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.238970005 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391180999 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.387995528 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.928356091 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.38931686 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.383089157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.701757751 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.386332099 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.18090908 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.079968412 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.400522827 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.386637756 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.25892315 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.936008724 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.656746837 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.391306753 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.191022025 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.384544629 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.386536468 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.380353785 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.65354679 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.384667156 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.38402452 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.305961671 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.408497227 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.709549118 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.388409438 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.38092384 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.020852457 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.383515617 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.018143909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.387378316 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.389201275 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.399991994 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.194940349 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.389585878 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.105896464 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.402977283 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.386239762 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.917846422 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.03235757 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.363915128 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.390036981 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.027567006 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.240234208 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.724796063 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.389704931 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.268096574 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.726509385 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.391555899 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.389990245 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.389097163 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.387562479 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.454030695 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.697844841 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.043015657 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099035011 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.331126913 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.729187059 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.394227839 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.383763877 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.309888749 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.405721124 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.387097966 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.191189195 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110132474 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.407469085 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.396851356 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.108107136 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.403753144 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.71086581 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.394567913 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.201185459 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.390807481 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.458750645 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.388639453 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39529196 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.405634038 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.710732291 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.394774461 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.390595449 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.090197684 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.945006665 seconds)
  done (took 196.588728283 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.383122458 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.394087288 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.380100017 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.382005038 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.382744529 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.387283993 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.381265825 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.382291235 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.383873468 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.382464746 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.382226373 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.387772293 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.387807701 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.380928796 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.395494956 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.378046401 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.381951991 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.39825808 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.380634492 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.381157538 seconds)
  done (took 44.980306107 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.392756076 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.028190566 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.985158758 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.396540823 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.391673141 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385474123 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.447239851 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.399795697 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.392023202 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.730356807 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.58281134 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.396062503 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.392373174 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.392568418 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.982236398 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.383743201 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.728601452 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.035444655 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.397049849 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.026592372 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.388445764 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.390920384 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.389629035 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.030887056 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.741553558 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.715028818 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.459888644 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.038998754 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.396855011 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.394398297 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.03243275 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.40053491 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.389744686 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.030360436 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.414599701 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.409021469 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.39620865 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.454752066 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.461820622 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.739455708 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.04363453 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.72381796 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.413265318 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.579227935 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.395876069 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.383075983 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.03755893 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.420182816 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.385747876 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.398669921 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.401910779 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.995454099 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.413966203 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.993667546 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.420001028 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.396660417 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.033767941 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.003058298 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.015688394 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.584433512 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.394080101 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.711125274 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.401899786 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.041431519 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.415236487 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39598679 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.395972464 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.584802062 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.043842279 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.720132666 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.741644715 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.743793075 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.403179157 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.463231441 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.42156757 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.736036181 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.468187324 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.824817408 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.73962585 seconds)
  done (took 128.518410604 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.678096679 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.518845137 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.83456754 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.031159584 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.941729797 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.541082263 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.519488508 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679470962 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.397040305 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.488034712 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.121209223 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.517882486 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.162088893 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.489928181 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.509987155 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.57237551 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.839581063 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.392568949 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.106951175 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.100842765 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.399401175 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.51919202 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.926813477 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.599347486 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.392617118 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.013081521 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.420681656 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.957633143 seconds)
  done (took 53.965261716 seconds)
done (took 533.105965695 seconds)
SAVING RESULT...
DONE!
